{
    "COMP_SCI": {
        "COMP_SCI 110-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.58,
                    "student_count": 160
                },
                "student_opinions": {
                    "0": "Really good course for an EDR FD! While the assignments can be relatively hard at times, they're all homework, no tests (4 in–class quizzes), It is definitely a stimulating class, and it's a great intro to comp sci/coding. The class is very dependent on how good your PM/TA is because they're your main source of help.",
                    "1": "This is a great class for people who don't necessarily want to major in CS but still want to learn about CS. The prof is really understanding about people's coding (or no coding) background. I found the slides to be really thorough and helpful when reviewing concepts. Your grade is determined on quizzes, homework assignments, weekly tutorials, and your final project. There is a ton of support from the numerous TA/PM office hours throughout each week. I wish that we had more practice before each quiz because I struggled a lot. They give you a quiz review sheet, but I wish that I had more questions to practice with. With homework assignments, they were challenging but really fun. I remember making music, making a wordle, and drawing hippos! The final project was really challenging, and I ended up creating a bar graph visualization based on a spreadsheet. I liked the flexibility and creativity in the work we did, but this freedom also made it challenging. It isn't impossible to get an A! There are opportunities to present your music or make a music tutorial as areas for extra credit (compensating for the quizzes or homework assignments that weren't so hot...). If I'm being honest, the lectures were super duper low energy. The prof was patient and would try to get us to be engaged, but very little participation. If I were to do this class again, I would raise my hand more in class and also talk to the prof after class for extra help. Especially in your tutorial sections, don't be afraid to ask your PM for help! In terms of PM, I do wish mine was a bit more direct. She gave me pretty vague advice, but still in the right direction. So if not your PM, then definitely go to your TA or prof! Or find friends to work through the homework with too!",
                    "2": "This class was a very good introduction to coding. I was really nervous before taking it, but it ended up being totally fine. The TAs and PMs are there if you need any help and Professor Horn is a great teacher.",
                    "3": "Great class, would highly recommend for anyone remotely interested in CS.",
                    "4": "Easy for beginners –– final project was a little time consuming. Good distro if you don't like being assessed through big midterms/ tests –– project and homework based class.",
                    "5": "The class was well paced and structured. The assignments were never too hard",
                    "6": "Not enough explanation/practice if you don't have prior cs experience. It's up to you to practice what you learn in lecture because other assignments are graded homework or quizzes.",
                    "7": "I had never taken a computer science class before and I thought this class was manageable. The professor definitely cares about students but there is a bit of a disconnect between was was taught in lectures and necessary skills for homework assignments. The peer mentors (undergrad TAs) had office hours spread out during the week to make sure everyone got the help they needed, though you often had to wait if a lot of other people also showed up during those times. Tutorials were a hit or miss depending on your peer mentor. Some of the homework was a bit more difficult than it needed to be and the final was way outside of our wheelhouse for what Horn actually taught in class (I'm confident he's not assigning the same project next year).  Quizzes were also manageable, but you do need to actually study. The class is definitely manageable but was quite frustrating at times, but I think that's just computer science and you either love or hate it.",
                    "8": "A good class for beginner programmers!",
                    "9": "This was important cause I had to take it more my major but it was fun!",
                    "10": "This is a great course for people who have absolutely no prior knowledge to computer programming. As someone wo took some computer programming courses as a kid, I was familiar with around 70% of the material already, making the class extremely easy. Homework is really light, it only took me about 2 hours to complete each weekly assignment and that was with me going above and beyond and doing a bunch of unnecessary stuff. Some of the material taught is never really tested on or needed to complete the homework, so I'd recommend focusing on studying the material that is needed to complete the homework or that will be tested on in a quiz and using that to guide your studies rather than trying to learn everything in the slides.",
                    "11": "Overall, I would recommend this course if you need to take it. While it is a big class so its lecture style, both Professor Horn and the TAs do their best to help you. Neither the assignments nor quizzes are too difficult.",
                    "12": "I came into this class with no computer science experience, so I was not sure what to expect, but this class was definitely manageable. I found many of the homework assignments challenging, but going to office hours each week was really helpful. Sometimes it felt somewhat difficult to apply the concepts learned in class to the assignments, but there were many opportunities to receive help outside of class. It was very evident that Professor Horn wanted students to succeed, and there were typically multiple office hours each day. The course was made up of almost weekly homework assignments, four quizzes, and a final project. The final project was definitely challenging, but also allowed you to see some of the more practical uses of computer science and programming with Python. Overall, I had to put in a significant amount of work to do well in this course, but I found it very worthwhile.",
                    "13": "This is a great class to take if you have no coding experience. It helps to build that foundation needed for future coding classes.",
                    "14": "Really was interested in some sort of Python knowledge prior to taking this course. Horn is super nice but is unorganized and fails to teach this class in a cohesive manner. Weekly tutorials would basically give us the answers to weekly HW because we weren't learning enough in class. Final project is a huge step up in difficulty and I know a lot of students who are struggling to do it at all. Would not recommend if looking for a chill easy class.",
                    "15": "Professor Mike is an extremely nice and helpful instructor, but the class didn't feel structured well. The homework assignments started out extremely easy, and we would sometimes go through slides extremely slowly (once we went through 2 slides in one lecture). The assignments then escalated in difficulty towards the end with no warning. I overall felt like I didn't learn much, but it was a relatively easy course. The professor posts lecture recordings and slides on Canvas, which is helpful.",
                    "16": "The class overall was not too bad and taught basic principles of python quite well. One homework gets dropped, your lowest quiz score can be replaced if you do an extra credit assignment, and attending weekly Tutorial sections makes up a huge prt of your grade. The final project was REALLY hard. But going to TA office hours was very helpful, so I recommend that",
                    "17": "This course was a great intro and easy class to adjust too. Professor horn made flexible dates for submission and made things easy",
                    "18": "Yes, though I had no interest or knowledge in computer science, this course was a beneficial introduction that anyone can complete. The concepts and code is not hard to grasp as long as you pay attention during class and tutorials.",
                    "19": "Very easy distro, homeworks are generally pretty easy and you don't have to study much for the quizzes.",
                    "20": "This course is amazing to teach the basics of Python. As a Mechanical Engineer major I took this course as I took EA 1 and learned MATLAB, and overall I feel like learning both languages helped me truly understand coding. The only tricky part about learning both at the same time is remembering the correct syntax for both languages like indexes and elements for lists/matrices. But in total this was a very good course for a student looking to learn Python, though if you plan to take as many CS classes as you can, understand this class doesn't fill the prerequisite for many CS classes, CS_111 learning racket is the class that fills that requirement.",
                    "21": "This class was a little bit of a drag. The lectures are dull and kinda boring, so a lot of people don't go (including myself). Most of what I learned came from tutorial (which is like a weekly discussion section led by a peer mentor/TA basically) and my own practice with the homework assignments. It's kind of annoying that Prof. Horn requires his students to use his own program for a coding assignment. It felt confusing and unhelpful, especially since the syntax was different but beginners like myself hadn't even mastered Python's actual syntax.",
                    "22": "The quizzes are short, which is both good and bad since missing one question can really lower your score– but it's all material that's pretty thoroughly covered in class. The final for this quarter was difficult for the beginner level and I know I struggled on it, since communication with TAs can be pretty bad in terms of specifying what the rubric wants for assignments. I've had a few moments where TAs also didn't attend their own office hours which was disheartening.<br>Overall, though, I really liked the subject and the workload is very manageable and you're encouraged to get creative and have fun on most of the homework.",
                    "23": "The course has a very light workload and is good as an introduction class to computer science, I just don't think lecture is an effective way to learn Python and felt for a lot of the homework I had to watch videos/read articles on my own that were not part of the syllabus and/or go to Office Hours to understand what I was doing as I had no prior knowledge of any coding. Professor Horn is great though and would definitely take the class with him again, great communication outside of class and super lenient/understanding with deadline extensions and being late to class.",
                    "24": "not rly interested in comp sci but you can pull through without too much effort. not as easy as everyone says though.",
                    "25": "Prof. Horn is very kind and is always available for questions after class. He is super understanding and easy–going. His assignments give at least a week to do and there is always a ton of resources during that week to help out. The quizzes are short but don't affect your grade too much. The lectures are always recorded and posted which is super helpful if you miss class.",
                    "26": "This course helped me gain some basic Python skills. It was also reasonable in terms of pacing and grading. The lecture recordings were a godsend.",
                    "27": "Yes, the structure is phenomenal and reinforced the concepts. I took it with Horn and loved the way he structured the course, tutorial is very helpful for completing the homework. Your lowest homework gets dropped and you have the option (or at least we did) to replace your lowest quiz score with a very short project. Definitely take the course with him. Don't skip lecture!",
                    "28": "It was very helpful as there were many opportunities for help.",
                    "29": "This class was very helpful and doable as someone who had never taken a computer science class in their life. I thought the lectures were easy to follow and really made for intro students. There were no exam, just a few short quizes, homeworks, and a final project. If you pay attention in lecture and use the office hours this is a very nice class!",
                    "30": "Michael Horn is a great professor and this class is both engaging and easy. Take this class.",
                    "31": "Great class with fun assignments.",
                    "32": "The course was very stimulating and interesting. The workload was manageable, and help was easy to find.",
                    "33": "Good distro. You do not need to have any coding experience, although it would be helpful. There are 6 homework assignments, 4 quizzes, and a final project.",
                    "34": "I really enjoyed this class. It was pretty easy and I liked how there aren't any midterms and how the final is a project. The homework assignments were pretty fun even though some of them were kind of hard, but overall, this class isn't bad.",
                    "35": "Honestly the class is not bad– lectures are recorded, and the tutorial sessions are helpful. The main aspects of the class were the homework assignments for each week which could be pretty involved. Overall the outside work does not take long and there are only a few mini quizzes. The final project definitely took years off of my life though– it was a pretty integrated assignment.",
                    "36": "This class is great for getting an introductory grasp on how to use Python, especially for those like me who have never coded in the past before. The class was not too stressful and Professor Horn was very understanding/kind! The final did take a while to figure out though.",
                    "37": "Excellent course for learning programming fundamentals.",
                    "38": "Decent introductory course to programming with Python. Not too much work outside of class and generally pretty easy to understand.",
                    "39": "lame",
                    "40": "Class is pretty straightforward, the final section of the class on data and csv files got to be confusing and not fun but the rest of it was pretty easy overall",
                    "41": "Really solid class",
                    "42": "I appreciated the amount of prof/ta/mentor support",
                    "43": "Very easy introductory class to programming, easy content, the homework can get a little more complicated but office hours are very helpful for this. Some in class quizzes and 5 homework during the quarter.",
                    "44": "This class was fine as a distributional requirement. Homework was not excessive but could be very frustrating and somewhat unrelated to lecture. The benefits of tutorial were also very dependent on which TA you got. Still, if you have never taken a computer science class before, it is worth taking for fun because you may find that the content comes more easily to you.",
                    "45": "Good intro course to Python. Professor Horn is a good teacher and wants to see everyone succeed. Office hours were so helpful and quizzes and homework were manageable but the final project was lowkey hard for no reason.",
                    "46": "This class is fairly easy. I didn't go to class that often and it was still fairly easy to get a pretty good grade. No tests, just quizzes, homework, and final projects. Office hours are very helpful.",
                    "47": "Super chill class. The only \"hard\" part about the class is the last couple of assignment and final project. Lectures are not that engaging, and they are all recorded.",
                    "48": "I want to do data science so this class was a great introduction to python and coding",
                    "49": "This course was fantastic! Professor Horn is very understanding and a fantastic educator, and he provides many fun coding projects that make coding seem much less daunting and applicable to real–world applications. The TA tutorial system is super helpful, and makes sure the needs of all students are met in small TA groups. While I personally am not a fan of quiz/test based courses, the quizzes felt very fair, and practice quizzes were provided before each quiz that were extremely helpful and targeted toward the quiz material. Overall, this course is a great coding class for anyone who's even mildly interested!",
                    "50": "I learned a lot of valuable knowledge on the foundations of computer science that will help me pursue more in the area or just for daily use.",
                    "51": "Very manageable course. Can be confusing on its own but tutorials and completing the homework really help. Also do the extra credit assignment and showcase so that you don't have to be as stressed about quizzes.",
                    "52": "It's a great class. Lectures are recorded which is very helpful.",
                    "53": "A must–take if you are interested in CS but have never taken a class in it, or don't have that much experience. Lectures were engaging and Professor Horn was very good about answering any questions thoroughly. The course content was generally interesting and weekly homeworks weren't too difficult. That said, they were challenging enough to stimulate your understanding and provide opportunities for being creative in how you go about coding, and could oftentimes be pretty fun to complete.  Outside of that, Professor Horn just genuinely is a nice person and clearly invests time into your experience and understanding throughout the quarter. Take this course!",
                    "54": "I learned a healthy amount from this class. I had to put in a lot of time outside of class attending office hours.",
                    "55": "n/a",
                    "56": "–",
                    "57": "As someone who had no experience with computer programming prior to this course, it often felt difficult to follow along, but Professor Horn is very understanding with extensions on assignments. There is a tutorial section once a week, and plenty of office hours available. There are a few quizzes and just one final project instead of a test. There were also a few opportunities for extra credit which helped.  I found that the final project was much more difficult than the homeworks, but office hours helped clear up questions. Professor Horn is amazing and wants his students to do well. If you are looking to fulfill a distro, I would highly recommend this class.",
                    "58": "I had NO coding experience prior to this class, but I learned so so much. I had a lot of fun figuring out the assignments and watching my code run. Mike was really good at helping whenever I was confused. He also really cared about whether we were learning and tried to create the best environment for that. My peer mentor kinda sucked lol but the professor was great! If you get a sucky peer mentor switch into a different tutorial section or find someone else that can be helpful to you!",
                    "59": "Professor Horn was very nice and passionate about the material. I could tell he was very patient with his students and had a calming presence. Overall, I would recommend taking this class. I feel that the quizzes weren't too difficult, and the class wasn't too time consuming. The problem is that there is  homework almost every week and it's difficult because what he teaches us usually didn't align with what the homework was asking for.  I feel like most of the class depended on who your TA was. In some tutorial sections, the TA really helped their students with their code whereas other TAs didn't really help their students at all. What I am most worried about is this final project because all of the concepts feel very foreign to me, but up until this point it was mostly smooth sailing.",
                    "60": "This course was a very good introduction to computer science if you have no or very minimal experience in the field. Even though I had some background in coding before this, it was nice to go back to the basics and strengthen my core knowledge.",
                    "61": "The required the tutorial section was not that helpful for my learning. The quizzes were quite simple, and I appreciated the accessibility of them, as they were often multiple choice.",
                    "62": "I thought that the class material was laid out nicely and that we had projects instead of assessments for most of our grade",
                    "63": "i enjoyed creating my own little songs and creatures",
                    "64": "Prof. Horn's lectures are pretty slow–moving in that they are focused entirely on the slide presentations. You could honestly review the content on your own since he records the lectures. The tutorial sessions (essentially discussion sections that you have with a peer tutor where they'll go over the homework for the week) were pretty helpful though in my experience whenever I needed to make up a quiz or get help with assignments.",
                    "65": "Professor Horn is extremely nice and passionate about the topics and is more than glad to help with any questions. As someone with no background in computer science at all I wouldn’t say it is completely beginner friendly. It is definitely doable but the concepts can be hard to grasp and apply to the homeworks. I felt like a decent amount was self taught or I learned through google. On top of the three lectures there is a tutorial sections you have to attend for grades. It’s usually just help with homework or quiz review. I wouldn’t have been able to do some of the assignments if it wasn’t for office hours—definitely go because usually you can finish the homeworks with their help. I would, however, recommend to a friend with no cs experience beause even though it is a little challenging, the resources you have as support can really help you do well.",
                    "66": "I came into this course with no previous experience and was happy about how much I learned while still not being lost",
                    "67": "Professor Horn and the TA's were all super knowledgeable and helpful. In addition to the lectures, you attend a weekly tutorial section (participation grade) where you completed the homework assignments. The tutorials were extremely helpful and you could ask questions in a more comfortable setting. Professor Horn gave a lot of flexibility in grading (dropping the lowest homework &amp; tutorial grades) and provided extra credit opportunities. This is a really solid distro!",
                    "68": "I liked it but it took WAYYYY too much time to start the homeworks. Office hours are a must for the class to even get started on the HWs and if you have a bad tutorial its over.",
                    "69": "Prof Horn is amazing. He cares about his students understanding cs concepts. I think this was the perfect depth for an intro cs class. There was just a weekly homework assignment and biweekly(ish) quizzes, and I never spent more than 3 hours per week completing homework. The assignments were fun too, such as creating a short song using code. Highly recommend taking CS 110 with Prof Horn!",
                    "70": "Great class! Super straightforward, easy A with effort, and chill class overall. Professor Horn is super kind, teaches with passion, wiling to help after class with whatever, and is very patient. Would recommend this class for anyone with no coding background!",
                    "71": "Horn is a great prof and I really enjoyed his lectures. Although boring at times, he was very helpful and understanding. I gained a good foundation for Python.",
                    "72": "Decent class. Easy A but MUST go to office hours to get help from a TA to get through it. Quizzes were okay but you had to keep up w lectures to understand them. Prof Horn is super flexible and understanding w extensions. He is great and this is probably one of the easier comp sci sections.",
                    "73": "I think this is a great class to take if you are interested in trying out computer science. There are a lot of ways to get help if you are struggling such as mandatory tutorial sections, office hours, and Campuswire. The assignments were also pretty interesting and fun in that we recreated Wordle, used Tkinter to draw, and made our own music.",
                    "74": "Very code intro to coding class. Would recommend.",
                    "75": "Good class if you want a basic intro to Python and its applications. Professor was very good at explaining concepts and tutorials were helpful for homework.",
                    "76": "This course wasn't that bad until you get to the final. The class has quizzes and weekly assignments throughout that are fairly easy. But for this class ur TA and office hours are your BEST FRIEND! Please do not neglect those two, especially when it comes to the final project.",
                    "77": "lecutres were good and easy to follow, tutorial section is good as long as your TA is good, decently easy class as long as you keep up",
                    "78": "As a person who took AP CSP and AP CSA in high school but did not want to major in CS, this course was not particularly challenging and I did not learn many new things. However, Prof Horn is a very nice guy and I would definitely say that this is an easy distro course.",
                    "79": "I took this to fulfill a Math/Tech requirement in the School of Comms. I would say it is a moderate level of difficulty when it comes to Math/Tech. I did have to lean quite a bit on my Computer Science major friends to fill some gaps in my knowledge that the lectures and tutorial sections didn't really touch on. I can't say I will be continuing with computer science but I made it out more or less unscathed.",
                    "80": "Reasonable class. Definitely doable to get a good grade. The homework assignments can get frustrating in the moment, but are satisfying when you figure it out. I don't know if the satisfaction was enough to warrant me enrolling in any more computer science classes, but this was an interesting introduction to the field. Some lectures felt like they hadn't been touched or thought about since this time last year, which led to some issues a few times during the course. <br><br>Peer Mentors (PMs) seem mixed– some give you help with the problem or question, others are a bit more cryptic with hints, and I am honestly not sure if other ones even know how to approach the problem at all. Some also don't seem to realize that they are a Comp Sci major and understand things far better than most of the students in the class.<br><br>There are a few showcases throughout the quarter in which you take a break from lecture and can show off your project to the class for extra credit. These were a nice break, and felt rewarding both to show others the results of your work and to get bonus points. <br><br>The weakest part that comes to mind is the end of the course and the final project. It seemed like the material started to be rushed towards the end, which may be a byproduct of the quarter system more than anything. However, more careful planning might need to go into the schedule of the material, as it felt like the content that was covered in the final project had just barely been covered by the time the lectures ended. <br><br>Also, about the exam itself, they did not explicitly specify, but they seem to have changed the format this year, or possibly this quarter. None of the PMs seemed to have seen a final project like this before, and were all quick to say that this type of module would never be used for the given task. There were also remnants of a different version of the project even in the final rubric, with it referring to \"sonification.\"<br><br> It seems like they were not sure what the project should cover, either. Unfortunately, the project we completed may serve as an experiment for future classes. Hope they have a less frustrating, more applicable final project in the future.",
                    "81": "This was an amazing intro course! Professor Horn is the absolute best. He is thoughtful and cares about his students and their well–being, and CS is a very valuable skill to have.",
                    "82": "DO NOT take this class as a distributuion, you won't actually feel how less you know untill the final project and the last few quizzes. You get really little support from the professor but HE IS SUPER UNDERSTANDING and will give expensions if needed",
                    "83": "I am notoriously bad with computers, but I did well in this class! If you're really serious about CS/already have a solid background you might be bored, but if you're a beginner like me and just looking to fulfill a distro or a general background it's perfect.  I WILL SAY THOUGH – the final project was doable as long as you went to office hours, but it was also a doozy.  But I heard this wasn't as much of an issue in other iterations of this class.",
                    "84": "I thought that this was a great intro to python course. Professor Horn was great and very approachable and understanding. I learned and the course load was never overwhelming.",
                    "85": "Overall, it was a fair class. It is not too challenging and counts for some majors and minor requirements. Reach out to your TAs if you need any help.",
                    "86": "This course was not the best designed or most engaging (I don't necessarily consider the lectures 'interesting'  in any sense of the word), however I do think it quite literally forces you to learn Python, or at least learn Python in the way that allows you to succeed. Grading structures were also pretty lenient, definitely does give you some breathing room in terms of doing poorly on a HW or quiz.",
                    "87": "I went into this course with absolutely zero programming experience, and thought it was okay! I did not find the lectures to be super engaging (or really beneficial, as I often had to look information up on my own to be able to figure out the homeworks), but the workload is super manageable and Professor Horn is great. Your grade is based on attendance to tutorial sections, weekly homeworks (the last couple of which I found pretty difficult), quizzes, and a final project. I recommend it for anyone looking for a manageable distro!",
                    "88": "DIdnt go to lectures, and just watched the recordings. I did really well and learned a fair amount of Comp–sci principles, but final project was definitely a bit harder. Otherwise, easy and challanging",
                    "89": "Never took a cs class in my life but this is doable. Lecture it pointless though.",
                    "90": "This course was very manageable and taught me how to think more like a coder, but there were definitely parts that could improve. For one, I don't feel like it was necessary to meet 4 times a week (3 lectures + a tutorial session, which would've been nice to know about before registration). Lectures often started late/ended early and I feel like my time could've been spent more efficiently. Additionally, lectures were also sometimes hard to follow when the professor coded (small font, bad lighting, hard to see), and were oftentimes not super clear. Overall, very manageable course that values hard work, office hours, explanations, etc.",
                    "91": "The lectures were informative. They were also recorded and posted on canvas, which means you do not have to attend the lectures, except for when we have quizzes. The 4 quizzes were somewhat challenging, but manageable. Some of the homework assignments were also a bit challenging if you are new to computer science, but office hours and tutorials were very helpful and definitely got me through this course. Overall, I recommend this course if you want a light work load, but still relatively challenging material.",
                    "92": "Make sure you do all the work, both quizzes and hw. It’s a fairly easy class and you’ll do well as long as you know what you’re doing but for beginners you really need to go to office hours etc. for help with code",
                    "93": "I think this course gets a little complex for an introductory course, and it required me to take advantage of office hours",
                    "94": "If you need to meet an FD/distribution requirement or are completely new to coding, this is your class. Better still if you meet both criteria, since Prof. Horn does a good job going through the basics of Python. I didn’t know anything about coding or computer science before this. There is a homework assignment just about every week, but your TA will go through most of it during your weekly tutorial section, so don’t worry about it. (I have heard mixed things about the TAs’ helpfulness, so things may depend on your instructor.) There are a couple quizzes, and you are graded for attending your tutorial. The remainder of your grade is based on the final project, which asks you to make a graph/visualization based on CSV data. There are a couple extra credit/make up opportunities, and the TAs drop your lowest homework grade, so you have some room for error as well. An easy A, as long as you attend tutorial and sort out any issues with your code during office hours.",
                    "95": "I really enjoyed this course! It got me interested in coding, and I genuinely enjoyed the assignments. Professor Horn is an excellent teacher and his in–class examples are very engaging; it's always interesting to see how he goes about solving a Python problem. The course load was totally manageable, and lectures always provided the knowledge needed to complete the homework. The homework was also broad enough to provide room to go above and beyond for people who really enjoyed experimenting with Python.",
                    "96": "A very chill class that made programming less intimidating",
                    "97": "The course is manageable. The homework can sometimes be difficult, but office hours and tutorial sections help. Whether the course is an easy A or not depends entirely on whether your PA  is good at explaining concepts.  Professor Horn genuinely cares about his students and is flexible with deadlines. As a pure humanities student, the final is next to impossible; you will have to go to office hours if you want to do well.",
                    "98": "AMAZING CLASS, AMAZING PROFESSOR. I wasn't super interested before, but this class showed me how much you can do with computer science.",
                    "99": "This course was hard to follow during lecture. I felt that what we learned in lecture was hard to apply to the homework. Quizzes were also pretty tricky even though I studied for each one and went through all slides before.",
                    "100": "This class is not hard and should be a A/A– for anyone putting good effort in and completing their work on time. Dr. Horn is very knowledgeable and the TA's are all helpful as well. Make use of your tutorials and ask questions as needed.",
                    "101": "This course did a fairly good job of introducing basic coding concepts and it was set up in a way in which you learned broader topics in lectures and then learned the application of those topics in your smaller tutorial sections which is helpful. Professor Horn does a good job of having ample support for code that isnt running, especially close to project deadlines.",
                    "102": "This class was a great beginner course to take for computer science. The teacher does a great job lecturing to teach many basic Python skills. Some of the homework was quite challenging and deviated from the material learned in class but is doable with some trial and error. The additional tutorial sessions were also very helpful during the week in trying to figure out the homework, so I highly recommend attending.",
                    "103": "Pretty easy class, as long as you spend 1–2 hours a week just practicing/doing the homework you'll get an A. Everyone wants to help you suceed.",
                    "104": "most grades come from projects/hw, which is nice. start on the homework early so you can troubleshoot overtime. definitely go to office hours. the lectures are useless, just look at the slides and teach yourself and you'll be fine.",
                    "105": "I felt that this course wasn't too difficult, but there was a lot of content covered really quickly.",
                    "106": "This class was a solid introduction to Python for someone without prior knowledge. You don't have to attend lecture to be able to understand the concepts and complete the homework assignments, so it's a good class for a distro or major/minor requirement.",
                    "107": "For a 10am class, Prof. Horn was surprisingly energetic and clearly passionate about what he teaches. Programming can be difficult especially if you haven't done it in the past, but all the homework is doable as long as you work with friends or TAs. This class was a good distro.",
                    "108": "I LOVED this course. Would 100% recommend for a distro requirement, especially if you don't want to take math (which I really didn't). You don't really need to go to class and all of the lectures are recorded. The textbook is SO helpful and can help you figure out just about any issue you have.  The homeworks are genuinely fun, and the \"TAs\" who grade them are fairly lenient with grading. There are quizzes every other week, but you are told the concepts that are on them, so as long as you review those beforehand they're not too bad. There is a mandatory weekly \"tutorial\" (discussion) section, which can help with any questions, and get help with homework, or also function as a time to get homework done if you don't have any questions.",
                    "109": "I took this course as a pre–requisite for the BIP minor and IMC certificate. Before entering this course, I had little prior knowledge about computer science, and it is safe to say that I'm leaving the course with knowledge of the basics of Comp Sci. In order to achieve that understanding, asking questions in tutorial and going to office hours is absolutely necessary.",
                    "110": "The course is a good foundation for learning Python. I had no experience going into it, but the professor and TAs are very helpful and answered all my questions. They have a lot of office hours scheduled, which will be your best friend as the quarter goes on. I will say that your experience depends on what TA you have for your tutorial section (which is pretty much mandatory office hours)."
                },
                "school_demographics": {
                    "Weinberg": 108,
                    "McCormick": 5,
                    "Medill": 25,
                    "Comm": 19,
                    "SESP": 2,
                    "Bienen": 2
                },
                "class_demographics": {
                    "Freshmen": 69,
                    "Sophomores": 55,
                    "Juniors": 22,
                    "Seniors": 12
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 5.1,
                    "student_count": 187
                },
                "student_opinions": {
                    "0": "Much better than 111. Python is the thing that you could use in the future, but you will never use racket after the course. Professor instructions are good, course materials are easy.",
                    "1": "Never coded before this class so I found it a bit hard at first but it gets easier. I would say it was a fun, interesting class",
                    "2": "This course is a pretty decent distro. Instead of taking a math course, take this. The first half of the quarter was way easier than the last. Towards the end, things got confusing but the TAs are incredible and will help you understand quicker than the prof. Avoid office hours with him, and just go to the TA, they are more helpful. There is homework each week but it is pretty manageable if you set aside some hours to do it. There are mini quizzes each week too but those are extremely low stakes (would not worry about them).  The course includes two projects that are not too difficult, but still challenging. In the last project, we had the option to do it with other people. There is no final just three main quizzes pretty evenly spread out.",
                    "3": "Prof. Bain is an incredible professor who makes it very easy for you to learn the basic concepts of computer science and python. It's very doable for people of all majors, regardless of your academic strengths. Take advantage of office hours!",
                    "4": "I was very nervous about taking a CS course at NU because I had no experience. This class is 100% DESIGNED for beginners. It is well–structured, and Bain is very passionate about the subject.",
                    "5": "Amazing distro!! especially if you are someone who does not want to take a math class. The workload is very manageable, with one pre–recorded lecture to watch each week and usually one homework assignment. I had no knowledge at all of CS before taking this class so I often found the homeworks challenging, but if you go to office hours you can easily get help and figure it out. The exams are fairly straightforward and they are generous with the partial credit. They allow you to drop one homework and exam, so it is not hard to get an A. Professor Bain is very approachable and willing to help you out.",
                    "6": "Really good class. I enjoyed learning about computer science. You'll be fine if you do the work and go to office hours when you need help. The fact that you get 100% for each mini–quiz and tutorial if you go in person was very helpful. Professor Bain is very encouraging and helpful with work.",
                    "7": "Professor Bain is very organized and his lectures are very informational",
                    "8": "Prof Bain is awesome. I can barely work my computer but did fine in this class. It starts off super introductory and office hours are so helpful so take advantage of them.",
                    "9": "I have mixed feelings about the class. I would say if you really need another class in your schedule and also need a distro, go ahead and take it, although I wouldn't call it an easy class. It's definitely manageable, though (for the most part).  What's really nice though is that the class is structured in a way that doesn't give you work to do over the weekends, which I thought was really nice.<br><br>TAKE IT WITH FRIENDS! That's my biggest advice especially if you don't have coding experience so you can keep each other accountable and collaborate on class work and the final project.",
                    "10": "I would recommend taking this with Connor Bain, as his teaching doesn't cause too much student stress. As long as you stay on top of assignments and not try to do them at the last minute you will be fine and learn a good amount.",
                    "11": "I believe that this is the most useless learning experience I've ever had at Northwestern.  Professor Bain is so bad at teaching and the things that he teaches you are so useless  in real world. Like how is learning to do shapes and and creatures across the screen going to help me in the future? Such a waste of time and its dissapointing that there are professors like these at Northwestern. I hope he takes my advice and I'm sure other people's frustration with the class and does something to better it.",
                    "12": "Overall, this is a well–taught class and is definitely doable for those (like myself) who come in without prior programming experience. Office hours and extra help are definitely necessary at times, but there are plenty of opportunities to get the help you need. The course is designed so that you can always do well if you put in the work, and even so, the workload is never super demanding. Would recommend!",
                    "13": "Super easy A. I had 0 background in CS and it was completely fine. Course gets slightly challenging towards the end but not much.",
                    "14": "This was a good class to learn basic python. Tons of office hours if you are stuck and is a good class overall.",
                    "15": "I thoroughly enjoyed this class. I didn't think it was too difficult, and the projects were fun and interesting. My homework for this class was always my favorite to do. Also Professor Bain is funny and engaging! Highly recommend this class.",
                    "16": "Prof. Bain makes sure to set you up to get a good grade in class and the grading is not harsh at all. You have a lot of opportunities to get 100s. The homework assignments can be hard sometimes but there are a lot of office hours you could go to for help and there's also a resource called EdStem where Connor will help you troubleshoot. I had no CS experience going into the class and did find some of it difficult, especially towards the end, but you won't get a bad grade in this class even if you struggle, just make sure to go to office hours if you're struggling with coding for your homework or your project.",
                    "17": "Not the easiest class, but manageable if you keep up with the work and have friends/go to office hours to discuss your questions. I did get annoyed by the fact that a lot of code in assignments was pre–written for us, and you had to figure out a lot of background things going on that you had no control of to complete the code, and that got pretty counter–intuitive and counter–productive to me. I wish we could do less complex or cool things, but understand what is happening behind the scenes (utilities file) fully.",
                    "18": "I enjoyed this class more than I thought I would! I went in with absolutely no computer science experience, so I was a bit scared that I wouldn't understand anything. However, Professor Bain is an awesome professor, and the projects were fun and not tedious. As long as you put in some work and show up to class when you need to, you should be fine. If there's one piece of advice you should take, it's to GO TO OFFICE HOURS!!! The TAs are all super nice and helpful, and I definitely could not have done as well in this class without office hours.",
                    "19": "PROF BAIN IS SO SO GOOD. His style is like a high school teacher’s. He’s so engaging, has great humour, and utilises really effective teaching methods. There is usually one HW per week that isn’t too difficult, and there are a ridiculous amount of office hours to get help with your program. Bain also records his lectures so if you can’t make some, you can just watch on x2 at home. And A LOT of the work (tutorials and mini–quizzes) are participation grades. And for the actual quizzes, he provides so many resources and practice problems. I didn’t take this course for any major/minor requirement but only because I thought I as a not–so–stemmy student can benefit from learning some Python. This course exceeded my expectations.",
                    "20": "This course was definitely challenging if you have no background in CS. However, you do not need a background to do well! It's good to collaborate with students in class and go to TA sessions. In the end, though, I think most people will be able to get an A.",
                    "21": "This is a great course. Take with Bain. Getting an A is very achievable with no prior coding experience. This class is very enjoyable.",
                    "22": "Prof tried to make the class interesting. It wasn't bad for a first experience into CS, but I def spent more time on projects/HW than anticipated.",
                    "23": "The course was perfect to learn the fundamentals of coding and how it can be applied to real life situations.",
                    "24": "Prof. Bain is amazing! Perfect distro and actually stimulates interest in CS.",
                    "25": "Took this class as a requirement. Very regretful. This class had an unnecessary amount of work for simple concepts. The professor doesn’t teach in a way that’s intriguing then gives quizzes where you basically just have to memorize everything the night before. Office hours are incredibly unhelpful basically forces you to cheat to get through the assignments. I’m sure there are better classes you could take as opposed to this. Connor Bain isn’t a very helpful professor and TAs are just as confused as the students. 1/10",
                    "26": "Loved this course. Provides a simple introduction to basic programming. No prior experience needed. Professor Bain saying \"what\" was the best part about it.",
                    "27": "This is a great course if you little familiarity with computer science principles or programming languages. I had zero prior knowledge about Python but found Professor Bain did a great job explaining processes and any confusing material. Getting an \"A\" in this course isn't too difficult as long as you show up to class.",
                    "28": "I really liked this class. I thought it was well–structured and organized and I learned a lot. It wasn't too challenging – just what I needed to get introduced to coding in python.",
                    "29": "This course was challenging for someone like me who has no prior coding experience but I found it very rewarding in the end. There's a lot of opportunity for extra help with homework and I always went to alternate tutorials which I thought were way more helpful. The quizzes were the hardest part of the course for me but you get to drop the lowest which was nice.",
                    "30": "This class is great. Bain is super easy to learn from and the class is paced VERY slowly which is great for a beginner class. Homework/projects may get tricky but office hours can help a ton.",
                    "31": "Well–structured course w/ assignments that help you learn",
                    "32": "Great course! I had to take this as a neuro major and did not complain once. Attend lecture, as life will be much easier (and so will grading) if you actually go. Professor Bain is the kindest, most accommodating professor out there. When the rough spots hit me, he made sure that I was going to be okay and did not make life (or the class) harder. Easy class, yet intellectually challenging and quite stimulating.",
                    "33": "Class was so fast paced and hard to keep up with.",
                    "34": "I thought this was a good intro course with a professor who was humorous and really made sure to review topics so that students understand. The course was very well structured",
                    "35": "Solid",
                    "36": "This class honestly wasn't that hard but you definitely have to study. Don't lose easy points and go to office hours for all homework and projects until you get a 100 and DO EXTRA CREDIT. This way if you quiz average is lower you can still get an A. To study for quizzes, DO THE PRACTICE QUIZZES HE GIVES YOU. They are your best resource and you can literally learn the material and type of answers you should give just by doing them.",
                    "37": "amazing class. easy A and fun time. would 100% recommend to anyone. I had 0 knowledge of comp sci and still got an A with minimal effort. I def did learn a lot too and am now a comp sci minor. Prof is amazing",
                    "38": "This course is great for introductory level coding. While it does pick up a bit late in the quarter, it is a super enjoyable class to take for requirements and/or for fun.",
                    "39": "This class is an awesome introductory class to computer science. I came in with literally zero coding experience and I found this class super manageable, well structured, and supportive. Connor is an enthusiastic professor who makes lectures interesting and makes new ideas easy to understand. The class moves at a reasonable pace and there are so many resources that are there to help students succeed. The amount of homework each week is also super manageable.",
                    "40": "I was told this class was an easy distro. It was not. Perhaps they changed the curriculum but I did not enjoy this class. Bain is perfectly lovely as a professor, but I can't say I'd recommend the course.",
                    "41": "I took this class for IMC and was very nervous about it since I had never taken a computer science class before. But the grading made this class less stressful since quizzes are worth 35% of your grade and you are able to drop one of the three. There is also no final exam. This course has so many office hours, and while I did find myself going to them often, I always got the help that I needed. Bain is also very engaging and the class is organized. I definitely recommend taking this class for the IMC requirement!",
                    "42": "If you have no programming experience and want to ease your way in with CS 110, do it! I didn't feel behind or lost at all, and sometimes the classes can feel slow, but if you pay attention and don't get behind, all of the assignments are engaging and fun, and you get to see what coding is like, at least at a basic level. Professor Bain was great, his lectures were very organized, and the tutorial sections (where you practice coding in class) where for the most part very relevant and helpful. The class is an easy A if you put in the effort and stay on top of things.",
                    "43": "GREAT course with a FANTASTIC professor. I was able to learn the basics of Python through engaging assignments that l felt equally comfortable in and challenged by. Even as a new programmer, I still felt adequately prepared for each assignment and quiz. TAKE THIS CLASS!",
                    "44": "Great class",
                    "45": "Fun but time consuming",
                    "46": "Definitely take this class. Amazing introduction with an amazing professor and it was overall a great time.",
                    "47": "For a beginning programming class, the course was quite accessible. I knew nothing about coding going into CS 110 and managed to do decently on quizzes and homeworks. I appreciate being able to drop one quiz which relieved a lot of the stress. For the homeworks and projects, there are a lot of resources and numerous office hours that students can utilize to debug their code and gain a deeper understanding of the concepts. The assignments were fulfilling to complete and I feel like  I learned a lot about the basics of Python.",
                    "48": "I wanted to learn more about python but in real world applications, and the content of this course is not something I'm going to use professionally because we mostly learned how to draw shapes. making word lists will be helpful though",
                    "49": "This is a good course if you have little to no computer science experience. I was worried that it would be too challenging, but it started out at a pretty slow pace and really only became tough towards the end. Professor Bain is very passionate and willing to help, and his enthusiasm always makes lectures more engaging. The TA Staff is also readily available to answer questions and help. I think the structure of the course and the content covered moves forward in a very logical way, and you definitely build on previous things you learned every week. There were three quizzes, one of which could be dropped, two projects, and weekly homework assignments. I think the grading in the class was extremely fair.",
                    "50": "It's a great course to learn about basic coding, but if you don't have any background of coding, also the pace got fast from the mid–end, making it hard to catch up.",
                    "51": "I enjoyed this class and learned a lot. Professor Bain is very kind and accessible. I also appreciated that the homework assignments were fun and engaging. I liked the structure of the course, with lecture Monday and Friday and an in–class tutorial on Wednesday. This suits a range of learning styles. I truly learned so much in this class. This is the largest class I've ever been in but I never felt invisible. It's easy to get individual attention with the large amount of TAs and their office hours. Professor Bain even knew my name. Overall, I'd highly recommend this class as a distro or to anyone interested in comp sci.",
                    "52": "Professor Bain is awesome. The class moves pretty fast, but I would say it is definitely doable.",
                    "53": "The course ramps up its difficulty at an exponential rate so it can be hard to adjust to.",
                    "54": "This was a good course to take, I recommend finding friends in the class so the second project that is the final can be done in a group.",
                    "55": "This class is very difficult, as are most Formal Studies distro classes. The projects were easily the best part of the class, but the tests were extremely difficult and did not reflect the types of practice questions given in class.",
                    "56": "This course was a lot more challenging than I thought, but the class allowed room for all levels of people to do well in many aspects. To receieve good grades, it was more than just knowing Computer Science, and you could do well by participating and putting in effort.",
                    "57": "The class did have a lot of assignments, weekly homework’s, quizzes, and projects and ended up being harder than I expected",
                    "58": "This course is a great distro to take in general, or for a major requirement. It is manageable if you don't know anything about comp sci but definitely gets more challenging as it goes on.",
                    "59": "An overall good class for a distro/IMC requirement/intro to programming. Connor is an absolute gem who is always willing to help his students! Course was very, very organized and designed with fair grading in mind. As long as you go to the lectures, try on the tutorials/homework, go to office hours when you need help, etc., you'll be just fine. Don't be scared of this class.",
                    "60": "It was very helpful as an introductory course and understanding how python is used within day–to–day life.",
                    "61": "I loved the class! Take it <br>Not hard, and the professor is super nice, gives you lots of chances to earn points for the grade.",
                    "62": "found the assignments interesting/thought they catered to different people's/majors's interests, despite being a large class did not feel like i could not get individual help from the instructor and ta's, felt that the grading was fair",
                    "63": "I didn't like that answer solutions were never ever posted. It's very easy to get lost in this class, and you aren't given a lot of resources. Yes, there are a lot of offices hours. But that not enough if there are no solutions being posted and answers are never gone over.",
                    "64": "Simply attending class will bring your grade up, so go to class!!  They mark attendance on certain days, and your attendance will count as an automatic 100% on an assignment or quiz you have to do if you don't attend. Overall, the class is pretty easy if you pay even a little bit of attention during class, read all the instructions carefully in the assignments, do all the assignments on time, and just go to office hours if you have trouble with ur code (super super helpful TAs, they will help you sm).",
                    "65": "This class was so fun and so manageable. If you are interested in CS definitely take it. Do not worry about not having prior coding experience Bain is a very fun and entertaining lecturer who explains everything so well. Grading is also very fair. Easy A",
                    "66": "Prof, Bain is super nice and a great lecturer. It was also nice that our worst homework and quiz could be dropped. Good class if you've never coded before",
                    "67": "This course is very helpful for someone who wants to learn how to code. It is very manageable as long as you go to class and watch the pre–recorded lectures.",
                    "68": "The instruction of this course ruined it. Prof Bain teaches you extremely simple concepts in class and then asks you to do 10x that for any assignment outside of it. He uses edstem but it doesn't change anything. His hubris on that platform is very degrading. He is an apathetic grader, and demeaning as a person even if he tries to hide it with Oreo humor. You use no logic for the exams. Overall, you don't learn anything useful or exciting regardless of the intense workload.",
                    "69": "I thought this course did a great job of teaching the basics of python in a way that made sense to non–computer–science majors.",
                    "70": "Take this course if you need/want a GPA boost. Aside from the class being quite easy to understand, Professor Bain made a subject that seems like a drag to non–CS majors very enticing and comprehendible. You really get a lot of practice with foundational comp sci skills with very little required work. Lectures are completely optional since they're recorded and attendance isn't tracked.  I went to maybe 6 lectures and I'm projected to finish with an A (I got into Northwestern for music, which should say something about not only the effortlessness of the class but also Bain's concise teaching style.) He's also pretty funny which brings the mood up in an otherwise humdrum subject.",
                    "71": "This is a great class. You definitely have to put effort in order to do well in the class, but completing assignments is very rewarding. Professor Bain is a great lecturer and teaches everything in easy–to–understand ways.",
                    "72": "The course was really hard in the beginning since I didn't know anything but got better once I got the hang of things. Office hours will be your lifeline. He drops the lowest grades for different areas which really helped",
                    "73": "The professor is really helpful and funny. Work wasn't too hard. Def recommend",
                    "74": "Lots of TA and very helpful office hours. Weekly homework that were manageable if you went to class and did the practice assignments. 2 free late passes were very convenient too.",
                    "75": "It hit all topics I had to desire to learn about, and gave me a great foundation for comp sci in the future",
                    "76": "Bain is fabulous!! He has been a really great professor, though for me it has been confusing. Grading is pretty fair, but it is a lot of work with weekly homework assignments, 3 exams, 2 projects, and then miniquizzes weekly. Just be aware",
                    "77": "Easy math distro, doesn't require that much work. Weekly homework and 2 projects. A lot of group work, going to class isn't really required if you do the work outside of class. Prof Bain gives recordings of the class and opportunities to do anything outside of class if you miss it. Very beginner class but it moves pretty quick so if you skip lecture make sure to watch the lecture videos before quizzes.",
                    "78": "This course is truly great. I would definitely take it again and I would recommend it to anyone, especially to people who have never done any computer science before. I hadn’t touched code and I barely knew what computer science entailed when starting this course. Still, this class wasn’t difficult and I found that there are so many different things that go into your grade that it’s not hard to get an A, even for a rookie. There are SO many office hours every week and the TAs are generally really helpful, although you may have to wait a little, so I would recommend starting the weekly homework assignments early. Sometimes I left it for the day of (Friday) and it was stressful, but you can always drop one of the homeworks. You can also drop one of the three quizzes and a tutorial. The class also has two projects. The first one was pretty fun and the second one could be done in a group if you wanted to (although you can also work individually), which was nice. The class is so organized and it is really set up for you to succeed. Professor Bain is also so nice, engaging, helpful and responsive. I really enjoyed it and it’s a lot easier to do well than I imagined. Take this class with Connor Bain!!",
                    "79": "The class is very interesting. There were some complicated topics, but the professor offered offer various opportunities where any questions can be clarified.",
                    "80": "This class made intro to CS really interesting to me with its use of various innovative tasks during the tutorial. I love how Professor Bain interacts with the students a lot in the class and incorporate Mario and lovely figures into the course.",
                    "81": "Professor Bain is very well organized, and his teaching style enables you to learn python really effectively.",
                    "82": "Was a very interesting class, take this class with Bain he's awesome.",
                    "83": "This course was a great introduction for someone who had no previous exposure to coding. Professor Bain was a motivating and enthusiastic lecture.  Grades were based off of a range of assignments from mini quizzes, homework assignments, tutorial assignments, quizzes, etc. However, if you take advantage of office hours and attending class, it's easy to do well. Lectures were recorded and optional, and extra opportunities like alternate tutorials made this course very flexible and conducive to a busy schedule. The grading was also extremely fair, because you can drop your lowest of each type of assignment which makes it very possible to achieve an A.",
                    "84": "I am not passionate at all about learning CS, I was required to take this. That being said, I am impressed with how much I learned and if you are interested in learning coding (python) this is a great place to start.",
                    "85": "Had issues with instructor behavior. Bain was condescending during one–on–one interactions. Speaks to students in a demeaning, rude way especially through tone.  He is also biased towards students in Willard and will respond differently to them. This is evidenced when my friend from Willard anonymously commented on EdStem, got a rude response, deanonymized  his identity and got a polite response and apology from Bain. <br><br>Course was good, great grading policies.  However, the jump in difficulty was quite drastic. Went from animating simple creature in first project to gui and accessing web libraries for second project, which were spaced about a week apart.",
                    "86": "Very good class even though I didn't have ANY computer programming experience. The lectures were very easy to understand, the tutorials were very helpful, and the homework was pretty straightforward. If you pay attention in lecture, take good notes, and try to code independently, you were certainly do well in this class.",
                    "87": "Great course, the structure is nice because it lets you to make a mistake, and it won't impact your grade. You are allowed to drop a quiz, which is amazing because it is easy to make little mistakes. The homework could be timely, so I recommend starting on Wednesday and going to office hours. The OH saved me because I was not a coding god like some kids and the TAs always helped me out!",
                    "88": "This class was very doable and prof bain really helped to meet you where you were at.",
                    "89": "As someone with no coding background, I was nervous coming into this class but Prof Bain is such a great teacher! He explains things in a way that is very easy to understand. The class itself is not hard, you just need to put in the effort. There are homeworks, projects, quizzes (exams), mini–quizzes, and tutorials. The PMs are also all very helpful and there are so many opportunities for help during office hours. This class ended up being my favorite class this quarter and I learned so much about coding with Python.",
                    "90": "I enjoyed the class to an extent. Sometimes the professor's lectures did not help with the homework.",
                    "91": "I honestly had a blast in this class. The lectures were super engaging! There was a medium amount of work (weekly homeworks, three quizzes, and two projects), but there was so much help offered that it never felt overwhelming. I would definitely recommend taking this  with Connor Bain if you are interested in the subject at all, because I am now confident in my basic python skills.",
                    "92": "I did this for a pre–req, but I think it really helped me improve the way I think logically with the different activities we did. It really felt like solving a puzzle and though it gets frustrating at times, you'll always feel satisfied and proud of yourself when you make a code run smoothly.",
                    "93": "Prof. Bain is an amazing teacher",
                    "94": "This is a very interesting beginner CS class and is engaging whether or not you are actually going to do anything that requires CS.",
                    "95": "Extremely well organized, not super stressful gradewise",
                    "96": "It's a good intro to compsci but as someone who has zero coding experience it still stressed me out nonetheless.",
                    "97": "i felt like taking this course with professor bain was so chill. id definitely recommend taking it with him because hes such a good teacher and hes very enthusiastic. also, the assignments were manageable and youre able to end with an a if you put even a little bit of effort into the class.",
                    "98": "This class was harder than I was expecting. But I think that came down to the fact that the lectures and practice work was much easier than the homework. Also, the Canvas page is hard to follow.",
                    "99": "This class is super fun and a great intro to comp sci. Bain is super fair with grades, and you get to drop a lot of your lowest scores. As long as you watch the lecture videos/attend lecture and complete assignments you will get an A.",
                    "100": "I found it a pretty chill class and a good intro to Python. All you have in a week are Mondays are lectures, Wed: are tutorials and Fridays and mini quizzes. My biggest advice would be to go to class in person. If you do so then you automatically get 100 on tutorials and mini quizzes. Other than that we had homework every week We had three quizzes but can drop one and than two projects with one being out final.",
                    "101": "Coming from someone who had absolutely ZERO experience with anything coding/technology related, I loved this class. It provided a good challenge (I will admit, the final project was really difficult), but it was all doable. The PMs are more than willing to help to get you \"unstuck\" when you run into an issue. The best thing about this class is how incredibly it is organized. You can tell that Connor Bain knows how to actually teach and support students the best he can. A typical week usually includes a lecture on Monday, a pre–recorded lecture with a built–in mini–quiz (super easy, just a check you were paying attention) for before the tutorial on Wednesday (trying what you watching in the pre–recorded lecture),  and a homework due Friday night. There are also three midterms/quizzes (but you can drop one) and two projects. The first project is a lot of fun and the second one you can work with a group. I will say that sometimes the class quickly gets a lot harder basically overnight because a lot of new concepts are introduced at once, but it is manageable. I was never worried about my grade because it is distributed over the many forms of evaluation which is nice. Also, Connor Bain is simply the best. Go to lecture and participate in class (sometimes you even get to have whole conversations about why \"Olive Drab\" is the best color).  Overall, highly recommend!",
                    "102": "I really liked this course and appreciated the knowledge I learned. I think learning how to code was not only super helpful but also fun.",
                    "103": "I am not a comp sci person at all and I definitely struggled. I found myself going to office hours multiple times a week for help on the homeworks. In class, the content seems very straightforward and simple, but then the homeworks are extremely challenging. The TAs are good with giving help and guidance, I was not able to complete a single assignment without the help of a TA.",
                    "104": "Professor Bain is awesome. Class structure is really easy to follow and video lectures are available for missed classes. Overall very good course.",
                    "105": "Prof Bain is one of the best profs in this school. I had a bad history with big classes, but the entire cs110 staff makes sure all the lectures are dynamic and engaging and I'm so glad I took this course! I really recommend you take it with friends, because there 1 group project and a weekly session focused on group work. The assignments are pretty easy and if you attend classes you'll definitely end up with at least a B+",
                    "106": "This course was a lot more fun than I expected. Professor Bain is nice and fun, and class is chill. Sometimes he'll be passive aggressive on EdStem if you ask a dumb question, but he overall wants everyone to do well and is pretty good at explaining concepts. Also, he gave everyone rubber ducks. The difficulty of this course varies for everyone. Personally, I did not have any coding experience and did not need to go to office hours in order to get 100s on the homeworks and first project (although they did take several hours for me to puzzle out). However, I know people who spent many hours in office hours. I would try to stay on top of the homework and not look at them last minute so you have time to get the help you need. Drop policy is great––the quizzes (more like exams) didn't really work the best for my brain, but I managed to do well enough by doing the practice quizzes and I don't really feel like showing up to the last one. Take this class, but be prepared to put in a few hours (about 2–4) a week for the homework/projects (just as you would any other class).",
                    "107": "honestly a good intro requirement if u need it. bain is super sweet and the subject is kinda interesting. for me, quizzes were difficult but it's easy to make up for it in homework assignments and projects. def taken at an intro–level pace for the most part, just attend lectures, watch the pre–recorded lectures and do the mini–quizzes and you'll be fine!",
                    "108": "Best course I've taken at NU. 3 midterms (35% in total) and you  can drop the lowest one. Many of my friends didn't take the last one. Have chance to get extra credit through projects. The office hour is really helpful.",
                    "109": "Constantly supported through the professor and TAs. Learned plenty through the thoroughness of the content. Relaxed because the structure gave ample time to do work and learn.",
                    "110": "Nice class. Structured well and not too much work",
                    "111": "This course gives you a solid foundation of very basic programming skills, however does not go much further than that. Professor Bain is kind and tries to make lectures as interesting as possible, however the topics are still pretty dry. You will get out of this course what you put into it. If you want to learn more complex topics, you can go to office hours and spend more time experimenting outside of class. If you just want to make some simple animations and not put too much effort in, you can also do that.",
                    "112": "Very well organized class. They try to make it a good experience and the staff is super helpful. They dont cover a lot of content though",
                    "113": "I enjoyed this class but sometimes it was very stressful.",
                    "114": "I am not a CS major, and this was my first time learning Python. Professor Bain is an extremely effective instructor, and he tries to keep the class very entertaining. To get good grades, always go to office hours and tutorials.",
                    "115": "Really low–stress class, fantastic professor for anyone new to programming.",
                    "116": "All of the assignments are geared toward learning. I think Prof Bain does a great job of balancing that and the rules and guidelines needed to make such a large class equitable. Sometimes grading can feel a little punitive, but that’s just kinda the way it has to be.  <br><br>Most of the HWs are pretty fun if you like a challenge. They are definitely like large puzzle projects. I had some very basic background knowledge of CS and I thought this class was a great way to learn more, while satisfying a FS distro. It’s definitely not easy, but if you apply yourself you’ll do well. There are 3 quizzes, which are difficult, but the lowest is dropped. <br><br>I would recommend Taking this class with a friend or two to help study.",
                    "117": "If you don't have friends, this class is impossible. Since I had a very heavy courseload, this class was more difficult.",
                    "118": "I found it hard to learn the coding aspects although the TAs were helpful",
                    "119": "I was initially intimidated by computer science and programming considering I had never done anything like that but the professor was a great lecturer and made it easy to understand the material.",
                    "120": "If you like coding, this course would be great–– tons of fun projects and Professor Bain is super helpful and available. I also thought the content was easy to understand and the assignments were not too difficult. However, I just do not like coding so I did not enjoy it.",
                    "121": "This course was great! Challenging but great!",
                    "122": "– course rating: 5/6<br>– not too challenging but does take time to get used to the coding. <br>– workload is definitely manageable. <br>– prof is nice and TAs are helpful. <br>– class gives u basic intro to python.",
                    "123": "I LOVED this class, much more than I was expecting as someone completely new to programming. Professor Bain did an amazing job making a large lecture engaging, supporting individual students, and teaching the material in a way that makes sense to beginners. Python was relatively straightforward, and Professor Bain broke lessons into manageable sections. Classes alternated between lectures, tutorials (hands–on group work), and mini–quizzes. The assignments gave us flexibility to get creative or just check off the requirements and demonstrated the real–world applications of computer programming. You can get an A fairly easily if you put in some time, participate in the activities, and go to office hours. I can't recommend this class enough, whether you just need to fill a distribution requirement or have an interest in computer science.",
                    "124": "Very fun class! Professor Bain is super engaging and fun to work with. The best advice I can give is to go to office hours if you are confused!",
                    "125": "I love Connor Bain",
                    "126": "This class is so fun! Conner Bain is amazing. Def take it for a distro/major requirement even if you don't have a lot of interest in CS.",
                    "127": "Prof. Bain is a really good teacher who is very knowledgeable about computer science. However, if you are coming into this class with a class or two of prior CS experience, I would definitely consider trying a harder level CS course unless you want a chill course for a quarter. An A is very manageable in this class due to the assignment/quiz drop policy.",
                    "128": "This is a really good class to take for a formal studies distro. Prof Bain (+ all of the course staff) are really interested in the success of students; I really do believe that Prof Bain wants every student to get an A. I was worried about this class as a non–STEM/non–CS student, but all of the course material is very accessible/easy to understand. <br>There are 3 'big' quizzes; but the lowest score is dropped (so you only have to take 2 of them if you are happy with your grade). There are practice quizzes for each 'big' quiz (and the practice quiz is VERY similar to the actual quiz). Two mini–quizzes per week (very easy, just checks for understanding with that day's lecture materials. 7 in–class tutorials (as long as you come to class and work, you receive credit), weekly homework (which are very similar to the tutorials, so as long you understood the tutorial, you will be fine for the homework). And, two projects. As long as you come to class + pay attention, you will do well.",
                    "129": "This was a great class. Professor Bain is awesome. Very interesting for someone who knew nothing about the topic coming into the class. If you put in the work, you will do well in this course.",
                    "130": "Prof. Bain knows what he's doing and what he's talking about. The class moves at a reasonable pace. I did a little coding in high school my senior year so I do think this class would've been a bit more difficult without that experience. There are a million different TAs with office hours so if you need help you can get it, plus there's an online forum where the teaching team answers questions. This class is do able but you have to make sure you have a good idea of each concept because they build on top of each other.",
                    "131": "Professor Bain is great! His lectures are always engaging and funny, and he is always open to questions. The homework and projects can be challenging at times (I thought they were a lot harder than the stuff covered in the lectures), but Prof Bain and the TAs provide many resources for you to do them well. Quizzes are not too bad; a lot of attendance–based credit. Would recommend!",
                    "132": "Easy A – bain is the best, he's entertaining and really good at explaining concepts. i understood everything no problem as a complete beginner to programming.<br>Weekly homeworks/projects can take from 30mins to 4 hours depending on the week and whether or not you get help. overall very doable.<br>Has good office hours support throughout the week.<br><br>Take it as a math distro for sure.",
                    "133": "Great distro. Not too much work, fun assignments, a lot of grades, and Bain is great professor. Some concepts could be confusing for people with no coding background, but not too difficult to keep up / office hours are very helpful. Don't need to go to lecture but even so the lectures are fun!",
                    "134": "Took as a major requirement. Lectures are SO boring and professor does not prepare you for the homework. We were asked what 2+3 was in the lecture and then for the homework we had to create very complex code. Quizzes are fine, not super challenging but not super easy. Overall 6/10 class.",
                    "135": "I think Professor Bain is a great and kind professor and if you dedicate yourself to the course you will learn a lot and succeed as well.",
                    "136": "Connor Bain is a national treasure! I was sooooo scared going into this course but it honestly might have been my favorite course all quarter. I learned so much and I loved the challenge. I'm not at all into coding and I've never done it before, but I felt like I learned so much. The lectures do get a little tedious but honestly, Connor is very silly and I still loved going to lectures to get additional knowledge. He incentivizes attendance and I have my rubber duck on my desk.",
                    "137": "Everybody said this class was super fun and enjoyable; while I still enjoyed it and would definitely take it again, I actually found it to be kind of challenging. But that might be just because i'm stupid lol. I have no prior coding experience and this was definitely a class for beginners. There's a lot of support from Bain and the Peer Mentors during office hours (which trust me I utilized!!)  but sometimes it felt like the homework tasks and tutorials were harder than what we covered in class.  I liked the way we could drop our lowest homework, quiz and mini–quiz grade, I also liked how he rewarded attendance with the attendance–based mini quizzes and by giving out mini rubber ducks.",
                    "138": "AWESOME CLASS!! Prof. Bain is one of the best professors at Northwestern for sure. He makes the subject so interesting, especially if you are a non–stem major and just taking it as a requirement. He makes Python easy to understand. I am almost convinced that I should take more CS classes even though it has nothing to do with what I wanna do in the future. TAKE THIS CLASS!!",
                    "139": "Definitely take this course with Connor Bain!!! He is such a good and engaging professor and he always makes lecture fun. Also, if you've never taken a programming class before and have to for your major don't sweat it. The class teaches you a lot but definitely isn't impossible, the quiz averages were always super high and same with the projects. There's also extra credit offered on the projects and quizzes so it's super helpful for your grade."
                },
                "school_demographics": {
                    "Weinberg": 115,
                    "McCormick": 4,
                    "Medill": 28,
                    "Comm": 32,
                    "SESP": 6,
                    "Bienen": 2
                },
                "class_demographics": {
                    "Freshmen": 109,
                    "Sophomores": 51,
                    "Juniors": 20,
                    "Seniors": 7
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.5796052631578945,
                    "student_count": 152
                },
                "student_opinions": {
                    "0": "I loved how the lectures were so accessible and easy. Criteria was also very clear",
                    "1": "This course was fine but I felt the CTECS really underplayed the difficulty and work needed to succeed fun this class. If you don’t do extra work, you will find it hard to keep up. I had a lot of trouble in this class, and I know a lot of people who have had a similar experience.",
                    "2": "Bain is awesome, teaches so clearly and extremely helpful. Really wants everyone to succeed. As long as you do the bare minimum (Go to class, tutorial , do the assignments) you will get an A.",
                    "3": "this is a great course! i had never done any sort of computer science or coding before so i was literally starting from scratch but prof. bain's approach to teaching the material enabled me to get something out of the class without having to self–teach. the projects and homeworks were fun and included an aspect of creativity which made the course very manageable and digestible. i would highly recommend that anyone from any major take this class because it is somewhat useful, can fulfill certain requirements, and is fun!",
                    "4": "Really good, very comprehensive breakdown of subjects and assignments so you’re never lost if you’re keeping up with hw and class work",
                    "5": "I loved the class! Professor Bain is so kind and made the class content so approachable for people like me who have no coding experience. I think this class taught me a lot of useful skills and really stimulated my interest in coding in an easy–to–acess way, and I think Prof. Bain was a key factor. I highly recommend this class to anyone, and I had a lot of fun in it.",
                    "6": "Really good class. Professor Bain is amazing. He is incredibly understanding and has an incredible energy.",
                    "7": "Prof. Bain is such a good teacher!! I had no CS interest and knowledge  before this class, but I still enjoyed the class. The course organization is amazing too.",
                    "8": "A very good CS class for beginners. The pace and structure of this course is phenomenal. Dr. Bain really knows what he is doing. Every part of this class is well planned and thought–out. All missteps and confusions are accounted for, students are provided every file and folder needed to do the assignments, and all labeling on the assignments is extremely clear. Dr. Bain has designed a wonderful, nearly perfect class for students who want to learn about the concepts of CS, and he has done it all with a positive attitude and a smile. This was a really great class, and even if I end up not needing the requirement, I'm very glad I took it.",
                    "9": "This class was a bit tedious. Tons of assignments, quizzes, homework, virtual lectures, projects, mini quizzes.",
                    "10": "If you need math/science distro TAKE THIS CLASS! I loved taking this class with professor Bain, he is one of the sweetest professor I met at Northwestern. Though I came up with thousand questions before our exams, he would walk me through step by step, which was very helpful in understanding the context. Despite I had no experience in coding, I enjoyed this class A LOT. Please go to office hours for help, they are super helpful. Projects were bit stressful, but it is still doable.",
                    "11": "This course is very elementary and so I do not think it was challenging for people with little experience with Python (I had very little exposure to Python before this class). There are weekly HWK and tutorials which are the primary driver of learning. Classes are recorded but you should still attend for help if need be. Not much time commitment needed.",
                    "12": "This was a pretty solid intro to comp sci class. I had no experience coding at all (except for in elementary school where we put together puzzle code blocks and made an orange cat move around lol), and I managed to do well. It's really easy to fall behind in the class, though, which can make it really stressful at times, especially before exams and before the projects. I think it's good to review the course content as you go through the class because everything builds up from what you learn at the start. If you put in the effort and go to office hours when you need help and stay on top of the work, it won't be that bad. Professor Bain is really friendly and willing to help, but he won't just tell you the answers, so you need to make sure you at least have questions to ask and things to talk about that you're confused on. I also think it's best to try the hardest for the first two exams because the 1 out of the 3 get dropped, so if you do well on the first two, it's honestly such a relief to be able to drop the last one (not even go) because that's normally during reading week and everyone's really stressed in all their other classes. I realized through this course that comp sci is not for me, but I still learned a lot and was able to make it through.",
                    "13": "I had no idea how to code before taking this class and this class made me cry a couple of times throughout the quarter. It was so difficult and the quizzes were too frequent. And the difficulty of the tasks between class, tutorials, and homework is vastly different.  I found myself being lost most of the time. I would understand the tutorial but not the homework etc. I know this is supposed to be for people who don't know how to code but it really isn't.",
                    "14": "I really enjoyed this class but it was a little harder than I thought it was going to be. I had to go to office hours and attend every class to understand what was going on. The projects were also quite a bit of work so make sure you spread them out over the time you get. I did like how there was a lot of grace with the ability to drop a quiz and a homework.",
                    "15": "I LOVE PROFESSOR BAIN. He is the best comp sci professor. He makes the course content very digestible and easy to understand. 3 big quizzes.",
                    "16": "This was a great intro class! Everything was low stress and there was always extra help available which I loved. Connor Bain is a great professor, both as a professor and person. He cares about students and does his best to make this class approachable for all.",
                    "17": "I feel like this course was a very good intro course. Very easy to get an A if you work hard.",
                    "18": "Thorough job of introducing python at an elementary level",
                    "19": "A great combination  of easy and educational. If you are actually interested in the class and computer science, you can definitely learn a lot in class, office hours, and also through online resources. Overall a great class to build you base. If you need this as a distribution requirement it is also very easy to get an A in. There are so many resources available that will help push you to get an A. The teacher (Bain) and TA's WANT YOU TO PASS. If you put in like effort to get help, you will be met with understanding and people who will literally make sure you succeed.",
                    "20": "Professor Bain is a well–organized, clear, and helpful professor. If you put effort into attending class/watching lectures and working on assignments for yourself the class is very manageable. There is a lot of office hours and help  resources available, and I feel like I gained a lot of introductory skills for Python.",
                    "21": "Take this class if you are interested in learning the basics of code! The professor is great and passionate about what he does, and there are plenty of office hours to attend if you do not understand a concept. It is not the EASIEST distro ever, but I think it is one of the most rewarding.",
                    "22": "I loved this class! Professor Bain is a great teacher who is clearly passionate about computer science, but learning pedagogy. His Canvas page is so nicely set up and all of the assignments had a lot of thought put into making it. Some homeworks were pretty tough, but I liked the abundance of office hours to choose from, which really helped.",
                    "23": "connor bain is my goat! genuinely the most patient professor i've had during my time at northwestern. it is clear that he cares for his students and does his best to make sure everyone understands the material to the best of their ability. super engaging and just such does a great job of making class so fun.",
                    "24": "\"I'm taking CompSci 110 this quarter.\"<br>My friends looking at me, the film major, like I grew a third head: \"And why would you do that to yourself?\"<br><br>Dear reader, this course humbled me beyond expectation. As a student whose major does not offer very promising high paying prospects, when I took this course I thought, \"I'll try this out to see if I could double major or minor in computer science!\" I had never taken any sort of programming before. This was a trial run. And a very revealing trial run indeed.  Reader, I started this class and felt confident. Maybe a bit cocky. Move a few turtles, draw a few shapes; I felt good about this backup career I had chosen. Then Project 1 attacked (*fire nation music*). <br><br>I knew that I would need to get the project done before it's official deadline less than 24 hours later. I eyed the clock. 12:30 AM. It was time to lock in. <br><br>I knocked out tasks easily, at first. An animation here, a landscape object there. It all was going smoothly. But then I got ambitious. I took it too far. I decided to go for one of the more complicated tasks. The clock again. 2:30. A drop of sweat beaded on my forehead. I can knock this out in one hour, I thought. The hour came and went. 3:24 AM. But I've come too far to quit now. <br><br>5:10 AM. I knew it was time to admit defeat. The project now due in less than 20 hours, and only 3/5 tasks completed. I was defeated. Until (*hopeful music*)<br><br>I went to Renato's office hours at 2:30 PM. Within 30 minutes, my problems were solved. The air was sharper, the grass greener. I could finally see the light at the end of the tunnel.  <br><br>Now, dear reader, I must admit, things only became more treacherous. With quizzes and projects due in the same week, all my grades began to slip. I adopted a mantra: \"the lowest grade is dropped\". My grades only continued to sink.<br><br>I know not what my fate is after this class. I can only pray for a B. But I will say this: if you decide to take this on, go to office hours. the TA's and PM's are very kind. And if you are like me, and think that Computer Science might be the right path for you? This class is a pretty low stakes way to try it out and know for sure. Connor Bain is great. Until next time, reader. You may see me in another CTECH soon.",
                    "25": "This class is definitely not an easy course but it is not super challenging either. Professor Bain will give you plenty of materials to help with quizzes, projects, and homeworks but he will not spoon feed you answers. He will point you in the direction you should go and expects you to find the solution. The work was not over difficult but their was a fair amount to do. One homework every week, a tutorial which you got credit for just showing up, 3 quizzes(like exams), and a couple of projects. He lets you drop your lowest scores for the different categories. A class I fully recommend.",
                    "26": "I liked this class a lot! I thought the beginning was a bit slower than the end of the class, and the projects were harder than the quizzes but not impossible by any means.",
                    "27": "This course was taught very well but the material was hard, especially towards the end of the quarter as someone who has no Python experience. At first, everything felt slow and understandable but by the last few weeks and the final project, it was much more important to go to office hours. However, the grading policies are good, there are plenty of office hours, and the auto grader helps so much because you can make changes and resubmit assignments until you get a 100.",
                    "28": "I think it covered all of the basics so it did a great job in giving me a general understanding.",
                    "29": "My reaction was good. I really enjoyed taking this course",
                    "30": "The class was not taught in a way conducive for productive application of concepts taught in class and grades did not reflect understanding or proficiency in the class' topics.",
                    "31": "I found that this class had taught me a lot about coding which I had never done before and although the quizzes were a little challenging this class was fairly easy to get an A in",
                    "32": "Spent a lot longer on homework than I thought I would. Content is appropriately challenging for absolute beginners. Not very interesting but it's a good class to meet a requirement.",
                    "33": "This class is very polarizing because you either get it or you don't. Unfortunately I was someone who did not. And so all of the work we were given felt very overwhelming and stressful. Its a very week–heavy workload with almost nothing during the weekend which is nice but again, makes the weeks overwhelming. It was also frustrating that the quizzes were weighted so heavily as someone who did not get it because it felt impossible to do well on the quizzes and it tanked my average a lot. I can see how someone would like this class but it was not for me.",
                    "34": "It was a pretty simple class as long as you go to lectures, do the tutorials, and homework’s.",
                    "35": "I had no prior experience coding in python before this course, but Professor Bain made it so accessible and easy to understand, explaining things in detail. For the most part, the content learned in this course was not hard and it is a very easy A if you turn everything in, show up to class every time, and study even a little bit for the quizzes. You get an automatic 100 on tutorials and mini quizzes if you just show up, so that policy adds a nice buffer to your grade. The content gets harder after the first quiz but it is still not hard to keep up with if you stay on top of work. That being said, the homework assignments are difficult, so make it easier on yourself and go to office hours. This course was enjoyable and it was also fun to see my codes come to life. I would definitely take it as a FD if you need one!",
                    "36": "great course. easy A. bain is awesome.",
                    "37": "Good teacher, lots of resources, an intro to computer science.",
                    "38": "Pretty good distro because Prof. Bain genuinely wants everyone to learn Python and get an A in the class. Basically if you go to class, you get a lot of free points. Also Prof. Bain is an engaging lecturer and very friendly!",
                    "39": "This was a good introduction to computer science. I did not want to take this course, but took it for the IMC pre–req. While it was not very enjoyable, mainly because I do not like coding, the course was not difficult. Your main grades are homework, three quizzes, and two projects. All the homework assignments you can submit multiple times until you get a 100. The quizzes are not difficult and you can drop one. The projects can be challenging, but if you go to office hours they will help you. There are also mini–quizzes and tutorials, but if you attend class you will likely get 100s on those as well. Professor Bain is a very understanding and engaging professor. He clearly knows that most people in this course are not STEM majors and teaches at a reasonable pace. His lectures and assignments are all very clear.  Overall, a pretty easy course, but not super interesting if you do not enjoy coding.",
                    "40": "This class is an easy A for a distribution requirement if you put in the time and effort needed to get everything done. Also it's nice to know others in the class so that when you get stuck you guys can help one another figure out a code. The tests are somewhat challenging, mostly because the first two aren't the same content as in the homework so you don't have any practice ahead of time, it's all your own studying. What's nice is that for each grade section you get to drop one score so for the 3 quizzes you only have to do good on two of them. The homework isn't too challenging, it just takes up a lot of time so be prepared for that. Professor Bain is a really good person and always makes lectures interesting. He definitely knows what he's talking about and does his best to help beginners understand in the easiest way possible.",
                    "41": "I did not have any reaction to the aspect that were important to me. It was a good introductory course to the topic, so I cannot say much.",
                    "42": "This is one of the classes I've enjoyed the most here. The topic itself is broken down in easy–to–understand ways, and the instructional team is incredibly helpful if you ever need help on assignments. Generally not a large time commitment and an easy A in the sense that the class's work is enjoyable.",
                    "43": "I thought that this class was just okay. The homeworks and tutorials were all very manageable to complete. I did find that this class moved very slowly and the content often felt very repetitive. It's definitely a good class if you have no experience in computer science at all or are looking for an easy distro. If you have any experience in programming at all and you are interested in learning more, I probably wouldn't recommend this class. Professor Bain was great and always seemed excited about the material and willing to help all students succeed.",
                    "44": "This is a good class. It challenges you and forces you to learn for sure, but once you get the hang of it, it’s pretty simple. Bain is very friendly and enthusiastic during lectures even if everyone else isn’t. It makes it enjoyable to learn in his lectures.",
                    "45": "As a non STEM major taking their first CS course ever, I found this class to be a very manageable introduction to CS and Python but I found the workload somewhat hard to balance with other, more difficult classes. This was mostly because if I had more time to practice the CS concepts I feel like I definitely would have grasped the concepts more and therefore done better in the class. However your mileage may vary. Prof. Bain is very helpful during office hours and the teaching staff are super available – there are office hours every day of the school week. Personally I felt that EdStem (a forum we used to ask and answer class questions) was super convenient when I had last minute questions.",
                    "46": "I came away from this class with a good foundational understanding of Python! Bain is a great teacher, very helpful, and he has a lot of office hours. You have a lot of opportunities to learn and ask questions and redo/get feedback on assignments. Mondays are optional (recorded) lectures, Wednesdays are required attendance for group practice projects and prep for the weekly homework, Fridays are mini quizzes where you get an automatic 100% if you go to class. Good major requirement or distro, not too hard as long as you ask questions as they come up, and it's a good skill too!",
                    "47": "Nice no–stress introduction to Python. The workload is pretty light, but there are plenty of review resources for first–time programmers too. If you're familiar with programming (even in another language like R) the pace of this course might feel a little slow.",
                    "48": "Great course, very good introduction to programming if you have no experience.",
                    "49": "I wanted to gain a little Python experience in case I need it in the future, and I can confidently say that I have a good foundation for coding in Python.",
                    "50": "Most likely a very easy class if you have a background in coding, but as someone who had never used python before, this was more challenging than I expected going in. 3 exams, weekly homework, and 2 projects. The first half of the class was fine, but the second half moved quickly and seemed advanced for an intro class.",
                    "51": "Professor Connor Bain is the GOAT – he is so amazing and patient and just caring about his students. I didn't know anything about python before this course but I often went to friday office hours which is basically him staying with people who need help right after class, and he was willing to help me with so many things. I liked the structure of the course though it does emphasize attendance, but I knew people who sort of fell behind when they missed one of the key homeworks, so make sure you stay on track and you'll succeed! CONNOR BAIN IS JUST SUCH AN ANGEL.",
                    "52": "Great introduction course, clearly Prof Bain has streamlined this course into the most effective version. He has all his bases covered, definitely the best prof out of the CS 110 instructors (I had friends in other classes). I have never coded and was able to do this course. Office hours are nonnegotiable if you haven't coded before, you will definitely be in at least two office hours even if you're really paying attention in class. But there's so many office hour times and locations, that it works out great. Make sure to watch the pre–recorded lecture B4 the tutorial!! And start the HW on Wed or Thurs so if you have questions you can ask in class on Friday (there's no office hours over the weekend even if you submit the late form on Friday)",
                    "53": "For someone that took AP Comp Sci in high school, a lot of the concepts overlapped or were similar to what I had learned in the past. This definitely made things much easier to understand in this course. I don't think the content is too difficult, but for someone with zero coding experience, it may get confusing at times. There are many opportunities to improve and get better scores so don't worry about doing badly on one assignment.",
                    "54": "DO NOT TAKE– The material we learned in class was super easy but then the homeworks and projects were much more complicated than what he taught us. He posted weekly 5 min videos for the complicated material and expected us to learn it all just from those videos. It would have been much better had he actually taught the difficult material in class. This made it really hard to complete the homeworks and projects. He also was not helpful when asking for help– he would just ask well what do you think and not provide any actual guidance. The TA's luckily were helpful. If you have had previous coding experience, I'm sure this class wouldn't be awful but if you don't have any this class is very difficult.",
                    "55": "This is a good introductory course for people interested in CS, but also if it is necessary for a distro or pre–req. The work itself can be a lot sometimes but the course is designed in a way where getting an A is not too hard as long as you pay attention.",
                    "56": "I think this class was fine. There are a lot of opportunities to get points but its especially hard to keep up if you don't pay attention to all the classes. The projects and homeworks are also hard because most of the information you don't learn how to do in class. I think if you are very vigilant then this will be very easy for you.",
                    "57": "bain is great and this course is manageable if you put in a little time.",
                    "58": "This was a great introductory course. Would highly recommend for a distro and wouldn't sweat it if its a major/minor requirement. Professor Bain takes things really slow which is good, not too stressful. Best 2 out of 3 exams, 2 projects, and weekly participation/homework grades. Very attainable A if you go to class and don't get behind.",
                    "59": "Incredible course. Bain is the best teacher ever. Perfect structure and organization for giving people with no programming experience an intro to Python.",
                    "60": "This class is a good intro to CS if you're interested in it. If you're not, it will probably be pretty boring.",
                    "61": "This is a good course. The teacher is very kind and the class is quite manageable (only one homework assignment a week) and you get a ton of points for completion of activities/ in–class mini–quizzes. In other words, the grading is very good. That said, as a beginner, I did find this class challenging at times and I was lucky to have some friends that could help explain some of the topics to me. I had no prior experience coding and I found it difficult to conceptualize a lot of the concepts partially due to the way they were discussed in class when I just needed a more basic explanation. That said, it's an overall good course that you should do well in even if you just have to take it for a major requirement or any other reason.",
                    "62": "Not as easy of a distro as everyone says it is, but still manageable. Prof. Bain is great,",
                    "63": "The course was a very easy introduction to Python and coding generally",
                    "64": "I think this class is really well designed for absolute beginners – there are definitely a lot of different assignments (tutorials, projects, homeworks, etc.) but each made the class content digestible and easy to apply. Tutorial was very helpful as well.",
                    "65": "I enjoyed the projects and homeworks, quizzes weren't super easy but not too bad",
                    "66": "I do not like the professor. He was really off task during lecture and the content he went over in lecture didn't relate at all to the homework or projects. You were pretty much on your own for those.",
                    "67": "The class is interesting, but somewhat hard to follow.",
                    "68": "Kuzmonovic is not a good teacher. He is so, so nice, but he provides little to no instruction and does not make his expectations clear. Neither the TAs nor the students understood what he wanted. With that being said, this class is really easy. I had never done any coding or taken any comp sci course and I have basically a 100 in the course.",
                    "69": "I did not want to take this course as I am not interested in CS, but I found the content and projects more interesting then I thought",
                    "70": "This course was okay. I think overall the course wasn't the best because the way the lectures and slides were organized. I thought that the lectures were very disorganized and not that well. However, I do like that there are tutorials that help us understand the concepts better and we get to practice them. Overall, the homework load wasn't that bad.",
                    "71": "I enjoyed the reverse classroom set up of this where you can watch the videos and not attend the lectures. Going to tutorials was extremely helpful as well as office hours. Although the homework can take some time I highly recommend taking this class with this prof",
                    "72": "I took this class to fulfill a requirement. Prior to taking it I had no experience in CS. The class format (asynchronous) made it really hard for me to learn the material. The quizzes were fair. The assignments were straight forward. Tutorial is the only place I learned anything this quarter.",
                    "73": "I did not enjoy this course, there was a huge disconnect between the TA, prof, and PMs and it was disorganized. PMs were the most helpful of anyone",
                    "74": "In this class, you will get out the effort you put in. Sometimes the lectures help but other times they can be irrelevant. Make sure you go to office hours early and do not procrastinate.",
                    "75": "Honestly this class is a lot harder than people make it out to be. Prof is just very bad at lecturing and the class is very unclear/disorganized. But quizzes are online which is super nice.",
                    "76": "I wasn't the biggest fan of this course. I thought there were too many forms of assessment that made it difficult to keep up at times. Additionally, I appreciate all of the peer mentors' time and this is no fault of their own, but all of the office hours were very front–loaded, which didn't make much logistical sense considering our homework was due (almost) every Friday. I thought the 3 quizzes (1 gets dropped) were unnecessarily stressful, as you weren't allowed to run any of the code you wrote on the quiz. I think that the other forms of assessment (projects, homeworks, tutorials) were sufficient in measuring knowledge.",
                    "77": "I enjoyed this class,  it teaches you the very basics of coding, and the grading is pretty generous. The projects in the class, although took some time, were fun. Highly recommend to take",
                    "78": "This course was okay. Thelectures were unecessary to go to but the projects and some HW was pretty difficult to complete. I would say this course is an easy A if you go to tutorial and office hours.",
                    "79": "i really liked the material and the assignments but the course was so disorganized that i don't recommend taking with this professor. i don't know whether the prof or grad TA is to blame but communication about grades was abysmal. most of my assignments haven't been graded so i have no idea what my grade will be. the prof also did not communicate well with the tutorial TAs which made tutorial confusing at times.",
                    "80": "its not hard",
                    "81": "This class was very disappointing. Even after hesitating about taking a computer science class without prior experience, I heard positive reviews from friends and decided to take the class. Besides learning a minimal amount of coding, all this class gave me was a headache. This reaction doesn't even involve the material. The professor/TA/PM collaboration was simply not there, and all of these so–called 'support' networks were very distantly involved with the class. Prof. Kusmanovic showed up to class twice a week and didn't engage with the class other than that. This means he relied on TAs and PMs who had to be berated to grade assignments and clearly didn't feel responsible for the student's progress – which is understandable, I wouldn't either.  The organization and teaching structure were way off; lectures weren't mandatory, but instead, hour–long lesson videos were where the class content was found.",
                    "82": "Professor Kuzmanovic is funny and lectures are helpful if you are confused on the homework. Grades are very objective and it’s useful to go to office hours to achieve the very clear tasks",
                    "83": "This class is awesome! I definitely recommend it for anyone. The course covers a large range of introductory knowledge about Python and teaches many useful skills in the language. The course load is completely reasonable and manageable even if you have never taken a coding class before.  The projects are fun, and the professor and TAs provide a lot of support so you can complete the projects and assignments. Grading is not very harsh. Professor Kuzmanovic is really great. He makes lectures very engaging, and he teaches the content well.",
                    "84": "First week of the quarter you need to sign up for a tutorial section outside of class that meets once a week which was something I did not know before signing up. These tutorial sections did end up being really useful though and they were the only thing I went to for the entire quarter because lecture was optional. If you have basically any prior coding experience this course is very very easy and you will only really end up spending some time on the two projects. Homework and quizzes were very straightforward although if you do not attend lecture I would definitely recommend taking the practice quizzes to prepare.",
                    "85": "If you have to take an easy cs class take this one. Introduction to python, exams are take home and weekly homeworks and tutorials. 3 quizzes, 1 can be dropped. and 2 big projects. TAs are very helpful and professor is great. Attending lecture is not necessary",
                    "86": "Very disorganized course but an easy A if you have any previous experience coding.",
                    "87": "This is a relatively easy course. The lectures and tutorials provide examples that you can use later in homework so It was helpful for me to attend them both. The homework weren't too hard and neither was the first project since we used a lot of code that was similar to that which we did on the homework. The second project was more challenging but we were able to work in groups so that made it easier.",
                    "88": "One of the main things I was hoping to learn from the course, besides just a basic knowledge of Python, was a sense of how I could use it in my daily life.  It succeeded in doing this, particularly in the lessons on reading spreadsheets.",
                    "89": "I really enjoyed the course. I learned a lot and I thought it was really interesting",
                    "90": "I thought the structure of the class is really well–thought out and meticulously crafted. However, I think that the use of three different websites for course questions, information and files is unnecessarily confusing. Also, the responsiveness on Piazza was limited, especially towards the end of the quarter when it was most needed.",
                    "91": "It was extremely unorganized, and personally I was bad at understand the logic behind the language so I needed help often, and couldn't get it unless I contacted the TA. There werent office hours (technically tutorial sessions), but I felt like all of my questions were answered via google. Other than that, the lectures were recorded which was super helpful for quiz prep, and the tutorials did really fortify my understanding. Anyways, the professor was hilarious, and I would recommend taking it if you are interested in comp sci.",
                    "92": "very weird class",
                    "93": "I enjoyed this class, and it solidified my decision to take my data science sequence in Python instead of R. However, the instruction in this class was a little lackluster. You don't have to show up to lectures, and honestly, you shouldn't. There isn't anything you learn in lecture that you can't learn from reading slides. The most helpful thing was an hour–long tutorial session with a PM each week.",
                    "94": "The most important thing here is having a good PM. The first week of class you choose an extra tutorial session (not in caesar). If you pick a time and the PM doesn't help you with the tutorial pick a new time fast – they're ok with switching in the first couple weeks but then you're expected to stick with one to make grading easier. A good PM will make this class ten times easier. Also start the projects early. I never went to Aleksandar Kuzmanovic's lecture but he does flipped classroom so you have to watch videos anyway. His quizzes are online tho so that's a plus.",
                    "95": "The professor didn’t show up for the first three lectures and never provided an explanation for it or even gave us a heads up.  Otherwise, the professor was present for every lecture. We didn't have to show up for lectures because they were recorded and there were slides posted in advance but I went to lectures because I thought they were useful (and also because I knew I would never watch the recordings in my own time). The content was pretty fun and easy, though I do have experience in coding and like it so I never thought of any of the assignments/hw/projects as a problem. Timewise, I under 3 hours on average on completing assignments. Overall, highly recommend this course for an easy distro."
                },
                "school_demographics": {
                    "Weinberg": 103,
                    "McCormick": 2,
                    "Medill": 23,
                    "Comm": 19,
                    "SESP": 3,
                    "Bienen": 3
                },
                "class_demographics": {
                    "Freshmen": 93,
                    "Sophomores": 39,
                    "Juniors": 15,
                    "Seniors": 4
                }
            }
        },
        "COMP_SCI 111-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.683602150537635,
                    "student_count": 372
                },
                "student_opinions": {
                    "0": "This course was a fun course with interesting activities, it just needs to be taught in python or C instead of racket.",
                    "1": "CS 111 is a good introductory CS course overall. I had some coding experience from AP CSA in high school and thought the course was not bad at all. However, I believe that I found the course to not be that bad because of my previous programming experience, and using Racket (which is the language used in 111) as a first–time coder would be hard because of the language's syntax. Q2 was definitely the most difficult quiz, as it covers topics like recursion and binary trees, but besides that the quizzes are pretty chill with minimal studying.",
                    "2": "This class is a great intro class for anyone who's interested in learning the foundations for any programming language/more advanced CS topics beyond Racket. Connor Bain is a great prof, and you can tell he's genuinely engaged with the material and wants the students to have fun learning. However, the only drawback was that the pacing was a little skewed – the course started off relatively easy–going but really ramped up after week 2, so complete beginners to CS might have some trouble adjusting – I'd definitely recommend going to office hours whenever needed; the TAs are usually super helpful and understanding.",
                    "3": "na",
                    "4": "I thought this class was going to be an easy A, but I ended with a B+. I was surprised to get a 54% on the last quiz which was worth 13.3% of my grade, and the answers were not posted afterwards, nor the info about the mean and median scores. The workload for this class is definitely manageable, but there weren't many good resources for preparing for assessments compared to my other classes. Sometimes Professor Bain's slideshows felt too advanced, using words whose definitions had not been established previously in the class, which made me feel lost a lot of the time. Sometimes the assignments felt almost impossible. A lot of students dislike the fact that this class is taught in DrRacket instead of a more practical and beginner–friendly programming language.",
                    "5": "I thought that this course was overall pretty good. The homework was mostly manageable, except the snake game they have you do is actually pretty difficult. I wish they gave more material to practice with though.",
                    "6": "I think Bain is a great teacher, and this would be a great class for someone with little coding experience. However, it is pretty frustrating for someone with experience, because it is designed to start from the very basics. Racket is also pretty annoying and unlike \"real\" coding languages, and definitely took some getting used to. However, the grading is very forgiving, so this class is an easy A.",
                    "7": "pros –  Highly recommend Prof Bain though, as he makes the classes funny and engaging. I'm one for dorky nerdy jokes and this class was full of it. Good slides and variety in his teaching methods. Grading for quizzes is lenient, and tutorials, mini quizzes and exercises are fairly easy to score in as long as you attend class. 10/10 prof<br><br>cons – Racket is a pretty annoying language to learn if you have programming experience with other more mainstream languages. it gets confusing real quick when functions get longer.",
                    "8": "The course was definitely challenging especially due to the obscurity of Dr.Racket as a language, but Professor Bain did a great job of teaching the class overall.",
                    "9": "While Racket is not really used that much the course content was still helpful nonetheless. It taught me the fundamentals of how to code and debug code and also I appreciated that we were encouraged to ask for help from peers and get feedback on our code.",
                    "10": "Great class. Connor Bain is an excellent teacher. You learn a lot and the class is very easy overall.",
                    "11": "Having significant prior coding experience, I found this class to be very easy. The instruction is not bad. This course is taught in a coding language called Dr. Racket which has extremely unique (in a bad way) syntax which makes coding a headache. Presumably, this is done to level the playing field between people who are new to coding and people who have prior experience, though I did not find this to be the case personally– the use of Dr. Racket just makes everything more confusing for everyone.",
                    "12": "Only take this class if you need to – if you are just looking to learn CS because you want some knowledge in this technology dominated world, learn python and take CS 110",
                    "13": "Good review of the ideas relevant to learning &amp; understanding how to program. Racket syntax was a bit challenging at times, but prior coding experience should make this an easy A. From what I've heard, not having prior experience makes this class a bit difficult, but still manageable—overall, a nice intro to CS.",
                    "14": "Prof. Bain is simply an icon. A lot of people don't like this class because it's taught in Racket, but as someone who had no programming experience coming in, I didn't have any issues with it. Lectures are organized and you don't have to take notes because the slides are always posted. The professor is super well–spoken, and considering how big the class is, I felt pretty engaged most of the time. Exercises sometimes took a while to figure out but were very helpful for putting class material into practice.",
                    "15": "Overall, the course is sufficient in teaching the basics of how to code, but the quizzes are hard to do well on, because its so easy to make mistakes.",
                    "16": "I thought racket was a little bit weird, and the programming was definitely a lot different than other programming experience I've had. However, I think definitely with some work it can definitely all make sense.",
                    "17": "Really chill class, lots of accommodation present if you're ever sick or can't make it to a class but in a way that prevents you from falling behind. Had fun with some of the assignments and nothing was ever unreasonably difficult.",
                    "18": "The aspect that was most important to me was recursion. I appreciated the strong emphasis on this topic and the substitution model that was used to represent how recursion works.",
                    "19": "The professor is great. It is obvious he really likes teaching and cs, and you can see all the effort that was put into all the course materials. There is a lot of academic support available: from office hours to Ed discussions. I didn't have any coding experience before this course, and I found it very manageable. There is a lot of practice built in in the course schedule (exercises + tutorials), which makes it easier to learn the material and makes the course more fun. Except the four main quizzes, all the assignments can be completed from home, and all the lectures are recorded and posted without delays. I got sick halfway through the quarter, and the flexibility of the course was a real life–saver.",
                    "20": "THIS CTEC IS FOR STUDENTS WHO ARE CONSIDERING THIS COURSE WITH LITTLE TO NO KNOWLEDGE OF CODING: This course gives a lot of padding to your grade. Most of the grades you get are given based on completion as long as you are in attendance of class. You also complete one exercise a week which can be intellectually challenging, but most people always receive full points. Many people say this is an easy class, and yes, this class has enough padding that as long as you do the work (which is minimal), you will pass the class. However, the quizzes can be difficult. It is not necessarily an \"easy A\" especially if you have no programming knowledge going into the course. It's completed all in a program called Dr. Racket which can also be difficult because there are not many resources online as there would be if we were working in other programs such as Python or C. The one issue I would have is they don't give you much material to help you study. One practice quiz, or two at most to help you study for quizzes, and the review sessions act more as office hours answering individuals' questions rather than going over all the material as a review. I think Professor Bain is a great professor and explains things really well in simple terms. You think you understand everything in class, but the quizzes end up being a much higher difficulty than the practice quizzes and exercises that have been provided with you. That said, it is a great course if you are up for it and willing to challenge your mind intellectually. Even if you perform poorly on the quizzes, you are almost guaranteed to get an average grade.",
                    "21": "Most of the teaching was through slides which I thought wasn't very effective for me. Make sure to try problems in Racket yourself to get how everything works. Utilize tutorial time and edSTEM – it was super helpful in understanding the concepts and made the homework assignments less frustrating.",
                    "22": "the course is very doable and catering towards beginners",
                    "23": "this is a very difficult class if you are new to coding. i thought i would be fine because i have a strong stem/math background, but i had a really hard time. connor is great though and he did a lot to help me succeed. definitely go to office hours, definitely go to the review sessions, definitely work with your friends on the exercises. not an easy A, but definitely not impossible. if you're nervous and deciding between 110 and 111, i would go with 110",
                    "24": "The pace of the course is a bit surprisingly quick to me (as a person who knew literally nothing about python and racket), and we were already talking about recursions in the second unit of the course. And many people in this class do come in with abundant experiences in coding. The exams are pretty straightforward, and the exercises are reasonably challenging. I personally believe that this course will be quite difficult for a person without much experience with coding.",
                    "25": "Not too bad. Dr Rackets annoying but Bain's a cool guy and the course is nothing you can't handle",
                    "26": "My only gripe with this class is that the class tries to accommodate for wide skill range. People with 2–3 years of coding experience are required to take this class while people with no coding experience are also required to take this class. This kind of makes it impossible for everyone to get what they want out of this class in 10 weeks.  For example, we spent about 2 weeks going over what a function was and going over examples like (+ 2 3). While this is important for someone with no coding experience to learn, it sometimes makes the class feel a bit slow and redundant.<br><br>However, other than that, I think that the class is ran extremely well.<br><br>There are plenty of resources to get help and Professor Bain explains the concepts very well in the lectures and pre–lecture videos. You get grades back very quickly and they're extremely generous with partial credit on the quizzes. From an objective standpoint I would give this class a 10/10 – I just wish that they would change the requirements for this class.",
                    "27": "If you're looking to learn how to code, go take CS 110 instead. If you're looking for a class that will challenge you to learn the basics of the programing discipline, this is more for you. The class is taught in Racket (a silly little language) which forces students of all coding backgrounds to start from scratch and to learn why and how their programs work. This is not an intro to Racket class, but rather an intro to computer programing techniques and paradigms, using Racket. Grades based on participation activities, weekly exercises, and exams (with a drop–your–worst option for all categories). Exams were a little odd (... how do you test coding knowledge?), and I didn't do great on any of them, but you are given plenty of resources to prepare, and everything balanced out with my other scores in the class.",
                    "28": "It is a good course, but sometimes the quick pace of the class can be tough to grapple with. If you put in the hours, you should be good.",
                    "29": "I think it provided many opportunities to learn. This course is basically made up of in person lectures, virtual pre–recorded lectures with short quizzes, in person \"quizzes\", in class tutorials and then an exercise due every week. All of the course material leads up to the exercise and you can rely on them to help you understand how to code the exercises. There are 4 quizzes in place of midterms and the final, and your lowest one gets dropped, they make up the majority of your grade. So as long as you keep up with your work and make sure to understand the material ( not really difficult ) you will do good :)",
                    "30": "Professor Bain made lectures very easy to follow, he was thorough and always asked if we had questions. I also liked how forgiving the grading was with the emergency grade erasure policies, this was really convenient to use when I had a busy week and couldn't complete the tutorial or exercise.",
                    "31": "Pretty easy class, it is built for students to succeed. Do the work and you'll succeed. <br>Attendance: Not Mandatory",
                    "32": "I loved the way the course was structured and felt that the topics built upon each other very seamlessly. It was broad enough to be a great introductory course yet detailed enough to be intellectually stimulating.",
                    "33": "Organized materials, intuitive weekly rhythm, engaging lectures. Overall a very enjoyable class :3",
                    "34": "For this class, each week you have exercises due, when the exercises are posted on canvas, they give you explanations and instructions on what to code. An example is coding a family and a function that finds a specific person on a family tree. These exercises get harder each week, so you will definitely need to go to office hours to get them done. Start doing the exercises the latest Wednesday so that you at least get three days to work on them in office hours (exercises are typically due Friday 11:59 pm). These exercises can take 4 to 10 hours to do, so they are very time consuming however you usually get a 100 on them so they act as a buffer because even if you do horribly on the quizzes, you can still pass the class because of the exercises. If you take this class, take it with Conner Bain.",
                    "35": "I like coding; I hate Racket. Some people say that this course is easier if you don't know how to code because of how weird Racket (the programming language we use) is, and I honestly agree at times. Still. we learned a lot in this class, and Connor Bain is a great prof.",
                    "36": "Connor bain is a good professor, this course is an easy A if you do the tutorials and pay attention in class",
                    "37": "I really enjoyed this course! Connor is such an amazing instructor and really knows how to teach an intro level class. The class atmosphere is very comfortable and you never feel afraid to ask him a question even in front of 100 other students. He cracks a lot of jokes in class and overall does an incredible job of teaching the material.",
                    "38": "This course does cover recursion and OOPS– important concepts for CS classes later on so they were definitely concepts to watch out for.",
                    "39": "Class is kind of boring to those who know programming already. Easy A regardless.",
                    "40": "Racket just sucks. Class isn’t too hard",
                    "41": "I am pleased with this class as it covered much more depth than I expected coming into the class. Throughout the course, you learn a variety of topics spanning from functional programming, recursion, and imperatives. It gives a very good introduction to the fundamentals of programming and I definitely recommend taking this course to see whether computer science is worth it for you.",
                    "42": "This course is fine, just beware of Racket. Connor Bain is a really good teacher as well.",
                    "43": "As the first coding class from the CS Degree sequence, I think that this class does a great job of getting people in the mood of how to think as a programmer and introducing concepts needed for further classes. However, Dr.Racket is literally USELESS after this class and I would say do not stress too much about perfecting the language and more focus on just the concepts. Most upperclassmen will tell you that the class overall is pretty useless. Prof. Bain is a great teacher, however, and would recommend him to any student.",
                    "44": "The course effectively explores the coding language Racket. However, this is  coding language that lacks utility in  comparison to others like python or java.",
                    "45": "Racket, the language used in this course, does not seem very practical on its own. I do believe, however, that this course has helped me understand how to approach computer programming.",
                    "46": "Professor Bain does a great job of conveying information and definitely wants his students to succeed. He walks around tutorials helping people out and tries to make the class as engaging as possible. Otherwise, the class was great :)",
                    "47": "This course was a good introduction to CS for people that don't have much prior CS knowledge like myself. There was a good mix between lecturing and practicing throughout the quarter, which was really nice for learning the content. Bain was also a good professor that knew how to explain concepts multiple ways if you didn't get it at first.",
                    "48": "This class was definitely a struggle for me, mostly because I am not the best at coding. Some of the concepts were just a little difficult for me to grasp. However, I think the class is well designed and making the games is pretty fun. The ideas built off of one another, meaning you kind of need to understand everything. The quizzes (in my opinion) were a little tedious and weren't that helpful, but the exercises were fun. Professor Bain is really fun and although hearing comp–sci lectures isn't that entertaining, he tries his best to be engaging.",
                    "49": "I learned about CS",
                    "50": "I like how the course is taught in an engaging way and how there is, in most lectures, something for something to learn for people who already have programming experience.",
                    "51": "It was a good class for levelling the playing ground, with the use of racket so that everyone has the opportunity to learn at the same pace. I did not like Racket as a language, but it was fun to learn how to code",
                    "52": "As long as you completethe exercise homework and attend the mini–quizziz/tutorial, you will be fine. Just make sure to keep up. In the beginning, you will be more likely think that the class  is very easy. But once you slack off,  it can be very easy to fall behind.",
                    "53": "Professor Bain is good at teaching, and his classes are not difficult to understand. However, the language \"Racket\" is very frustrating to learn.",
                    "54": "Solid class. I know a decent number of people complain about racket being used, but it's honestly not that bad and was helpful for learning about functional programming.  If you have some programming experience it should be an easy to do well.",
                    "55": "Professor Bain is a GEM. When I told him I was struggling, he went out of his way to set up office hours to discuss what I was struggling with. The TAs were all super helpful with the homework assignments (they were the only reason I was able to do them).",
                    "56": "As a beginner, not having taken any previous classes in computer science, this class was a bit challenging. It will really make you think in a different way. I would say the best way to go through this class is going to office hours and doing work with other people.",
                    "57": "Rackets SUCKS",
                    "58": "Professor Bain's slides and lectures were easy to follow and he did a good job of explaining difficult concepts.",
                    "59": "Although racket is not useful in the slightest, the process with which Connor Bain teaches it works well, and you get a solid understanding of coding.",
                    "60": "CS111 helped me understand general computer programming fundamentals that persist in any language: recursion, imperatives, and structs (classes) are some, to name a few. The exercises are great for applying the knowledge I learned during the in–person and pre–recorded lectures.",
                    "61": "class is difficult, and the 4 quizzes are really really tough, even if you prepared well and feel like you know everything. its just one of those classes that you have to get through. not the best class, but it helps you think in a coding mindset, especially if it's you're first time coding. Professor Bain is very friendly, always willing to help. But the grading is really tough.",
                    "62": "Very easy and straightforward course. 4 quizzes and 8 projects really make up the bulk of your grade. The material is pretty useful and Bain is a great professor!",
                    "63": "Long story short, Racket is annoying but the class isn't and is relatively fun. Just go to as many office hours if you can if you need help, and crush the first 3 quizes so you don't have to do the 4th.",
                    "64": "This course was incredibly difficult at some points because of my newness to the field, but also because of the learning curve as the quarter progresses. I still enjoyed it and Connor Bain is an excellent professor who will help you if you just ask.",
                    "65": "I though this class at doing a good job at understand the very fundamentals of how computer science operates. Overall a good class, however the language Racket was not fun to learn.",
                    "66": "I already knew Racket and recursive/iterative programming, so the class was almost entirely review. However, I think the curriculum is very well–designed and that it sets you up for success. Questions are answered quickly and effectively with Ed. Exercises are challenging but doable. Quizzes are straightforward. Your lowest grade in every category (exercises, quizzes, mini–quizzes, tutorials) are dropped. My main gripe is the auto–grader: I don't think code should be graded in such a black and white way; an extremely minor error could result in a very low grade while a fundamental misconception could earn a high grade. Overall, great class! Introduces absolutely fundamental ideas.",
                    "67": "This course made computer science extremely welcoming to newcomers, and reinforced topics for experienced coders. The course made it fun to learn new concepts in computer science and apply them to practical scenarios.",
                    "68": "I loved the course, and the instructor is amazing. I learnt a lot. I did a lot. And I'm really grateful. One thing I didn't really like was how exams are structured. It focused more on debugging than writing the actual code itself. This is the only aspect of the course that failed to challenge me as a student.",
                    "69": "Bain is the goat. Simple as that. Apart from that the class was fun. Racket wasn't as bad as people said but this class sets you up nicely if you never had programming experience before.",
                    "70": "Bain was an amazing teacher. This class is easy if you have prior programming experience. If you don't than it could be pretty challenging for someone just starting out.",
                    "71": "In general, I thought CS 111 was a good introductory to coding.",
                    "72": "As frustrating as Racket is, I understand why it would be the language that the first CS course is in.",
                    "73": "I didn't like Racket specifically, but overall the course improved my understanding of logic and how computers process information.",
                    "74": "Prof Bain is a very enthusiastic Professor, he cares a lot about the course and he makes an effort to engage his students in the class.",
                    "75": "This course does provide a good introduction to programming in general. It teaches you how to think about programming concepts instead of learning a language.",
                    "76": "Professor Bain is the best. He radiates a lot of positive energy and gets you excited to learn CS even if the material itself might not be that interesting. The class overall was pretty easy  you just have to get used to how weird racket is compared to other programming languages.",
                    "77": "It was helpful because it helped me think about how to code and the thought process behind it.",
                    "78": "I really enjoyed taking this class. Professor Bain does a very good job of breaking down computer science concepts in a way that is easy to understand for everyone. The class is designed to level the playing field between people with and without programming experience, ensuring that everyone is learning something new. The workload and grading is very reasonable. Overall, I would definitely recommend this course!",
                    "79": "We go very slow in class but then the homework is really hard which makes it very difficult to complete the homework and learn.",
                    "80": "I was not enthusiastic about learning in this course. The coursework wasn't hard, simply requiring you to watch lecture videos and go to classes.",
                    "81": "N/A",
                    "82": "This is an extremely informative, well–taught, well–run course. The homeworks get very difficult, especially if you have little to no prior coding experience, but they are manageable because of the many office hours provided. Do not expect this class to be an easy introduction to computer science though, it is a tough, but manageable, class.",
                    "83": "Very good informational course if this this is your first intro to cs course",
                    "84": "Yes, the course did help. If you have no experience, this will low–key be a struggle, but you WILL walk out with experience. TBH, just get people with coding experience that can help you learn and you will be just fine.",
                    "85": "It's a very good course. It is designed to accommodate students who haven't coded before. So don't be discouraged by this fact. The professor is very fun.",
                    "86": "I liked how much time we spent on each topic, the content was taught \"slowly\" in the sense that there was a lot of time for me to truly understand and catch up if I needed to.",
                    "87": "Course was easy to complete, however Racket syntax is a bit weird.",
                    "88": "You learn Racket, which is pretty useless. Go to class because some assignments you get 100% if you just show up. There’s four quizzes instead of the more usual two midterm + final, and you can even drop the lowest quiz grade and homework grade. Connor Bain is cool too",
                    "89": "Professor Bain is the best. He made the class enjoyable and always willing to help you out!  The exercise is challenging but you do learned a lot and make you feel accomplished when u see the final results.",
                    "90": "Racket syntax was difficult but you'll adapt with time and practice. The type signatures really hurt my grades on the quizzes, but again, practice made it better. I like that the course illustrates that the in the world is always evolving and a well–known programming languages will sooner or later disappear, but Racket is the source to building other programming languages, so understanding it helps us grasp other programming languages we explore in the working industry later better.",
                    "91": "Professor Bain is one of the best professors I have had at Northwestern. He does a great job of explaining things in terms that everyone can understand. For some people, this can be upsetting because they already know some of the things we cover in class. The instructions for all assignments and quizzes are extremely clear, which is hard to find in CS here.",
                    "92": "Professor Bain is a great teacher who clearly cares about the material and has engaging lectures. The material is very easy to understand and helped me understand programming conceptually as a beginner and then apply these concepts to other contexts. It's very clearly geared toward beginners, and the language in which the class is taught (racket) acts as an equalizer between students who have coded before and those who haven't since it's a pretty obscure language.",
                    "93": "Connor Bain is the goat, he really cares about his students and their understanding of his course. There's a service that he provides called EdStem where you can ask any questions about the homework or just general questions, and he gets back to you within an hour in most cases. Recursive programming sucks in any language, but Connor Bain did a great job teaching it.",
                    "94": "Good course overall.  I highly recommend going to office hours to do your homework because I often spent a lot longer on it than I should have.",
                    "95": "The content learned in the class was useless considering it was racket. I don't think this class is the best fundamentals class out there to teach the basics. The exercises are doable, but are not useful in truly teaching debugging techniques because even the most experienced programmer can get stuck on the syntax. It is a decently okay class overall.",
                    "96": "Professor Bain’s lectures were very interesting and entertaining to the point that he’d make me want to learn more about Computer Science and look forward to attending his lectures. He’s very interactive, has great energy, won’t hesitate to help if you have a problem, and makes students feel included and immersed in his lectures. Despite taking place in a large lecture hall, professor Bain would somehow make me feel included and his lectures would genuinely keep my attention throughout their entirety. The course itself was very light in terms of work; we would have weekly tutorials, homeworks, mini–quizzes, and quizzes. The tutorials and mini–quizzes are automatic As along as you attend lecture; if not, you can still submit them for evaluation. As for the homework assignments, they are always relatively simple and Bain lays out great instructions and hints as to how you could go about solving the problems and writing the code. The quizzes are taken only during lecture and require Lockdown Browser but he always provides practice quizzes with similar content and lays out the structures of each quiz very clearly. There’s also great office hours if you’re ever in need of help and he has a great emergency grading system that can save you if you ever miss an assignment or do poorly on one of the quizzes. If you’re ever going to take a Computer Science class, I 100% recommend taking it with Connor Bain. Seriously, I can’t stress this enough, TAKE CONNOR BAIN!!",
                    "97": "Pay attention and you'll be fine.",
                    "98": "Really easy A, definitely take this class",
                    "99": "Honestly useless didnter learn anything",
                    "100": "Prior to taking the class, I heard many people complain about its difficulty or tediousness. As my first formal CS class anywhere, this course taught me a lot. The tediousness of the Racket Programming Language forces a user to think through each step of coding, which, in my opinion, is critical to an intro class.",
                    "101": "Professor Bain is very good at concisely and eloquently explaining topics that can be complex.",
                    "102": "Pretty hard for an introductory to computer science class. Go into recursion in the 4th week. Overall was a class I enjoyed and a good introduction to computer science at northwestern.",
                    "103": "I loved Professor Bain since he is very passionate about the class! Racket was pretty annoying if you've coded before but it's definitely manageable. The quizzes are all the same format and as long as you study the practice quizzes you'll do fine.",
                    "104": "I do not like the language that this course was taught in, as it was very different from all other programming languages that I learned before, but besides that major con, the class was good. The class does ramp in difficulty very fast, but if you go to office hours, you should be fine.",
                    "105": "Using DrRacket was not the best language to learn programming fundamentals",
                    "106": "The course is pretty easy and accessible to everyone. The resources provided for assistance with the coursework are abundant. The way that the course canvas page is organized is extremely well done and adds to the experience of the class. The class format is diverse, sometimes lectures are conducted while other days you are tasked with completing an exercise based on the information you have just learned which allows you to have some practice basis for the week's assignment. Many office hours are available every day of the week that you can consult whenever you are feeling lost.  The grading system is fair and balanced, even if you do badly on one of the tests you can still recover and get an A in the class.",
                    "107": "The course was quite easy at times, but it was a great introductory course into comp sci.",
                    "108": "This class is not that difficult. The instructor is pretty helpful as well.",
                    "109": "Overall, I really enjoyed CS 111 with Professor Bain! He's pretty clear while he teaches, and the workload isn't bad. You're also able to drop your lowest test/excercise/mini–quiz scores, which is a nice cushion to have.",
                    "110": "I think the class serves well to help put everyone on equal playing field a bit when it comes to coding experience, as it uses a language no one has likely used before. I knew what things like iteration and object–oriented programming were but I learned what they were in more stripped down, basic terms, which I can apply to any language.",
                    "111": "I thought this course was overall a great introduction to computer science, and I can see how it is really beneficial for people without prior coding experience. I did feel like there was a decent amount of busy work (lots of exercises, mini–quizzes, and tutorials to keep track of), but all of it helped me learn the content if I ever didn't show up to lecture. I also felt like the quizzes were overly specific in the way questions were asked. Oftentimes, I would understand the problem and the code, but would be confused on how I should specifically answer the question (type signature or output of an expression). Besides that I feel like this is a very manageable class that is pretty enjoyable at times.",
                    "112": "This course was challenging at times but mostly easy. The grading is very generous and the quizzes are not bad. Racket is an annoying programming language however it's not that hard to learn.",
                    "113": "Not much needs to be said, you either need to take it or you don't. Bain is a great lecturer and keeps it engaging. He structured the course very well for an intro CS class. Flipped Wednesdays (pre–recorded lecture before class, activity in class) are kind of annoying, but I understand why he thinks he needs to do it (so we can get more practice actually writing code). <br><br>Very easy to get an A if you're at all STEM inclined. Lots of grade padding, and you can drop one of each type of grade (including exams which he calls \"quizzes\"). <br><br>Note on Racket: everyone complains about it, but it's not all that bad. And like Bain says early on, you're studying CS to understand how computers work, not learn programming languages. For an intro class, choosing an obscure language like Racket doesn't seem like a terrible idea.",
                    "114": "For me, this course was a decent balance of being easy yet still actually teaching you something in the end. The only CS experience I had before this course was CS 110, but I still found this course manageable. Racket was sometimes annoying with my Python habits, but the concepts for this class were fairly straightforward to me, even if the syntax and specific functions took some time to get used to. Ultimately, I think whether or not your brain is geared for CS (in other words, if CS comes naturally to you) is the main factor for whether this class would be easy for you. I personally found Python pretty easy to get started with, and the same could be said for Racket in general. <br><br>Professor Bain is a great professor and provided a lot of valuable material to learn or review concepts. The 4 quizzes (basically the exams of the class since they make up 40% of our grade) were somewhat cumulative. However, the lowest quiz grade (along with the lowest grade(s) for the other grade categories) was dropped, which helps a lot with making the coursework even more manageable. The homework (exercises) are generally not that difficult as well. Not exactly a universally easy A because you still need to put some brainpower into the course, but still very attainable.",
                    "115": "the professor is really good at explaining his concepts clearly! if you already know computer science, the lectures can feel slow; though, i'm glad he went at this pace to accommodate for those who haven't coded before. the homework assignments were straightforward, and it feels like the course is built for the students to succeed. people complain about Racket (the coding language built for learning CS that is used in this class), but I thought that it taught basic coding concepts well. as someone who has coded before this class, Racket was fine.",
                    "116": "This course was good. I always love Professor Bain, he is extremely nice and helpful. I wish I did put more effort into this class since I could have done better if I actually studied for the exams, but it was all well. The course is very easy if you're consistent with your work and understand how to do the homework assignments.",
                    "117": "Prof Bain is kind and clearly passionate about teaching Racket, but I think there are definitely better ways to spend your time– you're  likely never going to use this language again and some of its aspects are complicated for no reason if you're used to other forms of coding.",
                    "118": "Connor Bain is an amazing teacher! He is so passionate about what he teaches and always tries to engage the class. He is very open to answering any questions you may have and always reminded us that we can come to office hours if we had any questions. The class itself is a great intro class. It is taught in Racket which does get a lot of hate sometimes. I have to admit that it took some time getting used to, but it is important to be able to learn any programming language or technology and this is something that the professor also reminded us during classes. Through doing the exercises especially the ones which we built a snake and asteroids game we were able to gain a great understanding of fundamental concepts. I came into this class with prior experience but I did not feel the class was a waste of my time and actually gained a better understanding of concepts such as recursion and overall program design from this class. However, I do feel that the class was a bit fast paced for people new to programming.",
                    "119": "I think this course did a great job of teaching the basics of computer science, especially for those that are learning it for the first time.",
                    "120": "Not bad at all, just start the exercises early",
                    "121": "I came into this course with no prior CS experience. After finishing the course, I am equipped with basing coding skills. It was challenging at times because of my lack of experience but I was able to push through with an A",
                    "122": "This course made me slightly more interested in CS. As being someone with very little CS knowledge, learning this class was not too bad as long as you pay a basic amount of attention. The programs can get slightly challenging, but really thinking of them out loud is useful. Use ED or whatever forum to ask anonymous questions, Prof. Bain was super useful and would answer questions usually super quickly. Prof. Bain was super fun and I would recommend taking the class with him. He taught the class very well and would intermix humor and learning into a lecture style class, which I appreciated.",
                    "123": "I liked Prof Bain's enthusiam.",
                    "124": "This was a great introductory computer science class. I had absolutely no experience in coding going in, but throughout the quarter I learned so much and really developed my skills. Professor Bain does his best to make you succeed from his very effective teaching style, generous grading that allows for one quiz (midterm), exercise, and tutorial to be dropped, and the overall accessibility of the class and its content. <br><br>This course was definitely not a walk in the park but very enjoyable and a really rewarding experience. Highly recommend taking it if you are interested in learning more about computer science. Bain is the goat.",
                    "125": "If you have coding experience this is a very light class.",
                    "126": "The professor was good overall, some of the topics just require a lot of time and effort to understand what is going on.",
                    "127": "Overall:<br>Honestly, I had a lot of fun in the class, but I didn't really learn that much new stuff apart from the clunky language that is Racket. I already took AP CS A, and this class covered many of the same topics. <br><br>If you've coded before, you'll probably think Racket sucks. I get it, it's pretty scuffed that everything is written on one line, and there are a bajillion parentheses, and that no one in the real world uses it, but it did teach me functional programming and introduced me to functions and lambda expressions which are also found in other languages like Python. Near the end of the quarter, I didn't mind Racket too much. Sure, it's not the best, and I'm not sure why it's more beneficial than other, more popular languages, but it is what it is.<br><br>As for people who have never coded before, it might be a struggle. From what I observed, the coding concept is difficult enough, then people get a headache from trying to implement it into Racket. If we used something like Java or Python, the syntax would be a little more natural and make it a whole lot easier.<br><br>Professor:<br>Professor Bain is a cool guy. He's enthusiastic about the class (yes, even about Racket) and is pretty entertaining. He comes prepared and knows a lot about CS. If he's teaching the class, you'll be in good hands.<br><br>Homework:<br>Some of the homework is hard. Yup, college is hard. It just sucks that you can't really use StackOverflow because no one really uses Racket. Other than that, have fun with it. The assignments near the end of the class are pretty interesting.<br><br>Quizzes:<br>There were 4 quizzes throughout the year. Just make sure you pay attention in class and you'll do fine.",
                    "128": "I learned a lot about functional programming",
                    "129": "I do not like the racket language, I think it is useless and confusing, but other than that the course is good.",
                    "130": "Course very well introduces to different programming paradigms",
                    "131": "This course is interesting. In a way it does give you a basic understanding of programing but I feel like it is not in an intuitive way. Unfortunately I already had programming experience so I don't know exactly how hard it was for people to fully grasp the knowledge and content. I also felt like the speed was wrong. There were times where we were drudging through some of the most basic stuff that any northwestern student should be able to understand by it just being stated once and then other times we would fly through complicated things like they didn't matter. Personally, I believe that you should learn object oriented programing first with data types and certain common syntax restrictions because (at least for me) it is a lot easier to go from writing programs where you have to think of data types to having to not think about data types. Also, one of the main concerns about this corse is that you will never use racket in the industry. I know they say the course is supposed to just teach you had to code in general and not a particular language, but I think that can still be accomplished using a programming language that you might actually end up using. There is certainly a lot of things in this class that seemed odd to me, but in general it is a fairly easy class if you put a little effort in.",
                    "132": "The professor is very engaging and I enjoyed how the class is structured with the tutorials and lectures. I also enjoy how the class is not entirely exam focused and the tutorials and exercises are also very highly weighted for the overall grade. The class allowed a bit of wiggle room for mistakes which is very beneficial for beginners. Honestly, I feel that those who do not have any coding experience tend to enjoy or learn better in this class than those who do have some background.",
                    "133": "I enjoyed the format of the class and enjoyed the amount of work because it wasn't excessive.",
                    "134": "Professor Bain is a great teacher and person. This is a worthwhile intro to CS.",
                    "135": "This is a great introductory computer science course! Professor Bain is an amazing professor, who is really excited about teaching us. The course was paced really well and the quizzes were very predictable.",
                    "136": "This is a great intro class to CS with a fantastic professor. Dr. Baine is a really engaging lecturer and gives many good examples for us to better understand abstract concepts about computer science. The Racket language is fairly easy to use and is really beginner friendly so there should be no fear about that. I would say that the weekly homeworks seem daunting but they are very easy and the class has many office hours opportunities both online and in–person to help with them",
                    "137": "to say the least, i hated this class. the professor wasnt the issue, it was just racket which is a really outdated language so i dont know why we're learning it. as someone with past comp sci experience, racket was difficult to understand. the assignments are manageable and dont take a lot of time. racket is just rly different from other languages so it might take a while to understand how it works.",
                    "138": "Quickly became one of my favorite courses in the quarter, the structure of the course was easy to follow and kept a good pace. Professor Connor Bain is probably the best professor this course could have, even on the more boring days he always brought energy and passion to his lectures. He made the course fun, and you could tell he cares a lot about the class as he would often stay after class ended for office hours to help on whatever the students needed, whether it be the tutorials or exercises.",
                    "139": "This course isn't too difficult, Racket is annoying to program in (and honestly a pretty useless language to learn), but I wouldn't call it difficult by any means. Bain is extremely nice, to the point that if you already have CS knowledge it's honestly a little annoying (I felt like I was being talked to like a toddler sometimes), but if you have no CS knowledge at all it's nice to have an instructor like him. I will say if you're taking the class as an elective and you just wanna try out/learn CS, take 110 instead of 111. 110 is in Python (a widely used programming language) and 111 is in Racket (a language that nobody uses), so 110 is probably more useful if you have the choice.",
                    "140": "This course was interesting and I enjoyed the different class methods. Professor Bain helps to make the lectures entertaining, and I enjoyed the format of the class in that on Wednesdays we had tutorials where we got to collaborate with other people in the class if we needed help. There definitely wasn't a lack of support with the OH, PMs, etc.",
                    "141": "I think the course was pretty enjoyable. I really do think Professor Bain was right about the class getting pretty hard up until recursion and then getting easier. Overall, i think this is a really good class to take if you are interested in getting into coding.",
                    "142": "Connor Bain is an interesting man. <br><br>Things to note:<br>– 4 quizzes per quarter, lowest is dropped. TAKE THESE SERIOUSLY, EVEN IF YOU KNOW HOW TO CODE BEFOREHAND. <br>– Weekly exercises are easy, but make sure for the Snake game and for the final exercise you don't wait until the last day to do them<br>– Other than that pretty chill class. <br><br>Bain the goat.",
                    "143": "Racket sucks but everyone already knows that. I think Racket makes many things a lot more complicated compared to other languages, especially recursion, so I don't really understand why Racket is used to teach an introductory class. Exams are also purposely just trying to trick you and you have to catch every little trick in the code or you get many points off since some questions are worth 10 points and the exams are only 100 total. Some questions on the exam aren't trying to test your knowledge but instead are testing your ability to catch the tiniest little mistake or error that was barely covered in lecture.",
                    "144": "I enjoyed and learned quite a lot from this class. Coming in as someone who already had 2 years of coding experience, this class was not overwhelming and still managed to challenge me, making me a better coder in the process. Professor Bain's lectures were quite helpful in being able to learn the specifics of the Racket coding language, as it is different from almost any other language. The quizzes were very manageable, and we were given plenty of resources to prepare ourselves for them. The ethics modules were quite interesting as they gave us a chance to reflect and learn how to be more responsible people both with coding and in real life. <br>Overall, this class was a great intro CS class and I would recommend that you take it if given the opportunity.",
                    "145": "This class was pretty manageable. The lectures were easy to follow along with and the instructor brought a great energy to the whole class. The only hard part would be the later weekly exercise assignments became a pain to do. They would take hours and many times I had to go into office hours to finish them. But reaching out for help was not a problem.",
                    "146": "This course is so active and depends on the practice more to become familiar with the materials and the contacts of the course.",
                    "147": "This course laid the foundation for how to program in any language, not just the study of a singular language, which is very important in today's computer science landscape.  I feel prepared to learn about a variety of new programming languages and have the necessary skills to go further in my study of computer science because of this class.  This class had no homework over the weekends and every assignment felt like it was useful to my learning.",
                    "148": "Overall CS 111 was a good introductory class to programming as a beginner. Course content and slides were clear to follow.",
                    "149": "The class was good in helping us learn, especially with Prof. Bain's teaching. It was quite a lot of work, especially if you want to get an A.",
                    "150": "Pretty easy intro to programming – if you've done it before this class will be a breeze although you may want to rip your hair out due to Racket (the random programming language used for the class)<br>Instruction is clear and makes sense – homework and exams are manageable – you shouldn't have any trouble if you put more than 5% of your brain into this class",
                    "151": "Professor Bain is a really great instructor! He made an extremely organized course with engaging lectures, practice quizzes, and helpful but fun assignments. Lots of opportunity for help and very beginner friendly.",
                    "152": "Very good class to take as a beginner CS student. Also good for those with some programming experience.  The professor is very accommodating and the work is not daunting at all.",
                    "153": "The course started off as pretty basic. The first few classes are significantly easy especially if you have a prior knowledge of programming. However, as it continued, it got much harder and as a person with prior experience with java and c++, adjusting to dr.racket was really challenging. But when you get past that, everything is pretty straightforward",
                    "154": "One big assignment weekly that can take anywhere from 30 minutes to 3 hours. 4 exams but can drop one. Should receive an A if all assignments are completed with full marks (can drop one), attend classes, and 82.5+ average on 3/4 tests.  Basically put in the work and you will be rewarded fairly and accordingly.",
                    "155": "While I think this class is a good introduction to computer programming (and the programming language called Dr. Racket), I found it challenging to keep up with the course, as there are a lot of moving parts each week and the class accelerates pretty quickly. However, Professor Bain is an excellent lecturer and there are a lot of resources available to students to help them succeed. I found the exercises and tutorials to be manageable, but the quizzes throughout the quarter were relatively difficult. I would recommend taking this class for a major/minor requirement, but would recommend CS 110 or a different course for a distribution requirement/elective given the intensity of the class.",
                    "156": "This course was amazing.  The professor is one of the best I have ever had at NU and he made himself available for his students way more than I would have expected.  In such a large class, it can often be easy to feel lost in the mass and not noticed by the professor, but he took care to help and acknowledge every student who needed/wanted it.  The class is difficult, but you are given all the tools to succeed.  Best advice is to start the exercises early, your brain will figure them out in the background while doing something else trust me.  Can't say enough about the professor and course staff doing an amazing job.  Only issue was when he started to crack down on attendance, it took away from the experience a bit as someone who was attending class every day (though not his fault, the fault of students who tried to cheat his system).",
                    "157": "This is an interesting class because you do not use any programming language.  While this sounds like it would be easy, if you have prior coding experience, you might be confused. Some things are very racket specific and thus make some assignments tedious. I also found that the practice quiz was not representative of the real quizzes. That being said there is a lot of help in this class and Bain is a really great professor!",
                    "158": "Racket is not a fun language, but it's useful for learning functional programming and works well as a tool for learning programming techniques. You will not need prior coding experience to do well in this course as the instruction is very good.",
                    "159": "Comp_sci 111 with Prof. Bain is a decent starting class for comp sci majors. I did not like that the exams were not really testing your code–building abilities. The exams were doable, but not enough practice was provided, as no past papers are availible. However, Prof. Bain is a nice funny guy, he sure loves doing what he is doing.",
                    "160": "The professor was very enthusiastic, lectures were interesting. The course is not hard, but make sure to do well on quizzes",
                    "161": "it was a useful class to get an understanding on programming. i loved the structure of the class because honestly you could get away with doing minimal work. make sure to take this class with friends so yall can help each other out.",
                    "162": "Bain is awesome. He tries his very best to make Racket not a dry and confusing syntax. Regardless, I didn't like learning in Racket and didn't enjoy how the quizzes for this class were structured.",
                    "163": "The course teaches Racket which isn't really used much but I liked how it evened the playing field a bit for those who didn't have as much coding experience.",
                    "164": "Exercises were easy, liked the tutorial setup, and quizzes were pretty good. Liked the grading system too.",
                    "165": "As someone with a decent amount of experience with object–oriented coding, the functional programming techniques used in this class were quite counterintuitive to me. It was frustrating understanding the concepts but having to wrap my head around Racket. I feel like I spent a lot more time trying to code in Racket instead of better understanding concepts. The quizzes were not forgiving if you didn't follow the instructions clearly.",
                    "166": "Enjoyable, workload was appropriate for learning.",
                    "167": "I had some python experiences before this course. This course is not hard but harder than I expected. A lot of my classmates complain that the language, dr.racket is a confusing language, but overall it's manageable. Homework takes sometime debugging, but if working in groups its okay. The professor's lectures are not very useful to my opinion but the slides are. It's hard to focus in class. The way he delivers the speech is not very concise, but some of my classmates find his speech pretty good, so i think it depends on the person. The first two weeks are too easy and useless, and a few homework in later weeks take too much time. No final.",
                    "168": "This was an interesting course, I learned a lot from it, but it was hard for me, especially since I have not coded before. Quizzes were reasonable but I wish I was able to get more practice for them. Overall, good introductory course.",
                    "169": "An interesting introduction to coding. Somewhat frustrating to use racket as someone who has learned java but it was a good look back at the basics.",
                    "170": "If you have programming experience, there is a CS Placement exam. It is not advertised to non–majors, so email the department in the summer. Study up on Racket if you decide to take the exam and it shouldn't be too difficult.<br><br>This class is good for learning the functional programming mindset, and Prof. Bain is a great professor who truly cares about his students. However, the class is easy and the grading is lenient, so consider if you truly want to spend part of that expensive tuition on this. It might be better to just study up on Racket over the summer and skip.",
                    "171": "I had no programming experience coming into this class so the goal of the class to \"teach you how to think like a programmer\" was effective on me. People with prior programming experience did not like the class very much  but it's not a hard class at all. Make sure to study well for the quizzes though.",
                    "172": "This was a good and relatively easy introduction to CS. Wasn't too time consuming and assignments were genuinely interesting. Racket is weird, but you get used to it.",
                    "173": "I really liked the set up of the class. The lectures, tutorials, and exercise were properly difficult without being torturous or useless. As someone already with lots of comp sci experience it was a bit of a busy work but there was a lot of flexibiltity in the class where I could still learn and do the work I needed while skipping over some of the stuff I was already confident. Bane is a phenominal teacher and person with very clear and useful leactures. There are 4 Quizzes which are pretty much misterms. The quizzes are appropriate to the content in class, require studying, but if you pay attention, do the work, and study you will be successful.",
                    "174": "course seemed more geared towards students who already had some level of experience with programming. for students who didn't, it was quite difficult. definitely try to find people in the class who you can collaborate with. i liked that we were receiving many grades aside from quizzes that were easier to succeed at and were usually easy 100s (tutorials, exercises, mini–quizzes).",
                    "175": "The classes themselves were kind of boring because I had previous coding experience. The exercises had enough instruction that they were fairly easy to do. The quizzes were different than I had done before, so they took some time to get used to.",
                    "176": "I don’t like that the class is taught using Racket, I think it is an unnecessary complication of the concepts that are taught in the class. I spend so much time trying to figure out what exactly I’m looking at when I’m given a piece of code to interpret, and I feel like that time could be spent in a more effective way. Once you get used to Racket, the concepts are about what you would expect from a 100 level CS course, but I think the language is the most intellectually challenging part of the class. Recursion can be a hard concept to master but the language makes it feel harder.",
                    "177": "Connor Bain, is an especially great teacher.",
                    "178": "Decent class and learning overall coding principles was nice, but the coding language we used (Dr Racket) felt slightly inefficient, especially for people who have prior experience with other coding languages.",
                    "179": "This class is an excellent starting point for people with little to no programming experience, but it sucks that Racket is useless and you will probably never use it again. Since everyone has to take this course, I would recommend doing it with Professor Brian, he is super chill and a great teacher. Class is light in work but make sure you know the format of the quizzes since there are 4 (the only exams) and they are the same format throughout the quarter.",
                    "180": "Overall the course is good at giving us a an essential basis for for cs. Racket seems a bit useless for the future but it did teach us things that will be applicable to any future endeavors in cs. The lectures were well organized. The homework exercises were good at helping you understand but were difficult at times. Overall the class wasn’t too overbearing and professor bain made it fun and interesting.",
                    "181": "The course is good if you have very little CS experience, but if you already have the fundamentals down it's pretty annoying to have to learn Racket as you'll likely never use it again. Racket brings everyone to a similar skill level and I guess is good for developing basic skills (but again, Racket is annoying). Prof. Bain is very energetic and is pretty engaging, unfortunately the pace at which he teaches is very slow. I don't think this is his fault thought but the course contents'.",
                    "182": "I thought it was a very basic course but the instruction was good and it makes sense why every CS major has to take this class. Racket is not ideal, but it does help you understand fundamental programming concepts. The course is structured in a format so if you just show up to class and put in a little bit of work outside of class you should easily get an A.",
                    "183": "Easy introduction to computer science class. Lectures were engaging, and there are a ton of office hours available to get help for the weekly exercises. This class doesn't take up too much of your time, but at the same time, I learned a ton about the concepts behind CS. Prof. Bain is great and incredibly helpful as well. The lowest quiz, exercise, in–class tutorial session (graded for showing up) grades are all dropped too. Attendance is not necessarily mandatory, but you'd have to take Canvas quizzes if you choose not to, and there really isn't a reason not to come to class. Racket is the programming language used, so while the syntax can be very counterintuitive and infuriating at times, it's not super difficult to get used to over time and honestly it's a bit overhated. You won't use Racket to write code in the future, but the ideas behind it apply to every programming language.",
                    "184": "Great intro cs class, prof bain is a great teacher and the tas are very helpful too.",
                    "185": "Course was very manageable. Easy to understand the material and get an A if you put in a normal amount of effort.",
                    "186": "I came into this course with significant experience in programming, and I felt like this course was pretty well–structured considering that it focused on the fundamentals of programming. My prior knowledge helped me understand Racket well, even though it was a new programming language I was unfamiliar with. The homework assignments weren’t too difficult, and the consistent test format made it easier to study for each quiz as the quarter progressed. Professor Bain definitely made this class interesting and easy to understand.",
                    "187": "I came into the class with a solid amount of coding experience, but learning racket was still somewhat of a challenge at times. It's not a language used in the real world very often, so people often show frustration about learning it as opposed to python or java. Either way, the class will be fine as long as you stay on top of your work. Make sure to get a head start on the exercises, and go to office hours if you're stuck on any particular question. Prof. Bain only wants the best for his students so you should never be struggling if you utilize all the class resources. Prof. Bain is a very good teacher and explains things very clearly and without judgement.",
                    "188": "If you're coming in with AP CS, but need to take CS111 for the major, this class will feel easy to you. For McCormick students, take it in a quarter with EA and DTC.",
                    "189": "I enjoyed this course and it was helpful to learn the language",
                    "190": "This course was probably more difficult than it needed to be because it took me so long to get used to Dr. Racket. I do think the course is a good introduction to CS, but i can definitely see someone with no programming experience being overwhelmed from the ramp up in difficulty after the first few weeks.",
                    "191": "This is a pretty good course. Prof. Bain is great and clearly wants all his students to succeed. The weekly homework takes a while to complete but office hours are super helpful. DrRacket is useless language but it's taught well in this course.",
                    "192": "tldr: this class is relatively easy. getting an A is possible, but you need to put in the work. homework takes a long time. quiz 1 is pretty easy. quiz 2 is crazy crazy hard. quiz 3 is easy. quiz 4, i don't know because i dropped it and didn't have to take it. get an 100 on everything else, you just need to average an 83 on 3 quizzes to get an A.<br><br>more detailed: the key to succeeding in this class is making friends with people who understand CS and can help you with the exercises and studying. the material we learn in class is super easy and basic, but the actual homework is SO MUCH harder and more detailed. frankly, a lot of the stuff in the homework is stuff we never even learned but are expected to know just by extrapolating off of the very very basic concepts we learned in class. the first few homework assignments are super easy, but they get gradually harder. the quizzes are a little easier than the homework though, so that's nice at least.<br><br>the grading policy is SUPER generous because we can drop a lot of things, including your lowest quiz score. this was honestly amazing because i did well enough on the previous 3 to drop the last quiz, meaning I got to go home for winter break early and not have to come back for reading week or finals week. Also, to get an A in the class (assuming you have 100's on everything else, which is super easy because you get an 100 on everything, besides the homework, just for BEING there in class and participating), you just need to average an 83 on your three quizzes, which is pretty achievable. I had no experience and i struggled to do the homework, but i still was able to achieve this just by studying and reviewing the practice quizzes. <br><br>review on the professor: prof bain is super nice and you can tell he genuinely wants to help us learn. he also gives off dad energy because he tries to crack jokes and make class fun. all around, he's a super super nice guy, which is also reflected in his grading policy. that being said, his lectures are so much simpler than the assignments he assigns afterwards, and even after taking this class, i still don't REALLY know what's going on because the exercises were way too hard to figure out on my own. also, i wish he would use less CS lingo without explaining what it actually meant first, because it genuinely made me so confused in the beginning when he started by talking about things like \"special forms\" and \"rules of computation\" from the get–go and i had no idea what either of those things were. eventually, i learned through context but it was a little frustrating that i was expected to know these things from the start.<br><br>as your resident humanities kid, this was the first CS class i have ever taken. and honestly, it was pretty hard, but i did better than a lot of my actual CS major friends because Dr. Racket makes it so that everyone is pretty much on equal footing. overall, id say that prior CS experience is helpful for doing the homework, but it can actually make the quizzes harder because the quizzes are mostly debugging code. so if you're not a CS kid, make friends with people who are so that you can get help on the homework. <br><br>good luck, overall this class isn't too bad. also, you can trauma bond with your classmates. and you get a free rubber ducky from Prof Bain.",
                    "193": "Professor Bain is a great professor he spends time after lectures to go through any code questions or comments that you may have he wants you to understand how and why the code works rather than mindless editing things until you get an answer as that is not what makes a true computer scientist. Furthermore, the TAs that help fellow students are great and helpful at answering questions as well as guiding other students in the right direction regarding an assignment if they are truly lost.",
                    "194": "As a student who already has experience in programming I was surprised to see that I actually learned a lot by revisiting the basics of programming.",
                    "195": "It was pretty interesting",
                    "196": "I initially had a distaste for Racket but honestly there's nothing you can do to get around it. Just take the learning seriously (ahem especially for those who have already had prior experience) and take what you can from the class. I definitely learned some new concepts that I haven't been previously exposed to and I'm glad I kept an open mind for the class despite it being completely in the Racket language.",
                    "197": "Connor Bain is a great professor, he is able to explain things very well while keeping students engaged. HOWEVER, Racket is so annoying to code with. I've had a decent amount of experience prior to this class working with java, c++, and python, but Racket is just so weird... The amout of parentheses in this language is insane, and it should be called Parenthesis instead of Racket. I took this class because I wanted to see if I would like to pursue Computer Science as a major/minor, but Racket just destroyed all of my interest in coding. I will still code in the future for my personal enjoyment purposes, but I will never ever use Racket again in my life. I feel like I kind of wasted a quarter taking this class, but I learned that I definitely should not major/minor in Computer Science. <br><br>Again, Connor Bain is wonderful, and he made the class so much more bearable. It's not him, it's Racket. As long as you show up to class, do what you need to do for attendance and homework assignments, you will be fine :)",
                    "198": "The professor is very engaging during lectures. All the slides are provided on Canvas which is very helpful for studying, projects, and assignments.",
                    "199": "An ok course that teaches the fundamentals. The decision to use racket as the language is horrible, however. The system of mini–quizzes, quizzes, tutorials, and exercises is overall good, but the quizzes could be better if not done on canvas. The focus on type of functions in the quizzes is odd and they don't really test what you learned in class. Also, the idea of a 20 question quiz on canvas for 13% of the grade is odd – it would be much better if we could actually write and test code for the quizzes.",
                    "200": "Logic",
                    "201": "Professor Bain is amazing. He simplified computer programming into a few fundamental “rules of computation” that he reiterated throughout the quarter, even as we progressed to more complex programs. Although I was unfamiliar with Racket before this class, Professor Bain emphasized the concepts behind Racket’s design over its technicalities, which made picking up the new language easier.<br>In terms of workload, credit for most Mini–Quizzes and Tutorials was granted for simply being physically present during lectures. The Exercises were the most time–consuming assignments but could generally be completed in two–hour sittings. The Quizzes were very similar to practice Quizzes in terms of structure and content, and the emergency grade erasure policy (which drops the lowest Quiz grade) made exams much less stressful. <br>Professor Bain and the Peer Mentors were incredibly helpful through office hours and Ed, always willing to answer specific questions.",
                    "202": "Connor Bain is an amazing professor, and the methods he uses to teach students is very effective. Although I had prior coding experience, I still learned quite a few things. Overall, it is not a difficult class, and it is a very fun one.",
                    "203": "There is no assignment that is too difficult, just a lot of small assignments and lectures to make sure to keep track of. It's definitely helpful to take this class with a friend or two so you can work together. Definitely go to office hours if an assignment gets hard.",
                    "204": "If you have to take this class for your CS major, don't stress too much because it's not bad.",
                    "205": "I wasn't too excited about the prospect of re–learning programming in a language I've never heard before prior to taking the course but the class was way more rewarding than I thought.",
                    "206": "This course was fine. It was a relatively light course, though I didn't find it so enjoyable. Racket seems like a weird language to use for the class. It doesn't have a similar structure to other programming languages and the things we did were too simple and inconsequential. It was just a hassle.",
                    "207": "I really enjoyed this course.  I think that, for people with minimal programming knowledge, this class is a perfect starter course to gauge your interest in programming. The class, for that reason, can be a little slow at times, but ultimately makes up for it as you get a deeper level of knowledge in the end.",
                    "208": "I had no prior programming experience coming into this class but now I'm super interested in CS in general. It's very rewarding and not too challenging. Take this class!",
                    "209": "The class overall wasn't bad at all, as it's an intro CS class. The language that you use is something you'll probably never touch again and is a lot harder to grasp than some other languages such as Python or JavaScript. You can tell Connor Bain really likes teaching the class and is very helpful while doing so. He always has a great spirit and makes it fun to learn with funny memes in slides and creative examples of how to teach topics. I liked the environment but struggled with the material sometimes because of the langauge it was presented in. Pretty standard overall.",
                    "210": "I liked the structure of this course, as it was roughly the same each week (lectures, pre–recorded lectures, and exercises due on Friday). The course is taught well (I had Professor Bain). Racket is an interesting language, very different from Java which is what I am familiar with. Nevertheless, I enjoyed it!",
                    "211": "Well taught! I had no issues.",
                    "212": "I had a lot of prior experience with programming, both with AP CompSci and programming for FTC robotics. Because of this I only found recursion challenging, I would recommend going to office hours!!!  All the lectures are recorded so I only went to class like once a week.",
                    "213": "I hope that Northwestern can consider removing the requirement to take CS 111 if completion of higher–level courses has been demonstrated.",
                    "214": "Awesome intro course, time commitment was slight and the curve was great. Not sure about other profs but we got to drop several assignments throughout the course which def came in clutch lol.",
                    "215": "This class offers a delightful and straightforward experience with a manageable workload. The course is designed with high flexibility, featuring numerous assessments that can be dropped and extensions for added convenience. I highly recommend taking this course, even if it's not within your major.<br><br>The exams primarily focus on basic knowledge, such as data type identification, code refinement, and dry running. Only dedicating a few hours of study outside of class should suffice. When it comes to homework, attending office hours is advisable as it can significantly ease the completion process.",
                    "216": "This course was incredibly challenging for me as I never programmed before. However, I think it was quite an interesting introduction to coding.",
                    "217": "It is harder than I thought–it's much more conceptual than usual programming as the class runs on racket",
                    "218": "Prof. Bain does a great job of teaching and providing help in office hours. The quizzes are definitely the hardest part and I wish there was more practice for them but overall the course is well taught, if decently difficult.",
                    "219": "Professor Bain is a really good lecturer and his grading schemes were designed to help students succeed. His quizzes weren't too horrible, and you're allowed to drop one of the four. I will say that the last one (which you take during finals week) was cumulative and trickier than the rest. But you can drop it if you do better on the other three. Take this class with a friend if possible. You need to get perfect scores on the exercises (which take quite some time in office hours) in order to balance out mediocre quiz grades. Attend all mini–quiz lectures and tutorial lectures. His practice quizzes are very similar to the real ones. Quizzes are very short (15 questions, 50 minute time limit), so no need to panic about running out of time. Overall, Dr. Bain is a great professor but Racket sucks and you'll never use it after this class. ALSO you can't drop the last tutorial/exercise, so make sure you know that!",
                    "220": "Connor Bain 4 life",
                    "221": "This class is about Racket, which is a pretty confusing language. The professor is awesome, easy A",
                    "222": "Before discussing the class in general, I want to highlight Professor Bain's outstandingness. He is, by far, the best professor I have ever had, making me fortunate to have him during my Freshman year of pursuing Computer Science. He is very enthusiastic about coding and is good at explaining concepts that one might find challenging more straightforwardly and comprehensibly. Not only that, he cares a lot about his students, which can be shown in his readiness to answer students' questions ranging from coding to recommended classes and how to improve one's coding skills. I love his grading system, especially as he acknowledges emergencies and drops the lowest grades in different grading sectors. Staying after class for office hours was my favorite since I could learn many more things. Professor Bain is engaging with ensuring class participation during lectures despite the large number of students he has. Although Racket was an \"interesting\" programming language to code in, I'm glad I took this class with Professor Bain.",
                    "223": "A lot of focus on functional programing, more on the fundamentals and theory of programming, and how one should think about computer science.",
                    "224": "This class was definitely not easy. Racket was hard to grasp. However, the emergency grade erasure policy was good. If you do well on the first three quizzes, you don't need to go to the fourth quiz. Overall, an A is quite achievable.",
                    "225": "nothing in this class was interesting",
                    "226": "CS 111 seemed like it would be a fairly easily class, but it was actually one of my most difficult ones. Even though Prof Bain is passionate about the class, it was hard to learn because there weren't resources to check my understanding. There were never answer keys for homework programs or tutorials which would have really helped me to review and learn the program better.",
                    "227": "Apart from using Racket, the class is very easy to swallow and digest in terms of content.",
                    "228": "Great class! Learned a lot, Connor is wonderful and so are all of the PMs and TAs, I know most people take this for a major/minor but it might even be good as a distro! It's really fun!",
                    "229": "This course was awesome!!! I genuinely looked forward to this class and the homework exercise every week.  Functional programming is different, but once you get the handle of it, it is so fun!",
                    "230": "Overall a good course. Connor Bain is my best professor. He wants you to actually learn and does his best to make sure anyone succeeds. Do not fear this class. It can be rough at times if you have not coded before, although I had no prior coding experience and I will get an A. Go to lectures and pay attention. Start the homework earlier. No final exam, 4 quizzes throughout quarter, lowest one dropped.  Weekly coding assignments with lowest one dropped. Very reasonable quizzes, just do practice test and you'll be fine if you do the homework and all tutorials. Overall good class, Bain is the goat!",
                    "231": "Racket is not a conventional programming language so if you have previous knowledge that honestly might make it tougher to code in racket. Professor Bain is a very good professor",
                    "232": "Overall, this course is not very difficult to manage and is relatively simple and low–stress. The only complaint I would have is that racket can be a difficult language to comprehend and get used to, especially if you have prior programming experience with a language like java. However, Professor Bain is a very good professor and teaches the course well. In particular, pay extra attention to the lectures and the slides for them, as they are useful for learning and reviewing the content, especially for the quizzes. The assignments are relatively simple and you are provided plenty of time to complete them.",
                    "233": "It's a good class! If you have prior programming experience, it should be pretty intuitive, if you don't, there is tons of support available! I found the teaching style and course setup easy to understand and conducive to learning. Connor Bain is a delightful human being who tries his absolute darndest to get everyone in the class engaged.",
                    "234": "I really liked the amount of coding there was. In a lot of my prior CS classes there was way more talking and not enough coding.",
                    "235": "The structure of the course provided a good balance between current and new material. The quiz system was never too overwhelming and it felt very fair to the students with both the ability to drop a quiz and having a consistent quiz template. The course also worked well in having material build off of each other which helped  everything make sense together collectively. Connor Bain is a very dynamic and engaging professor that kept coding as interesting as it could be. He was very friendly and always willing to help.",
                    "236": "I had a really fun time in this course; it ended up being my favorite course this quarter. Prof. Bain always had a lot of energy, and seeing myself concretely learn a new skill was super cool. As long as you feel comfortable asking for help, you'll be fine, with a pretty easy high grade.",
                    "237": "Class is not too hard if you are following along and don't slack off. Racket is a horrible language and everyone knows this, but you can't avoid taking this class because it's the foundational requirement for all CS classes. Overall format of the class is easy with attendance guaranteeing you 100% in tutorials and mini quizzes. Midterms are harder in this class than in 110. If you purely need an intro CS requirement, CS 110 is easier so take that instead.",
                    "238": "You learn Racket. It sucks. It makes no sense. The parenthesis will make you lose your mind. Professor Bain though is the nicest professor on the planet. He is always there to make the lectures entertaining and is easy to approach and ask for help. He makes an effort to get to know each student and he is the reason I enjoyed this course. Even if I hated Racket, I feel like taking this course is worth it since I got to be taught by Professor Bain. The Peer Mentors and TAs were also really helpful and there were so many office hours so you could always go ask for help at any moment. I also liked that we had 4 quizzes with a drop the lowest policy instead of midterms and a final. If you go to class and put a minimal kind of effort, it is not hard to go well in this class.",
                    "239": "Really enjoyed the content of the course. Not difficult if you pay attention to the slides and follow the assignment instructions carefully (there are a lot of hints). Prof. Bain is great, definitely participate in class and you'll have fun!",
                    "240": "I really enjoyed this course. The teacher Connor was super engaging and was extremely helpful in office hours. As someone with not a lot of programming experience, I can say I walked out this course more knowledgeable then when I started.",
                    "241": "Overall, I enjoyed this course mostly because Professor Connor Bain was very enthusiastic and passionate about the subject. I like computer science, however I didn't like the syntax of Racket (the language that we used). I thought Professor Bain did a great job of explaining basic concepts of programming that will be helpful in future classes, although I feel like it would be more helpful if we used a more intuitive language like Python.",
                    "242": "Professor Bain is a great professor and you can tell he puts a ton of effort in his slides. Easy class and take it if you have any further interest in CS over 110 since if you decide to take more classes only this one counts as a prereq for higher CS courses.",
                    "243": "Having taken AP CSA two years ago and having already a basic background in coding, this class wasn't anything particularly new and exciting for me. However, I did really like how well–structured the class is, and I appreciate how Prof. Bain tries his best to be engaging during lectures.",
                    "244": "The course started off relatively easy (individual with no prior programming experience) however it picks up rather quickly. I highly recommend especially if you do not have prior programming experience to go above and beyond the work assigned otherwise you will struggle.",
                    "245": "This course being taught in Racket was quite jarring to begin with but then after I got used to the syntax it was pretty easy. The course never really reaches anything difficult just covers the bare basics of programming.",
                    "246": "Racket is bad but you have to take this. womp womp.",
                    "247": "This was surprisingly challenging but in a good way.",
                    "248": "The course was not so challenging as 60% of your grade is homework assignments and participation; however, as someone who has never coded before, the assignments and exams were challenging. I often had to go to office hours to get help on the homework and to study for the quizzes. We also get a lot of practice coding, which is both interesting and useful, but our exams are so different to what we do in class that I feel there is no parallel and help in preparing us for the exams.",
                    "249": "I think this was a good course to take and Professor Bain was very good at explaining the concepts, and I would recommend taking this class with this professor.",
                    "250": "This course is not too difficult. Many homework assignments are dropped at the end. Make sure to go to your ethics module session and keep on track with assignments.",
                    "251": "As someone who's never taken CS before, I absolutely loved this course. Professor Bain is an interesting lecturer and is extremely helpful, responding very fast to questions on Edstem. The homeworks are challenging enough that they're manageable and don't take an extreme amount of time, but challenge you appropriately and make sure you understand the material. There are a lot of TAs and office hours available if you need help. The class is also structured so that there are weekly tutorials during one lecture session, which is super helpful because you get to practice lecture material with TA's present. Overall this is a must take with Bain.",
                    "252": "Racket is a bit annoying at first, but the class is not too hard overall.",
                    "253": "Although I've never taken a CS class before, I somehow expected the course to be easy as it's an intro course. However, although it is a 100–level class, the course is definitely not easy or an easy A without any CS or engineering experience. The course itself is well–structured, with live lectures, pre–recorded lectures, mini–quizzes, and exercises. All assignments have very clear instructions, and there are many office hours available for students to attend. If you're only considering CS as a minor or want to start at a beginner level, taking CS 110 to learn Python may be a better option. However, if you're considering CS as a major and want to explore it, you have no choice but to take this, and this will teach you a lot too. I found that each person feels a different level of difficulty in this course, based on their past experiences and their intuition with computer programming.",
                    "254": "Easy course to teach the fundamentals of comp sci",
                    "255": "I really enjoyed this course. The professor is super animated and explains the material well. Exercises each work involved applying the skills you learned in class and problem solving which I liked.",
                    "256": "I liked the way the class was structured with mondays wednesdays and fridays being different every. I liked the assignments. Tests were structured well",
                    "257": "While Professor Bain is an excellent teacher, I didn't feel like I learned much of anything in this class. I had a strong background in CS before taking this class and was forced to take it in order to take higher level CS courses.  If you have any kind of background in CS, DO YOU BEST TO TRY TO PLACE OUT OF THIS CLASS unless you want an easy A and some spare time to do homework during lectures.",
                    "258": "This course is generally pretty solid and Prof Bain is a good teacher. He does assign a lot of busy work (videos to watch, etc.) for homework but he's pretty generous with grading and it is not a hard class to do well in. The content can be pretty confusing at times however and there are some difficult topics.  Taking a couple of high school CS classes probably made this harder too as the language used for teaching (Racket) can be very confusing and is different from any other language.",
                    "259": "Prof. Bain is a very great and enthusiastic teacher. He clearly has a ton of passion for the subject and class, and I thought that the lectures were somewhat fun, albeit often boring at times. This is a good class if you want to learn some general skills for computer science, but the language Racket is very unhelpful compared to other more popular languages. Some of the quizzes also are a lot harder than the practice, but you get to drop your lowest one which is nice.",
                    "260": "This course was quite enjoyable. Whether you are a CS pro or this is your first exposure to the subject, I can almost guarantee that you won’t have a bad time. Time in their course likely will depend on what you want to get out of it. You could probably get away with skipping classes, but attending class won’t feel like a waste of time. Prof. Bain is always entertaining and lectures feel informative. Quizzes are generally easy, but some assignments might have a few challenging questions depending on your comfort with the material.",
                    "261": "Absolutely loved taking this course with Prof. Bain. His lectures are very engaging and many different ways to get help are offered. I also really appreciated that we had a few days to work on our codes and didn't have to finish them in one sitting. Would recommend this to anyone."
                },
                "school_demographics": {
                    "Weinberg": 143,
                    "McCormick": 207,
                    "Medill": 3,
                    "Comm": 7,
                    "SESP": 6,
                    "Bienen": 4
                },
                "class_demographics": {
                    "Freshmen": 281,
                    "Sophomores": 65,
                    "Juniors": 14,
                    "Seniors": 6
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.63,
                    "student_count": 121
                },
                "student_opinions": {
                    "0": "I come from a CS background (APCSA, APCSP, OOD classes, etc), and while everyone loves to diss Racket, it really isn't that bad. Sure, it's different from what we're all used to, and yes, at times it's inconvenient, but that's really all it is. This class is great. Even if you already know how to code, if you haven't learned functional coding, you're going to learn a lot. One thing I was annoyed with was the fact that all of our lectures were online, but we were still required to be in class for at least the first half of the quarter. While this later changed when Professor Sood realized that people were getting around the attendance form anyway, oftentimes, I found myself more stressed about making it to a class where I was doing work I could entirely do on my own time than I really should have been. While I do like to go to class because I have friends there and it gets me going in the morning, it was a great improvement to not have to go to class if I really really didn't want to. Overall, this is a pretty easy class if you have CS experience. If not, there's definitely a learning curve, but everyone is so so helpful and wants to see you succeed.",
                    "1": "Sara is a wonderful professor and truly cares about all of her students. She's just a lovely person. She is so intelligent and knowledgeable, and she knows how to break down intro CS so that it makes sense. The assignments in this class are not too difficult and the language is not nearly as bad as everybody says it is. There are TONS of office hours, so it's hard to fall too far behind. Overall, very good class, highly recommend to anyone looking to get a taste of what CS is like.",
                    "2": "Definitely an interesting way to learn CS. The flipped model seems nice in theory but it is very hard to fall behind so make sure you don't. Exercises are the same weight as both the midterms so make sure you are getting a 100 on every one and you'll be fine",
                    "3": "CS 111 is a great class in that it doesn't really matter your level of programming or computer science experience, everyone is able to learn something new about programming and CS in taking the course. Professor Sara does a really good job of pacing the class in a way that makes topics easily digestable even as they build on one another. The workload is extremely manageable and spaced out well so that you're never feeling rushed. There isn't a lot of homework besides weekly exercises to complete and videos to watch to better familiarize yourself with concepts further discussed in lecture. Do these to the best of your ability and you'll be successful.",
                    "4": "My reaction was something like...<br> :normal_face_emoji –&gt; :mild_interest_emoji –&gt; :shocked_emoji –&gt; :smiling_emoji + :heart_emoji",
                    "5": "Very easy class for anyone with APCS experience, although you will learn new things. Racket is not as horrible of a language as people say! Professor Sood is an incredibly kind and understanding professor who runs a very well–organized and effective class, and the PM system is very helpful. The projects are complicated, but if you go to class you will receive a LOT of guidance and help.  The exams are also very straightforward – just make sure you know how to read other people's code.",
                    "6": "I'm still not sure how much racket I would use in the future, but it is definitely doable as your first programming class.",
                    "7": "DrRacket, completely new language but not bad, ethics section of computer science not completely needed",
                    "8": "This course has made me pursue computer science further. Excellent professor, great class structure, very understandable. Even just for a distro or general elective, I highly recommend this class.",
                    "9": "I know, I know, there's a lot of controversy about Racket. It was annoying at first since it was not as \"neat\" as Python and C or any other language. But as time goes by, I really started to appreciate how clean this language can be. <br><br>Aside from the language, the content is pretty useful in terms of giving an intro to programming I guess. Exams are pretty fair. One note though, for some reason attendance is mandatory, yet most content is delivered through videos and handouts. This makes attendance very much unnecessary to learn the content and apply them in useful ways. Besides from that, overall a pretty decent course.",
                    "10": "I would highly recommend this class with this professor! She is awesome!! The class is not too difficult if you watch all of the lectures and do the practice problems. I don't like CS that much, so I really mean it when I recommend CS 111.",
                    "11": "I really enjoyed the course. The concepts were interesting and while simple, I really felt I got the fundamentals of programming and could understand conceptually why code worked.",
                    "12": "This class is pretty good for learning the fundamentals of computer programming. It uses a language called DrRacket which isn't too popular. It takes a little bit to get used to it but after a little bit you understand how it connects the different approaches to programming. The teacher is great; she wants us to learn and really internalize how computer science can be used for relevant situations.",
                    "13": "Having already had two years of programming experience in high school, this course was pretty straightforward. However, it did take a little bit for me to adjust to programming in Racket, which isn't exactly bad, but it just involved a different way of thinking. I was used to Java and Python, so Racket seemed slightly backwards at first. <br>Prof. Owsley ran the course as a flipped classroom, so we worked on exercises in class and watched lecture videos for homework. While I was initially skeptical of this method, I actually did come to appreciate this format.  Prof. Owsley and the PMs were very helpful and approachable, so I would definitely recommend this course with her if you need to take it!",
                    "14": "The course highly impacted my approach to and understanding of programming. The most crucial takeaway for me was the dual emphasis on design and reasoning—understanding that being able to diagnose and debug, akin to a detective or doctor for code, is as vital as crafting code that is comprehensible for both oneself and others. This course has not only equipped me with technical skills but also instilled in me a deep appreciation for the nuances of programming, making it a uniquely enriching educational experience.",
                    "15": "I really enjoyed learning the trees, recursion, and binary searches as I felt like I was significantly better at optimization and programming intelligent blocks of code.",
                    "16": "Sara is great. She doesn’t drop any HW assignments though. The tests are not bad, just study practice exams and do work in Dr. Racket.",
                    "17": "Racket is not the most fun or interesting language to use but you do learn good fundamentals.",
                    "18": "Sood is the best and loves what she does.",
                    "19": "Prof Sara is very helpful and personable! The class is taught with asynchronous lectures, then class time is used for review/questions/activities/independent work on assignments. Office hours are plentiful. Two midterm exams in class, 20% each, 8 assignments (One every week pretty much), very small virtual quizzes that you complete after each lecture. I thought the discussion (There is 1) and reflections (2) were not very useful for a very introductory comp sci class, but I still recommend. You will need to get used to asking for help.",
                    "20": "I really liked the professor, she was so kind and willing to make the class easier. That being said, although I liked the work time in class, the flipped classroom style made it so hard to actually learn, because you're just being forced to watch a video and take a super easy Canvas quiz that's basically common sense. Note: attendance is taken.",
                    "21": "The pre recorded lectures made it very convenient to refer back to topics when students became rusty.",
                    "22": "Professor Sood is great! She answers all your questions very well and her explanations during class are very clear. The great thing about the class is that there are a LOT of peer mentors, and if you ever need help with an assignment, there is likely a zoom open at that very open; if not, you can also ask questions through an online website and someone will respond quickly. Racket (the language you'll learn) definitely takes a while to get adjusted to if you have coding experience, but is not as overwhelming as some make it to be. Take note that this class has a flipped classroom, so you end up watching videos and taking mini quizzes before each class to learn the topic for that day.",
                    "23": "Personally, I did not like this class at all. As a beginner in CS, intending to minor, I completely changed my mind and it took any interest I had in coding away. The professor makes an effort, but is not really effective as the professor fails to keep a stable pace and runs through concepts all the time. The lectures are recorded and class time is a time to practice, but this is not engaging especially for beginners that do not know how to code initially.",
                    "24": "I loved this class! Sood is amazing and so helpful, definitely attend her office hours, and the overall structure of the course was really nice with watching lecture videos ahead of time and working on homeworks and assignments during lecture with the help of peer mentors if you need it. Otherwise, lectures often function as a study hall to do the work for the week. The coursework is managable and the assignments make sense. Watching the lectures really prepare you for the assignments, and I think that even though racket is a little obscure, it was really helpful to teach the basics of coding and syntax.",
                    "25": "I like how Professor Sood had us watch lecture videos outside of class and then work on exercises in class. Good class, Sood is very good professor.",
                    "26": "This course was mainly focused around functional program, and the course was shifted towards OOP later in the course. Professor Sood is great at explaining concepts and she even does homework problems in class so that students can get a head start. Class time is also dedicated to practice, whereas lectures are supposed to be watched before class (Generally, they don't take the whole 50 minutes). Thus, learning outside of the classroom and applying skills in class was very helpful for me. The first exam was quite straightforward as well. The only thing I would say is that the cutoff for an A is 94, and there is no curve in the class. However, Professor Sood makes this very attainable if you put in a bit of effort.",
                    "27": "Only took this class because it is required for my degree. If you are a student that has coded before, you will find that although, yes, fundamental programming is different than other programming types, you could cram the material in less than a week. Prof. Sood is very unsuccessful at maintaining your interest and attention in the class, and is stubborn about class attendance being beneficial although it really isn't that valuable. That being said, this class is just an annoying requirement.",
                    "28": "Office hours were extremely helpful but often necessary as well.",
                    "29": "Pretty cool class, not too hard, not too much work, pretty straightforward. Professor Sara is a great.",
                    "30": "Very chill class. Take as an easy distro or in a harder quarter",
                    "31": "Very good",
                    "32": "I thought this class would be a very easy A because that is what everyone said, but it is definitely not. You do need to put a good amount of time into the exercises and learning how to code in this language. You are kind of just learning from the videos she posts, and there is not much learning during the lectures themselves.",
                    "33": "I took this course to fulfill a Psych requirement and I honestly probably could have chosen a better class. While I did find learning how to code a fun challenge, the teaching style was not conducive to long–term success. The professor had us watch pre–recorded lectures for homework and then spent most of in–class time having us work on practice problems instead of actually teaching the content, which was even more frustrating considering that attendance was a part of our grade but going to class did not feel worth it. I would have enjoyed class significantly more if lecture time was actually spent with the professor teaching the content rather than having us work on practice sets because, as research shows, learning from recordings is not conducive to long–term knowledge and success. I know this class is a requirement for Computer Science majors so it is unavoidable and, granted, the content was interesting (!) so it's really not a bad class, it's just the teaching style that really made this class not feel worth it to me.",
                    "34": "CS 111 is one of those classes that every CS major dreads taking and with reason too.  Dr. Racket is just a pain to learn and code in but I think it gets better after recursion. I did not really enjoy the reverse classroom lecture style that Prof Sood uses, but she answered a lot of questions in class as well. The TAs are super helpful in this class and will try to help you with any problem you have with your code! Go to office hours!",
                    "35": "Took the course because it's a requirement for the CS major. I'm sure the concepts we learned in the class will be helpful throughout all of the future cs classes, having said that, I'm excited to be done with Racket, the programming language the class is taught in, because it's not very relevant outside of the class. The flipped method, while perhaps helpful for some people, wasn't my favorite approach to studying. It was nice to have the study materials to study by yourself, but I would loved it if prof. Sood went over problems during the lectures instead of letting us go through problems by ourselves and answering any questions we have. Though I realize this is just a preference thing. Prof. Sood is super nice and helpful. Attendance is required, and homework is 40% of your grade while two (non–cumulative) midterms are another 40%. Overall, I'd say if you can skip the class with high school credit, do it. Otherwise, the class is okay and if you want to major in CS, you have to take it.",
                    "36": "This class really isn't as bad as people make it sound. Sara is an awesome teacher and she really wants to see people succeed.",
                    "37": "Not incredibly difficult and at a fairly easy pace, but Racket sucks.",
                    "38": "Racket sucks. It doesn't make sense and you basically have to force it into your brain.",
                    "39": "Personally, I disliked the format of how this class is taught. It is a flipped classroom where you learn the content on your own and work on exercises in class. If this works for you, then you will like the class but I would have liked more in class instruction. I often wondered what the point of even going to class was when 90% of the time was spent working alone.",
                    "40": "Content is not too difficult to understand, and the pace is great. Exams were not bad at all. Make sure to do practice exams, and you should be good.",
                    "41": "The course is only hard if you let work pile up. The class does get tiring at times",
                    "42": "I loved the flipped–classroom style of the class. The video explanations of each topic were clear and helpful, and the class time was always nice because you could ask for help from the professor or TAs while completing exercise assignments.",
                    "43": "pretty good pace",
                    "44": "I really liked this class. I honestly did not find racket to be too bad to use (contrary to what i had read about it from others). The assignments definitely helped me learn the concepts and I felt like the exams were very fair. Sara was great, super accommodating, nice and helpful! Definitely take this class with her!",
                    "45": "Though Racket may seem to be a language that will have few applications later in a career, the general content and skills that are taught in CS111 are extremely valuable and will continue to be useful throughout a career. Professor Owsley is a fantastic professor and makes the content approachable and understandable for students of all levels.",
                    "46": "I found the \"flipped classroom method\" very conducive to my learning. Professor Sood is an amazing instructor. I have gone from never coding before to considering a CS minor. The TAs were very helpful, but I wish that there were more office hours in person instead of over Zoom.",
                    "47": "This is a great class. Take it with Owsley if you can. Not too hard",
                    "48": "It wasn't as bad as I thought, but I didn't love the structure of the class. We would have to watch videos outside of class and then when we went to class she just let us work on stuff, so it kinda felt pointless to go, but it was mandatory attendance.",
                    "49": "For people who have been coding for a bit, this class is a pretty easy A. For everyone else, this class introduces a lot of content about programming both conceptual and applicable. There are 9 coding \"projects\" plus an extra credit alongside 2 midterms. My best advice is to not treat this class like a standard class where you just study last second and do good on the midterms. I strong encourage you mess around with Racket(the coding language used in the class) a lot and practice coding random things. This is a flipped classroom, so you watch the professor's videos before coming to class and you do practice problems in class. I encourage you to always try to finish the practice problems and go to office hours to understand concepts! Don't be discouraged if you don't get it at first, it just takes practice :)",
                    "50": "As someone who had little comp sci background before this class, I feel like I learned a lot about computer programming. If you need homework help go to office hours. Exams are much easier than the homeworks.",
                    "51": "jkb;djvn;jdvn",
                    "52": "This course was very well taught. Sara is a great professor and the set up of the class: watch lecture videos at home and practice in class, was very useful",
                    "53": "I just wanted a taste of the computer science world. As a complete newbie, I was fascinated by how all of the simple concepts gradually became more complex. Some concepts, such as recursion and iterative recursion, were much more challenging than others. However, with enough dedication and perseverance, I was able to overcome the obstacles and delve deeper into computer science.",
                    "54": "It was a bit hard learning a new coding language, but overall Professor Sood and the peer mentors were great in answering any questions I had",
                    "55": "this course was mid",
                    "56": "I took this course because I wasn't sure if I wanted to minor in CS, but Racket was a great way to learn everything.",
                    "57": "Many people don't like Racket, and it does teach programming in a non–traditional way. I think it is valuable, as it forces you to be able to break down a problem in many different types of ways, and even if its not the style one would use every single day, it is still helpful to have in like your toolbox.",
                    "58": "good course, ask questions and go to OH, midterms are a slice of cake if you keep up with the assignments and set aside time to understand why things work",
                    "59": "As someone who already had experience in programming, it was not an easy class. Did not learn much since all lectures had to be watched outside of class. If you forgot or didn’t watch the lecture in advance, going to class would be a complete waste of time. The class was just manageable enough, as someone with prior programming knowledge, to not watch the lectures and do well on the exam/assignments, so didn’t really learn any content.",
                    "60": "This course is an easy A, especially if you have even the slightest background in CS. Professor Sood is amazing, and I would definitely recommend taking it with her. The department doesn't let you skip it if you have no experience in functional programming, which is not ideal, but it's an easy class.",
                    "61": "It was well taught and organized",
                    "62": "Professor Sood, OH MY GOD, I can't emphasize enough how much she helped me to fall in love with programming. She created a safe space in class for new programmers like me. The teaching style of this class is well–organized. The exams are alright, as long as you stay attentive in class and understand all of the weekly exercises.",
                    "63": "Really good intro level course",
                    "64": "good class, very easy if you have taken CS before",
                    "65": "I took this course as an introductory computer science class that I was interested. Not much to say other than that I won't be taking another comp sci class at this school again. I value in–person lectures and this class did not have any of that since it operated on a \"flipped classroom\" setting. You would do all of the lectures outside of class and would just sit in the auditorium during class time doing whatever you thought you needed to do. The assignments were tedious and not very interesting and the ethics module was a waste of time. It felt forced and did not really augment the class content in a good way. Overall, pretty boring, time–consuming, and just bad class. The teaching was subpar as well.",
                    "66": "It was bit hard, as I really had no background experience in coding. Office hours were a huge help.",
                    "67": "The lectures were all outside of class and classtime was mainly spent working on homework. If you have any coding experience, going to class was pretty pointless except there was mandatory attendance. Overall I was not a fan of the setup of the class as I felt the class time was largely wasted, Prof. Sood is nice and is usually enthusiastic about the material, and there are lots of ways to get help if you are struggling.",
                    "68": "The class lectures were fine, the assignments generally weren’t too difficult and the exams weren’t the end of the world. All in all it wasn’t too much work, especially compared to what a CS course could be",
                    "69": "Great class, easy A.",
                    "70": "I found COMP_SCI 111 to be an interesting and manageable class. The class was conducted in a \"flipped\" format, which meant we watched videos on the content outside of class and worked on tutorials, exercises, or exam practice during lecture. Prof. Sood was very supportive of our learning. During lecture, she would walk us through parts of the exercises we were doing and give clear explanations of concepts. For instance, she used a pack of gum to give us a simple explanation of recursion (and gave us this explanation again quite a few more times). The Peer Mentors (there were a lot of them!) and TA were also supportive and helpful. For me, the only main downside to this class is that it's taught in Racket, which is a teaching language that's pretty much only used at Northwestern. Although it was fun to code with Racket, the class didn't give me immediately applicable information about how to code in \"the real world.\" If you're only going to take one compsci class at Northwestern, you might consider taking one that teaches a more commonly used language (for example, COMP_SCI 110 teaches Python).",
                    "71": "I think this course helped me realize that I might enjoy programming if I took another route such as Data Science",
                    "72": "This course was not terribly challenging, but I did run into some tricky moments and some of the exercises will pretty much require you to attend office hours. The professor was great and made the course very approachable. Don't be afraid to seek out help and this course is super manageable.",
                    "73": "The professor is amazing and really helps the students work together in class and makes sure that everyone really understands the material!! Such a great class!",
                    "74": "This course was alright. As an introduction to programming class, it wasn't very difficult. The class teaches the two main different paradigms of coding, functional and imperative, through a language called Racket. Nobody in the class has experience with the language, so it is meant to be a normalizing factor as so many people come from different backgrounds in coding. Overall though, I would recommend taking this class instead of 110 if you really want a deep knowledge of coding, because Racket really teaches you the basics of programming in general rather than a specific language.",
                    "75": "more or less what i expected, which we had more guidance on the hw assignments other than office hours but most of them were manageable. teacher didnt really do much other than the videos she posted.",
                    "76": "As an \"intro\" computer science course, it does its job well. You learn the basics very in–depth with slides and explanations for what procedures and functions do. Prof. Sood (Owsley) was great, you can tell she cares about her students. The only real complaints are with the structure of the class and Racket itself. Class is structured backward: you watch video lectures before class to learn the content and then take a mini–quiz (easy quizzes, act as a grade booster) to prove you did so. And then in class, you work on the weekly exercises or specific assignments covering the topic of that day. While it's nice to have in–class time to do work, motivation to watch the videos before lecture is lacking. There's 1 homework exercise due every week which isn't too bad, especially if you use your resources (peer mentors, office hours, etc.), they shouldn't take more than a few hours and a lot of that you can do in class. Finally, Racket is obviously not a language you're really going to use in the future whatsoever, so while its basic structure is good for learning computer science fundamentals, it gets tedious and honestly annoying that you'll never use it again.",
                    "77": "The course is set up for you to succeed. Tons of available help, lecture videos, etc. Tests aren't difficult at all.",
                    "78": "I really enjoyed this course! It was very fairly graded and well–taught.",
                    "79": "The exam format was really good, the videos were really helpful, and class time was productive in helping me learn. Overall really great course.",
                    "80": "Overall, this course was fine. The exercises are manageable and the exams aren't very hard, but coding in DrRacket is a very frustrating task as the syntax is unlike a lot of other languages. Racket is also not used regularly outside of Northwestern so this course felt kind of useless.",
                    "81": "There were a lot of pretty difficult homework but as long as you do them and you have the TAs check it over you will do very well in the course.",
                    "82": "Pretty manageable course, not very difficult especially if you have prior programming experience. Although racket can be a bit strange to pick up, the class itself is nothing too hard.",
                    "83": "At first I didn’t like the fact that we had to watch a lot videos of Sara explaing topics outside of class was. Thoygh I learned that by watching the videos of the concepts before class, I and everybody were able to spend the time we would take doing the exercise during the week outside of class in class. With so many ta(s)  and a great professor, this made allowed for us to quickly finish the ecerises due that week.",
                    "84": "I took this class because I wanted to know if I liked computer science, and the course has made me realize it is something I want to pursue. I feel like the projects are interesting and stimulate your interest while still demonstrating the difficulty level of a computer science class."
                },
                "school_demographics": {
                    "Weinberg": 63,
                    "McCormick": 42,
                    "Medill": 5,
                    "Comm": 5,
                    "SESP": 1,
                    "Bienen": 4
                },
                "class_demographics": {
                    "Freshmen": 92,
                    "Sophomores": 17,
                    "Juniors": 8,
                    "Seniors": 2
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 5.08,
                    "student_count": 85
                },
                "student_opinions": {
                    "0": "If you can, take the course with Professor Sara Soods.  She is engaging, helpful, and very genuine. She cares about students' learning. The way she explains topics as well is so clear. When in the class, I also like that she checks in with students during the lecture. When it comes to racket, most people hate it, but I honestly love it. I would say, go into it with an open mind. Racket is very amazing coding language and it's quite frankly very powerful. It is also a good language in terms of learning because in its syntax is very descriptive of what is actually happening. For example, defining a variable and setting a variable are not the same things. It will also be explicit in other ways that are really helpful when learning computer science not just a coding language.",
                    "1": "I learned a lot, its not a very hard course but you do have to put in the work. Prof Sood is great at explaining concepts and is also a very nice person. Homework exercises are not overly difficult but you do have to think a bit. The course is well organized and designed so that you don't fall behind on lectures.",
                    "2": "It's an asynchronous type class, where you watch videos outside of class and do work during. Going to class isn't really necessary if you have prior experience with computer science. The class is taught in racket which is kind of annoying, but it's an intro class you have to take and its not the end of the world. Overall easy tests and assignments are pretty simple too.",
                    "3": "Professor Sara is an amazing instructor. I highly recommend anyone who is looking forward to major in computer science to take this course with Sara Sood. She really understands the struggles that students may face and she tries to relieve all anxiety. Whether you feel like you're not ready to take an exam when it's time for it,  go to office hours and you feel confident because she provides any kind of support you need to succeed.",
                    "4": "This class was not bad at all. Weekly assignments that are mostly easy to complete. TA's were very helpful. Only 2 exams which were pretty easy to prepare for.",
                    "5": "It was a great course! Only two midterms, no final exam. Weekly homework assignments due Fridays and very short quizzes due before class nearly everyday. Lots of opportunities for help and Sara is very helpful and understanding!",
                    "6": "Although there were certain challenging elements such as specific topics and simply taking the exams overall, the professor did a great job of offering help and support through the use of student helpers and their office hours scheduled nearly every day",
                    "7": "If you have programming experience, this class is pretty easy.",
                    "8": "This course was a great introduction to the fundamentals of computer programming, including syntax, basic algorithms, and recursion. Although Racket is definitely not intro–user friendly, if you had some programming experience this class was easily a 3 hour commitment a week.",
                    "9": "Sara is very organized and made the class easy to follow. She’s also very compassionate and helpful.",
                    "10": "This course was very easy. The professor uses a flipped–class format, with videos to watch as homework and work time during class. None of the homework assignments were particularly challenging, and the exams are straightforward and require very little memorization.",
                    "11": ".",
                    "12": "Great intro to cs course. Grade is mainly based on 2 exams and weekly exercise homeworks. If you stay on top of your assignments this class is very interesting and not difficult.",
                    "13": "CS 111 with Professor Owsley was great. It is a super easy class and I spent very little time on homework for this class. It is a bit tedious doing the modules every week before class, but it's always just a video and an online quiz which were pretty straightforward. We had two midterms for this class and no final which was very nice, and the midterms were also super easy as long as you do the modules and spend time actually understanding the hw assignments. Even though Racket will serve no use to me and most people that take the class, it's a good class to take for a grade booster or just to start learning some programming language.",
                    "14": "–",
                    "15": "Sarah Sood is a great professor. She is very understanding and wants to help her students learn.<br>She often did the weekly homeworks in class so you could get most of it done in class time and finish the rest in your free time or ask TAs for help.<br>There are pre–recorded lectures and mini–quizzes to watch before every lecture but they don't take long, and the miniquizzes are easy with 2–3 questions.",
                    "16": "a good intro class to programming. I went in with no coding experience and was totally fine. It might have even been better to come in not knowing anything about other languages because I didn't know enough to be able to complain about drracket (which isn't the most efficient programming language). two exams were reasonable and not tricky, and as long as you complete the work and keep up with the assigned videos should be easy.",
                    "17": "Sara is one of the most friendly professors and this class offers an abundance of resources to help you succeed. As someone with only a little bit of coding experience, I felt like this class was a good level of challenging &amp; helped me learn a lot but not feel overwhelmed at all. You can watch the tutorial videos before class at your own pace, the assignments aren't super difficult and there's plenty of office hours, and the exams are very simple &amp; straightforward. Although racket isn't a very popular language, this class can help you build your general coding skills.",
                    "18": "I took this course for fun because I wanted to learn more about computer science. However this class uses Dr Racket which is functional programming and it's hard to understand the syntax. The exams aren't terrible and",
                    "19": "I thought this course was pretty straight forward and well structured. The professor is amazign",
                    "20": "This class is pretty okay for what it is. A lot of people are gonna complain about Racket being the language of choice for this class, but I think the rationalization behind it of being a good intro to functional programming/leveling the playing field is reasonable enough. Don't expect to learn too much from this there are like 10 concepts covered and you aren't even doing much practice with them either. <br><br>Most of your grade consists of 7 assignments and 2 exams, none of which are very difficult but there isn't a curve so you do need a pretty good understanding of course material for a good grade. There is also an ethics portion of this class that takes up like 5 hours of time overall and was pretty pointless but was basically a free 5% of your grade.<br><br>Overall, what I've heard from some older students that I think makes a lot of sense is that CS 111 is a good basis for continuing through a CS degree, but if you're just someone wanting to get some practical experience for a different field or personal use, I'd look elsewhere like CS 150.",
                    "21": "This class was really good. I learned so much and was able to finally wrap my head around recursion (something I've struggled with previously). I loved Sara Sood, you should 1000% take this class with her. Her flipped classroom format was so helpful, even though I hated it at first, it meant that she usually prepared some form of practice in class to do, which was extremely helpful. I imagine that if we had to just listen to lecture in class and practice on our own, I would've been so lost. Sara genuinely cares about you and how you understand the material. I absolutely love her and cannot praise her enough. Other than instruction, content was not too difficult, it took some time to get used to at first (coming from a Python background), but I really appreciated all the opportunities to get help through OH.",
                    "22": "I didn't expect to enjoy this class as much as I did because people had told me it was pointless. I actually thought learning how to program in Racket was helpful, and I see how it could be applicable to programming in the future. (Maybe that's because I have little coding experience, not sure.) Sara is super helpful and makes it a point to foster a learning environment where everyone feels comfortable regardless of their programming experience.",
                    "23": "This course is a good beginner class for computer science. The materials were easy to understand and use. Sara was excellent at explaining things and very helpful. Only gripe is that attendance is taken but its also free points so not a big deal.",
                    "24": "I honestly really enjoyed this class. I have very little comp sci knowledge/experience (literally just comp sci principles in high school) but the material is pretty easy to learn and get the hang of. The content moves pretty quickly, but the lectures are on your own time, so you can go through them as fast or slow as you want to. other than the lecture videos it's just a couple basic canvas quizzes that are  like 2–3 questions long and just check basic understanding. Actual lecture times are just used to do work, which is nice because you can ask TAs and people around you for help.",
                    "25": "The aspects of the class that I learned was the basics of coding as it pertains to racket.",
                    "26": "This course had an excellent professor and was entertaining. It was a good way to determine whether or not I enjoyed CS as a subject",
                    "27": "I enjoyed this class it is pretty easy, exams are okay, assignment a week. Attendance is not mandatory you just have to do an attendance assignment instead.",
                    "28": "Really chill course. But Sara makes the material really interesting and I think it is such a brilliant course to prepare anyone who wants to go into CS. Regardless of your experience, you will not regret taking this course. I've taken AP CS java in high school and have a fair amount of experience with coding outside of school but even with that experience, this course made everything click better and was really engaging. You will not regret taking this course. Very easy to overload as well.",
                    "29": "Sarah is the best and she really makes sure you learn the material. Honestly they really do want you to do well.",
                    "30": "The course is a solid intro to CS class cause it teaches fundamentals rather than actual coding.",
                    "31": "Sood/Owsley is a very kind professor. The flipped classroom format was easy to work with and did a fair job of stimulating my learning even though I stopped watching the videos about halfway throughout the quarter. There are quizzes due before every class but theyre very easy if you took notes while watching the video. The two tests are very very similar to each other and I ended up getting almost the exact sam escore on both. Overall, if you study the way she tells you to, do your homework (mostly) by yourself, and try, you'll get a B",
                    "32": "I don't have a lot of thoughts on the course. The best way to describe it is that you're probably not going to understand the content or Racket, but if you do the work you'll get an A. Ask TAs for help on the assignments, do all the practice exams, do the module quizzes and you'll be fine. But I never really grasped anything in Racket and I wish my CS  requirement was CS110 not CS111. Professor Sood is super nice and enthusiastic though. The problem of this class is Racket. Also, it's a flipped classroom so you can submit assignments instead of going to class, which was really helpful sometimes.",
                    "33": "The flipped classroom meant I basically never ended up showing up to class and just did the short assignment for the participation grade every day. Despite that, I felt like the content was taught effectively, and the assignments were not difficult. The ethics modules were pretty useless, though.",
                    "34": "I loved the course, had good instruction and fun exercises.",
                    "35": "Racket is different from other languages you may know so it requires a shift in thinking",
                    "36": "The assignments were educational.",
                    "37": "Sara is a wonderful instructor, and I appreciated the whole instructional team as well! I feel like I have a solid foundation for learning new programming languages now and advanced in my academic journey.",
                    "38": "In my opinion, as interesting as an intro CS class can be. Very easy if you know how to code. Stay on top of the assignments and you should be fine.",
                    "39": "I highly recommend this class.  Sara is an amazing professor.  Even though it is a big class, she makes an effort to get to know each and every student.  She is so approachable, I never felt bad asking her a question.  She also teaches in a way that really worked for me.  Although she typically went slower explaining things in class, I was never bored because I could just go ahead on the assignment for the day and when I got stuck, I could wait for her to get to that part.  She also really wants us to learn.  She doesn't care about grades, but not in a bad way.  She fully sets us up for success because if you attend all the lectures, you are almost guaranteed an A (she typically goes over the homework in lectures before it is due).",
                    "40": "It was a decent class. Racket is a weird language but not terrible. Sarah Sood is also a pretty good lecturer.",
                    "41": "A lot of people complain about the language being in Racket, but since I had very little prior coding experience, it wasn't too bad to learn. Some weekly exercises are harder than others, so make sure you go to office hours and stay on track with prelecture quizzes, etc. Apparently people do worse on exams if they didn't take an AP CS class in high school, which is a little unfair, but what can you do. I'd recommend that you take CS 110 instead if you have the option.",
                    "42": "Not my favorite course, but had to take it cus it was a major requirement for IEMS. Don't fall behind and do all the work.",
                    "43": "TAKE THIS WITH SARA!! she is a great prof and organizes the class very well. the structure of the course (asynchronous video lectures  to learn + review and practice during class) make it a lot easier to learn the concepts at your own pace and then reinforce them during class. <br><br>the two exams were very straight–forward and as long as you stay on track with the concepts, you really don't need to study for them. there's also a lot of ways to get help during class (from peer mentors and sara), and a ton of office hours to get help outside of class, so finishing assignments shouldn't be an issue. <br><br>coming from someone who was super intimidated by cs from my EA 1 matlab experience, I ended up loving this course. don't listen to all the cs majors complaining about racket –– this class is a great foundation.",
                    "44": "This was a great intro–level course. Everything was fair, well–organized, and designed with the student in mind. The assignments were not too difficult and anyone who wanted help could get it both in and out of class time. Sara is also a very pleasant and engaging professor!",
                    "45": "Professor Sood is an amazing instructor and really makes CS 111 a great class to take.",
                    "46": "obviously DrRacket's kinda confusing &amp; weird &amp; takes a sec to get accustomed to, but the prof is great, so this is an easy A as long as you do the work",
                    "47": "This class gives an effective run through of fundamental Com Sci skills. It does have a heavy focus on functional programing, but this class isn't exactly pretending to be a class you take so that you can code, its one you take so you can learn to code. Very lenient structure and a good grade is very much achievable if you are properly thorough in checking for typos and the like.",
                    "48": "Not a very hard class. Racket is strange. Sood is a good teacher. You'll be fine.",
                    "49": "Sara is a great teacher and teaches the course at a pace and level in which you learn but do feel pushed. Highly recommend."
                },
                "school_demographics": {
                    "Weinberg": 38,
                    "McCormick": 36,
                    "Medill": 1,
                    "Comm": 4,
                    "SESP": 0,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 62,
                    "Sophomores": 18,
                    "Juniors": 3,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 150-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 3.86,
                    "student_count": 104
                },
                "student_opinions": {
                    "0": "Helpful, but a little confusing, especially in the instructions of assignments.",
                    "1": "The assignments covered a broad range of skills in Python but the structure of the class could be improved. Lectures could have been more focused on doing in class practice of methods used in the assignments.",
                    "2": "I 100% recommend this class. This class was incredibly easy; all you had to do was show up 50% of the time, do the group projects and complete the assignments. No final!",
                    "3": "I thought that the assignments were not bad and the course overall was pretty easy going. There are extensions for each assignment and you get full credit for doing 50% of the tasks on Mondays. Overall, a pretty easy course.",
                    "4": "I learnt a lot about python, but most of it was through self–studying. Lectures were quite interesting but didn't really help with the assignments. Also although there were many PM office hours, there were no professor office hours.",
                    "5": "This class was fine. I appreciate the emphasis on working in groups and having partners each week; it was nice meeting new people (even if it was only for that lecture). I can't say much; I didn't take this class seriously. This class is mostly an easy A if you utilize your resources.",
                    "6": "At times, it felt as though Kate was only there to teach us about memes and the latest \"coders be like\" joke of the day. In a class centered on the production of code at one of the most basic levels, she had trouble even teaching on that. Few times was code discussed in class, rather opting for talking about the idea of code rather.",
                    "7": "The course was ok. The homework assignments were fairly interesting, and they helped me learn a lot about Python libraries and processing data. The lectures, however, were not very helpful. The skills and knowledge needed to do the homework were often not taught in the lectures, and instead, you have to follow links in the homework to learn the material. Further, this class feels sloppily put together at times. The professor is often unable to help with library and installation issues with Python, instead recommending stack overflow. Homeworks occasionally included directions and comments from previous year's classes that are no longer relevant. And finally, there would be occasional bugs in the libraries used in the starter code.",
                    "8": "This was a good class. If you are BME (like me) they made this an option for the major requirement. I highly reccommend. There are weekly homeworks but no tests or quizes and no final. The homeworks can be tricky but if you put the time in you will do well. Plus, there is extra credit offered at the end of the course if you missed any points on the homeworks. I liked the strcuture of this class and think I learned a lot about coding.",
                    "9": "Overall,  the course was not too challenging as much of the work was out of class work that could be completed on your own time. Their were weekly group assignments that had to be completed the day of, but these were usually not super challenging and a quick google search usually sufficed if there were any difficulties.",
                    "10": "the course has some difficult projects but it is only one per week. there is  a group assignment once a week as well. overall not too intense.",
                    "11": "Professor Compton seemed somewhat clocked out at times. Although she is passionate about what she does and gave good assignments across a variety of sides of CS. Worthwhile class to build on programming skills.",
                    "12": "grading: 10 assignments worth 100 points each, 10 group work things worth 10 points each (or 15, idk), participation (not quite sure how much this is supposed to be worth tbh)<br>i've heard a lot of people dunk on this class and while I can understand why I thought this class was pretty chill + good. as someone with very little programming experience some of the assignments are difficult but you can figure them out. i assume if you've been coding since you were 5 you can do this class in your sleep. the grading in this class is a little slow considering that it's all automatic (sometimes it takes like 2 weeks to get a grade back, and if you made a mistake and want to resumbit the late penalty is pretty hefty after that long). compton is very sweet and clearly cares about if you learn. group work on mondays are very chill.",
                    "13": "This course is requires you to self–teach yourself all of the concepts to yourself through the homework programs. The professor does not go over anything useful pertaining to the actual CS concepts in lecture, so don't waste your time going to lecture. I pretty much had to figure out all of the lecture content by myself through friends and the internet, which was irritating. The code is pretty manageable though, and I liked not having exams (just HWs and weekly group assignments). Some of the homework programs can be a bit time consuming, so I'd recommend starting a few days before the deadline.",
                    "14": "This course was low–stress and not very time–consuming. We were primarily graded on based on weekly homework assignments, and additionally on weekly in–class group coding assignments. The assignments aren't particularly hard and an A is definitely achievable with good effort.  Professor Compton is very kind and demonstrates passion for the material. However, the lectures often felt unrelated to the material, and I wouldn't say I learned a lot in this course. I definitely found the TA office hours helpful in completing the assignments.",
                    "15": "This course helps to get familiar with python and some elements of computer programming. I would highly recommend going to the office hours to get the assignments done because it can be hard to finish it on your own.",
                    "16": "Debugging. I got a lot better at it.",
                    "17": "Professor does not explain things, says irrelevant things in class and then you kind of have to figure it out. Big projects, not much instruction. The way the class is structured is super confusing and annoying.",
                    "18": "I was really looking forward to this class before getting into it and realizing that the lectures had very little to do with the assignments and the assignments themselves were a mess. Hours gone just sitting at this incredibly long file trying to understand what the professor wanted. The PMs who had the office hours were not given any sort of answers or guidelines too so all they could say was that it seemed like the output you got should be right but you would never know and sometime they were wrong simply because no one is inside the professor's head knowing what they were expecting. This was avoidable in the beginning when there were a number of checks put into the assignment, but as soon as those started going away you could easily think you were doing something right and check for it only to find out after it was graded you misunderstood the assignment and there was no mercy for that.",
                    "19": "This course has the potential to be very interesting and engaging but isn't designed or taught in a way that forces you to consider ways to implement the programming beyond the assignments. I found it very hard to make a connection with the professor or find ways to understand and apply the learning beyond the context of the course.",
                    "20": "Kate Compton is leaving after this quarter, so I don't know how much this CTEC will help. All I'll say is I'm glad she's gone. She is not a good lecturer and was rude over email. I came into this class knowing Python from 110 and this class was an adequate amount of challenging. I was introduced to new concepts and capabilities of python through the homework. I also went to office hours, which I highly recommend!! Like seriously. There is no need for you to struggle through the homework and get a bad grade. I went to office hours if I was struggling with a question and I learned a lot on what I was doing wrong through the TAs and was able to get a good grade because I got help.",
                    "21": "I attended class for as long as I could, but still didn't learn Python. It felt more like an 'intro to using ChatGPT to code class.' Every question I had was answered with 'why don't you put your question in ChatGPT?' It is a big shame as I expected to come out of class expecting to know basic Python. I wanted to learn Python, but the teaching just didn't seem to echo that promise. Now, even though I completed the class, I still have to relearn it for other classes.",
                    "22": "I think the homework and all the assignments were helpful in learning. However, the lectures could sometimes be a little unhelpful because sometimes it was very loosely related to what we were learning.",
                    "23": "She forgot to add files into the assignment folder which was the reason my program wasn’t running and I was trying to debug for days. She also clearly didn’t care because she’s leaving after this quarter",
                    "24": "If you're a CS major, I would honestly avoid taking this class and take a 300–level in place of it.<br><br>The assignments really do a good job at showing off what kind of cool projects you can build with Python. However, my biggest complaint with this class is that Prof Kate prefaces the assignments with \"you will spend a lot of time figuring out other people's code in the real world\", which is honestly very true and a valuable skill to have, but then proceeds to hand you a ~1000 line assignment file. It's not that you have to code a lot but that there are so many comments and helper functions. I would have much preferred a separate documentation file than having the important details left in comments throughout the code. Aside from having to constantly find your place in the file, the tasks are *sometimes* ordered chronologically by which ones she thinks you should code first. And doing the assignments feels like Mad Libs because I'm filling out these pieces of code in a way that Prof Kate wants me to fill them out so that everything else works rather than doing it in a way I feel makes sense. <br><br>I like Prof Kate and nothing against her but honestly I wish they would just remove 150 from the core requirements because you really do not learn anything you wouldn't learn in 111/211/214.",
                    "25": "This course was not too bad. The homework was pretty difficult but the class was all assignments there were no exams which was nice. Overall very manageable and possible to get an A.",
                    "26": "There are group activities every Monday in class but you only have to attend about half of the classes. There are weekly assignments which take some time but aren't too complicated and there are tons of resources to get help.",
                    "27": "Teaching was nonexistent. I had to take CS 111 first and it doesn't make any sense because that class is in Racket and this is in Python so safe to say I was confused. CS 110 is Python but that's not part of my major requirements. Anyways I had to spend a decent amount of time on some random website watching videos trying to learn.",
                    "28": "Its entirely assignment based. Very chill and easy to complete. They added an attendance requirement this quarter but it was only 50% of classes.",
                    "29": "Context: I don't have a programming background except for what I learned in CS111. <br><br>The lecture topics are interesting but I feel like we are rushing through a lot of things. I recommend taking this class with your friends because the office hours are in really weird times and I tried to join some Zoom office hours but they were often just not there. Dr. Compton's instructions can be hard to comprehend. I constantly felt like 70% of the time I spent on weekly assignments was on understanding what she actually wanted us to do. But with that being said, I did think the topics were interesting and got a pretty clear sense of what python could do.",
                    "30": "After the first few weeks, the contents of the lectures stopped being applicable to the homework.",
                    "31": "Integral course that will teach you basics of Python. The assignments are straightforward, although they were quite disorganized and still contained typos/old notes from previous years. Overall solid intro class.",
                    "32": "Maybe it would be more useful if we don't have the assignments as well_broken down as they are right now.",
                    "33": "The assignments are messy and tough to read. Sometimes there are unstated parameters, very similar variable names, and other things to confuse you. Other than that the class has no difficulty.",
                    "34": "The structure of the course was kind of confusing and the PMs were not really helpful.",
                    "35": "I will have a bias here because I have Python experience – it was a breeze. However, I did appreciate Kate's attempt to make the assignments interesting for everyone. For me, I did not deal with OOP in the past, so I still learned something in the course.<br><br>Advice? If you see that a lot of people are not coming to class (which WILL happen) but you need the content/guidance, go to the lectures. Just because everyone doesn't go, doesn't mean the lectures are worthless to YOU.",
                    "36": "This course was fairly laid out– the homework assignments were sometimes challenging but doable, especially with help at office hours. The in–class group activities were more difficult but not graded based on completion, which I liked.",
                    "37": "This is a solid course on Python and I personally learned a lot. Homework is one assignment per week generally due on Wednesdays, and each Monday class is dedicated to completing a much smaller assignment in a group setting that's graded for completion. NO EXAMS, although that may change from year to year. Level of difficulty was quite fair for me coming out of CS 111 as all assignments were challenging but doable if you put in a few hours and use your resources (peer mentors, professors, and especially the internet). Content coverage in the lectures is somewhat vague but it was okay for me considering it's a lot of content already covered in 110 and 111. Overall this is a good, pretty laid back course and I would definitely recommend it.",
                    "38": "Pretty straightforward class. There are weekly group assignments (low stacks, you really just need to put in a little bit of effort) and weekly individual assignments (of course you can do them in groups). It really depends on how much of a coding background you have, but for someone who has some experience already, this class is not very difficult. It's Kate Compton's last quarter at Northwestern, so if you take this course it won't be with her. But that said, I doubt the material will change all that much.",
                    "39": "No finals or exams––that was nice. Just weekly assignments, which weren't too bad as long as you could go to office hours. Professor Compton's lectures were not helpful if I'm being honest. Only take this class if you want to get more practice doing Python and you don't mind a slightly time–consuming assignment each week. But honestly you can learn everything this class has to offer on your own just as well.  Overall, the class just didn't seem organized––it just seemed like a random assignment each week. And lecture was just Prof. Compton talking about whatever she wanted to, which most of the time wasn't relevant at all to the assignment.",
                    "40": "I came into this course optimistic about learning something new even after hearing from many friends who said it was not enjoyable and I would not learn much. Unfortunately, they were correct. Lectures were not beneficial and assignments were poorly organized and often had issues. While I did learn Python basics, I certainly could know more to a deeper understanding if this course was better.",
                    "41": "This class was a fairly low–stress way to learn Python for the first time.  I already had a decent amount of coding experience before this (just not in Python),  so I didn't feel like I needed to go to every class but still ended up knowing everything necessary for the assignments.  I do wish the group work was structured differently — I'm not opposed to working with others,  but I didn't come into the class knowing anyone else, and since I missed a couple group days early on, it made it a lot harder to find a group to work with every week. It felt like I was imposing at that point instead of helping, which was clearly not the goal of having group work.  So group work days became extremely annoying, but the actual weekly assignments were pretty decent and taught useful skills.",
                    "42": "If you are confident working with Python (or even have experience with lower level languages), this course should not be too difficult. Although it will vary by instructor, there was typically one project a week with some smaller assignments throughout the week.",
                    "43": "It is a very manageable class. If you start doing the assignments early, you can get plenty of help. It is a helpful course to understand the basic concepts in Python.",
                    "44": "Had to take this class for CS. It is quite easy but not taught well at all",
                    "45": "Class consists of 9 homework assignments due weekly which are slightly challenging to work through but not impossible. Lectures are not essential just had to go to enough. Professor is helpful enough",
                    "46": "Very straightforward Python class. If you took 111 and did well, this will be a cakewalk. Python syntax is basically English. Professor Compton, who won't be here after this, was pretty unhelpful. She used the lecture as a time to toot her own horn and also complain about her time here and why she was leaving.  She also would have this matter–of–fact tone when asked questions that just made me feel bad for having a question in the first place. Anyway, ChatGPT was my professor for this class and it worked fine. Any syntax questions or such would be answered quite easily.",
                    "47": "To me, the most important part of this class was becoming proficient in coding. I think Prof. Compton had a lot of weekly activities that were relevant and really accelerated how much I learned in this class.",
                    "48": "This class is not that much work because there are just assignments and no exams but it involves learning the content on your own as the lectures are not linked to the assignments.",
                    "49": "The lectures were not very helpful in teaching me how to code. I learned more about Python from watching YouTube videos and looking up syntax online.",
                    "50": "Super easy class– really really easy to get an A. But the actual instruction was not very good tbh. Everything I learned was through ChatGPT or one of my friends who had taken the class prior. Compton is honestly horrible at organization//teaching you actual python and being in tech AUD is like the least engaging thing ever. <br><br>You can ACE the class and come out not knowing really any python at all.",
                    "51": "This class was very helpful for developing my Python coding skill",
                    "52": "The course itself was interesting, and I liked the topics we covered. There could've been a lot more teacher student support, as I sometimes felt that I was going into assignment blind.",
                    "53": "It's a decent class. Sometimes I felt like the tasks for the assignments did take a giant leap from where we were learning, but it's doable (it just take a whole lot of additional time to figure out imo). The Monday activities did help with most assignments. The attendance tracker didn't seem to work completely well this quarter, so points were calculated differently.",
                    "54": "I wish we learned more things applicable to the assignments during the lecture time. The lectures would often feel tedious because it'd end up feeling like we were just being talked at and not actually being asked to apply our learning in class. The lectures also didn't feel all that well prepared by Dr. Compton. The co–instructor, Prof. Kurdia, was better in my opinion in terms of teaching us concepts that we could apply to the homeworks. She only lectured two or three times, but I appreciated the \"apply your knowledge\" slides she'd include while lecturing so that it wasn't just a one–sided lecture.",
                    "55": "Having known most of the material prior to the class, I don't think the class was particularly useful for me (other than the major requirement), but I do remember feeling like it would've been a great way to begin/continue learning computer science if I had been starting fresh.",
                    "56": "The perks of this course are the fact that there are no exams, but only homework programs and group activities, which encourage you to apply and practice programming concepts (which is truly the best way to pick up programming). However, the programs are lengthy and can feel overwhelming with the way that they are formatted. Follow the instructions properly and save yourself some headache from debugging for hours over a minor mistake. An A is certainly achievable if you put in the time and effort (and do some major googling + attend office hours).",
                    "57": "Most people take this as a major requirement, and if you have a pretty basic understanding of Python, you will do fine in this course.  Only the weekly homeworks required a ton of time outside of class. Make sure you to Monday class for the participation activity and you have a steady group. When doing your code, try to check your program on other computers because most point deductions came from the computers that they grade the codes on.",
                    "58": "Dr. Kate Compton is leaving and will no longer be teaching this class. Honestly, I don't feel strongly either way. If you haven't learned by now, most CS lecture classes at NU are kind of a waste of time and you'll have to learn how to code on your own. This class could not have exemplified that idea more strongly. The fact that Dr. Compton had to incentivize students to come to a mere half of the lectures with attendance/bonus points shows you how pointless class lecture was. I feel bad that she didn't really have many students show up, but it's hard to fault NU students when they have other important stuff to do and what is being talked about in lecture literally has little to no relevance for the weekly assignments. The one bright spot in the class is that there are no exams (midterm nor final). Just 10 weekly assignments/problem sets.",
                    "59": "I didn't find the lectures super useful in learning the content, rather doing the assignments helped me a lot. I would recommend going to PM office hours!",
                    "60": "Hard to find teams to work with, would be best to take this course with a friend because is very collaboration–heavy. Homework was relatively challenging, lack of support from instructor.",
                    "61": "I took this course in a quarter where I took 5 classes in total, and this class was definitely my most manageable class by far. The weekly programs can seem long at times, but they are honestly very straightforward and not a ton of work. There are also tons of opportunities to improve your grade – there's not a lot of classes that are as easy an A as this, especially if you're in McCormick. Highly recommend if you want to learn any computer programming skills.",
                    "62": "This was an ok class. Not too difficult if you have friends in the class or know people who’ve taken it in the past. Lectures weren’t helpful and it wasn’t necessary to go to class except once a week for group activities. All this being said, Professor Compton who’s taught this class forever is leaving and she taught it in a very unique way so not sure how it will be with a different person teaching it.",
                    "63": "this class was honestly really interesting and the projects were fun despite being a bit unclear sometimes. you only to be in class for the activities on monday and overall it's not too too much work. i felt like i actually learned a lot unlike in 111, and if youre interested in CS and like problem solving this class is def worth it.",
                    "64": "I do feel like we covered some complex topics in this class – we wrote basic algorithms, Markov chains, etc. So I came into the class wanting to write code that could actually be useful, which we did. But I think a lot of the class requires self–teaching",
                    "65": "This class wasn't bad. There are a lot of good things: no exams, homework is like the entirety of your grade so you can ensure you do well, lots of peer mentors to get help for. And a lot of bad things: atrocious timing of office hours, apathetic and annoying instruction by professor Compton, and an extreme necessity to attend several office hours. I cannot understate this enough, going to office hours is an absolute necessity because the homeworks are so tedious and difficult that you basically have to do all of it in office hours. This pain is exaggerated by horrendous timing of office hours, I mean its actually confusing how they screw this up so bad, there was clearly no oversight on the PMs to make sure the office hours were at good times. There would be office hours during class (like whhhhaaaat how am I supposed to go to those) every week there was like a 2 hour block with like 4 office hours going on at the same time. These weird timings make it hard to get homework done because you need to go to office hours and some of them are completely out of the picture as they are at atrocious times. The PMs also switch their office hours without notice at last minute which can screw up your schedule because you planned around going to a certain one and all of a sudden you can't go because a PM was lazy. You NEED to find a PM you trust and go to their office hours every week for this class to be good, luckily I did  Aining was amazing and got me through the class.",
                    "66": "This class was fine. I appreciate the emphasis on working in groups and having partners each week; it was nice meeting new people (even if it was only for that lecture). I can't say much; I didn't take this class seriously. This class is mostly an easy A if you utilize your resources.",
                    "67": "At times, it felt as though Kate was only there to teach us about memes and the latest \"coders be like\" joke of the day. In a class centered on the production of code at one of the most basic levels, she had trouble even teaching on that. Few times was code discussed in class, rather opting for talking about the idea of code rather.",
                    "68": "The course was ok. The homework assignments were fairly interesting, and they helped me learn a lot about Python libraries and processing data. The lectures, however, were not very helpful. The skills and knowledge needed to do the homework were often not taught in the lectures, and instead, you have to follow links in the homework to learn the material. Further, this class feels sloppily put together at times. The professor is often unable to help with library and installation issues with Python, instead recommending stack overflow. Homeworks occasionally included directions and comments from previous year's classes that are no longer relevant. And finally, there would be occasional bugs in the libraries used in the starter code.",
                    "69": "This was a good class. If you are BME (like me) they made this an option for the major requirement. I highly reccommend. There are weekly homeworks but no tests or quizes and no final. The homeworks can be tricky but if you put the time in you will do well. Plus, there is extra credit offered at the end of the course if you missed any points on the homeworks. I liked the strcuture of this class and think I learned a lot about coding.",
                    "70": "Overall,  the course was not too challenging as much of the work was out of class work that could be completed on your own time. Their were weekly group assignments that had to be completed the day of, but these were usually not super challenging and a quick google search usually sufficed if there were any difficulties.",
                    "71": "the course has some difficult projects but it is only one per week. there is  a group assignment once a week as well. overall not too intense.",
                    "72": "Professor Compton seemed somewhat clocked out at times. Although she is passionate about what she does and gave good assignments across a variety of sides of CS. Worthwhile class to build on programming skills.",
                    "73": "grading: 10 assignments worth 100 points each, 10 group work things worth 10 points each (or 15, idk), participation (not quite sure how much this is supposed to be worth tbh)<br>i've heard a lot of people dunk on this class and while I can understand why I thought this class was pretty chill + good. as someone with very little programming experience some of the assignments are difficult but you can figure them out. i assume if you've been coding since you were 5 you can do this class in your sleep. the grading in this class is a little slow considering that it's all automatic (sometimes it takes like 2 weeks to get a grade back, and if you made a mistake and want to resumbit the late penalty is pretty hefty after that long). compton is very sweet and clearly cares about if you learn. group work on mondays are very chill.",
                    "74": "This course is requires you to self–teach yourself all of the concepts to yourself through the homework programs. The professor does not go over anything useful pertaining to the actual CS concepts in lecture, so don't waste your time going to lecture. I pretty much had to figure out all of the lecture content by myself through friends and the internet, which was irritating. The code is pretty manageable though, and I liked not having exams (just HWs and weekly group assignments). Some of the homework programs can be a bit time consuming, so I'd recommend starting a few days before the deadline.",
                    "75": "This course was low–stress and not very time–consuming. We were primarily graded on based on weekly homework assignments, and additionally on weekly in–class group coding assignments. The assignments aren't particularly hard and an A is definitely achievable with good effort.  Professor Compton is very kind and demonstrates passion for the material. However, the lectures often felt unrelated to the material, and I wouldn't say I learned a lot in this course. I definitely found the TA office hours helpful in completing the assignments.",
                    "76": "This course helps to get familiar with python and some elements of computer programming. I would highly recommend going to the office hours to get the assignments done because it can be hard to finish it on your own.",
                    "77": "Debugging. I got a lot better at it.",
                    "78": "Professor does not explain things, says irrelevant things in class and then you kind of have to figure it out. Big projects, not much instruction. The way the class is structured is super confusing and annoying.",
                    "79": "I was really looking forward to this class before getting into it and realizing that the lectures had very little to do with the assignments and the assignments themselves were a mess. Hours gone just sitting at this incredibly long file trying to understand what the professor wanted. The PMs who had the office hours were not given any sort of answers or guidelines too so all they could say was that it seemed like the output you got should be right but you would never know and sometime they were wrong simply because no one is inside the professor's head knowing what they were expecting. This was avoidable in the beginning when there were a number of checks put into the assignment, but as soon as those started going away you could easily think you were doing something right and check for it only to find out after it was graded you misunderstood the assignment and there was no mercy for that.",
                    "80": "This course has the potential to be very interesting and engaging but isn't designed or taught in a way that forces you to consider ways to implement the programming beyond the assignments. I found it very hard to make a connection with the professor or find ways to understand and apply the learning beyond the context of the course.",
                    "81": "Kate Compton is leaving after this quarter, so I don't know how much this CTEC will help. All I'll say is I'm glad she's gone. She is not a good lecturer and was rude over email. I came into this class knowing Python from 110 and this class was an adequate amount of challenging. I was introduced to new concepts and capabilities of python through the homework. I also went to office hours, which I highly recommend!! Like seriously. There is no need for you to struggle through the homework and get a bad grade. I went to office hours if I was struggling with a question and I learned a lot on what I was doing wrong through the TAs and was able to get a good grade because I got help.",
                    "82": "I attended class for as long as I could, but still didn't learn Python. It felt more like an 'intro to using ChatGPT to code class.' Every question I had was answered with 'why don't you put your question in ChatGPT?' It is a big shame as I expected to come out of class expecting to know basic Python. I wanted to learn Python, but the teaching just didn't seem to echo that promise. Now, even though I completed the class, I still have to relearn it for other classes.",
                    "83": "She forgot to add files into the assignment folder which was the reason my program wasn’t running and I was trying to debug for days. She also clearly didn’t care because she’s leaving after this quarter",
                    "84": "I think the homework and all the assignments were helpful in learning. However, the lectures could sometimes be a little unhelpful because sometimes it was very loosely related to what we were learning.",
                    "85": "If you're a CS major, I would honestly avoid taking this class and take a 300–level in place of it.<br><br>The assignments really do a good job at showing off what kind of cool projects you can build with Python. However, my biggest complaint with this class is that Prof Kate prefaces the assignments with \"you will spend a lot of time figuring out other people's code in the real world\", which is honestly very true and a valuable skill to have, but then proceeds to hand you a ~1000 line assignment file. It's not that you have to code a lot but that there are so many comments and helper functions. I would have much preferred a separate documentation file than having the important details left in comments throughout the code. Aside from having to constantly find your place in the file, the tasks are *sometimes* ordered chronologically by which ones she thinks you should code first. And doing the assignments feels like Mad Libs because I'm filling out these pieces of code in a way that Prof Kate wants me to fill them out so that everything else works rather than doing it in a way I feel makes sense. <br><br>I like Prof Kate and nothing against her but honestly I wish they would just remove 150 from the core requirements because you really do not learn anything you wouldn't learn in 111/211/214.",
                    "86": "This course was not too bad. The homework was pretty difficult but the class was all assignments there were no exams which was nice. Overall very manageable and possible to get an A.",
                    "87": "There are group activities every Monday in class but you only have to attend about half of the classes. There are weekly assignments which take some time but aren't too complicated and there are tons of resources to get help.",
                    "88": "Teaching was nonexistent. I had to take CS 111 first and it doesn't make any sense because that class is in Racket and this is in Python so safe to say I was confused. CS 110 is Python but that's not part of my major requirements. Anyways I had to spend a decent amount of time on some random website watching videos trying to learn.",
                    "89": "Its entirely assignment based. Very chill and easy to complete. They added an attendance requirement this quarter but it was only 50% of classes.",
                    "90": "Context: I don't have a programming background except for what I learned in CS111. <br><br>The lecture topics are interesting but I feel like we are rushing through a lot of things. I recommend taking this class with your friends because the office hours are in really weird times and I tried to join some Zoom office hours but they were often just not there. Dr. Compton's instructions can be hard to comprehend. I constantly felt like 70% of the time I spent on weekly assignments was on understanding what she actually wanted us to do. But with that being said, I did think the topics were interesting and got a pretty clear sense of what python could do.",
                    "91": "After the first few weeks, the contents of the lectures stopped being applicable to the homework.",
                    "92": "Integral course that will teach you basics of Python. The assignments are straightforward, although they were quite disorganized and still contained typos/old notes from previous years. Overall solid intro class.",
                    "93": "Maybe it would be more useful if we don't have the assignments as well_broken down as they are right now.",
                    "94": "The assignments are messy and tough to read. Sometimes there are unstated parameters, very similar variable names, and other things to confuse you. Other than that the class has no difficulty.",
                    "95": "The structure of the course was kind of confusing and the PMs were not really helpful.",
                    "96": "I will have a bias here because I have Python experience – it was a breeze. However, I did appreciate Kate's attempt to make the assignments interesting for everyone. For me, I did not deal with OOP in the past, so I still learned something in the course.<br><br>Advice? If you see that a lot of people are not coming to class (which WILL happen) but you need the content/guidance, go to the lectures. Just because everyone doesn't go, doesn't mean the lectures are worthless to YOU.",
                    "97": "This course was fairly laid out– the homework assignments were sometimes challenging but doable, especially with help at office hours. The in–class group activities were more difficult but not graded based on completion, which I liked.",
                    "98": "Pretty straightforward class. There are weekly group assignments (low stacks, you really just need to put in a little bit of effort) and weekly individual assignments (of course you can do them in groups). It really depends on how much of a coding background you have, but for someone who has some experience already, this class is not very difficult. It's Kate Compton's last quarter at Northwestern, so if you take this course it won't be with her. But that said, I doubt the material will change all that much.",
                    "99": "This is a solid course on Python and I personally learned a lot. Homework is one assignment per week generally due on Wednesdays, and each Monday class is dedicated to completing a much smaller assignment in a group setting that's graded for completion. NO EXAMS, although that may change from year to year. Level of difficulty was quite fair for me coming out of CS 111 as all assignments were challenging but doable if you put in a few hours and use your resources (peer mentors, professors, and especially the internet). Content coverage in the lectures is somewhat vague but it was okay for me considering it's a lot of content already covered in 110 and 111. Overall this is a good, pretty laid back course and I would definitely recommend it.",
                    "100": "No finals or exams––that was nice. Just weekly assignments, which weren't too bad as long as you could go to office hours. Professor Compton's lectures were not helpful if I'm being honest. Only take this class if you want to get more practice doing Python and you don't mind a slightly time–consuming assignment each week. But honestly you can learn everything this class has to offer on your own just as well.  Overall, the class just didn't seem organized––it just seemed like a random assignment each week. And lecture was just Prof. Compton talking about whatever she wanted to, which most of the time wasn't relevant at all to the assignment.",
                    "101": "I came into this course optimistic about learning something new even after hearing from many friends who said it was not enjoyable and I would not learn much. Unfortunately, they were correct. Lectures were not beneficial and assignments were poorly organized and often had issues. While I did learn Python basics, I certainly could know more to a deeper understanding if this course was better.",
                    "102": "This class was a fairly low–stress way to learn Python for the first time.  I already had a decent amount of coding experience before this (just not in Python),  so I didn't feel like I needed to go to every class but still ended up knowing everything necessary for the assignments.  I do wish the group work was structured differently — I'm not opposed to working with others,  but I didn't come into the class knowing anyone else, and since I missed a couple group days early on, it made it a lot harder to find a group to work with every week. It felt like I was imposing at that point instead of helping, which was clearly not the goal of having group work.  So group work days became extremely annoying, but the actual weekly assignments were pretty decent and taught useful skills.",
                    "103": "If you are confident working with Python (or even have experience with lower level languages), this course should not be too difficult. Although it will vary by instructor, there was typically one project a week with some smaller assignments throughout the week.",
                    "104": "It is a very manageable class. If you start doing the assignments early, you can get plenty of help. It is a helpful course to understand the basic concepts in Python.",
                    "105": "Had to take this class for CS. It is quite easy but not taught well at all",
                    "106": "Class consists of 9 homework assignments due weekly which are slightly challenging to work through but not impossible. Lectures are not essential just had to go to enough. Professor is helpful enough",
                    "107": "Very straightforward Python class. If you took 111 and did well, this will be a cakewalk. Python syntax is basically English. Professor Compton, who won't be here after this, was pretty unhelpful. She used the lecture as a time to toot her own horn and also complain about her time here and why she was leaving.  She also would have this matter–of–fact tone when asked questions that just made me feel bad for having a question in the first place. Anyway, ChatGPT was my professor for this class and it worked fine. Any syntax questions or such would be answered quite easily.",
                    "108": "To me, the most important part of this class was becoming proficient in coding. I think Prof. Compton had a lot of weekly activities that were relevant and really accelerated how much I learned in this class.",
                    "109": "This class is not that much work because there are just assignments and no exams but it involves learning the content on your own as the lectures are not linked to the assignments.",
                    "110": "Super easy class– really really easy to get an A. But the actual instruction was not very good tbh. Everything I learned was through ChatGPT or one of my friends who had taken the class prior. Compton is honestly horrible at organization//teaching you actual python and being in tech AUD is like the least engaging thing ever. <br><br>You can ACE the class and come out not knowing really any python at all.",
                    "111": "The lectures were not very helpful in teaching me how to code. I learned more about Python from watching YouTube videos and looking up syntax online.",
                    "112": "This class was very helpful for developing my Python coding skill",
                    "113": "The course itself was interesting, and I liked the topics we covered. There could've been a lot more teacher student support, as I sometimes felt that I was going into assignment blind.",
                    "114": "It's a decent class. Sometimes I felt like the tasks for the assignments did take a giant leap from where we were learning, but it's doable (it just take a whole lot of additional time to figure out imo). The Monday activities did help with most assignments. The attendance tracker didn't seem to work completely well this quarter, so points were calculated differently.",
                    "115": "I wish we learned more things applicable to the assignments during the lecture time. The lectures would often feel tedious because it'd end up feeling like we were just being talked at and not actually being asked to apply our learning in class. The lectures also didn't feel all that well prepared by Dr. Compton. The co–instructor, Prof. Kurdia, was better in my opinion in terms of teaching us concepts that we could apply to the homeworks. She only lectured two or three times, but I appreciated the \"apply your knowledge\" slides she'd include while lecturing so that it wasn't just a one–sided lecture.",
                    "116": "Having known most of the material prior to the class, I don't think the class was particularly useful for me (other than the major requirement), but I do remember feeling like it would've been a great way to begin/continue learning computer science if I had been starting fresh.",
                    "117": "The perks of this course are the fact that there are no exams, but only homework programs and group activities, which encourage you to apply and practice programming concepts (which is truly the best way to pick up programming). However, the programs are lengthy and can feel overwhelming with the way that they are formatted. Follow the instructions properly and save yourself some headache from debugging for hours over a minor mistake. An A is certainly achievable if you put in the time and effort (and do some major googling + attend office hours).",
                    "118": "Most people take this as a major requirement, and if you have a pretty basic understanding of Python, you will do fine in this course.  Only the weekly homeworks required a ton of time outside of class. Make sure you to Monday class for the participation activity and you have a steady group. When doing your code, try to check your program on other computers because most point deductions came from the computers that they grade the codes on.",
                    "119": "Dr. Kate Compton is leaving and will no longer be teaching this class. Honestly, I don't feel strongly either way. If you haven't learned by now, most CS lecture classes at NU are kind of a waste of time and you'll have to learn how to code on your own. This class could not have exemplified that idea more strongly. The fact that Dr. Compton had to incentivize students to come to a mere half of the lectures with attendance/bonus points shows you how pointless class lecture was. I feel bad that she didn't really have many students show up, but it's hard to fault NU students when they have other important stuff to do and what is being talked about in lecture literally has little to no relevance for the weekly assignments. The one bright spot in the class is that there are no exams (midterm nor final). Just 10 weekly assignments/problem sets.",
                    "120": "I didn't find the lectures super useful in learning the content, rather doing the assignments helped me a lot. I would recommend going to PM office hours!",
                    "121": "Hard to find teams to work with, would be best to take this course with a friend because is very collaboration–heavy. Homework was relatively challenging, lack of support from instructor.",
                    "122": "I took this course in a quarter where I took 5 classes in total, and this class was definitely my most manageable class by far. The weekly programs can seem long at times, but they are honestly very straightforward and not a ton of work. There are also tons of opportunities to improve your grade – there's not a lot of classes that are as easy an A as this, especially if you're in McCormick. Highly recommend if you want to learn any computer programming skills.",
                    "123": "This was an ok class. Not too difficult if you have friends in the class or know people who’ve taken it in the past. Lectures weren’t helpful and it wasn’t necessary to go to class except once a week for group activities. All this being said, Professor Compton who’s taught this class forever is leaving and she taught it in a very unique way so not sure how it will be with a different person teaching it.",
                    "124": "this class was honestly really interesting and the projects were fun despite being a bit unclear sometimes. you only to be in class for the activities on monday and overall it's not too too much work. i felt like i actually learned a lot unlike in 111, and if youre interested in CS and like problem solving this class is def worth it.",
                    "125": "I do feel like we covered some complex topics in this class – we wrote basic algorithms, Markov chains, etc. So I came into the class wanting to write code that could actually be useful, which we did. But I think a lot of the class requires self–teaching",
                    "126": "This class wasn't bad. There are a lot of good things: no exams, homework is like the entirety of your grade so you can ensure you do well, lots of peer mentors to get help for. And a lot of bad things: atrocious timing of office hours, apathetic and annoying instruction by professor Compton, and an extreme necessity to attend several office hours. I cannot understate this enough, going to office hours is an absolute necessity because the homeworks are so tedious and difficult that you basically have to do all of it in office hours. This pain is exaggerated by horrendous timing of office hours, I mean its actually confusing how they screw this up so bad, there was clearly no oversight on the PMs to make sure the office hours were at good times. There would be office hours during class (like whhhhaaaat how am I supposed to go to those) every week there was like a 2 hour block with like 4 office hours going on at the same time. These weird timings make it hard to get homework done because you need to go to office hours and some of them are completely out of the picture as they are at atrocious times. The PMs also switch their office hours without notice at last minute which can screw up your schedule because you planned around going to a certain one and all of a sudden you can't go because a PM was lazy. You NEED to find a PM you trust and go to their office hours every week for this class to be good, luckily I did  Aining was amazing and got me through the class.",
                    "127": "Helpful, but a little confusing, especially in the instructions of assignments.",
                    "128": "The assignments covered a broad range of skills in Python but the structure of the class could be improved. Lectures could have been more focused on doing in class practice of methods used in the assignments.",
                    "129": "I 100% recommend this class. This class was incredibly easy; all you had to do was show up 50% of the time, do the group projects and complete the assignments. No final!",
                    "130": "I thought that the assignments were not bad and the course overall was pretty easy going. There are extensions for each assignment and you get full credit for doing 50% of the tasks on Mondays. Overall, a pretty easy course.",
                    "131": "I learnt a lot about python, but most of it was through self–studying. Lectures were quite interesting but didn't really help with the assignments. Also although there were many PM office hours, there were no professor office hours."
                },
                "school_demographics": {
                    "Weinberg": 32,
                    "McCormick": 59,
                    "Medill": 3,
                    "Comm": 7,
                    "SESP": 2,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 65,
                    "Juniors": 24,
                    "Seniors": 14
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 3.3,
                    "student_count": 199
                },
                "student_opinions": {
                    "0": "course is easy and laid back. the quizzes can be tough and prof. kurdia throws curveball questions, but the lowest of the three quizzes is dropped. the labs are pretty tedious but you can work with a partner, and you can submit it for up to a week after the deadline with minimal points reduced. participation and activities are also pretty chill. as long as you show up to class, keep up with the concepts, and spend time practicing, you'll be fine. standard intro to python class",
                    "1": "I think that this course is helpful if you don't have much computer science experience (for McCormick students, I would say EA1 programming is more challenging than anything done in this class). Even with programming experience, it is interesting to learn python. I thought that the labs (homeworks) were actually pretty fun. Additionally, although the lectures covered basic things, they were actually engaging. There are constant activities and problems to do in class.<br><br>I think that Prof. Kurdia was very smart in the way she approached this class. Her mentality of helping students build independence in programming language learning was very wise, and I think that it will help many students in the future, even if they don't realize it now. I felt like my feedback was heard in this class. Prof. Kurdia sent out a mid quarter survey in which students stated that they wanted more in class activities, which we certainly received.<br><br>I think my only issue with this class is that it felt a bit disorganized, however, this was Prof. Kurdia's first time teaching it so I think this was understandable.",
                    "2": "This course served as a good introduction to teach the basics of Python, however if you have already taken CS 111, most of the concepts will feel very similar. I feel like there were some unnecessary elements of the course like the discovery activities and the some of the labs, as it did not really help me much in terms of learning the material. I would have much rather preferred a lecture of those topics in class rather than having to figure it out on my own during a discovery activity.",
                    "3": "This class should be a simple one, but due to the way that she taught it, it caused a lot of extra stress. Often the instructions for the labs were not clear, meaning to understand what you are supposed to do, you would have to scroll through the EdStem posts of students asking questions to get the clarifications. Furthermore, some of the class was not accessible since you would need to download huge files to do a single assignment. Also, she would have assignments due 8 hours after they opened, which is hard if you work a job or have a busy day on the day it happens to be published. Her teaching style is fine, but the way assignments worked was so unstructured and confusing that it was hard to enjoy the class.",
                    "4": "Very excited to find out it was focused on python coding as python is a well rounded language that is used almost everywhere. I believe its very fundamental for CS majors especially.",
                    "5": "This course was extremely challenging as someone with no prior Python experience. Professor Kurdia completely made me lose any interest in computer programming and did not provide any resources for us to become better programmers. The labs were poorly made and contained many issues that were completely unrelated to the code itself, resulting in hours and hours of extra unnecessary work. There were no practice exams for the midterms or final.",
                    "6": "The course itself was not that useful. We focused a lot on the very basics of programming which I guess is the point of the  course but when we did get to the more difficult topics like starting to use python libraries or just anything beyond the basics of programming, we skimmed over it. We were also never taught for these topics, we were given a \"discovery\" basically a packet with directions and told us to basically figure it out ourselves. Although I am a more hands–on learner, a bit more guidance in the lecture along with the hands–on activity would be more beneficial. The professor would over explain the basic concepts but not explain the topics that were a bit more confusing. The lectures itself felt a bit more unorganized. The part I enjoyed the most in this course were the labs, the homework. They were relatively engaging and at the perfect level of challenge, other than the last one as the near the end of the quarter the course kind of started to fall apart, things weren't getting graded and the direction for the last lab was extremely confusing that required you to start learning a new language. Since it was near the end and I've done well on all the other labs, I decided to drop this lab. Grading is relatively lenient. The professor is new, and you can tell she is new, she definitely has a lot to tweak in her lectures and course. In the end, I did not get much out of this course besides teaching me the syntax of python. If you have any coding background, a lot of the course will be tedious and repeating of what you already know. At the same time, I did not seek out and use all of the resources provided in this course as it was just not important to me. There are probably other students who got a lot more out of this course than I did. The lectures and course material can still taking some improvement.",
                    "7": "Completely unengaging and a huge time dump considering that the class is required. The lectures themselves were never insightful, the labs were hard because of lack of communication about what was asked of us, and the in–class activities weren't very hands on.  The class also never focused on trying to help us grow as programmers, instead teaching extremely basic concepts that we already covered last quarter but even more dumbed down, and then the labs were suddenly 10x harder than anything taught in class. Admittedly, the labs were the only thing making the class somewhat decent because they had realistic challenges, but they were often confusing because the auto grader was always extremely specific with what it wanted. TA's were very smart and helpful, and the teacher answered my questions very well one–on–one, but didn't bring that same energy to lectures.",
                    "8": "It was okay. The teaching was pretty mid, I don't think I would've undertstood/learned much if I didn't already know Python going into this class",
                    "9": "I was really looking forward to this course as I wanted to learn deeper fundamentals of Python. Unfortunately, Professor Kurdia did not seem to be interested in teaching. For example, she did not encourage question–asking in class. She informed students to never email her, and emails were rarely answered, unlike every other Northwestern professor I've had.<br>She also told the class to use ChatGPT to learn computer science. I was hoping to learn from a human versus OpenAI. Furthermore, assignments were rarely graded in a timely manner, and regrade requests would often go unanswered for numerous weeks. We also never received feedback on our code. We would have liked to get some kind of feedback on our code rather than the autograder simply marking it \"correct\" or \"incorrect\". On multiple assignments, Professor Kurdia gave us baseline code which we were supposed to use later on. However, sometimes, the baseline code was inaccurate, and we would realize that only after spending multiple hours to leverage it. We would have to go to the PMs who would point out that Professor Kurdia has given us wrong code or pasted the wrong prompt. This took up a lot of productive time. <br>Lastly, the week before finals, Professor Kurdia gave a speech about how important CTEC reviews are for her. I'm hoping she focuses on the students' learning, as that would translate to more positive feedback versus her mentioning how it will have an impact on her promotion.<br>One thing I appreciate is that she shows up to class on time.<br>To the student: if you take this course, be prepared to self–study or have friends who know how to code in Python.",
                    "10": "Really didn't have any",
                    "11": "I think this course is poorly taught and I didn't learn much. The lectures are not very applicable to the homework and the order didn't make much sense.",
                    "12": "Prof. Kurdia is so bad. If you have the option to take it with another teacher you should. Her lectures are very boring and she basically just reads through the slides. The labs have no correlation whatsoever with what we do in class.",
                    "13": "I was nervous to take this course at first as a non CS major, but it was actually really manageable. Make sure you leave extra time for the labs though (6 total) because they can be frustrating when you get stuck and don't know what to do. You basically just have to go to office hours to work through every lab if you want to do well, but the PMs are amazing and super helpful. I think this is just because we had a new professor but we had 3 quizzes (1 gets dropped) that make up 40% of your grade. I found this really annoying because there wasn't much to study and studying the content doesn't help you get better or learn to code better. All in all not a bad class and is a major requirement for most people, just be aware of leaving yourself enough time and the boring/pointless lectures.",
                    "14": "None of the content is particularly difficult; the class is mostly busy work. The (mostly) weekly \"discovery\" assignments are annoying to complete, but not difficult. Easy to get an A in, with how many grades are dropped.",
                    "15": "I thought the format was confusing. It felt almost as if no time was spent lecturing and instead we were supposed to learn via experimentation/discovery. Many Monday lectures just turned into insufficient work time where the assignment given needed to be finished outside of class anyways. Additionally, homework being due on Wednesdays at 9pm did not make any sense. The idea might be to ensure that students don't \"stay up too late\" completing assignments, but this did not work for me at all because I have orchestra rehearsal on Wednesday evenings. Also, use of the autograder was extremely frustrating.",
                    "16": "Prof Kurdia is kind and knowledgable, but it's difficult to stay engaged during lecture. The slides aren't always clear and labs can feel difficult in comparison to the content from class. There are 6 labs (lowest 2 dropped) and 3 quizzes (lowest 1 dropped).",
                    "17": "I felt that oftentimes, because of previous Python experience, classtime felt useless. Compared to some other courses offered such as EA, the programming concepts in this course were introduced rather slowly.",
                    "18": "This course is super doable if you have a background in CS in a different language because then it is just applying that knowledge to learning Python. The course is not the best at really teaching you, but it is easy to figure things out through assignments and labs. This class is an easy A if you put in the work and an easy B+/A– if you just complete the assignments and don't study for the tests.",
                    "19": "The course itself shouldn't be too bad. The midterms get very tricky and some of the questions can be tedious. However, I feel that I learned much more from doing the exercises and labs than the actual teacher. The actual structure of the teacher was a bit weird it seemed as if she just read things off the slides. I learned much more from my peers and the work than going to class. Doesn't give any practice midterms which makes it somewhat difficult to study for the midterms.",
                    "20": "If this class could be summarized in one word it would be DISORGANIZED. Professor Kurdia struggled to keep control the class and very little learning went on. Classes were filled with \"Discovery Activities\" which were just busy–work activities that took up significant time outside of class to complete. Rather than actually learning programing concepts, I spent copious amounts of time trying to install obscure software that we used maybe once.  There were weekly homework labs which were good for learning, however they were graded with an \"Auto–Grader\" which gave 0 credit on answers that deviated in any way from the correct answer. Your code could work perfectly and you could obtain the correct output, but if you had a different format, the question was marked as incorrect. It was demoralizing to receive a 0% on an assignment I spent hours on, simply because I was missing something trivial like an extra space. In conclusion, this class was ill–prepared and I often felt like I paid the price for this.",
                    "21": "Overall, I enjoyed this class, but I think there were some obvious growing pains with it being taught by a new professor trying to implement a new class style for 150+ students. Assignments sometimes had unclear instructions and it felt weird to often try and learn from third–party tutorials instead of official class slides/lecture notes/handouts etc., but I got to learn everything well and I think a lot of (anticipated) criticisms are undeserved. The professor was/is always positive and genuinely wants you to succeed, and getting good scores on quizzes/assignments was always manageable. I wish I could've been in the 3rd or 4th cohort of students to take this class under Dr. Kurdia, but I'm certainly not going to complain about my CS150 experience.",
                    "22": "Easier than CS 111 because it's in Python, but not necessarily an easy course. You still need to put in the work. The Professor is not very good at keeping the class engaged because she teaches very slow and it's difficult to pick up the important things in between the unimportant ones. The course is NOT structured well and expectations for grading as well as understanding what grade you have is not clear. You have one lab a week and if you aren't a programmer, it will take you around 6 hours but you do get to work with a partner. There are three quizzes and you get to drop one. The first one is easy, but don't let that fool you. Quizzes are 40%, Labs are 40%, Practice is 10%, and Participation is 10%. SHOW UP TO CLASS EVERY CLASS. You might not be learning that much, but you never know when you are going to an in class assignment that counts as participation/practice and it's not very clear what is for points or not, or what is just for completion versus accuracy. I don't recommend taking this class unless you are taking it for a major/minor requirement or are very good at coding.",
                    "23": "The instructor was not very prepared for class on a day to day basis; everything felt MacGyvered. Regardless, the class work is relatively easy if you have any experience in Python.",
                    "24": "Really did not like the class structure. Attendance was required due to the use of pollev, but we learned absolutely nothing in class. I believe it is Kurdia's first time teaching at Northwestern, and it definitely showed. Quizzes were hard for no reason, the answer key was frequently wrong, and overall the class was just a mess.",
                    "25": "I thought that although I did learn some things in this course, I didn't feel like the course was good at teaching me basic Python. I thought instructions were unclear, there wasn't much direction on homework and how to utilize the autograder, and the lectures weren't very useful.",
                    "26": "this course teaches extremely basic functions and syntax for programming in Python, most of the stuff that's taught will be known if you have even very little experience coding in python.",
                    "27": "This class disappoints in almost all aspects. Learning materials are taken from third parties, the labs are much more difficult than what is taught in class, etc. You are expected to learn on your own. On the other hand, exams are not too challenging (3 quizzes of which one is dropped), but yet again, testing CS knowledge with multiple choice quizzes... idk.",
                    "28": "This is a very easy class. Just make sure you understand all the concepts given",
                    "29": "Didn't learn much but is a good starter for beginners",
                    "30": "–",
                    "31": "I came into the school to expect to learn python, but didn't really learn much. It was hard to understand her and the homework wasn't very helpful either.",
                    "32": "Good class, nothing too challenging.",
                    "33": "Overall the class is good, most shortcomings of the class are caused by how large the class size is. The quizzes are also useless in the process of learning.",
                    "34": "I am satisfied with this course based on the organization of the material. I would say what we learned was well distributed until the end. The end of the course focused on importing different libraries, and I think we could have used more guidance going into this portion of the course.",
                    "35": "I thought that the labs were fair in that we were given plenty of time to complete them. It seemed, however, for the later labs that there was bound to be something you would be not able to complete without consulting a TA on EdStem. It was poorly organized in that we only got some information if you checked EdStem, even though the lab assignment/code file should theoretically have everything you need to complete the assignment. I did not like the structure of exams in this class. While the content was not too hard, the quizzes were 25 questions, and you rarely got partial credit, so any mistake you make is 4% off your grade for each, which can accumulate quickly. Furthermore, the professor seemed to try to engage with the class, but failed to do so. Most often, her lecture were not engaging at all, and you were better off learning by doing that week's lab assignment during class, in which you would learn more there.",
                    "36": "Professor Kurdia was kind, supportive, and had a genuine love for programming that really shone through in her approach to teaching. None of our assignments felt like busywork but were instead all an opportunity to delve deeper into the principles of Python. The only gripe I had is that the course at times felt unstructured, but I expect this to be resolved in future quarters.",
                    "37": "I think that this course did a good job of introducing some topics that even intermediate python coders may not have known before.",
                    "38": "I really enjoyed thos course, especially due to the way it was structured. When I was taking cs 111, I felt it was always a generator of stress throughout my week and I wasn't really learning anything throughout the lectures or the activities in class, so when the weekly lab assignments came I had to teach myself everything. However, for 150 you were able to see the ideas behind all the concept in addition to seeing it being coded in real time. I didn't have to realy much on watching youtube videos to understand certain topics except Classes, but other than that, the slides, lectures, documentation and in class activities were enough for me to do well on the quizzes and weekly assignments. I've heard from other people in the class that they feel youtube videos are easier to follow or that the professor overcomplicates things, but in the end it comes down to how you more effectively learn and for me professor Kurdia's style was more effective for me than professor Connor Bain's.",
                    "39": "No. The projects are very easy. The quizzes do not help you learn problem solving and programming.",
                    "40": "Professor Kurdia is new, so its hard to be too harsh on her but this course was pretty horribly run. There were some lectures where we would just spend the entire lesson downloading IDEs or programming languages. Some in class activities were also horribly organized.",
                    "41": "This class was not that hard, but sometimes frustrating.",
                    "42": "Overall good course that is great and even enjoyable for people completely new to coding.",
                    "43": "There were a lot of in–class activities, which made this class a bit annoying. Furthermore, the autograder was so nit–picky and usually didn't give clear reasons why your program was wrong. However, this class should be an easy A if you study for the quizzes.",
                    "44": "This class provides a nice overview of python with several labs. I also appreciate how there is a bit of leeway with the grading in the course and a certain number of lowest lab scores and quiz scores get dropped. I thought that the lectures were not the best format for learning python concepts as they provided information about a concept without many specifics about how someone actually codes with it. This class teaches you a general overview for learning a new coding language which is extremely applicable.",
                    "45": "Honestly this class is a really great second CS class to CS111 – it builds upon most of the ideas but Python is so much more practically useful. I liked better than in 111 the lectures were recorded and to be watched outside of class and during class we worked on the weekly projects – I think that each student needs a different amount of time with the lecture content and questions evolved most often when writing code rather than learning about its theory. Also, the amount of \"lowest X assignments dropped\" was surprising to me but I suppose I can't complain.",
                    "46": "TThe course was super disorganized, and the teacher literally said \"The less I teach the more you will learn.\" She sits in class and talks about nonsense with no structure. The first day we jumped right into programming with no teaching about what python is or the syntax or anything basic. The class was just a mess and made me hate CS.",
                    "47": "This course clearly could be very useful, but unfortunately I found the lectures to be pretty useless – I understand that it was our professor's first time teaching a class at Northwestern, and she continued to improve as the quarter progressed, but if I'm judging the course as it was this time around, I wouldn't rate it very highly. I ended up teaching myself most of the material when completing assignments rather than actually learning anything during class. That being said, the professor did grade very fairly.",
                    "48": "This class taught me nothing about programming. The lectures talked about basic lessons in terms of programming and Python problem–solving, which was far too little support in terms of the assignments we were given. We did discovery activities in the beginning of the week, then never discussed what was supposedly learned in the activities. Moreover, the time in class was not at all enough for the activity itself. In terms of the lab topics, we jumped from one topic to another with no rhyme or reason without learning anything thoroughly.",
                    "49": "This course made me realize that comp sci is honestly not for me. The teacher tried her best to teach us, but unless you're actually interested it won't be that much fun.",
                    "50": "The course isn't hard, it's just annoying. The quizzes are a pain that just tests how much you can not make very stupid up in a 50 minute period. It's not an easy a, but it's not hard. Take it if you have to, but skip it if you can.",
                    "51": "I think it was a shame that the previous professor left, because the new one simply cannot fill her shoes. I took issue with the style of the class. Firstly, with the discovery assignments. Essentially one class out of the week would be spent on a discovery assignment. This assignment concerned a new topic that was talked about or covered in class at all previously. The idea behind it was to challenge your brain; however, I believe it was unsuccessful because people just spent the entire class being confused or looking up the answers. I think that perhaps a flipped classroom that day would have beneficial. For example, if we watched a lecture at home about the topic, and then came in during class and did the assignment. Another issue was that Kurdia only liked to be addressed through Ed, and this made personal communication with her very difficult. Her slides were boring and she lacked the energy required to captivate a large room. Many of labs needed to be regraded because points were recklessly taken off.  Additionally the homework was released on Friday, but then due on Wednesday not giving adequate amount of time to be completed. The homework often had unclear instructions and sometimes tests were not provided and there was no autograder. Overall I did not enjoy this class, during the last week people were actively walking out.",
                    "52": "Don't take it if you are not required. Assignments take so much time and this is a bad method for learning python. Simpler problems will teach you the same without the struggle of the big data bases she has you use.",
                    "53": "For someone with programming skills, there is not much to learn here, except maybe if you you did not do Python before–like me, which gives the basics you need for it. The labs are also amazing, they show the application of what you are learning",
                    "54": "This course has many problems with it. Firstly I think it is very poorly structured. Every Monday, there is a discovery activity where you go through an exercise either by yourself or in a group  which helps you learn certain concepts and essentially explore certain concepts. In theory this sounds like a nice idea, but the activity was due in a day and everyone was in a rush to complete it as soon as possible, so didn't really soak in the information of this exercise. Besides this there are a lot of activities in class that are not that interesting and don't do a great job of   helping understand the concepts as they are held on a separate software intended for aiding the learning process which leads to more focus on figuring out the software, website rather than understanding the topics.<br><br>A large problem with the class is definitely the teacher. Professor Kurdia seems like a nice lady and did answer a lot of the students' questions, but her lectures were extremely boring. She has a very soft voice and in a large lecture hall could not really command the class nor get the students to pay attention that much. There weren't that many activities where she  engaged with the students in the class. If she had more energy and enthusiasm, this may have helped people pay attention a bit more. Most times it feels like Professor Kurdia is just talking and people are hearing without really listening. I came into this class having a pretty good understanding of Python, but I expected to learn a lot in terms of problem solving and design patterns and I was disappointed that this class didn't teach any of that. This is in contrast to CS111 where I learnt a lot about how to think like a programmer even though it was taught in Racket.<br><br>The only redeeming part of this course was the labs which I felt were quite interesting and challenging. They forced you to think a bit more and taught a lot about writing tests, documenting code by writing comments and doc strings, and writing more clean code by effective use of functions and constants. However, I felt that for someone who doesn't know Python, the lectures are not effective enough in laying the foundation for the labs leading to you having to self–learn a lot of things.",
                    "55": "I didn't have a great time with this course. I feel we could've been given better labs that were more intellectually stimulating and that class time could've been spent better. The quizzes were worth 40%, which I think is too much, as most of the learning and work was put into the labs.",
                    "56": "The class isn't that hard. You will most likely obtain a good grade if you pay attention and work on the assignments. However, this class will mostly be you teaching yourself how to do things. The homework assignments are good at getting you involved in the subject and learning what they are trying to teach you. However, the directions on quite a few of them were vague at best. I think this class was made to be more complicated than it should have been by the teacher.",
                    "57": "Not worth it. Honestly go watch some python videos and search up python projects and try to do them. Literally a waste of time.",
                    "58": "Lectures were extremely uninformative— all my learning happened from ChatGPT and Google searches outside of class. Exercises were also poorly instructed, so we heavily depended on edstem questions to know what we were even expected to do",
                    "59": "Professor Kurdia was not the best teacher. I feel like I could've learned everything that she taught in a quarter on youtube in one day. The lab instructions were often confusing and the overall class structure was not good. I liked the course, the material was great and it was great to get away from Racket and transition to Python but don't take it with Kurdia if you have an option.",
                    "60": "I think that for the most part, this class is easy to people who already know Python (which I think is a large percentage of people in class), and it might be quite challenging and demanding for someone who is new to Python. Also, I hate to say it, but I think that just going through the W3Schools online tutorial of Python is an easier and more efficient way of learning Python than this class has to offer.",
                    "61": "I think this is a pretty good introduction to coding and Python as a first language. If you have used Python before like I have then this will be a very easy class for you and even if this is your first coding class it will be fine since there are lots of resources to help you if you get stuck. I would say that the structure of the class is pretty good too since a lot of the class times tend to be you and a group (or yourself) working on a worksheet and/or practice activity to help learn some basic functionalities of Python and also coding in general. Besides practice activities there are also standard lectures which can be a little dry but they mostly serve to just introduce the concepts and then you practice them on your own. For homeworks there are 6 of them and you can drop the lowest grade which is nice (same for the Quizzes/Exams). The exams themselves are very fair and are simple enough I believe. Overall a pretty good class for introducing coding and Python.",
                    "62": "This is a very easy class. If you put in the work to do the labs and go to class, you're essentially guaranteed an A. However, and I'll cut her some slack because it's her first year, Professor Kurdia is not very good at teaching. Her lectures are boring and seem to go on forever. When I look at other people's computers in class, no one is paying any attention to her because it is just so difficult to.  Also, when we had in–class activities, we would have to completely learn the new topic on our own, and in the next class, she would then teach it. This once again made class so boring because we were relearning something that should've been taught before the in–class activity. I had a bit of experience with Python beforehand, but if I hadn't, I think the in–class activities would've been near impossible. Luckily they were only graded on completion, so that was a good thing on her part. Professor Kurdia also seemed pretty unprepared. Every assignment or quiz had at least 1–2 vague questions or things that just led to unnecessary confusion. It was also impossible to communicate with her outside of class. She told us not to email her but to reach out to her on edstem if we had any questions, which is a totally fair thing to ask. However, I reached out to her four times on edstem and never got a response. If you didn't talk to her within the 5 minutes she was there after class ended (and there was always a really long line to talk to her), your question wouldn't get answered. The TAs responded quickly, though.  Another thing she did was treat us like we were in high school. Her mic was always really quiet, so when she began class no one really noticed and continued talking. When this happened, she would either stand in silence and stare at everyone or she would turn the lights on and off. And this wouldn't really do anything because everyone would just be confused about what's going on. I truly hope she grows as a professor and does better, but it really wouldn't be the worst thing in the world if you took this class with her because it is easy.",
                    "63": "I thought this class was okay; I learned about things I did not know before in Python like using classes and recursion, but the lacking feature was structure. The grading was confusing because one of our first labs allowed for late submission without penalty and then after that, it was unclear if this policy applied to future labs even when students asked for clarification. I did not like that attendance was mandatory for participation because I had a lot of prior knowledge and did not find the activities particularly instructive all the time. Labs were doable and TAs were very helpful because of the large instructional team, which was nice.",
                    "64": "I don't know, the instructor was really not great. I think lecture time could have been used better. She seemed disorganized and learning was mostly expected to take place outside of class/individually through discovery assignments that were never gone over. This ultimately meant we'd be set out to learn a concept all on our own, but never have clarification to see if what we learned was actually right. It just was not an effective model. I don't think going to lecture was useful at all to me, although it was mandatory. The last lab assignment was also pretty crazy – she expected that we learn a new programming language (not python) the week before reading week. Wanted us to do a project in that language and write a paper about the experience. It just wasn't a good use of time and was a pretty crazy ask. Resources are pretty good though, edstem is helpful if you have an issue completing a lab. Lots of office hours and opportunity to get help. Quizzes are not too crazy, although they have some trickier questions.",
                    "65": "This class is so disorganized. I understand that this is Professor Kurdia's first quarter teaching at NU, but she's taught at other institutions before and I would have expected it to be a lot more organized than it was. I would have appreciated it if we knew how many labs we had in the quarter and just how the auto–grader policy worked so I wouldn't be docked points. I honestly came out of lectures more confused than when I went in because she kind of just rambles very quietly in the lecture hall and writes some things down in chalk sometimes.  It also kind of seemed like she didn't know what she was doing when doing coding in lectures and it was not a reassuring sight. Doing labs helps you learn a lot! Go to office hours; the TAs are incredibly helpful and knowledgeable and will walk you through the incredibly vague instructions given in the labs.",
                    "66": "The course was overall engaging and beginner friendly.",
                    "67": "I enjoyed this course. It required minimal work, and the concepts were very easy to grasp. The weekly labs (worth 40%) were relatively easy, and there were lots of office hours that you could go to get help or just sit in there and work on them by yourself or with peers. There are also discovery activities (worth 10%) graded for completion every Monday that you get to complete with a group.  Attendance is also graded (10%). There are 3 quizzes (worth 40%) that are all on Canvas and completed in class. They are mostly multiple choice and a few free responses where you have to write code. This course is a great intro to programming course and really could be taken as a fifth class the workload is so manageable. I really enjoyed Professor Kurdia's teaching style and general attitude. She really cares about her students and helping us succeed. Highly recommend this course for anyone, regardless of major.",
                    "68": "This class was not challenging or stimulating in the slightest. Required attendance for pointless class periods and easy problem sets.",
                    "69": "I have a lot of mixed feelings about this course. Coming in as someone with some Python and general CS experience (CS 110/111 alongside data science courses), this course was not particularly difficult to grasp conceptually,  but the labs and in–class \"Discovery\" activities still took unnecessarily long to do. The discovery activities were POGIL worksheets in the form of editable PDFs that were meant to be done collaboratively. However, I think that \"collaboration\" was counterproductive. In the time we had, it was difficult to make the idealistic case of everyone working together simultaneously and ensuring each others' complete understanding to ever happen for groups beyond just 2 people. It doesn't help that I also found the discovery activities unhelpful content–wise because rather than hands–on experience with coding, it was more so copying code to see what is outputted. If anything, actually coding things would be more helpful than trying to approach it conceptually by answering numerous specific questions like \"How many attributes does this class have?\" to teach you where to find such info. Compared to my experience with CS 110/111 with tutorials, there is a lot to be desired with those in–class activities, but at least they were completion–based. We never got answer keys, though (and if we did, I cannot easily find it).<br><br>The slides were also lackluster. They contained info, but they weren't compiled very clearly, and I found it unnecessarily difficult to find certain topics at times. Those basic topics we were asked about in the discovery activities would've been easier and less tedious to learn if there were slides that clearly labeled everything in a general way. On top of that, there were multiple instances where there was something in the labs that I could not find info about through the slides (or even the discovery activities). Speaking of the labs, they were also very annoying to do. Some were borrowed from the CS 150 professor in past years, and that professor was also known for being subpar. The instructions were confusing at times, and the number of questions asked every week on edSTEM about things that should be made clear is concerning. There was a lab where one TA had to post clarifying notes for every task in that lab with how many people were having trouble. I don't know if it's some strange attempt at making us comfortable self–teaching and working with messy code or comments, but regardless, it's upsetting that we are expected to learn the actual concepts well with that. Trying to teach self–teaching skills would've been better done with assignments or projects that include some creative liberty and just have a list of code requirements that you need to implement. The labs are graded on performance rather than completion, but the two lowest grades were dropped (including 0s, so you could skip some). The late penalty was unclear, which was frustrating. <br><br>The boundaries between different topics were somewhat unclear, but that could just be because the lectures were very dry. With the room we were in (Tech LR2) and how Professor Kurdia does not have a very clear voice, it was difficult to hear her at times. As a person, Professor Kurdia is great, and she tries her best to answer questions directly. But as a lecturer, it was hard to stay interested, especially with how slow/inefficient the lectures sometimes felt. That could be because I have experience in Python, though. Attendance was graded through PollEverywhere, but there was no explicitly stated pattern for when we did certain activities in class (like when we will have a discovery activity, when we will have PollEv activities, etc). The syllabus lacked much useful info beyond the grading scale (which was unusual in that, for example, 94–100 was an A, but all non–integer grades are rounded up, making the actual range 93.01–100), and the number of grades we can drop per category.  At the beginning of the quarter, there was also a lot of confusion about which Python environments we were supposed to use (Visual Studio, IDLE, Spyder, etc.), which could have been easily avoided if there was one particular environment we were all recommended to use with the installation instructions given. <br><br>The only somewhat positive aspect of the course I see is how there are 3 quizzes and the lowest grade is dropped, making it 2 quizzes you need to take. If you are happy with your scores on the first 2 quizzes (the medians were 21 to 22 out of 25), you could skip the last quiz, which was scheduled during the final exam time. The quizzes were not too difficult (mostly MC with a few coding questions, and no cheatsheets/resources provided during quizzes), but we never received practice quizzes, which I think could have been very helpful.<br><br>There were more examples of things that contributed to my dislike of this course in addition to everything I have mentioned. I don't recommend taking this class if you don't have to. I went into it thinking it would be fairly relaxed, but even though the content wasn't difficult for me, it ended up unnecessarily stressful. If you are still fairly new to Python, this class might actually be quite demanding. I don't have high hopes of this course improving with how it seems to have been consistently mediocre before, but it would be great if Professor Kurdia could properly revamp and improve this course after the past professor.",
                    "70": "It was a little easy, but covered most of what was important.",
                    "71": "Easy but mediocre class – I liked learning about Python itself but the professor was a dry lecturer. Labs are annoying because instructions are often very unclear, so you have to spend more time figuring out what they expect your code to do than actually writing the code itself. Quizzes require pretty minimal studying, although it's worth reviewing at least a bit because some specific content is tested that you won't remember otherwise.",
                    "72": "If you have prior python experience, you should be good. It's really easy to get lost tho.",
                    "73": "Overall, the course was not insanely difficult, but I feel that the teaching for this course could have been a bit better.",
                    "74": "This course is a drag, the Prof. Kurdia genuinely does not know how to teach. The class is such a drag and the assignments are just given and you'll need TA help to complete them. The slides in class don't teach you anything. The quizzes are pretty easy, if you study a bit you'll be fine.",
                    "75": "Easiest A in my life (they dropped nearly 30% of the assignments), but you don't learn anything new. The teacher does not really teach, extremely unengaging. You basically teach yourself the entire course. You probably need to take this class anyway because it's a pre–req for everything.",
                    "76": "just one positive: you can tell she cares about the class and actually wants us to learn and better ourselves, she just does not accomplish this goal in an efficient manner at all<br><br>the monday discovery assignments made us learn by ourselves, so by the time she covered it in class no one would pay attention because we all knew the material already so she would just be yapping into the void. also for the discoveries she would have us download or use additional resources/files/software and the internet would be really slow so it would take forever to get done but she wanted it done by the end of the class time so we would feel rushed and annoyed. in the future i hopes she tells students BEFORE class starts to download/open up the software. also the questions on the discovery assignments were so so simple and many of them didn’t involve critical thinking and it was so dumb. <br><br>towards the second half of the quarter she failed to post grades to canvas in a timely manner so we didn’t know our grades at the end. she selectively answered ed questions and did not answer the most important ones (ex: when will our final quiz scores come out? will we be able to drop our last lab?).<br><br>some labs were really poorly explained and students had to go on ed multiple times to get clarification. grading of labs was also poorly explained. she removed the autograder and then only allowed us to see our autograded score after the due date and then let us fix our code and then resubmit for full credit. but this is dumb because then we have to fix our last week’s code while writing this week’s code at the same time which is really inefficient and confusing to switch between labs. <br><br>it’s sad that we do need more female representation in cs education and she is many people’s first exposure to it in contrast to the amazing connor bain of cs 111 in fall quarter<br><br>tldr: professor sucks (worst cs prof i’ve had so far), but class material is not that hard, quizzes are fine",
                    "77": "This is a TOUGH course. Do not overload or take a tough schedule with this. Read the lecture notes, watch python tutorials and complete the labs to do well on the quizes. NOT an easy A. Grades are not curved, so this is definitely a GPA killer.",
                    "78": "Only take this class if this is your major requirement. You barely are taught anything in class. When submitting your labs on gradescopes, you don't even now whether or not you got full points until after the due date, so often you have to resubmit after the due date. Even if your code works properly in python, it might not be correct on gradescope. Also, there are no practice exams since before cs150 had no exams.",
                    "79": "Avoid this course if you don't want to waste your time. This course is not a hard course; it is just a boring one, you learn so little, and the professor does not know how to engage with the class. She tries to make it more interesting, but his disorganized lectures and talks just make it hard to learn new content. I ended up self learning most of the material, where lectures didn't really help. Also I would note that attending lectures was mandatory. Quizzes were fine.",
                    "80": "The grading system is very generous. Many assignments are dropped and your highest grades for 2/3 quizzes are kept.",
                    "81": "This course was very poorly organized. It was this teacher's first time teacher this course so I hope it gets better over time. There were 3 quizzes instead of a final/midterm and you got to drop the lowest one. The homework labs were the most helpful aspect of this course, really good way to actively learn python.",
                    "82": "The course is relatively easy but the labs and discoveries get annoying. The lecture slides were posted a day after the class, and the practice assignments we had to do in class were added to Canvas about 15 minutes before the class started.",
                    "83": "Boring. Not worth the time nor effort if you already have some programming experience from other courses/experiences. CS department really needs to start thinking about the demographics of the class and offering appropriate alternatives for students of different levels.",
                    "84": "Taking CS 150 with Professor Kurdia was a choice I'm grateful I made. Before taking CS 150, I took CS 111 and had experience programming in MATLAB (EA sequence) so code was nothing new to me. As for python, I haven't practiced much so I was very much a beginner. Professor Kurdia structured the course in a excellent manner despite it being her first time teaching the course at Northwestern. She made sure to teach us the very basics of python and fundamentals of python before moving on, unlike the previous Professor who went too fast for my liking and sort of threw us in the deep end. The only thing I'd wish was done differently about this course is how long it took for our Quiz 2 to be graded, but even Professor Kurdia acknowledged this as a mistake that she plans to change and improve on in the future.  My advice for students who plan to take this course, regardless of whether its with Kurdia or not, is to start early on lab (code) assignments and to go to office hours as much as you can. The PM's (Peer Mentors) are more than happy to help you and even if you have a simple or \"dumb\" question (no such thing btw), asking that question rather than keeping it to yourself will help solidify your knowledge of the content.",
                    "85": "I really enjoyed learning about reading data files with python, and there implications.",
                    "86": "Labs were more annoying than intellectually challenging.",
                    "87": "This class is good if u actually want to learn python. There is a lot of self study that you have to do because the professor only teaches the basic concept and then tasks you with much more complicated examples in the labs. Overall good class and nice teacher.",
                    "88": "I don't learn coding well with lectures, so that wasn't great. Lecture felt pretty useless until she had us to examples",
                    "89": "The course, while not particularly difficult overall, suffered from ineffective instruction. The explanations of new concepts lacked clarity, and access to course materials on Canvas was unreliable, hindering the ability to review missed slides promptly. In–class demonstrations were boring, and lectures felt monotonous, lacking engagement. There's a strong sense that there's room for improvement in providing clearer and more engaging explanations for the course content. Weekly labs provide some practical application, although they do require a significant time investment, making collaboration with a partner advisable. However, there's a notable absence of practice materials for quizzes, necessitating the development of individual study strategies.",
                    "90": "The course was horrible. Materials were borrowed from external sources, the professor skimmed through the content and was unable to answer questions students had.",
                    "91": "CS_150 with Prof. Kurdia was an absolute DISASTER from beginning to end. Prof Kurdia started the course with the most disengaging presentations I have ever seen. This was reflected in the fact that no one in the class seemed to be paying attention ever. The classes were a monologue of Prof. Kurdia rather than a presentation. Often, she seemed to be talking about completely unrelated topics to the class, sort of to make it \"relatable\", however, it had quite the opposite effect. We are college students and adults learning Python– we are not in elementary school and certainly do not need elementary comparisons of the code to real–world examples. <br><br>Not to mention the fact that Prof. Kurdia has NEVER responded to any of my emails, even though I sent like 4 over the quarter. I'm aware some professors might like to use other platforms for messages, but the university gives professors email addresses FOR A REASON. <br>Additionally, during our \"discovery\" sessions, where we were filling out a document about a new topic and needed help, Prof. Kurdia left the classroom each and every time, reappearing at the end of the class to say it was the end of the class. This wasn't supported by the fact that the PM's were absolutely horrendous, staring at their phone most of the time rather than going around and helping.<br><br>In conclusion, this class was HORRIBLE, and I'm surprised a simple class like this can be taught so unprofessionally at the 9th best University in the States. Please, DO NOT take this class with Professor Kurdia, wait until someone else is teaching the class. As for the teaching standard, I hope Northwestern finds a professor for this class worth teaching at such a high–rated institution, which certainly Prof. Kurdia is not.",
                    "92": "This course was organized very poorly. The class honestly taught me very little new content and material coming from CS150. The professor lectures very poorly, and spends too much of the course lecturing rather than showing examples.",
                    "93": "I didn't learn much. Maybe cuz I came in with prior python knowledge. But Anastacia is a very cool teacher. Her methods may not be as effective but it's evident how much she tries to put. The tests are simple, and the overall grading pretty fair. I def recommend taking a class with her.",
                    "94": "I didn't really like this class, but I'm not interested in computer science and only took it for a major requirement. If you're interested in learning python, it will teach you pretty effectively through the labs and projects, but the quizzes/midterms were usually pretty hard to do really well on because they were only ~25 1 point questions and there were usually at least a few questions that were phrased badly/unclearly in a way that seemed like they were trying to trick/confuse you more than necessary.",
                    "95": "Easy A. Just go to office hours if you need any help. Follow instruction and you'll be fine. Have coding experience prior to this class! Or be prepared to be very confused and spend hours self–teaching everything.",
                    "96": "The class was structured very well. It’s hard to teach something so applied but the range of activities in and out of class made the material more accessible",
                    "97": "Great introduction to Python! The professor was ready to listen to the students feedback, and she implemented it right away. I find the class weekly discoveries not efficient to an extent as it was more of self–taught process, so that took some time to get used to, but the overview after the discoveries and in–class coding helps a lot in implementing and understanding the code. I especially like the weekly labs. We got to work with real data and solve real problems that it was fun (go to office hours, it helps!)",
                    "98": "Cons: Response on EdStem is frustratingly slow, which may not seem like a big deal but when a lot of people have the same question but there's no response to it yet there's a response to another question, it can get frustrating. Also, the lecture isn't really helpful, especially since concepts are only briefly covered before they move to the next topic. I found it more helpful to read online documentation about Python instead of going back to the lecture recording. <br><br>Pros: The lab is pretty good at making you implement what you learn and office hours are really helpful when you're stuck on something. There's a late policy of up to two weeks with 2% off each day, which I think is a good deal especially when assignments from all classes start stacking up.  The lowest 2 lab grades and the lowest quiz grade get dropped. <br><br>Neutral: There's a Discovery activity in which you go over new concepts while answering some questions. However,  depending on the person, you might find it more suitable to finish it with a group or by yourself.  A lot of people try to hurriedly finish it with class but keep in mind that it would be best to review it afterward to retain the concept well.<br><br>TIP: Review Python beforehand if you have the chance. Once you have the foundation, every lab and quiz will significantly be easier",
                    "99": "This course is doable if you have taken cs 110 or previous coding experiment.",
                    "100": "Professor Kurdia tried her best, but lectures were sometimes not engaging, especially in the beginning. I have a feeling that they will continue to improve, however. This was the first quarter with midterms instead of just homework, which I didn't like because it required a knowledge of specific syntax that isn't really necessary for real coding. Still a good representation of knowledge, though, but you might have to study a little.",
                    "101": "Prety standard requirement course. Professor Kurdia does care about students and tries to engage the class, which is always nice. Assignments are pretty easy (in class, discovery) and the lowest 2 get dropped. Attendance is required, but those are just free participation points. Three in–class quizzes (lowest 1 gets dropped) and around 7 labs (lowest 2 gets dropped). You'll need to spend a bit of time on the labs as they do take a good amount of time, but they're pretty structured so it shouldn't be too hard to get an A in the class.",
                    "102": "Python is a great language to learn especially if you just need a general purpose language. However, this course is not the place to learn it. If you have any programming experience, it would be far easier and much less infuriating than going through this course. Most intro CS courses use an auto–grader to grade assignments, and the good ones will let you resubmit your homework in order to make sure the auto–grader doesn't flag your code for minor discrepancies. This course did exactly that, it let you resubmit your homework to make sure you got the code right and didn't have any formatting errors. Or at least it did until about week 2 when the prof turned off the tests on the autograder until after the due date. This means that it was often times a crap shoot when deciphering what the homework wanted you to do. (No it didn't help that most of the questions were written extremely poorly, and most of the data analysis homeworks were the definition of tedious). But my issues with the class don't end there. Most college students can put up with bad homework assignments, but a greater crime is that the lectures for this class were incredibly boring. In one of the biggest lecture halls in tech, the professor put the microphone about as far away from her face as possible to the point that if you weren't in the front row, good luck listening. The actual content of the lectures was elementary and repetitive, but still only scratched the surface on what they expect from you on the homework assignments and quizzes.",
                    "103": "This iteration of the course with Prof. Kurdia is much more difficult than I'd heard from peers who took it previously. Personally, I'd come into the course after taking both 110 and 111, and I'd recommend the same unless you're an experienced programer. The course moves extremely quickly, and I would've been lost without prior knowledge of the content. It flies through learning Python, and towards the end of the course flies through ideas of recursion and object oriented programing. Lectures, while required, were dull and difficult to pay attention to. The expectations for assignments (what to turn in, what was due, details for projects) were particularly unclear. Many times assignments were not announced, and there was no consistent schedule for due dates for participation assignments or projects. Exams were the most stressful, as we were never really told what to study except to \"achieve mastery\" of all content.",
                    "104": "I liked the course a lot, the file reading stuff was the most important thing to me. It was useful.",
                    "105": "Not exactly sure what the department thinks this course achieves since a majority of the concepts are covered in intro CS.",
                    "106": "doable class, study syntax for quizzes and assignments weren't too bad",
                    "107": "Although professor Kurdia is very kind, this class hasn't helped with learning much; it's not very beginner–friendly and assumes most students are already familiar with python's syntax and functions, which actually hinders the learning process because students get stuck trying to learn Python while the class itself moves on and begins creating assignments without ensuring to actually teach Python to students. While I understand that our professor believes \"the more I do the less you learn,\" the entire purpose of this course is for us to be taught Python, not for us to learn it on our own just as we would using any online Python course. Everything has been a difficulty since I, along with many other students in this class, am not familiar with the Python syntax/functions. This class assumes that everyone knows what they're doing from the beginning, which just makes everything that much more difficult for students learning Python for the first time. CS111, the class' pre–requisite, does not teach python.",
                    "108": "Yes, there was a lot of practice problems and just thing she gave us to practice on and it was very helpful in developing my skills in programming",
                    "109": "The instructor could do a lot better with the instruction in this course. Too many assignments that weren't clearly stated in the syllabus kept coming up within the quarter.",
                    "110": "I think that this course covered everything I expected it to. Nothing more, nothing less",
                    "111": "It taught well the basiscs of Python and programming.",
                    "112": "Prof Kurdia is very new to teaching at NU, so there's an adjustment being made to teaching CS 150. Lectures were not rigorous, so it didn't feel engaging and not worth attending. If you want a GPA boost and a refresher on the Python coding language, then take this class.",
                    "113": "Unlike previous CS 150 classes there are quizzes",
                    "114": "Prof Kurdia teachings were not the best. It was hard to hear her during lectures, and I found myself learning the material through Youtube videos and documentation. <br><br>The labs were posted late and the slides were posted days later, meaning I had to resort to online sources days before accessing the lecture notes. There was little to no responses on EdStem and had to ask her in class, to which she would dodge questions and give vague answers. For example, when quizzes were coming up, students would ask questions such as \"How should we study for the quiz?,\" and she would respond by asking other people how they studied and using that as her answer. There were also no practice quizzes and you can't use pen and paper (opposite from CS111). Also, in my experience, office hours were not helpful; there were TA's who would look at my code and say \"Hmmm... it looks right.\" <br><br>Another thing was Prof Kurdia's changing her mind of Lab regrades on the last day of class, impacting everyone's grade. The auto–grader is VERY specific and involves trial and error in order to get an 100 before the lab closes, however, Prof Kurdia decided to stop showing our score after the auto–grader leaving students to have to wait for their score. Prof Kurdia changed the auto–grader but added a lab re–grader to show we learned from our mistakes, However, in our last class, Prof Kurdia decided to remove it, lowering everyone's grade. I think the concept of a Prof changing their mind on things that will impact our grade should not be happening. These choices should be made and final before the quarter starts, leaving no confusion to the students.<br><br>Definitely learn Python on your own before coming into the class. There was little to no help and you have to rely heavily on your peers with experience and YouTube videos.",
                    "115": "While I heard Compton's class was easier, it wasn't like this was one was much harder. Half the time, however, you're stumbling over unclear instructions. Labs and quizzes were poorly worded causing you to lose points. I would spend more time after submitting the lab because while the tests she gave us passed, GradeScope gave errors and didn't tell you what's wrong. All I remember is being constantly frustrated with the class.",
                    "116": "This was overall a good course. I learned how to use python having never seriously coded before. I will mention that there is a decent amount of group work in this class, and I personally wish that there was a little less of this. The quizzes are not that hard and you get lots of opportunities to resubmit assignments and drop bad grades, so I would not worry about getting a good grade in this class if you are willing to do the work.",
                    "117": "I think this course would have been better if the teacher had actually taught as opposed to forcing students to learn on their own through discovery activities that oftentimes didn't work.",
                    "118": "For those who like computer science maybe this class would be quite fair. However, for those who have minimal coding experience, I think it really challenges you a lot especially as the lab assignments tend to be quite confusing, there were no practice quizzes given before the actual exam which tripped me up quite a lot as I didn't know what to expect. However, in one way or another it really pushes you to learn more about Python.",
                    "119": "I felt that this course lacked proper organization and structure.",
                    "120": "The class helped me learn about Python. However, it was disorganized because we could not see our participation grades, and homework grades were not updated frequently. We had a few issues with the autograder where it would take points off even though we followed the instructions. For a few of the homeworks, the instructions on what to do were very unclear.",
                    "121": "The course was very interesting and interactive. My only concern is that I do not believe there is a need for quizzes.",
                    "122": "This course was largely  a repeat of CS 110 except for the last couple of weeks. However, Prof. Kurdia was not helpful and not great at teaching these concepts, leading me to be unsure about the material towards the end while simultaneously feeling bored about the material at the beginning. Additionally, there were so many assignments that had confusing sections and where I spent a lot of time fitting it to the auto grader when the actual code was correct. Most of the material was not graded until the very end.",
                    "123": "Teacher wasn't the best but i knew everything so it was fine",
                    "124": "Overall this class is not great. The faculty + PM's for this class are not very dedicated to this class. Overall Prof. Akurdia does not seem interested in teaching. I think most students would have been better off following a Khan Academy course. Most of in class work is just filling out a worksheet. You will learn most of the course on your own during homework assignments. They do not grade assignments until the end of the quarter. Very disorganized class and labs often have many issues that are only sorted out once it is assigned. This course needs to be designed by Prof. Bain, who knows how to teach an intro CS course. Not super difficult overall, but definitely not a fun course.  Would not recommend taking class with Akurdia if possible.",
                    "125": "Very difficult to follow along with her lectures, and was very unskilled in terms of teaching. It would take her multiple days to post the lectures online, and when asked for help, she would dismiss your questions or ignore you entirely. She does not respond to emails or messages on EdStem, and TAs do 99% of the work in the class. Her assignments are overly convoluted and do not appropriately reflect the content taught in class at all. She does not write any of her assignments, and thus struggles with the grading of it consequently. She takes extremely long to grade assignments and midterms, and provides no feedback or partial credit on exams. Nonetheless, it should be a relatively easy A as long as you do all the work entirely yourself without any guidance from Kurdia at all.",
                    "126": "Lectures are not helpful at all. Kurdia's lecture style is hard to follow along. You are better off learning by camping at office hours (TAs are super helpful).  Assignments sometimes felt random and way too hard. Did not feel adequately prepared for quizzes –– mainly due to her not being clear about what you need to know and what you don't.  Don't expect feedback or grading in a timely manner; she does not respond on Edstem or to emails. Content is not bad otherwise.",
                    "127": "This was most definitely a much more difficult class than it had to be due to the instructor.",
                    "128": "I think that this course could have been really good but instead it felt like a waste of time to go to lectures because the lectures were not well prepared and because everyone was required to go to class to get participation credit, you could never really hear what the professor was saying anyways. The homework assignments were alright and that is where most of your learning comes in. I feel like the professor was a lot of the times making things up and giving us assignments that were not well thought through, making the students struggle a lot for no real reason. Additionally, towards the end we were required to install python modules for assignments but when students had issues with setup, the professor was also unable to really help and solve the issues so it was a very frustrating experience and I wish it would have been better. And at the very end, we were given busy work which felt like it was because the professor didn't have any other ideas of what to teach.",
                    "129": "Class lectures were a bit slow, but every day there were will be some form of participation credit, so it's important to attend. I found the labs and lecture slide shows to be useful for reference, but the discovery assignments were often confusing and not as helpful.",
                    "130": "It was fine, as someone mostly comfortable with Python, the labs were alright. Sometimes the labs had very confusing instructions, or the autograder that was set up would only accept incredibly specific inputs/outputs which was really frustrating at times.",
                    "131": "I wished the slides offered in this class had more concrete solutions for us to look back on. Professor is kind and eager to help, but I feel like we could've packed a lot more information into class time than we did. Did learn a lot otherwise, not hard to get an A.",
                    "132": "Professor Kurdia is a sweet professor who cares about her students and wishes them the best. She tries her best to teach the course material, and I appreciate her efforts. My only complaint is her quietness when hearing her lecture from afar. She used a microphone, but unfortunately, it was not the loudest, especially in a big classroom like Lecture 2. I'm pretty satisfied with my experience taking this course with Professor Kurdia. In addition, I wish there was a Quiz review to practice for the quizzes. <br><br>Shout out to TA Arturo!!!! Best TA ever! He was very responsive on Edstem and also during his office hours. Shout out to all my classmates as well for collectively asking and answering each other's questions on EdStem! I enjoyed the collaborative learning environment.",
                    "133": "Learned a lot but was pretty disorganized since this was her first time teaching the course here. Overall though it wasn’t bad and I think it’ll be better next time.",
                    "134": "This course had no structure whatsoever, each day we would do something different that most people were confused on. The labs were not that difficult but she would not open the auto grader until after the assignment was due which made it hard to complete. Also the in class activities were not very helpful and we never had enough time to complete it.",
                    "135": "Taught the fundamental aspects of python coding and applied them through weekly labs. The course felt like a pretty standard introductory programming course.",
                    "136": "The course is taught pretty well, and the interactive class assignments are a nice addition to the lectures.",
                    "137": "This class was pretty challenging even though I already knew Python before taking it. There are a total of 7 labs throughout the course and they tend to feel rushed in the middle of the quarter with one due every Wednesday night. As long as you show up to lecture and stay on top of your work throughout the 10 weeks, you should be fine.",
                    "138": "Overall, a mind–numbing class. It's 90% busywork and \"in–class\" assignments are frequently nearly impossible to finish in the time allowed. Professor Kurdia outright failed to control the class at times, and rarely did any actual teaching get done by her. All \"learning\" was guided by self–driven pdfs, TA office hours, and using just enough of the resources you found online to complete labs without having them flagged for plagiarism. Generally an unproductive, unnecessarily stress–inducing class.",
                    "139": "As someone who's only taken CS 110 and 111, I found that this course isn't too difficult, but could be structured better. It's extremely hard to find TA's during in class exercises and they aren't the most responsive on edstem. The professor is passionate but the class isn't structured that well. The homework sets would have to be edited after it was assigned because the instructions were unclear, and for the last homework assignment the instructions weren't posted until halfway through the week.",
                    "140": "Good place to learn for people who haven't coded before, but if you have a decent amount of experience you'll be ahead.",
                    "141": "This class was unhelpful in terms of learning material and was presented really messily.",
                    "142": "VERY easy A. Prof Kurdia is very, very generous in terms of grading.  We can drop our 6 lowest participation grades, 2 lowest labs, 1 lowest quiz, and 2 lowest practices. The quizzes were a little funky because some of the answers for the quizzes were just straight up wrong lol, and she doesn't provide any practice exams really, so you kinda have to just study everything and hope for the best. But this actually worked in our favor because she ended up giving us extra points back to make up for the fact that she messed up in writing the exams. <br><br>I didn't find her lectures all that helpful, but she is great at making simple, easy–to–understand lecture slides so just looking over those as a framework on what to study was helpful. The only gripe I have is that her in–class practice activities were confusing and not helpful at all.<br><br>But this class is significantly easier than 111, and I really did like the Prof because of how generous she was in terms of grading and her labs. A lot of the labs would basically tell us what to do step by step, so it was really good for beginners like me to try to figure out to do on my own.<br><br>BTW: It's helpful to have a friend in the class because you can work on one lab and submit it together.",
                    "143": "Python is really cool to learn but this class was poorly structured by the professor. Many times was I left clueless what to do in class for the homework. Office hours didn't help either.",
                    "144": "Learned pretty much",
                    "145": "Very good introduction to programming in python. There are a lot of assignments but none of them are unreasonably difficult. Difficulty of tests is fair.",
                    "146": "Course is not bad. Kinda slow in the beginning if you know python but the projects are practical and grounded. Having only two of the quizzes count is great.  Go to office hours to be the most efficient with your time. A lot of the problems with homework was due to terrible instructions that would make the believe the opposite of what you were supposed to do. TAs will help you understand what you should be doing so you can focus on your programming skills.",
                    "147": "If you are taking this class, personally, I would avoid taking with Prof. Kurdia. Granted, it was her first quarter, but her quizzes and lectures were useless in my honest opinion. The quizzes required memorization, which is pointless in CS given you can just search things up in real life. (i.e. there's no point in asking a quiz question if you can remember EXACTLY how to open a file using python code and then writing on that file... we can just use google for that in the future). Her lectures were not that useful either, but the discovery files were great. Work on those and actually pay attention to what you write down for the lab and you should be fine. Her grading policy and attitude toward the class is not the best either. Some people got very sick during the class and not only did she not provide an extension, she got upset to the student for asking for one. She does not give review materials for the quizzes."
                },
                "school_demographics": {
                    "Weinberg": 66,
                    "McCormick": 122,
                    "Medill": 2,
                    "Comm": 2,
                    "SESP": 3,
                    "Bienen": 3
                },
                "class_demographics": {
                    "Freshmen": 152,
                    "Sophomores": 35,
                    "Juniors": 9,
                    "Seniors": 3
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 3.84,
                    "student_count": 102
                },
                "student_opinions": {
                    "0": "This course wasn't bad but she's also a new teacher so there is no guarantee on how the class will be run last quarter, as this quarter was very different than the last. We had 3 quizzes, able to drop 1 and most of our grade was composed of our labs. Not difficult if you study for it. Don't have to go to lecture.",
                    "1": "You most likely dont have a choice whether or not to take this course but I mean python is cool and easy to use this class is just so bad at making it interesting. Some of the homeworks were cool because you kind of just fill in functions to a bigger project but I barely feel like I learnt anything and all of the effort just went to understanding what exactly it was I had to do. There couldve been no professor for this class and I wouldnt have known. The TA's were helpful though they answer questions well during office hours. Tests werent anything to worry about just frustrating how poorly it tested our knowledge and how often there were poorly phrased questions.",
                    "2": "Good course overall, but definitely a lot of self–learning.",
                    "3": "Just try to stay really engaged and write all code yourself. Very unlikely that pre–quiz studying will cover ever exact syntax case you could be asked about so you have to draw on knowledge from experience during quizzes. Stay engaged, try not to fall off, and don't push off everything until right before the quiz.",
                    "4": "I did not like the lack of communication about the project until exactly 7 days before it was due. It was extremely unthoughtful. People have final exams and other projects from other classes, and it was ignorant to announce the details of the project that late when we already learned the content.",
                    "5": "As someone who took CS110 before this because I had no programming experience prior to Northwestern, the course material was basically the exact same as CS110 except Kurdia taught it a lot less clearly compared to Bain in 110. <br>If you have zero programming experience, I would recommend taking 110 with Bain, which makes this class a breeze.<br>If you DO have experience, this class will be easy for you and you barely need to attend lecture as long as you submit in–class activities.<br>Weekly homeworks were pretty long and annoying, but they have a peer–programming system so find a good partner, and you'll be fine.",
                    "6": "This could be a great course, and I want to like it, but unfortunately the way assignments and communication was presented to us made the class a lot less enjoyable and less conducive to learning than it could have been. Labs would often have very vague instructions, and the online grading would penalize even the smallest of mistakes, which was often confusing when trying to debug code. Prof. Kurdia was nice and wanted us to do well, but her lectures were often unclear on what was important to know and what wasn't, and she wasn't very communicative online. She also didn't give us any information on the final project until a week before it was due, which caused a lot of undue stress. Peer mentors weren't much better – I'd often get stonewalled in office hours, or they just wouldn't show up. The quizzes were fairly easy, but they tested on small syntax things, which I feel like isn't a good thing to test on, because those are super easy to find and fix, while questions on big–picture ideas would actually test our knowledge of how code works. My advice is to find someone to do labs with and get them done early. The workload isn't that bad, and an A is definitely gettable, but I can't really recommend the class – it may be more efficient and easy to learn Python on your own rather than take this class, which is really a shame.",
                    "7": "Overall not a super hard course. The labs are doable, the quizzes are annoying though because they're multiple choice with very similar answers and you. have to write some code from scratch and the grading is harsh on that part. Prof. Kurdia is nice and definitely passionate about the subject but she's often not the most organized both in terms of explanation and in terms of presentation slides.",
                    "8": "It was challenging and I learned a lot",
                    "9": "Labs and projects were both pretty difficult and Professor Kurdia is not as responsive with emails and office hours.",
                    "10": "The labs get progressively more challenging with each week, but if you work with peer and the PM's they are completely doable. The only thing is as the quarter went on, labs were released late with no extension of the deadline and the autograder wasn't configured on time and students would have to wait to see whether their code passed the tests. Some of the tests are really nit–picky and expect a certain output, which was a little annoying. The quizzes were doable with a lockdown browser that had you answer multiple choice questions and write code by hand.",
                    "11": "The labs are very time consuming. The final project was just rude.",
                    "12": "where to begin..<br><br>kurdia seems like a very nice lady, however her her way of instucting is very below par. i had previous knowledge of python previously, but for those who are coming in from only knowing racket in 111, this course may be very hard. aside from instructions, her organization was also pretty bad. for example, there is a project section of the course, however we are now getting information about it during week 10 when we should've gotten it weeks ago. <br><br>i also think the weekly group discoveries were very unhelpful and a waste of time.<br><br>TL;DR, if you have python experience the class will be very easy, if not then good luck lol",
                    "13": "Starts off very easy and escalates quickly. Weekly labs and three quizzes. Quizzes aren't too difficult but when answering free response coding questions, partial credit wasn't given which hurt grades a lot.",
                    "14": "It helped me solve problems in a way computer scientists solves problems.",
                    "15": "There was too much time spent on review and the topics could be better integrated. For example, it would've been helpful to have integrated command line practice into other units instead of reserving it for itself.",
                    "16": "This was a chill class. Easy to do well as long as you study for the three 25–point lockdown browser quizzes (drop 1). TA's are pretty helpful in the event the code for your labs doesn't run in gradescope. We have 9 weekly labs (coding homework assignments) that aren't hard as long as you do a small piece everyday. 1% reduction per day that they're late. Final project is worth 5% of your grade and is very similar to the format of the labs. Great and effective intro to Python course!",
                    "17": "I liked this class but the labs are a lot of work but the office hrs are really helpful",
                    "18": "As someone with very little coding experience (my first class with coding was EA1), I found that this class was a good intro to the basics of python. The weekly labs aren't hard to do well on, especially if you pay a decent amount of attention during class. Also, there's office hours every week and the TA's are very good at helping you with code. There are three quizzes total and you can drop one of them. Try to do well on the first two if you want a good grade – the quizzes are cumulative and and so each one is harder than the last. Also remember to look back at the older quizzes when studying for the new ones.",
                    "19": "CS150 is a fairly easy course, and most of the grade is homework assignments. Quizzes are not that bad either, and the lowest one (out of three) is dropped. I learned a lot about Python, and since I'm in McCormick, knowing Matlab made it easier to learn Python for the first time. Kurdia is a good prof who genuinely wants you to learn, although I felt that lectures weren't always useful/essential. The class topics also got somewhat unorganized/random towards the end. This course is very manageable and you shouldn't worry about having to take it.",
                    "20": "The course was easy but boring.",
                    "21": "I feel like I know so much about python, but also so little at the same time. I feel like it was a good introduction but I would not know how to do any computer programming outside the course.  You have to do pretty well on the quizzes to get an A in the class. The labs take a lot of time.",
                    "22": "This introduced me to the idea of pseudocode and logically writing self defined object oriented programming codes as well as applying basic programming concepts to the real world through working on projects such as machine learning algorithms as well as web scrapping.",
                    "23": "This course helped me develop the confidence to approach coding assignments with a general framework of how proceed and develop robust code that allows to solve medium–complexity problems. i have a better understanding of computer science overall",
                    "24": "this course sucks so much. it was structured so poorly and i didn't learn anything from the professor. it was basically all self taught and took so much effort for an intermediate level CS class to complete assignments and actually understand what's going on. Labs every single week that take up a significant amount of time to complete, 3 in–class quizzes that are cumulative and there are like 3–4 FRQs for each quiz that lowkey are very difficult.  on top of all this there was a final programming project that she didn't release instruction on until literally less than a week before it was due and that was the hardest part of the quarter it's actually ridiculous we were expected to complete the project like it was a weekly lab with everything else going on during finals as well. it was honestly so  unmotivating to be in this class and for anyone actually interested about going into CS it would be a HUGE deterrent imo.",
                    "25": "Honestly, I just couldn't learn from Professor Kurdia. She is a kind and nice person, but her teaching style was not very helpful in learning. Not super engaging.",
                    "26": "This course has a few key components. First, the labs (homeworks) are poorly worded, so often hours will be spent on clarification between you and the autograder for the homework. The autograder is not as bad as it seems, as often it is accurate and fair. Second, the first midterm (Quiz 0) is very important, as the lowest quiz gets dropped. Third, the final project is impossible, but it is only worth 5% of your final grade so you can tank it. Overall, it is a good intro course to python and the class is taught well. It is just the wording on the assignments that is the issue.",
                    "27": "Mid. Plain python, passable professor, purposeless final project. Just get your free A and leave.",
                    "28": "Course was good not too hard and you learn a lot about python",
                    "29": "Didn't cover that much outside of CS 111. Same concepts, except in Python.",
                    "30": "A little disorganized",
                    "31": "This is an intro to python fundamentals course that was really not designed to be \"introductory\" in any sense. Most of the people in my class that I interacted with already had significant coding experience so the intensity of the labs ramped up quickly. If you have prior coding experience, this class should be a breeze. If not, find somebody that does and have them help you with the labs.",
                    "32": "Professor Anastasia Kurdia is really nice and lenient. You can submit the labs late, with only a small penalty. The labs are fun, the quiz is easy but sometimes a bit tricky. She is quite well prepared for class and I think she teaches this class very well.",
                    "33": "Unfortunately, you are not going to get good lectures in this class. Not a day went by where I was not frustrated. I got 100 on every lab, but the TA's (some helpful, some not) do not have the answer keys. So, sometimes they're wrong. But, they're great at debugging. Do not take anyone's word for sure, even the professor's sadly.",
                    "34": "The class overall was not extremely challenging if you know basic python or took Comp_sci 110. However toward the end we learned recursion, importing data, classes, etc and I would say it could have been explained much better. The professor did NOT go over this information, just threw it in randomly and was not good at explaining when asked questions. I would also say that the final project was very poorly executed as the directions came out the week before finals, giving no time to go to office hours. The project also was partly not based on what we learned in the class! It was extremely random!!! Did not enjoy this class or have any take aways. If it was taught by another professor would have been so interesting.",
                    "35": "The way the course is structured. The labs were ok, but the fact that she barely went over them concretely in class was terrible. She mostly taught while being too abstract about her topics.",
                    "36": "I think that this class is pretty fair. You get a drop on a quiz, lab, and 4 drops for attendance grades. The quizzes are reasonably difficult. Anastasia is a good teacher imo. She’s kind of hard to understand because she’s soft spoken, but it’s definitely a good introduction to python. I’ll be getting an A in this class and I never did python before this",
                    "37": "This is a pretty easy cs course, but they definitely made it harder than previous quarters.",
                    "38": "I didn’t love Professor Kurdias teaching style, so it was hard to focus and learn from lectures, which made the weekly labs more difficult, but they weren’t generally super challenging. Exams felt unreasonably challenging.",
                    "39": "Well I wasn't super excited about the format of the course–– particularly the lab schedule. But I understand that's life! In my opinion, I think what would be better is if there were more TAs available around the day off when the lab is first opened (usually there are only like 2), and it would be nice to see the labs graded quicker so we know if we can drop one or not. I also feel that the in–class lectures weren't overly helpful, more exercises in class would be nice?",
                    "40": "The course is alright. The professor isn't the best, but there's still a lot to learn. The labs take a long time, so don't leave them for the last minute. Also, the quizzes are multiple choice, so make sure to study, or your grade could drop significantly.",
                    "41": "This class was NOT it. I came in with some previous Python knowledge from another class I took at Northwestern, however, I barely learned anything new and have no idea why I still had to take this one. I considered myself lucky though, because without my previous knowledge, I would've not survived. A lot of things learned in class were hard to understand simply because the lecturing style was hard to follow and digest, and not a lot of examples were provided. When examples were provided, sometimes they were only 'trick' scenarios which is so confusing for someone who just learned the concept 2 minutes ago. Simply looking at already constructed code on a presentation slide in addition to an unclear spoken explanation made it extremely difficult to stay focused in class and was super unmotivating. In addition, there was also a strong emphasis on discovering things for yourself, which meant that some of the more complicated concepts (recursion, oop etc.) were given to us in a worksheet style FIRST, before we learned anything about it, that we needed to complete on our own. I honestly don't understand what good that does without any basic prior learning beforehand. I will also add that the Lab/homework instructions were often unclear and sometimes understanding what you even needed to do took longer than actually doing the problems because instructions were so convoluted. The lab was provided as a really big file of Python code where you had to first SEARCH for the question through the millions of comments which made the code overwhelming, then understand its wording. I understand that this is sometimes to 'put us in the real world' but it is frankly extremely confusing for a bunch of people just starting out. Even after confirming with the professor about the specifics of the question, the answer I was given was sometimes wrong and I ended up just hardcoding for a very specific case was not mentioned in the question instructions. Not to mention, on EdStem (the place where we could ask questions), our questions took a really long time to get answered, especially before the final project was due. And omg the final project, which we were supposed to get 2–3 weeks to work on on the syllabus, was given to us 1 week before it was due in the midst of everything else we needed to do for other classes. This also happened for the labs/hw toward the end of the quarter, when the instructions were dropped less than a week before it was due. Literally only 1/2 PMs answered majority of the questions EdStem as well and even as I'm looking at it right now, there are so many questions that are unanswered. Practice in your own time using W3 schools or Geeks for Geeks before taking this class. Only plus about this class is the amount of drops for things which makes it nice. While Anatasia is very nice and is a great person who seems to care about her students, I strongly believe that I do not vibe with her instruction style and organization of the course personally.",
                    "42": "Professor Kurdia realizes that the best way to learn how to code is to code, rather than be lectured to. To that end, she provides very helpful discovery activities that support learning. Professor Kurdia also began the course taking attendance via PollEv, but stopped midway through the quarter. For an experienced programmer, attendance is not useful.",
                    "43": "This is a large class so the pacing is slow. The concepts themselves are very easy to learn but the class itself is not that intellectually stimulating.",
                    "44": "This course is different from CS150 from earlier years. Prof. Kurdia added graded quizzes and a final project, which apparently was not a thing in previous years. If you're familiar with programming in Python or even MATLAB this course will be fine. The labs and final project are somewhat time consuming but aren't extremely difficult. Just don't procrastinate",
                    "45": "This course was pretty fun. Might be a little challenging for those without programming experience, but easy for those who do. Overall assignments are pretty flexible and forgiving. Exams are reasonable.",
                    "46": "Professor Kurdia is a frustrating teacher. She did not do a great job of working with inexperienced intro coding students, was unhelpful, and didn't seem to understand when/how students had difficulty doing certain things. Nearly all of the learning I did in this class came from teaching myself the lab assignments. These labs themselves are very time consuming, especially in the beginning of the quarter when you have no idea what you are doing because the professor doesn't teach. That being said, I recommend doing your best in the labs so that you can drop the last one when you get busy with your other classes and finals. The ta's were pretty helpful, but the professor also didn't give them many resources to help us with assignments, so that was frustrating for everyone. It's not a hard class to get an A in, but it might drive you crazy sometimes.",
                    "47": "i came in with very little coding experience and i thought the class was manageable. we had weekly coding labs, 3 exams, and a final project",
                    "48": "Great course. Not too hard",
                    "49": "Interesting course, super chilled labs, just need to start and finish waaay before the deadline",
                    "50": "Really good labs and a comprehensive intro to using python meaningfully. Great teacher and excellent course material.",
                    "51": "It is a good python class",
                    "52": "This course was nice. You get to spend a lot of time learning the basics of a single programming language. The lectures help you understand the labs and the quizzes are very similar to the labs concept–wise.",
                    "53": "Professor Kurdia is probably the worst professor I've had at Northwestern. I found her to be totally incompetent which is pretty shocking considering this is quite a basic level course. She mandated in the syllabus that you do not contact her by email which I think is ludicrous. She is paid by this university to teach students yet denies students to use her university provided channel of contact. She requests that we direct message her on a separate platform which I used. However, I messaged her at least 5 times through the quarter and not once did I ever receive a response. When I went into office hours, she admitted to seeing all of my messages and complained about how she can't deal with every single student's requests. In addition, her lectures were completely useless and unrelated to the labs and assignments. All of the labs are written by professors that taught the course in the past and it appears she doesn't even understand them fully herself and often can't provide aid.<br>In terms of difficulty, this course is not hard. I came in with somewhat sufficient coding experience and didn't struggle with anything. If you don't have very much experience and only took COMP_SCI 110, it will be a little harder but still totally doable especially if you find some friends to help. You are also allowed to do any assignment with a partner which is a great option if you are less confident in your coding skills. There is a lot of lenience built in – there is only a 1% deduction for late assignments and they are open for 2 weeks meaning that even if you turn a lab in a week late, you would still get an A. Also, your 1 lowest lab (out of 7), 1 lowest quiz (out of 3), and 4 lowest practice assignments (1 pt exercises graded for completion, pretty much just attendance) are dropped. If you complete all the work, you will leave with a very solid understanding of the basic functions of Python and be able to confidently put Python on your resume so I would highly recommend this for non CS majors that took 110.<br><br>tldr: The professor sucks but the class is quite easy with a lot of lenience built in.",
                    "54": "It is a very good course, you learn how to code in python super well. Not incredibly challenging, the quizzes are pretty hard but if you know your material it is not bad. I liked this course and the professor.",
                    "55": "This class is not fun. It's not impossible nor is it that difficult to get an A but most of the challenge is just figuring out whatever Professor Kurdia is trying to teach.  The hardest thing about the assignments were deciphering the instructions. It's just frustrating especially because this is just an introductory course. The quality is just not there at all. We still haven't gotten back our final project grade as well.",
                    "56": "COMP_SCI 150–0 with professor Anastasia Kurdia was a good class. This class was an introduction to Python. For students who have lots of programming experience or already know Python, this class was pretty easy. Even for students with less experience who haven't done Python before, it wasn't so hard. There is no textbook for this class. In class, there are lectures and attendance questions, and sometimes a practice assignment. The practice assignments are pretty easy, and they are worth 15% of the grade overall. Lectures are mandatory, enforced by the attendance questions in class. There are weekly at–home programming labs (which can be done in pairs) worth 45% (you can drop one), and 3 in–class quizzes (taken on your own laptop with LockDown Browser during the normal lecture period) throughout the class worth 35% (you can drop one). The at–home labs are pretty easy since you have a whole week to work on them. The in–class quizzes are easy if you study for them. At the end of the course, there is a final project which is worth 5% of the grade. This project was very hard compared to the rest of the class assignments, but it was only worth 5%. The professor and the many TAs hold in–person and online office hours all the time. I would recommend this class to anyone looking for a nice introduction to Python that isn't too hard but isn't all busywork.",
                    "57": "Going into the class, I knew I wouldn't particularly enjoy it because I simply don't like python or coding in general, but I was even more disappointed as the quarter went on. The structure of the class was not good. The slides were unhelpful and basic, so when the homework was significantly more difficult, we had no resources to help us. Additionally, the TAs were not always helpful, and the online Ed tool we used to ask anonymous questions weren't helpful because nobody would respond. The \"study guides\" we received for quizzes weren't study guides at all. The final project was also not released until a week before it was due, and the autograder was awful. We were told to make our code unique, but that's literally impossible if an autograder is used. The class just seriously was not structured well in order for anyone to be successful.",
                    "58": "The labs were very hard to prepare to spend a lot of time in office hours.",
                    "59": "Easy but tedious class. Professor Kurdia is terrible at teaching, lectures don't really make much sense so be prepared to self learn. However, Python is a very easy language and you only do the basics. The instructions for labs are really poorly written, so they are really confusing when getting started. But once you figure out the first part, most of the time the labs are very repetitive, so it gets easier from there. Overall the coursework and quizzes weren't too bad but the teaching was awful. Also, she doesn't answer all questions on the discussion board and I think she purposely leaves the most important and urgent questions unanswered out of pure spite. And don't expect a reply to direct messages to the professor before 3 weeks.",
                    "60": "It was a good course. The labs aren't hard, they just take some time. A few hours usually. The TAs are helpful too.",
                    "61": "Great class. The professor was very lenient regarding grades and wanted us to put effort into learning. You could drop the lowest scores from most of the assignments and even the exams.",
                    "62": "class isn't useful. didn't go for majority of the quarter",
                    "63": "The professor seemed excited to be teaching coding. Practice/memorize how to write code from lectures and activities for exams.",
                    "64": "150 is not terribly difficult, just do your homework and you should be fine.",
                    "65": "learned a lot. weird class. should be easy but its not",
                    "66": "Chill class, not too bad. You get to learn a lot without being overly stressed which is amazing. Also there are tons of resources to help you if you need. I would highly recommend taking it.",
                    "67": "The lectures were nice but sometimes very different from the content of the labs. I would understand everything going on in class but really struggle with the labs at times.",
                    "68": "/"
                },
                "school_demographics": {
                    "Weinberg": 35,
                    "McCormick": 61,
                    "Medill": 3,
                    "Comm": 3,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 64,
                    "Sophomores": 29,
                    "Juniors": 6,
                    "Seniors": 0
                }
            }
        },
        "COMP_SCI 211-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.13,
                    "student_count": 69
                },
                "student_opinions": {
                    "0": "The projects are really interesting and helped me learn a lot.",
                    "1": "Prof. Hummel is a very good lecturer and his lectures make the material easy to understand. He was very understanding of technical difficulties and personal difficulties with the material, and though he does seem a little stressed whenever I saw him, I enjoyed his class and I feel like I was actually able to learn and retain the material.",
                    "2": "Even though the projects were pretty time consuming, the amount of support that Prof. Hummel and the PMs provided was incredible; Piazza responses averaged at around 8 minutes. The first half of the quarter focused on C, so the initial leap was much more challenging. The course got smoother and smoother as time went on, though. The transition to C++ was very well–paced, and the workload was reasonable.",
                    "3": "This class did a good job of introducing me to more computer science topics of which are very interesting to me.",
                    "4": "Start your projects early!! they take forever but the TAs are extremely helpful. Also the final was a little harder than I expected but not terrible",
                    "5": "I was really excited about the projects",
                    "6": "I thought Hummel was a great lecturer. His office hours were also very useful as he could tell you exactly where your code has an error. Projects take a lot of time so its best to get started early.",
                    "7": "pretty easy course. homeworks for most of grade is really nice. projects are decently sized but very clear in instruction. hummel is a good lecturer. final was made to seem like it would be a cakewalk for anyone who attended lectures but honestly don't know if I got an A in the course, even with 100 on every assignment.",
                    "8": "This was a class that i had to put SO MUCH work in. However, i learned more than i have in any cs class so far. Prof Hummel is a very good professor and knows how to explain things well. He and the TA’s didnt give anything away on the projects, but that also made me learn it better.",
                    "9": "Overall a very good class. There are recordings of every lecture and they go up to 2x speed so actually the work load is fine if you just watch them. HW are free points and projects are quite long and some work, but they are not as bad as people say. The first few took me ~8h per week, and the latter ones are shorter, somewhere ranging ~6h for each. We had 8 days of extensions automatically applied to late submissions so in a busy week I would start Sunday noon and it would end up fine. Prof. Hummel is great at teaching and he and the TAs are very responsive and helpful on Piazza, so you typically won't get stuck for too long on problems.",
                    "10": "The first four projects were quite difficult, office hours are important. Once C++ is introduced the projects got a lot easier and didn't really need to go to office hours. Professor Hummel is a very good professor. You can code along with him during lecture which helps with learning difficult concepts, and he posts his slides and lectures after.",
                    "11": "Course was okay, as most required classes were. Hummel made it much easier for us this term as opposed to past quarters, so I was deeply appreciative of that. Everything was very straightforward, and the canvas page was organized. We usually had one larger project per week, and some smaller textbook question sets here and there. The exam, in theory, wasn't awful. I feel like I did poorly, but objectively, the exam was pretty straightforward if you paid attention in class and put effort in the homework. The only thing was that we didn't receive so much preparation for the memory diagramming section of the exam, and I feel I only learned like 90% of that section's material through the PMs and piazza. Still, the class was fine. Not sure what my grade is, but it is what it is. Hummel is pretty nice and helpful too, though ever slightly intimidating.",
                    "12": "I enjoyed this course overall! We learned basics of both C and C++. Though C can be frustrating, it honestly felt really rewarding whenever I was able to pass the provided tests for each project and whenever I understood what was going on with all of the pointers within memory. C++ was challenging for different reasons, but it was a nice break from all of the pointers of C. Prof. Hummel did a great job of showing us how to appreciate the flexibility that comes from the complexities of C++.  Though Prof. Hummel can be blunt, which catches you off–guard sometimes, he's a great lecturer and clearly explained each concept we covered. I really appreciate how he frequently stopped to answer any questions that had come up.  Despite how frustrating the coding was at the beginning of the course while still adjusting to C, I'm glad I took this course because I learned a lot.",
                    "13": "The class was decent in teaching the material. There was quite a lot of work, and at times definitely felt like a weed–out course. The class material was not overly difficult but was very time consuming.",
                    "14": "Prof Hummel is a great lecturer. The assignments are hard (definitely made them easier than the last wave though) and took me a long time (especially the C ones), but that was expected. The exam was harder than I thought it would be (have to write C++ code with paper and pencil). It was a fine course as someone who really never wants to work in these low–level languages in the future.",
                    "15": "It was well structured because the projects and deadlines were changed slightly. The pace of the class is also very manageable.",
                    "16": "This course gets a lot better once you switch from C to C++. Hummel is a great professor if you actually pay attention during lectures, which I didn't for the first half of the quarter. The projects can take a while, not because they're super difficult but because understanding what all the starter code does can take some time. However, the PMs are super helpful and there are lots of office hours available. I'd recommend going to Prof. Hummel's office hours because he's able to figure out what's wrong with your code very quickly. The grading is just based off of routine homework, projects, and a final where you have to hand–write code and diagram memory. I haven't gotten the final back yet, but it seemed fairly reasonable if you watched the lectures and did the projects. Overall, this course isn't really that bad and I really liked Hummel.",
                    "17": "CS 211 to me was really boring. It was so repetitive and the projects can literally just be condensed down to two projects, one on programming languages and one on maps. I wish there was more variety in the projects. However, Prof. Hummel is one of the most responsible professors I have ever met at Northwestern and will be great in teaching more CS classes.",
                    "18": "The content taught in the class is interesting, and Hummel does a great job of keeping the class engaged. The first couple labs can be a bit tedious and overwhelming, but once you transition over to C++ everything becomes significantly easier and more manageable.",
                    "19": "n/a",
                    "20": "I enjoyed coding hands–on in homework, projects, and class. However, the projects sometimes are too challenging for me and I felt discouraged by unsuccessful debugging attempts. I appreciate the office hours hosted by peer mentors which helped with debugging. If the project provides more guidance, it would be much appreciated.",
                    "21": "This is an EXTREMELY time–consuming course. One project was assigned each week, and I usually took 8–11 hours to finish the project. The instructor sometimes assigned homework on top of the project. Be prepared for the large workload. This course is a solid intro to C and C++, you'll learn a lot of programming, as well as concepts in C and C++ memory. All hard work pays off in the end.",
                    "22": "Prof. Hummel is a very interesting lecturer and it was easy to stay engaged during class. There are weekly projects which take some time which are overall not too difficult. Office hours were definitely helpful. The homeworks were super helpful in preparing for the projects.",
                    "23": "Such a well designed course. Learned a ton about C and C++, but also thinking as a programmer in general. Structure was extremely good. Projects were time consuming but not terrible, everything was very doable. Definitely had to dedicate some hours to it, but everything honestly helped me learn a ton about programming and the language, just needed to be willing to put the time in. Hummel was such a good professor–great lecturer, knew a ton about the material and was very good at teaching it in an understandable way, and clearly wanted everyone to succeed. Knew a ton about what mistakes and challenges students might face as well, and was very responsive. Very much recommend taking this class with him.",
                    "24": "This was a good class. Really liked Prof Hummel’s teaching style!!",
                    "25": "It was ok. Projects are hard.",
                    "26": "The projects will take time and effort, but the PM's and Hummel are very helpful most of the time. Learn C and C++ pretty in–depth. Hard but rewarding",
                    "27": "Difficult course to take if you don't have any programming experience. Projects were confusing and hard, so try to allocate enough time each week to finish them.",
                    "28": "TLDR: Hummel is a great professor who knows about what he is teaching. He and the PMs are very helpful. Good course to teach you C/C++ and useful programming techniques (OOP, writing clean code, even some APIs and data structures). Lectures are recorded.<br><br>Grading: HW assignments on Zybooks, Projects, 1 Final<br><br>HW assignments are easy online interactive textbook readings. I rarely actually read them because lectures go over similar stuff. You don't have to read everything and you just have to complete the programming exercises assigned.<br><br>Projects take time but are good for learning. Work on it with friends or go to office hours if you are stuck. Post questions on Piazza! Hummel cares about his students and wants them to succeed, though he may come off as passive–aggressive sometimes. Both he and the PMs offer a lot of office hours and are fast responders on Piazza, so definitely get help if you need it. Projects are usually due every Friday but you get a lot of late days so take your time. Don't start too late because they do take hours to complete (it's a lot of coding). After the first couple of projects, you are required to write clean code by eliminating code duplication. It is good programming practice so get used to this. <br><br>Personally, I never struggled in this class, but a lot of my friends had problems with understanding C/C++ syntax. The first half of the class is in C and teaches you about the classic C stuff (pointers and memory allocation). These are confusing concepts but you can understand them by doing HW and projects. If you have previous experience with languages that have similar syntax to C (Java), you won't have problems with the syntax.  If you are transitioning from Python/Racket, it's going to take some time to get used to. C++ is a lot easier to understand than C. Near the end you learn a little bit about using APIs and databases. It's a neat application of C++ and a small intro to those concepts.",
                    "29": "Hummel is an incredible lecturer and is very kind and helpful with answering questions  in and outside of class. However, the C portion of the class was significantly harder than the second half of the course in c++. The C portion's projects were insanely difficult and I often times stayed up late across multiple nights to finish projects. If you are struggling in the C portion of the course, there is hope... (i think?). Don't be scared to ask questions on piazza because everyone in the class (other than like the 20 people who have been coding their entire lives) are struggling in the course.",
                    "30": "The jump from 100 level classes to cs211 is huge and the first couple assignments feel like absolute hell but it's doable with OH feeding you the answers. The class can be traumatic if you don't put in proper work.",
                    "31": "I really enjoyed learning the languages and how machines utilize memory. At first, I was scared that it would be too complicated but Hummel made it really easy to understand.",
                    "32": "Great professor, assignments are tough but there are a lot of great resources and readily available help to be used. Had a really great level of challenge and difficulty. Highly recommend.",
                    "33": "Although I was largely warned about how difficult 211 would be (and you will have to dedicate a good chunk of time to it), it is not difficult to do well in this class especially with Professor Hummel and the amazing TAs! Projects could be difficult but TAs are always willing to help and the exam at the end was ultimately not as difficult as I though it would be!",
                    "34": "A very, very good course for an introduction to C/C++. Hummel is able to clearly answer questions, and all the TAs/instructors are always there to help. The course is very time–consuming and demanding, but this is by design, and is really important to getting comfortable programming in a language as difficult as C. Very much a learn by doing course, and you definitely feel like you learn a lot by the end of this course. The instructors are also very generous –– there are 8 late days provided to submit projects late with no penalty. This has come in handy for me many times. The instructors really value that you understand the concepts and are able to apply them while programming. <br><br>The first half of this course is extremely difficult, as C is a very difficult and finicky language. However, Office Hours and Piazza are a great resource in this course, and all of the instructors respond in a very timely manner. The second half gets easier as we start focussing more on C++. <br><br>My biggest issue with this course is the grading. I wish that the homeworks and projects were graded in a timely manner so that you know how you are doing throughout the course. However, this is kind of a moot point as most of the grading is automated. Still, it would be nice to track your overall grade on Canvas. <br><br>Additionally, the latter weeks of the course place a heavy emphasis on sorting/complexity analysis. I wish this wasn't the case. CS 214 dedicates enough time for that. It would have been really useful if this part of the course focused on Object–Oriented Design concepts at a deeper level, and delved deeper into C++ specific concepts (templates, iterators, etc.) I did not really see the need to start talking about algorithms and sorting in such detail, as this is not a C++ specific thing. <br><br>Overall, an incredibly useful, but difficult, course that effectively teaches you fundamental concepts of programming in C/C++.",
                    "35": "I really liked this class and the way it was taught! I heard Hummel's class used to be really hard but he definitely toned it down for my class. I feel like a lot of CS lectures are just general instruction without any hands on programming, but that is NOT the case here. The lectures were super helpful for the homeworks and projects. I felt like every part of this class really came together to make for a manageable learning experience of C and C++, which can be very difficult languages (although I should also note I had already taken CS 214 before this class which might have made things easier for me). The PMs are incredible, and overall this class was super manageable, reasonable, and well–taught. I highly recommend taking this class with Hummel.",
                    "36": "I really enjoyed this class. We learned C programming at the beginning, and C++ about halfway through. The homework assignments were dull, as they were mostly recapping what we learned in class during live programming, but the projects were very interesting and covered a wide range of applications. They were also pretty intellectually challenging, at least for me. The problems are well defined, but they can take a bit of time to wrap your head around.  The professor provides tips for the projects during lectures, which was very helpful. This class also uses Piazza for questions, so you can get help outside of class relatively quickly. The professor and TAs are very helpful and accommodating. Overall, I think this class is pretty manageable and useful, especially if you aren't that familiar with C/C++ and want to get into it.",
                    "37": "Projects definitely throw you into the deep end. Be prepared to spend your weekdays doing the projects, at least for the C part of the class. But it's a lot of fun as the projects build off of each other.",
                    "38": "A lot of work for the first 4 projects on C, but as we move on to C++, things get a lot easier."
                },
                "school_demographics": {
                    "Weinberg": 33,
                    "McCormick": 30,
                    "Medill": 0,
                    "Comm": 2,
                    "SESP": 1,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 5,
                    "Sophomores": 45,
                    "Juniors": 13,
                    "Seniors": 2
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.761851851851852,
                    "student_count": 162
                },
                "student_opinions": {
                    "0": "Professor Hummel is a great professor. He explains topics very well. The programming assignments teach you how to \"think\" as a c/c++ programmer. The weekly programming projects are graded with an auto–grader. The auto grader opens usually around Wednesday. Each day you get 4 submissions, and the auto grader tells you the score you get. You can resubmit for full credit, but resubmissions do not carry over to the next day. The resubmissions were extremely helpful, especially because I have made when printing something to the screen, but the resubmissions allow me to correct them. Each assignment has a 20 point manual review to make sure you properly commented code. There is one exam (the final) which you have to get above a 40 to pass the class, but the final is only weighted 20% of the final grade. Professor Hummel's office hours were extremely helpful, and he is a very nice professor and easy to approach. Attendance is mandatory.",
                    "1": "Not a big fan of CS but this class was great. Professor Hummel always has good lectures and the assignments are very reasonable but challenging.",
                    "2": "I'm happy with what's focused on the class, a broad range of computer science and software fundamentals.",
                    "3": "This class is not the easiest class, but you definitely learn a lot. Professor Hummel teaches with tough love, but he definitely prioritizes people learning.",
                    "4": "The first half of the course is in C, and the projects are very time–consuming(8–10 hours). Start them early or you will quickly fall behind. The second half of the course is in C++ and the projects become much easier(2–3 hours). In addition to the projects, there are weekly homework assignments that are straightforward and can be done in under an hour. As for the instruction, Professor Hummel is a great professor and a very kind person. He welcomes any questions and does his best to help students however he can.",
                    "5": "Great class. Hummel is one of the best CS professors at Northwestern. Weekly projects are time consuming but they help you to learn a lot.",
                    "6": "Good introduction to C and C++. The work load caught me off guard at the beginning of the quarter but I adjusted in good time.",
                    "7": "Professor Hummel is a fantastic and engaging lecturer. Have yet to take the final but the homework and projects take time but they are fair.",
                    "8": "Professor Hummel is really good. The projects are nice and interesting, especially the last one.",
                    "9": "Interesting content. Time–consuming,  highly involved projects.",
                    "10": "A lot of people claim that this class was really easy and chill,  but that's only because everyone taking this is most likely a CS major and already knows C and C++. As someone who is not a CS major, this class was really hard for me. I used up all late days (8 late days without grade deduction), which were actually extremely nice. The first half of the class (C) was significantly harder then the second half (C++), so try your hardest to survive halfway through. I really thought about dropping this class, but it was really worth it. You truly do learn a lot in this class, and if you make it through all assignments, you're sure to get an A. There are no midterms, just homework and the final. This class literally has office hours from like 9am–9pm every single day, so go to those if needed. I really found Piazza to be useful, as instructors would respond pretty quickly.",
                    "11": "This is a great but pretty heavy course on C and C++. Expect the weekly projects to be very time–consuming and difficult particularly during the first half of the course—ALWAYS START THESE EARLY IN THE WEEK. They get noticeably lighter however after the switch to C++ at about week 5/6. Despite the substantial workload, I learned a ton in this course and Professor Hummel was fantastic. He and the TAs were very responsive on Piazza and gave helpful tips throughout the projects. Overall I would recommend this course, if you put in the time and effort you can expect to do well but just be prepared for the workload in advance (especially if taking concurrently with 214 since the weekly deadlines tend to be similar).",
                    "12": "Professor Hummel isn't a very nice guy. You could be perfect and not need coding help all quarter and then ask one question, to which he will belittle you and act like you're dumb for not finding one tiny mistake across 1000+ lines of code. The lectures themselves were pretty good, and the projects teach a good amount.",
                    "13": "Hummel is a fantastic lecturer. lectures are very hands–on. the assignments are written up very clearly. i dont think the zybooks was worth the $80 subscription. we covered all the same concepts in class, and open source explanations of all the topics we covered are available. a lot of time is spent on best practices (commenting code, refactoring, encapsulation [of C functionality using C++, getters/setters, iterators, etc). the lectures, while being very informative, could drag on",
                    "14": "This is a great class that builds your programming skills, taught in C/C++, one of the more useful and powerful languages. This class really helps you learn how to think about approaching writing code. The weekly projects are a good challenge that definitely will force you to improve your programming skills. The first have of the class with C had more difficult projects than the second half with C++.",
                    "15": "Definitely a challenging course, esspecially during the first 5 weeks of coding in C. Highly recommend going to office hours for help with the weekly coding projects.",
                    "16": "Where do I start with this class?<br><br>I guess we'll start with the structure:<br><br>The class is divided into a month of C and then followed by a month of C++.<br><br>8 Homeworks in a digital book that you are forced to buy because it accounts for 16% of your grade. These are meant to be the easy part of the course, much like the MyLabs in Math classes here, if you've taken any Calc class at NU before. Usually, these HWs are pre–reqs for the weekly projects which make up the bulk of your grading structure.<br><br>8 projects plus one extra credit project that makes up for 64% of the grade. Let me be crystal clear in plain words: These projects are NOT TRIVIAL. Expect to be dedicating a good chunk of your week to office hours. (The volume of TA's need to increase since the traffic was insane the first four weeks.)  <br><br>The projects get harder in sequential order upto Project 4, then it takes a dip with the extra credit project in C and the first C++ project and then gradually starts to crescendo back up , albeit nowhere near the level of the C projects. (The last C project left some of the TA's heads scratching as well) .<br><br>The remaining 20% of the grade is dedicated to a final exam, with the catch being that you need over 40% to pass the class, and quoting Prof Hummel \"If you can't write a simple program in C++, then where've you been the whole quarter?\"<br><br>Professor Hummel is an interesting guy, his lectures are generally okayish though sometimes I nearly dozed off in the C portion ( understandable considering it was the 9:30 section), They're sporadically filled with dry humor so they can be entertaining at times. Interacting with Prof. Hummel in his office hours convinced me as to why he is so well reputed: He immediately knows where've messed up before you even finish explaining your code. Intellectual and sailing behemoth imo. That being said, the style and structure of this course need to drastically change: they're holding his teaching abilities back and leave a bad taste in the mouth since we're being thrown in the deep end on a weekly basis and had Piazza and a competent TA entourage not existed, this course would've been beyond impossible.<br><br>Whatever you feel about this course before the drop deadline, DO NOT DROP IT. It gets better. Seriously. I mean it. The 200–level sequence is meant to separate the men from the boys and you're doing yourself a disservice by getting scared off initially. I mean, quite frankly, I'm appalled by how the first half is basically tailored to make you drop the course and then the difficulty immediately plummets after the drop deadline. <br><br>Things must change so Prof Hummel can truly exhibit his teaching prowess.",
                    "17": "This course was definitely easy for me. I think coming in with prior programming experience helped.",
                    "18": "This class is pretty hard; there's not really any sugarcoating it. That being said, Professor Hummel is an incredible lecturer and you really learn a lot from him and this course. The projects were a bit too time–consuming and having one every week was overwhelming. I'd say it's worth the effort especially if you are a CS/CE major because the concepts taught here will be integral moving forward in your academic and professional career.  The first half is C which was difficult to grasp but the second half is C++ which was a lot more intuitive and applicable. Professor Hummel and the TAs were very responsive on Piazza so that was helpful. The final was fair, mostly memory and concepts from the last few projects and homeworks. It's not going to be fun or enjoyable for that matter, but it's one of those classes you have to grind through.",
                    "19": "Course took too much time in my opinion, though I learned a lot.",
                    "20": "This course was time consuming. Especially for the C projects, there were times when the project took me upward of thirty hours of just straight coding and debugging. That being said, the proejcts were how I felt I learned most of the content and they do give you a sense of accomplishment when you succeed.",
                    "21": "CS211 has a strong reputation, it's definitely a hard class and lots of time will be invested on it. Although, it's very rewarding and making things work is the highlight of the class. The projects are built to be able to be completed, and the second half of the class with C++ is definitely better. The TAs are there to help, your friends are good resources.",
                    "22": "Hummel is absolutely the goat. He is such a good professor and knows exactly how to answer basically any question you have. I learned more in this class than any class at Northwestern, and I think it was structured perfectly. There is a weekly homework book assignment to teach you more about the concepts covered in lecture, and a weekly coding project that isn't too time intensive. It gets way better after the C weeks, and the projects take considerably less time after project03. There's one final exam at the end of class that's worth 20%. If you can take this class with Hummel, you should. He is a pretty busy guy though so don't ask stupid questions that you can answer yourself.",
                    "23": "Hummel is a great prof. to teach this class! His lectures were clear and he was super understanding about deadlines – especially if a majority of students were struggling with a project. While it may be annoying to have to attend lectures, they're very helpful and he often provides tips to help with the projects. TAs were also great, but I'd recommend getting to OHs early as the queue can fill up pretty quickly. Grading and coursework was very fair; It's easy to keep a high grade in this class if you start projects EARLY and don't miss a HW.",
                    "24": "Hummel is goated.",
                    "25": "Professor Hummel is great and explained confusing concepts, especially pointers, really well. The course consists of weekly homework (30–45 mins each) and weekly projects (couple of hours each). The weekly projects varied in difficulty, project04 was incredibly challenging even though Hummel said it would be easy. Make sure to start on that one early. The first 4 projects are in C (more challenging), then the last 4 are C++ which is notably easier. Overall, I enjoyed this class a lot and feel like I understand memory management / pointers much better.",
                    "26": "Projects are a lot of work but you learn from them. Make sure to start early and get help from peer mentors to avoid leaving things to the last minute.",
                    "27": "Go to office hours and you'll be fine",
                    "28": "The class is difficult for the first 4 weeks, especially if you have no prior experience coding in C. However there are plenty of office hours (both the TAs and Hummel are very helpful in providing assistance). After you get through the C coding the class becomes significantly easier. The final is very light, if you've paid attention at all in the class you will do well.  I enjoyed having Hummel as a professor. He is a great lecturer and very knowledgeable (can be a little snappy in office hours if you ask a dumb question).  This class isn't a free A, but it's definitely a guaranteed A if you put in a moderate amount of work.",
                    "29": "The course helped me learn more about low level programming",
                    "30": "The course is very straightforward and you learn the main premises of C and C++ (pointers and classes respectively). In addition, the class exposes you to some data structures and algorithms such as binary trees, binary search, linked lists, etc. There are weekly projects that can be extremely challenging at times, but they are very much doable if you attend office hours and utilize the piazza. There is only the final exam, but be warned. Failing the final means failing the class. However, as long as you do the weekly homework and projects, you will be in a good position to do well on the final exam.",
                    "31": "Good luck",
                    "32": "Solid class, Hummel is a great professor. Make sure to get homework projects started early, the first 4 are in C and take a substantial amount of time. I really recommend working at least an hour and a half per day starting on Monday if you’re not confident in C. For me, these took about 4–5 days of continuously grinding on average. However, after the first month and a half when the course switches to c++, projects become immensely shorter. I finished most of the latter 4 projects within 2 days. I would recommend reading up on pointers(very important!!!!) and C syntax  if not already familiar. <br><br>This is a very interesting class, as the projects build upon each other and it is cool to see. Class should not be too hard. 65% of the grade is from weekly projects, 15% from weekly hws (light), and 20% from the final. No other tests or midterms. As long as finish all the hws/projects and get at least a 65 on the final, you should be be locked in for a 4.0<br><br>Additionally, professor Hummel is a nice professor and engaging lecturer. Additionally, his late policy is very lenient. Each student has 8 late days which can be used on each project, up to 2 per project, and deadlines would be extended occasionally. Lowest hw also gets dropped, although this shouldn’t really matter as the homework’s are easy and helpful, and can easily be completed in less than 2 hours MAX.<br><br>All in all, this is a very good class, can’t go wrong with Hummel. If you are interested in learning more about  CS, I’d highly recommend taking this course. The only negative I would say is that the only textbook costs 65$.",
                    "33": "This was a very good class on computer programming and I learned a lot from his lectures. I didn't know C or C++ before and he taught it well.",
                    "34": "For context, I have very little coding experience outside of CS classes at NU, so take what I say with a grain of salt. <br><br>This class is definitely on the challenging side in that the coding assignments can be really tricky. Maybe I'm really stupid, but I've spent hours trying to figure out what was wrong with my program only to realize I needed to change a \"&gt;\" to \"&gt;=,\" for example. Pay attention to details on projects, and try not to make mistakes because they'll snowball. Unfortunately, office hours were really packed all the time, so relying on them might not work. Some of the projects (3 and 4, especially) are just going to take you a lot of time (at least for me they did), and all you can do is budget extra time for those. <br><br>Pay attention to some of the more granular stuff Professor Hummel goes through in class but doesn't necessarily come up again for a few weeks or for most of the projects (memory diagramming, map methods, etc.) because they could likely appear on the final.",
                    "35": "This course is a great introduction to lower level programming. While the projects could get frustrating and long, there was enough assistance to complete them. Professor Hummel is a great lecturer, and highly responsive to students' questions and concerns.",
                    "36": "Goes quite in–depth on C++, which is super useful for competitive programming.",
                    "37": "The class overall is not bad at all. The projects do get a bit challenging at times and could take a while to complete, but you're given plenty of submissions so overall is not bad at all. Professor Hummel is a great professor that taught the topics clearly and effectively and I learned a lot throughout his class.",
                    "38": "Very fun course where you will learn how to program in C and C++. First month of this class is really hard with the C projects, but it gets much lighter when we move to C++. Overall, the projects are fun if you like coding.",
                    "39": "Hummel is a pretty good teacher, but his lectures get pretty redundant at times. You learn C and C++, so the entire class is just learning the syntax and the language, so he usually lectures about random stuff at the end of the course. There were 8 projects but he did give use 2 extra credit ones too. The final was not that bad. He did decide to not give us the correct code for one of our projects, so it took me 20 hours to finish. He knew that he gave out the wrong code, but didn't tell his students, so hopefully he doesn't do that again. Other than that, class is harder in the beginning but when you switch to C++, its very chill.",
                    "40": "This is a very well done class. Like other CTECs have said, the learning curve is pretty steep for the first couple weeks, but the class quickly mellows out. I learned a lot, not only about how the languages work, but about how to be a better programmer in general.",
                    "41": "The projects are interesting and worth most of your grade. Prof. Hummel is a great lecturer and explains things clearly. The lecture attendance requirement is probably the only downside of this course.",
                    "42": "Professor Hummel was a great instructor. The projects took a little longer than I would have liked and they are quite tedious but after breaking everything down they were feasible.",
                    "43": "This course was very well taught by Prof. Hummel and the projects, although time consuming, were very rewarding and good at teaching you how to build bigger projects. It was quite a jump from cs111 to cs211, but once you get past the learning curve, the course gets more managable.",
                    "44": "This course is not as bad as everyone says it is. While it is a lot of work, you get SO MUCH BETTER at coding and debugging. Prof. Hummel is an excellent and engaging lecturer, and while some of his policies are cringe in my opinion, they do help you become a better programmer. The first four weeks are in C are very time–consuming, so it makes the remaining weeks in C++ feel like a walk in the park. Weekly homeworks and projects, and one final. You will find out exactly how good at coding you are in this class, and you will get better! PMs are fabulous, shoutout to Charlie and Andrew, the goats.",
                    "45": "Definitely a jump from 150. I honestly don't think there is anything in 150 that could prepare you for 211 except maybe a conceptual understanding of OOP, and I don't really see why it is a prerequisite either. The zybooks (online homework) are doable but the projects can be something else. Sometimes, I thought I magically missed an entire week of classes when I saw what we had to do for the projects. The final wasn’t horrendous if you did the projects, but if you get &lt;40 you automatically fail the course.",
                    "46": "The first half of the class is notably difficult, as the assignments in C are particularly tedious, time–consuming, and difficult. DEFINITELY go to office hours, as it will make life much easier. The second half of the class, with C++, is much much easier to follow and the assignments are much better to follow as well. Overall, the course was not my most difficult class by any means, and you will likely get a good grade, as long as you are ready to put in the time.",
                    "47": "The projects are definitely more difficult than projects from CS111 and CS150, but I think that just made the outcome a lot more satisfying. The plentiful office hours held throughout the week are definitely helpful. How helpful the PMs were ranged quite a bit, but there definitely were some really good PMs that didn't mind sitting down and explaining a concept. It's nice that Hummel provides 8 late days for project submissions because sometimes life just gets in the way.  His lectures were also really great, and they actually added value to the class.",
                    "48": "This class is difficult. There are 8 projects and 7 homeworks. Homeworks are more simple exercises that can be finished within an hour or two. Project are very time consuming, typically taking around 10–15 hours. There are 4 C projects and 4 C++ projects. The C projects are much more difficult than the C++ projects. They are time consuming, so start as early as possible (you do get 8 late days, though). I wish the lectures had been more focused on the actual assignments as we moved through the course. I often felt like we were discussing things that weren't relevant in class and I think lecture could have been geared towards topics covered within the projects. Go to office hours – they are super helpful! Overall, a difficult class, but if you put in the work, you should be fine.",
                    "49": "The projects were comprehensive",
                    "50": "I learnt a lot from the class. The projects are challenging, and therefore stimulates learning. Office hour are definitely useful. Hummel is a pretty amazing professor! I def recommend his class!",
                    "51": "This is a really good course. Prof. Hummel is a great professor and the curriculum is good.",
                    "52": "The weekly projects, especially the first four (which are in C), will take A LOT of time to do. You may find yourself working for 10+ hours. Therefore start as early as possible (preferably the day they are released), and ask for help. Also, if you can, try not to take other classes that have a heavy workload during the same quarter.",
                    "53": "lots of work, especially around halfway through.",
                    "54": "Professor Hummel is a good lecturer and genuinely cares about helping the students develop valuable skills in programming. The course  is mostly composed of 8 weekly projects that tie into one another. The content related to a project is covered in the same week the project is due so the projects sometimes require you to start thinking of  some concepts before being taught about them in the class. While the projects are not impossibly difficult, be aware that they sometimes take a significant amount of time that can go up to 15–20 hours.  The  response time to the Piazza questions is pretty fast .  Professor Hummel also tries to incorporate some data structures and algorithms content to the class which I think helped me develop my understanding of such concepts but also made the class a little harder. Overall, I think that CS211 is a class that can help you learn a lot and I would recommend everyone to take it with Professor Hummel",
                    "55": "Prof Hummel is a great lecturer. Be prepared to spend a lot of time on the first four projects, projects 5–7 were  so much easier in terms of time commitment they almost didn't seem like projects. I wasn't prepared for how much time the projects would take and spent 7 hours straight working on the first one on the last day. Pretty helpful course though, lots of programming, and the weekly hws are free points",
                    "56": "I think that this course is a step–up from 111 or 150. The grading is very unforgiving and unaccommodating, but that's just the nature of the class. I would recommend that people take advantage of Office Hours or Piazza, because balancing this class with others, all by yourself, can be very difficult. Also the classroom environment isn't great: the dim lights and lack of natural light made it very difficult for me to stay awake during some of the lectures. That said, Prof. Hummel is quite energetic and I would consider him to be an effective teacher.",
                    "57": "I came into this class being a bit nervous since I had heard the projects were really challenging. Although the projects were quite time–consuming, I didn't think they were overly challenging and were very fulfilling to complete. I also found the material and Professor Hummel's teaching really interesting. He kept the lectures interesting and fun with code alongs (and also usually let us out 10–20 mins early!). Professor Hummel and the TAs on Piazza were super helpful during projects, so definitely utilize it, particularly if you don't go to office hours. They typically respond within 10 mins with really good feedback. I do think Professor Hummel really listened to the feedback from previous quarters and made the instructions for the projects more clear and into more bite–sized pieces which I really appreciate. Overall, I truly learned a lot from this class, particularly in memory management and RAM.",
                    "58": "You will learn SO MUCH. Prof, Hummel is an amazing professor. Weekly projects are due every Friday so it can get kind of annoying if you don't do them with time. These projects TAKE TIME – especially the C ones. Not impossible – just go to office hours and the PMs are usually kind of helpful. Easy to get a good grade because 80% is projects/HWs so you  can ensure a good grade if you get help.",
                    "59": "Start early on the projects, try to save your late days until the end of the quarter/exam weeks, make friends, and go to office hours. That's probably the best advice I would give for making it by in this class. If you're taking it with a lot of other stem–heavy or heavy workload classes, you definitely need to learn to plan out your weekly schedule and set aside large blocks of time to work on 211 projects. The projects are interesting, but I definitely wouldn't have made it through the many days I spent in office hrs without having a few friends in the class. After project 3, they get more doable as the quarter goes on, but I also think that is contingent on you completing the first few projects somewhat independently (working it out yourself, not getting too much help to the point that you barely wrote the code yourself). Anyways, it's not a bad class and you'll feel so free once you're done. Another thing is that Joseph Hummel is lowk extremely passive aggressive. If you're planning on going to him for help or clarifying questions, make sure you brace yourself for his condescending tone because that man does not sugar coat anything. If he thinks your question is stupid, trust he will make it known. If you want reassurance, empathy, or just like... idk support, don't. Going to his office hours, hearing him talk to other people who were just concerned about their standing in the class, and even the way he responds to some questions on piazza just made me not want to speak to him. He's real though, which you have to respect. OK class, not the worst experience ever.",
                    "60": "Love Joe Hummel, but do not be fooled. This course was significantly more time consuming than 214, the projects will definitely sneak up on you 🙏. Great professor though and class was pretty engaging despite being lecture style, so I appreciate that.",
                    "61": "This class is very challenging. However, Prof Hummel is very good in terms of explaining concepts; go for his office hours, he will save you a lot of time in tackling the projects.",
                    "62": "I think Prof. Hummel has nailed this course, it is obvious that he has taken into account  past student's feedback and has worked diligently to strike a balance between making the course difficult enough so that students learn while also making assignments feel doable and rewarding. I felt like I learned the most in this course than any of the other courses I have taken at Northwestern, as Professor Hummel really makes sure to cover a lot of ground. Overall I highly recommend the course.",
                    "63": "I love Joe Hummel. He gave someone a dollar in class once (they asked a good question). He is super cool as a person and as a professor. He really knows what he's talking about, but once in a while gets caught up on very specific subjects, he always corrects himself to the right answer in the end though.",
                    "64": "Some projects take 20–30 hours. Start early. Overall, learned a lot about C and C++ though so the projects were worth it but I was really in the trenches for projects 3 and 4...",
                    "65": "This class takes a lot of effort, but I enjoyed debugging for this class a lot more than taking it with 214. This class takes a lot of time and you have to allocate the time for it, especially for the first 4 C projects. However, the C++ projects are perfectly fine.",
                    "66": "Professor Hummel is great at answering questions both in and out of class about C and C++. While the programming projects can range in difficulty, with some of the later C projects being a big pain to debug, they helped me develop better habits in programming and skills in figuring out bugs.",
                    "67": "The course overall was great and I would recommend it. The first few weeks can be a grind but if you stick through it it is definitely one of the more rewarding classes to take.",
                    "68": "Professor Hummel is a fantastic and enthusiastic teacher. The programming projects are difficult, but I liked that because you learn a lot in the process of completing them. The final exam is fair.",
                    "69": "This course was pretty difficult, but I found it manageable. The majority of this course is primarily made up of weekly projects, and they definitely require a lot of time to finish. You have to learn C pretty quickly in the beginning of the quarter so that you stay on track for each project, and in the later half of the course, the class transitioned to C++, which made the later projects somewhat easier but still time–consuming. As long as you dedicate a lot of time to completing the projects in this course, you should be fine. The final exam was also fairly easy.",
                    "70": "I think it was a strange course, and the projects were very tedious and I don't know if I learned a lot from them. Basically just lots of basic looping and if–else statements.",
                    "71": "the projects are challenging but useful",
                    "72": "Being project based is helpful.",
                    "73": "It exposed me to new coding languages and concepts while making those concepts useful in the projects",
                    "74": "The course is challenging but very rewarding.",
                    "75": "Really long but very doable projects and easy exam for a relatively easy A if you put in the time. if you do the projects right you'll only need a 65% on the final to get an A.",
                    "76": "I struggled significantly for the first five weeks but found a proper bearing on the code in the remaining weeks.",
                    "77": "This course has a ton of work, upwards of 12 hours per week (mainly from the weekly projects). The first half was taught in C, which was definitely more difficult than the second half in C++, but that was mostly because the projects were so much harder in the beginning. Start early on assignments and try not to use all your late days and this class is very doable. I feel like it wasn't the difficulty that made this class bad, just the sheer workload that takes up so much time. However, Hummel is an awesome professor that is very approachable and made lectures fun and enjoyable to go to.",
                    "78": "The class was very challenging but pushed me to learn and become a better programmer",
                    "79": ".",
                    "80": "Projects for C take a lot of time so plan accordingly. C++ projects aren’t as bad",
                    "81": "Professor Hummel is very knowledgable and is great at teaching. The projects can be pretty time consuming and difficult, but that's just the life of programming in C. Overall, the class is a good introduction to low–level programming.",
                    "82": "This class was pretty good. Lectures were at times boring. I liked learning about c and c++ .",
                    "83": "Some of the projects were excruciatingly hard with little instruction or insufficient guidance on them. Going to office hours is pretty unpleasant because of the sheer number of students and pms packed into a small tech classroom.",
                    "84": "Prof. Hummel does a phenomenal job leading the class. Lectures are always engaging and are rarely filled with superfluous details. The projects are challenging but fair–– make sure you don't procrastinate!",
                    "85": "I liked this class a lot, the projects were interesting, and i liked that we built up one complex program over multiple assignments, definitely learned a lot about c and c++, and programing in general",
                    "86": "Very well designed course. It is hard but if you put in the effort it will teach you C and C++ quite effectively.",
                    "87": "asefaef",
                    "88": "Projects were pretty challenging in a good way. All of them were fair though. The only overly challenging lab was week 3, which took me maybe 15 hours to complete.",
                    "89": "Great course. Had some fears on C and C++. Professor Hummel did a great job explaining the concepts and the projects are very interesting (though time–consuming sometimes).",
                    "90": "Projects can be long and at times pretty tough. If you don't procrastinate you should be fine. Projects are the bulk of the courses. The first half of the class was more challenging than the second.",
                    "91": "Honestly, I am a huge cs 211 supporter. This class was a decent amount of work, but the projects were generally pretty engaging and not too difficult as long as you are willing to actually think critically and engineer the concepts that we went over in class/in the online textbook to make something work. Plenty of chances to improve upon work that failed tests initially, and also good experience writing tests. Prof Hummel is great, clearly very motivated about teaching and also not afraid to speak his mind on piazza but also super kind if you clearly are making an effort in the class. Final exam was a bit weird to have but nothing too difficult if you had engaged with the projects.",
                    "92": "Amazing class! The material is reasonably paced and definitely provides a good challenge. I never felt like the content was too difficult, though. Professor Hummel is great at explaining, and funny, too.",
                    "93": "This course takes you to the depths of hell but if you last the quarter you will emerge with a solid weaponery of knowledge to use in future classes and cs endeavors. Professor Hummel is the best computer science teacher I have ever had (of four total). He explains the concepts incredibly well (both concise and clear in his explanations), takes questions in class, and makes the class immersive by having in class coding activities and iclicker questions. The iclicker quesitons are not graded for correctness so it takes the stress off and serves as a good tool for staying engaged and testing your knowledge. Professor Hummel has mastered the art of teaching computer science I don't know what else to say. The class is an hour and 20min but usually we would end early and the lecture itself is so well organized and taught that I don't even realize time has passed until its already over! THE PROJECTS THOUGH. They are HARD. The amount of times the projects made me question whether or not I was cut out for cs was insane. But at the end of the day I made it through with a good grade  (yes northwestern student standard good grade) despite getting a 0/100 on one of the projects. And the amount of cs knowledge I learned was IMMENSE. His projects are hard for a reason. So do them, suffer, cry, strain your brain and question your capability a thousand times over. If you stick through it you will be a better coder, but most importantly a better computer scientist. The final is not hard, dare I say it was easy. If you did the projects and homeworks and paid attention in lecture than you will be fine.",
                    "94": "This is an excellent course. Despite being challenging and time consuming, this course teaches you so much about programming. The class is largely project based, so plan to spend about 10 hours a week on this class. Professor Hummel does a good job familiarizing students with the complexities of C and C++ while preparing them for the rigor of future CS courses. Overall, I found the class challenging and enjoyable.",
                    "95": "I can't speak for others but I found this course (especially the first month) EXTREMELY difficult. The class starts out in C and the first four projects are absolutely awful and all of them took me 10+ hours. Also, until the class gets to C++, there is always a 1–2 hour wait for office hours due to the sheer amount of people that need help on the projects. Once the class transitions to C++, it gets better. Learned a lot though.",
                    "96": "I absolutely loved this course. I will say, it's not for the faint of heart. If you have no experience with C or C++ (It's okay! I personally didn't!) you will really feel like you were thrown into the deep end. The bulk of your grade is made up of projects (1 per week, with a break week). The first 4 are in C, and I spent probably 10 hours working on the projects the first 4 weeks. Office hours were particularly helpful, the PMs are all excellent. The final 4 projects are in C++, and probably required just 3 hours a week. There were 2 extra credit projects if you needed a grade boost; I personally did not complete either. Definitely don't take this class if you've got a busy quarter, but I thought it was fantastic, and I went from knowing no C/C++ to feeling very proficient.",
                    "97": "Pace of the course was good for learning C and then C++, but the course load was definitely heavy. Every week there is a project that takes at leas a couple of hours and sometimes even up to a couple of days. However, learned a lot and definitely more confident when writing code.",
                    "98": "Very time consuming class! Start projects early. Prof Hummel is awesome",
                    "99": "The content can be dry and the projects are difficult but Hummel is a great lecturer and does his best to make everything interesting. Learned a lot about c and c++ if that's what you're going for.",
                    "100": "Necessary class to take and the professor is definitely really interested in the course material, but it's definitely fast–paced. It's nice that most of the class grade is determined  by the projects, but the first couple projects are extremely time–managing so make sure you budget a lot of time to them. Office hours are super helpful and helped me understand the material better.",
                    "101": "This class is definitely challenging, especially the C projects. However, they are very doable. With the late days, you can easily finish the projects within a week. Start early for projects 1–4 as those are much more difficult. Projects 5–8 were easy and chill. The exam was very fair, and I think overall the class is structured well. Hummel definitely knows what he is doing and cares about teaching his students the fundamentals of computer science. The projects did take hours, but I learned a lot in this class.",
                    "102": "Course: The course was a challenging class, but really gives you a great understanding of C and C++ in the end. It will challenge you especially in the first 6 weeks of the class because you'll be thrown into these fairly massive projects that are complicated. You'll spend hours upon hours trying to learn exactly how to implement what you need. However, it is certainly not impossible. Hummel will give you handouts that will guide and explain what you need to do without telling you how to do it. You will never feel like you don't know what you should be doing which is helpful in a beginning CS class because it helps you build a foundation in implementing things and then you can learn how to know what to implement later on. I would say that it was certainly learning through trial by fire, but for computer science, in my opinion, that is what you need to get a personal understanding of programming. It will require many hours of \"self–learning\" but it will really benefit you in the end.  As for the the other logistics of the class, he uploads all of his lectures and PowerPoints to canvas. However, there is an attendance requirement and you only have 4 absents until he stops dropping your grade by a full point for each missed class. The class consists of several homework assignments which a really easy and 8 major projects that count for 60+% of your grade. Each project is due on Friday but can be submitted up to two days late. You have 8 free late days which means you get no penalty for turning it in late only up to 8 times. Final is written which sucks but it is not overly hard. <br><br>Professor: Hummel was a great professor for this class. He is very good at not only explaining the foundations/concepts of the language, but why such a concept was implemented. He gives you a good idea of how everything you learn can be used in a multitude of ways. He is always willing to answer questions at any times and always willing to reexplain anything. He is a very lenient guy. When one of the projects he gave us turned out to be WAY harder for us than he imagined he gave us an extra 2 days to complete it without any penalty. He seems like a very down to earth guy who understands the industry and wants to see his students succeed. His goal genuinely seemed to be that all his student get a perfect score on all the projects because he wanted us to learn. There is a lot of TA's for this class and they have hours pretty much all day 6 days a week. It was truly impressive the role that the TA's played in the class. They were genuinely helpful and always seemed like they wanted to help. The days before projects there was always a bunch of students in office hours but they always made sure that everyone got some help. <br><br>I would absolutely recommend taking this class with Hummel.  It is a challenging class but really beneficial and very well structured.  If you put in the work you will get a good grade.",
                    "103": "Stick it out! This class does not start easy and the first four projects are intense, but you learn a lot and then the C++ projects are much more doable. I came into this class with just 111 and 150 and it was still doable, just make time for support if you think you'll need it.",
                    "104": "Overall, this was a great class. A couple of the projects can take long and be frustrating, but looking back a lot of my issues could have been resolved by reading the directions more carefully. Hummel does a good job of explaining the concepts that we need to know, and although lectures aren't the most exciting, they get the job done.",
                    "105": "This was a very enjoyable course. Prof. Hummel is a very engaging teacher and is good at communicating the nuances of C and C++. The projects were difficult and time consuming but I think ultimately fair, and always contributed to my ability to actualize the C/C++ concepts I had learned in class and through the textbooks.",
                    "106": "The C Projects were horrible, an absolute nightmare. The C++ ones were pretty fun though. Lectures were boring but attendance is mandatory.",
                    "107": "Course was great. I learned a lot about how computers read programs as well as C/C++.",
                    "108": "Hummel is a good prof and honestly really engaging. The first part of the class is pretty challenging, but as long as you don't procrastinate and go to office hours you'll be fine.",
                    "109": "This class isn't easy. It's tough. Weekly projects are time consuming but are SOO enriching. I learned 10x more from just doing the weekly projects than anything else, also are a pretty large portion of your grade so if you put effort into the projects you'll be 100% fine.",
                    "110": "Professor Hummel is great – open to answering questions and seems very nice. This course had a lot of interesting elements, and I really enjoyed learning more about memory management in C. I do feel like I learned how to code well in C and C++, but the C projects were a HUGE time commitment. They felt like they were a bit more complex than necessary, and I don't feel that there was enough time given for some of them.",
                    "111": "I really liked this class. While it was definitely challenging (especially first half – projects may take SO long) it is very rewarding to put in the work. First half can definitely be a time sink for the first few projects as you navigate C. However, lectures are super helpful and they often provide key pieces or ideas that will be applied to the project that week, so go to them. Hummel is the GOAT. Very much no nonsense, but he tells it like it is and has designed the class to give you many chances to do well if you put your mind to it.  Two extra credit projects can save you from one bad project, and you get 8 late days, which gives a lot of flexibility."
                },
                "school_demographics": {
                    "Weinberg": 58,
                    "McCormick": 98,
                    "Medill": 1,
                    "Comm": 1,
                    "SESP": 2,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 97,
                    "Sophomores": 50,
                    "Juniors": 9,
                    "Seniors": 5
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.78,
                    "student_count": 108
                },
                "student_opinions": {
                    "0": "The projects were extremely time consuming but I learned a lot. This class was pretty doable (for me).",
                    "1": "Pretty good class! Weekly projects and homework, very manageable as long as you pay attention in the lectures. I think it is easier if you already took 214, but you totally don't need to. The C part of the class is probably where you'll have the most difficulty but even that isn't too bad. Luckily you only really do C until the midterm, then it's C++.",
                    "2": "This is an amazing class with an amazing teacher. Hummel is extremely good at grasping the attention of a large lecture hall. We covered a lot of interesting topics in this class. The class essentially teaches you the basic of C and C++. C will be taught for the first half of the class and C++ will be taught for the second half of the class. I think this is a very well designed course with you spending most of your time doing projects which are the most important part of this class. I strongly believe that learning by doing is the best way to learn and this is what the class preaches as well.<br><br>The class is by no means an easy class, but you will learn a lot. The C portion of the class can be challenging and quite time consuming. If you are able to last through it, the class gets easier. I learned a lot about how to design large scale programs and write unit tests in this class. I do think the class gives you a great insight into how programming languages are designed and how to use data structures.<br><br>Overall, the class was very enjoyable and you get to build some cool projects with the help of a very knowledgeable professor. However, do know that Hummel can be quite passive aggressive.",
                    "3": "I really loved this class, I thought it was challenging, interesting, and rewarding. Just make sure to start the projects early.",
                    "4": "A hard class but Prof. Hummel is a really great professor who sometimes brings snacks to class. If you put in the work you'll learn a lot.",
                    "5": "This class really does jump in with the first project. As someone who hasn't coded in C and C++ it was definitely a bit tough and I had to give myself ample time with the projects. Best advice would be to start early so that you have time to go to office hours and get help since it can get very crazy during Friday OH. In general, the first part of the course (C) was a lot harder than the second half (C++) for me, as it was for a decent amount of my friends as well. Overall, good class to learn more about CS and the major, but definitely not a blowoff class.",
                    "6": "good class, learned a lot. start projects early. hummel is a great lecturer, but don't ask stupid questions on piazza or he will be sassy.",
                    "7": "Weekly projects that are very long and time consuming but help you learn a lot. Classes are enjoyable and chill. The tests are a lot easier than any of the projects so youll be fine.",
                    "8": "The teacher was amazing and covered C and C++ in depth with great explanations over how the language works and how programming works in general. The projects were very reasonable and helped us learn a lot about the language and about how to approach certain real world problems in general.",
                    "9": "I took CS 211 while taking CS 214. I thought it was fine to take them together but CS 211 was very time consuming for me due to the weekly projects.  Try to start the projects early!",
                    "10": "This was a very time consuming course. The first half of the course is hard (language is C). Second half is not so bad. The lectures were not very helpful (it's pretty much a self–taught course). I spent several hours in office hours each day during the first half of this course. Very tiring.",
                    "11": "first half of the quarter with C was brutal, you'll spend a lot of time in office hours trying to understand and debug the weekly project for 4 weeks. the pms were super helpful though and despite how hard the projects were i was able to turn in each of them in time without using a late day (you get 3, which is less than what it used to be). second half with c++ is much easier and wont take nearly as much time to finish.<br>there is also a zybook coding homework due each week, but those are much simpler and take only 1 hour to finish max. midterm exam was not too difficult",
                    "12": "Difficult class but interesting if you're prepared. The second half, which is in C++, is definitely much easier than the first, which is in C. Lectures are solid. Can only skip 4 before a grade penalty though, and attendance is tracked",
                    "13": "Working into this class, I expected everything to be on a pace as I saw in CS_150 where we spend a week on a programming concept like loops or variables. However, it is different; quick pace, and you need to read the material if you want to work on the projects because if you go to class without reading, the prof's lecture won't even make sense. That is in case you have no programming experience under your belt beyond prev CS classes here at NU. But it helped me solidify my C and C++ skills through working on the projects and homeworks. It felt I was working on solutions or something I can share with someone who is not a CS student or developer which I enjoyed.",
                    "14": "Weekly projects were pretty rough. Lectures are interesting, but often only learned information for projects on Thursdays when they were due Friday. The midterm was challenging, and there was a massive lack of material to practice with.",
                    "15": "This course is hard at the beginning. C is a hard language and the programs every week were definitely difficult. The c programs took hours to finish and they talk about the project in lecture the day before it is due, which wasn't very helpful. The latter half with C++ is much easier and more straightforward. C++ projects took much less time, syntax is different but easy to pick up. C is hard to code, there are many points to make mistakes and the code is just so basic you are forced to make everything. Exams are fair. They gave less late tokens than last quarter, but as long as you manage your time well, you don't need it (I haven't gotten a chance to use mine). There are extra credit opportunities. Projects are the main focus throughout the course. There are also limited amount of solutions (4) each day gradescope is open. Make sure you test your code yourself before submission. Hard course, but just make sure you manage your time well and you'll be okay.",
                    "16": "Everyone is right in that the first half of the course is more difficult because of C having to deal with pointers, but the assignments are manageable if you keep up with the course. There are some requirements for the coding projects that everyone has to follow (depends on each project), but you're otherwise free to problem solve in whatever way you want. I thought this class was challenging enough to be interesting without being impossible.",
                    "17": "I am not going to lie to you the first 4 weeks of the course are very difficult, you are thrown into a low–level programming language that you have never coded before which will throw you off greatly.  When he first introduces the language you will be like oh this is not that bad this is pretty chill I can do this language then the first project hits you like a bullet train and if you don't go to office hours quickly good luck because you will be in for a very long ride. After, the first couple of projects which are in C you will get a feeling for the language and you will be able to solve most of the problems with some slight help from the TAs, God bless the TAs because they truly are there to help you and make sure that you understand the code and how to tackle the problem my advice is to go to the TA's once the project is assigned and talk to them about how the concept works because if you don't understand it concept and what they want you to program it is tough to get your fingers on the keyboard.",
                    "18": "211 is great the projects are not very hard but very interesting compared to other CS courses that I have taken. The tests are quite easy and there is good support for you if you need it.",
                    "19": "This class is going to be very time–consuming, so be ready for that. I suggest reviewing the lectures right after class and going to office hours with any questions you might have before starting the projects, which will save you a bunch of time and stress. As long as you put in the work and understand all the lectures, this class should be doable.",
                    "20": "Not too terrible of a class, just make sure to read the book and do all your homeowkr",
                    "21": "This is probably the hardest class I've taken at NU so far. But I think that's mostly because C is such a confusing language to learn, and as someone who didn't have much CS background before college, it was really difficult to understand and conceptualize the bigger picture related to the language. I thought Professor Hummel did a pretty good job breaking down concepts in lectures and highlighting the important points, but I had to put in a lot of extra effort to try to understand it for myself. <br>There were eight projects in total, so basically, one a week which was very fast–paced. I think the key is just starting early and going to PM office hours. The PMs were super helpful and would sometimes explain concepts that were not clarified in class. Overall I thought it was a good class where I learned a lot more CS. But I would say to take this class you definitely have to be prepared to allot a significant amount of time and energy for it.",
                    "22": "HUMMEL IS THE GOAT! Challenging but fair homeworks that teach you a lot about C/C++. The class gets tremendously easier after the switch to C++. Stick out the homework and find a study group and you should be good. I thought the midterm was very easy if you understand pointers. Joe Hummel is a great instructor who really understands C/C++ and how to teach it. His diagrams are very helpful. Overall great class that teaches you a lot!",
                    "23": "The projects take a long time, but are very accomplishing tasks.",
                    "24": "An extremely grueling and time consuming course, but worth it. You feel completely comfortable with coding in C and C++ after taking the class",
                    "25": "The course was great. Prof Hummel was a great lecturer, and fun to watch. The coding projects are demanding and time consuming but they really build the character of what it means to be a software engineer. I guess its good to go to office hours to do the projects, but I also suggest to spend sometime and try to figure out by oneself. As a general note, make sure to start the projects, and do the extra credit projects to get more points. The exams are also quite similar to what you were doing in the coding projects, so if you do the coding projects by yourself, you will be fine for the exams as well.",
                    "26": "Overall, I enjoyed the course – The assignments were challenging (at times, excessively so) but the handouts stepped you through the process in a way that was more or less reasonable, and that you could follow. That being said, there was a significant difficulty drop between C and C++ sections of class, it was almost jarring",
                    "27": "Class consists of one online homework assignment due every Tuesday and one project due every Friday. Homeworks are pretty quick (usually about an hour max) but projects can definitely take a few hours so I'd recommend starting by Wednesday if you can. Exams aren't very difficult as long as you pay attention in lecture or study.",
                    "28": "Prof Hummel is great! First few projects were insane though, wish there was a bit more of a period to settle into these projects instead of sending us straight into C",
                    "29": "Hummel is amazing! Super nice and great teacher with lots of experience. Class itself is difficult with projects varying in difficulty from week to week. Just need to start early and it’ll be okay, but the first 4 weeks are definitely an adjustment to the material.",
                    "30": "Our first four projects were in C and we basically made a python interpreter. The last 4 were in C++, in 3 of those we worked on handling and processing data from a map. In the last project we combined C and C++ to implement the set class in C++. You will learn a lot from all of these projects but be warned that they will take up a lot of your time every week (specially the C projects). Going to office hours is pretty much required for the first 3 projects. Other than that, I loved this class and Hummel was a great professor. Also, Nathan is the most goated PM ever.",
                    "31": "The projects were very lengthy and often took me more than 10 hours to complete, but they were very rewarding. Understanding the projects well will lead to good performance in the class.",
                    "32": "this class is very rough if you don't have any programming experience in c/c++. office hours will be your best friend in this class. although its difficult, i do believe the projects taught me more about c/c++. <br>in regards to the teacher, hummel is very passive aggressive for no reason. its completely unacceptable to speak to students the way he does, and i do hope he works on this for the future classes. it made it very hard to want to approach him about questions as you risk feeling more stupid. <br>also, there is a policy where you must pass the midterm and final in order to pass the class. i think this policy is unfair, as the grades for the midterm came after the class drop deadline. i know of people who spent hours in office hours to complete the project just to end up dropping the class week 7/8. beware.",
                    "33": "The projects are definitely challenging but honestly u have to take the class so just start early go to office hours and ull be alright",
                    "34": "This class is challenging but really good. It gives you a lot of foundations in understanding programming and is super helpful.",
                    "35": "Very hard class, but will learn a lot",
                    "36": "CS 211 is a very interesting class in that it has two distinct but related parts. The first half of the quarter is spent learning and programming in C, a language that is very basic and low–level but used in an extremely nontrivial way in the projects. Said projects (8 of them over the course of the quarter) make up over 50% of the grade and 90% of the time spent working on the class, maybe more. The C projects were long but manageable and the homework (another fraction of the grade) helped a bit but mostly office hours or working with friends was the best way to complete the projects. The second half of the quarter transitions to C++, a higher–level and more straightforward language, and the projects were personally more fun and interesting. The final project combines C and C++, and the remaining percentage of the grade is divided amongst a midterm around the true halfway point of the quarter and a final at the end. The midterm is an exam in C and the final is in C++. Professor Joe Hummel taught the class well, covering important topics in lecture and assessing the most important parts of the course in the projects, homework, and exams. However, most of the learning in the class is personal, done through the projects. Make sure you have a good amount of time to spend writing, debugging, and fixing code if you are to take this class.",
                    "37": "The projects often felt unreasonably advanced and instructions difficult to understand. For multiple projects (each worth 7% of final grade), I felt hopeless and ended up taking a 0. I suspect that students who didn't suffer tremendously throughout this class probably had a wide network of friends in the class, where project solutions were probably passed around. Also, there were not nearly enough TAs – trying to go to office hours usually meant waiting for an hour just to speak for a couple minutes with someone who was also confused about the project, and then have to wait a long time again for them to come back around to you. Once, I went to office hours and there was about 10–15 students in the room and only 1 TA.",
                    "38": "It was a helpful class. Very overwhelming at the beginning.",
                    "39": "I think that this course was very challenging, yet also very reasonable. It is very easy to understand what you have to do in order to get a good grade, and lectures relate to homework very well.",
                    "40": "This course does a good job of challenging you to learn C and C++ the projects take a long time. If you take this class understand that the projects take 10–20 hours a week and do a good job of teaching you the material, but just are lengthy.",
                    "41": "Hummel is a great professor and a great guy. The class is structured very well. It is very challenging and I spent many hours in office hours (which are structured and handled absolutely abysmally) but it was always clear what was expected of me and what I needed to do in order to complete assignments. It's not Hummel's fault that coding in C totally sucks (C++ is much better don't worry) and that office hours are the least helpful and most unnecessarily time consuming things ever. Only take this course if you have to for your major/minor (you'll be ok it's just hard and time consuming) otherwise there's no point in choosing this class for funsies.",
                    "42": "This course is just as time–consuming as everyone tells you and there is no way to avoid it. I think that you get firehosed with learning C (which has a very steep learning curve) right off the bat, and you do get assigned weekly homework through ZyBooks to help ease you into learning C, but the difficulty level is so far off from the weekly projects. Project 1 was hard just because you were getting used to coding in C, and trying to figure out the BNF thing was weird conceptually as well. Projects 3 and 4 are BY FAR the most time–consuming and difficult projects out of the 8. I probably spent 20 hours each on those two projects, and nearly half of that was trying to debug my code. The C++ projects are MUCH easier. I was able to start and finish projects the same day that I started them if I really tried. The PMs in this course can be hit or miss and the queues to get help could get pretty long depending on when in the week it was, but they did their best to help. There are some really amazing students working as PMs for this course and their efforts did not go unrecognized! Weeks 4–6 were pretty rough and I did think about dropping this course, but I'm glad I stuck it out.",
                    "43": "A good course overall. Hummel creates some very–detailed and well–structure projects, and is a good lecturer. However, a lot of the content can be a bit repetitive if you've done C/C++ before.",
                    "44": "Good CS course, the online textbook is nice and the assignments are fair. I never went to office hours but it seemed like they had a very robust system. Piazza was also very well run.",
                    "45": "Hummel is a very qualified and clear lecturer and teacher, but the course is definitely very challenging. Specifically the weekly projects are difficult.",
                    "46": "Very tough class, but Prof. Hummel was above and beyond with actual coding to help u understand the material. Once C++ begin the course difficulty decreased significantly",
                    "47": "This course was very tough, particularly during the C projects,  but it also felt rewarding and I learned a lot. Hummel is a great prof and the PMs are helpful. Be prepared to put a good amount of time into the C projects, but once you get through those the C++ projects are far easier.",
                    "48": "As a non–CS major, the first half of the quarter was hell, I spent 3–4 days just working on the projects (I did nothing else). PMs were very helpful, I would have dropped this course if I had not gained any help from them. <br>I could tell that Prof. Hummel really cared about students, he would respond to questions on Piazza in less than one hour.<br>Overall, this course was very challenging, but I did learn a lot in 11 weeks.",
                    "49": "I thought Hummel was pretty good. The course is not designed to be easy or fun, so I think he worked with what he had and it was fine.",
                    "50": "Overall an extremely brutal course. It felt like such a huge jump from CS 150 and I felt like dropping the class multiple times. I practically lived in office hours during the first few weeks of the quarter and spent upwards of 20–30 hours on the projects. The TAs are all extremely helpful, and Hummel responds really fast on Piazza if you do need help. However, the course felt unnecessarily hard in the beginning, though it does get much easier in the second half.",
                    "51": "It's a good course. Start the projects early, ask for help when you need it.",
                    "52": "This is an intense but rewarding cs class. It’s not as awful as people make it out to be, but you got to put the time in. Prof. Hummel is awesome and really knows his stuff, but has no care for lazy people who want to free A.",
                    "53": "This course simultaneously made me search for and fail to find a way to take a medical leave of absence and learn all of the fundamentals of C and C++, as well as many concepts that could be applied to coding in general. This course is very difficult, but if you love coding you can make it through. PLEASE start the assignments early unless you are an experienced coder you will likely get crushed by the workload if you do not. If you choose to take this course, I wish you luck!",
                    "54": "If you haven't been exposed to low–level programming before––which I certainly hadn't––this course will be challenging, but you will be surprised by how much you learn if you simply pay attention during class and do the work. Every project was interesting and Professor Hummel was an amazing lecturer with lots of wit and great industry insight. Would highly recommend!",
                    "55": ":suprise_emoji",
                    "56": "Very comprehensive introduction to C/C++, difficult for sure, especially if you have no prior coding experiences in these languages. But projects are useful and you end up walking away with a lot of skills. Please for the love of God DO NOT take this course with other project–heavy courses in the same quarter. It's definitely doable if you focus but conflicting large deadlines will drive you crazy. There are weekly projects from this course, and each project demands at least 2 days of solid attention a week.",
                    "57": "Learning curve is definitely steep. Be prepared to commit the time and effort, but trust it definitely pays off.",
                    "58": "This is a hard class. The first 4 projects were hell and you could spend upwards of 20 hours in office hours just to be able to finish them (btw there's a project every week). It's hard for seemingly little reason and Hummel has no mercy when it comes to partial credit or outside issues. Hummel has basically taken over CS211, so there's no avoiding him if you want to take an easier version. Godspeed friends",
                    "59": "Projects:  I took this alongside 214 and can say for certain that the projects for this course took WAY more time and effort, especially the first half. Like bro, that first half was crazyyy especially this quarter (I took this class both winter and spring) because Hummel decided to get rid of the first C project for some reason and ended up throwing everyone into the deep end. For reference, only 78% of people got a full autograder score on the first project. I don't know the stats from winter quarter but I'm sure it's an insane jump.<br><br>Exams:  It's not hard to do decent on the midterm and final exams but simply doing the projects isn't enough, you will definitely have to go through lecture slides and just rewatch them to be safe. Worth noting that you need over a 40% on each exam to pass the class and Hummel + the TAs did not have the midterm graded before the drop deadline. I think this is insane and caused people who didn't meet the threshold to have to choose between an F or a withdrawal halfway thru the quarter, just ridiculous. Hummel also promised to give us a practice exam for the midterm and didn't deliver, don't appreciate that. We got general topics for the midterm and nothing to go of off for the final.",
                    "60": "the first half of the quarter is hard because it’s c but then once you get to c++ it is a lot better. hummel is a good professor but can get grouchy when answering questions on piazza. class attendance is taken with iclicker app and you can miss 4 attendances free out of the whole quarter.",
                    "61": "Very difficult course time wise, spent more hours on this that all my other courses combined. Basically lived in office hours on Fridays. But, I learned a lot, and Hummel is great.",
                    "62": "Make sure to set aside a lot of time for this class. Projects require quite a bit of time, especially in the first half with C. C++ gets a bit better. Prof. Hummel is great with instruction and answering questions. The nice thing about the class is that there are a lot of peer mentors that are available almost any time throughout the week and you can always hop in with questions; you can also post on the Piazza with additional questions so there is a lot of support.",
                    "63": "The first half of the course is insanely hard for no reason; the projects can take upwards of 15 hours. The second half is easy, and both exams are also easy. Professor Hummel is a great instructor.",
                    "64": "The first half of this course is SO time–consuming because the learning curve for C programming is so steep. I probably spent 10+ hours on each of the first four projects. The second half is drastically easier, because C++ is an easier language and the projects basically walk you through how to do them – I would estimate no more than 3 hours the C++ projects. The exams are not that hard but also not super easy to do well on. Hummel is a nice guy (he gave us snacks and then cancelled class once) and a fine lecturer but for some reason is so snarky on Piazza???",
                    "65": "This was a good class. Definitely take it with Hummel if you can. It has a midterm and a final, both of which are kinda tough, since he doesn't provide any practice tests. However, it's clear what is expected of you, and as long as you review the lecture slides and are somewhat comfortable writing code on paper (which isn't great, but it is what it is), you'll do fine on those tests. There's 8 homeworks and 8 projects, with one of each due every week. The workload can get overwhelming, but there are late days provided, which can help. The homeworks aren't too bad, especially if you have prior experience programming. The projects can take a while, so start early. They're not necessarily difficult, but can be tedious. As for lectures, Hummel is great.  He's very engaging, and is very kind and understanding. He is always prepared, and responded on Piazza often. Attendance was mandatory, taken through iClicker. You didn't have to get the attendance questions right to get credit, but they were a good way of staying focused in lecture. Overall, take 211 with Hummel."
                },
                "school_demographics": {
                    "Weinberg": 37,
                    "McCormick": 62,
                    "Medill": 1,
                    "Comm": 1,
                    "SESP": 2,
                    "Bienen": 3
                },
                "class_demographics": {
                    "Freshmen": 77,
                    "Sophomores": 23,
                    "Juniors": 5,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 212-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.32,
                    "student_count": 60
                },
                "student_opinions": {
                    "0": "This class is absolutely brutal. Expect to spend about 10 hours a week on the psets, and don't expect much help from the professor.",
                    "1": "Prof Evert is a goated lecturer. 9:30 AM lecture is a brutal time but I tried to go as much as I could because they were really helpful. You really just need to go to office hours to complete the homework – the PMs are really helpful. Exams are insanity but the curve is there for a reason. Overall tough course that's taught well – just one of those courses you gotta get through. Thumbs up.",
                    "2": "Overall, this course had a lot of new information and concepts I had never worked through before (like sets, formal proofs, etc.) However, it was manageable, especially when allowed to work in teams on homework. There was one midterm and one final, so not a lot of testing, which was nice for me.",
                    "3": "The course was very intellectually challenging and Professor Evert is a good lecturer, he explained concepts clearly and thoroughly. In the end I managed to pull through with some serious studying and going to office hours. Make sure to do the practice problem sets, as concepts from those psets show up on the midterm, and doing them earlier would have helped me to understand the homework better.",
                    "4": "grading: 50% HW (7 HWs, lowest grade gets dropped), 20% midterm, 30% final OR 15% midterm, 35% final<br>I think this is a great class tbh, especially with Evert. Going into this you're told that this is going to be one of the hardest classes you've taken and I feel like that was a bit of an overstatement, maybe it is harder with other profs though. The HWs are very leniently graded and make the class pretty cohesive. You can also go to TA/PM office hours and get a lot of help if you're in a crunch. I thought the midterm and final were really reasonable especially with the cheat sheet. They look very similar to the practice exams, there is a lot of extra practice that is provided, and the questions are easier than HW questions. Don't get me wrong, the concepts are definitely challenging but you don't have to understand everything about them to do well. However I definitely think I will be in the minority when it comes to my thoughts about this class so take this review with a grain of salt.",
                    "5": "Prof. Evert is a good lecturer, pretty helpful during office hours. The exams are not too hard, not too easy. Study and you do good. The material is necessary foundational knowledge for the mathy side of cs, but by nature it is not the most interesting subject, but is important for understanding other more interesting subjects.",
                    "6": "This course definitely is tough, as learning proofs for the first time was difficult. However, Professor Evert had very informative lectures, and exams for fair.",
                    "7": "Taking 212 with Evert is the play if you can. He keeps it pretty low stress and is an engaging lecturer and also lowkey funny. The hws are hard but you can work with others and the exams are fair if you study hard. The curve was pretty fair as well. Much better experience with Evert than I have heard from others.",
                    "8": "PM office hours were very helpful for completing the homework and I went to them every week. The course itself is pretty abstract and I personally didn't find it very fun. Many times it felt like you either got the proof solution or you didn't and it was hard to just work up to something. Professor Evert himself seems to be knowledgeable and passionate, so there wasn't any problems with the teaching itself. I just thought that the course and content itself was not something I could enjoy.",
                    "9": "This class was pretty difficult in my opinion but the lectures were good and office hours helped clear up any confusions I had really well.",
                    "10": "This class is definitely manageable, just make sure to stay on top of homework (and use TA office hours if needed they are super helpful) and then the exams are challenging but not impossible.",
                    "11": "This class both is and isn't as bad as you think. So the material is quite difficult to wrap your head around as there is a lot of technicality to the proofs we do in this class. At the beginning of the quarter I was stressed about homework, and how I'd remember the material for the midterm. However, as the course progressed I realized it isn't so bad. As for homework stress, just attend office hours, they are very good at giving you the right hints so you can figure out the material for yourself but still not have to worry about your grade. Good resources for this class. As for the midterm, it really does contain the same material as the homeworks, so if you understand thoroughly you'll be okay. Evert is also a very good professor. His lecture slides are full of good examples and he always shows you where concepts are coming from. Also very good at answering questions, so don't hesitate asking in class.",
                    "12": "Professor Evert is a great professor. He explains everything intuitively, which I think is important. There are times when I take a course and can do well in it without fully understanding it, but I feel I understand the content in this course very well due to his teaching and the problem sets.",
                    "13": "It was very informative and packed with useful information about mathematical proofs. Unfortunately, that was not relevant information to me. It definitely did improve my critical thinking skills, though.",
                    "14": "Loved professor",
                    "15": "This class is very challenging. I'm a freshman taking the class, and it was hands down the hardest class I took this quarter. The class consists of 7 hw with 1 drop, a midterm, and a final. The final is cumulative. It isn't impossible to get an A, but you will need to put in a lot of work to fully understand each concept. Also, go to office hours, they are very helpful and will definitely make your hw a lot easier to understand. Overall, this is a good class and I feel like I learned so so much, but you just have to be willing to put in the time.",
                    "16": "very hard class. the homeworks are unreasonably hard – even the ta's and pm's sometimes don't know how to do them. go to office hours, they will help massively with homework. evert is a fairly engaging lecturer. take it in a quarter where your other classes are easier, and definitely take it with friends.",
                    "17": "Course is well taught and professor was very knowledgeable, understanding, and kind, but this is a very difficult subject and course.",
                    "18": "This course helped me learn a lot in the realm of Discrete Math. Professor Evert was very knowledgeable, helpful, and taught in an intriguing manner that wasn't boring. You could tell that he was interested and passionate about the topics he was teaching. The homework was challenging, and forced you to understand topics deeply. The TAs and PMs were eager to help, and gave great explanations at Office Hours and online on Piazza. Overall, a great course with super interesting topics, and a solid learning platform. Not the easiest class however, as I did have to spend about 10 hours each week reviewing material and completing the homework.",
                    "19": "It is really hard and not always very intuitive.",
                    "20": "Definitely the hardest CS course that I've taken yet. Lectures are somewhat straightforward, but truly understanding the material required a lot of time with the material and a lot of time working on homework and office hours.",
                    "21": "Homeworks and practice exams were pretty representative of exams. Stay up on homework and make sure you do it yourself and the class won't be too bad. Professor gave pretty good lectures as well that had lots of relevant information",
                    "22": "Contrary to the belief of freshman/sophomores, its not that bad of a class. I will admit, graph theory is dry and hard to push through at the end, but Eric did a good job. Fair warning: the course is being reworked so course is subject to change.",
                    "23": "The problem sets were definitely interesting, but they did not go very deep on most of the concepts covered. This felt like a crash course on math topics that I would have gotten more of if I just took Math 300 and 308, and petitioned the CS dept to substitute it, which they regularly do. The depth wasn't enough.",
                    "24": "This class is definitely challenging but requires you to work more on the intuitive parts of computer science.",
                    "25": "As others have said, this course is by nature extremely difficult. Professor Evert himself has this illustration of the learning curve that repeats and gets steeper about every 3 weeks, which is pretty accurate.  Eric is a great lecturer and will answer questions, but some of the material is just too challenging. The weekly homework are by far the most difficult part of the course, and going to office hours for them is the single best thing I can recommend doing; they aid immensely in not only getting it done but also possibly understanding the material. Do as best as you can on them because you will need a large buffer for the exams, even with the curve at the end of the class (which is pretty generous).",
                    "26": "It was hard.",
                    "27": "May be challenging if this is your first proof–based course. However, it should be fine as long as you get adequate practice and pay attention to the material.",
                    "28": "This class has a steep learning curve but overall is manageable. There are weekly hw but these are very doable if you go to office hours. The midterm/final is difficult but the practice exams are very helpful/similar to the actual exams so as long as you have a solid understanding of the topics its not impossible to get a decent grade.",
                    "29": "Very interesting course, I learned a ton from prof Eric. For someone who hasn't done proofs before this class was kind of hard to understand at the beginning but gradually got way better towards the latter part(kind of skill issue). Grading is fair and PMs/ TAs/ Prof OHs are helpful when it comes to weekly problem sets. Definitely manageable.",
                    "30": "This course is incredibly fast paced, so make sure to carve out time to stay on track. Especially after the first midterm, it might be tempting to put the work aside until the final rolls around, but doing so will blindside you. Prof. Evert explains most of the concepts well in class, but especially when it comes to graph theory homework, much of the help and homework feedback (much of which comes from TAs and PMs) is harder to follow. The midterm and final were straightforward compared to the homework and did a good job of assessing overall concepts and not small technicalities in content, so exams are a good place to pick up some extra points.",
                    "31": "This course was rather challenging for me. I actually thought it was taught pretty decently but the content can just be hard to understand at times.",
                    "32": "No point in reading ctecs. You take this class cause you need it for your major/minor, not for any other reason.",
                    "33": "This course was fine for me.  But in my opinion, it attempts to pack too much content into one quarter. The first half of the class is essentially Math 300–0, an introduction to proof techniques and set theory. The second part covers counting, probability, and graph theory and packs in the content of like two more 300 level math courses. This results in a course where if you have no background in math, you will quickly get overwhelmed and learn absolutely nothing. As a math major, who started CS as a a junior even I found it a bit hard at times, especially with graph theory at the end because I wasn't familiar with that content from any other math class.  I did like that there was only one midterm, but that may be a negative for people who didn't do well as it means the final is weighted quite heavily. The problem sets seemed to be concocted to be very difficult. Personally, it took me about 4 hours to do them, but if you don't know math it will very likely take upwards of 8–10 hours. I highly suggest working in a group. And for the final make flash cards to remember all the graph theory.",
                    "34": "This class was actually very helpful in teaching its subjects and altogether wasn't that bad time–wise. Office hours were really helpful in completing the homework, and the workload is honestly rather light – the homeworks and very concisely designed and there really isn't ever any busy work for the class. Homeworks were 4 problems and typically very manageable, and the tests were quite simple as well, but they do require some good review. The class provided practice material as well, and the content was well made.",
                    "35": "This course is a bit weird. Some people say it is the most challenging class at NU, I did not entirely agree but I can understand why they would say that. I thought the content was manageable and interesting, and the exam are also a reasonable difficulty. However, the homework assignments are incredibly difficult and are also 50 percent of your grade. I found most of them to be pretty much impossible, and the TA's and PM's basically had to give out all the answers at office hours because the homeworks were so hard. As long as you go to office hours, this class will be ok.",
                    "36": "The course was very well structured, and lectures were detailed with many examples.",
                    "37": "Pretty tough class, very different from other CS classes and forces you to think a bit differently. Prof is great and explains well. My advice is to camp office hours and make sure to get 100 on all the problem sets. Grading is 50% problem sets, 50% midterm + final. The curve generally places the C– cutoff at 55%, so it's not difficult to pass if you grind out the problem sets. Lots of people dropped after the midterm but, unless you can't afford the gpa hit, I recommend just sticking it out as long as you're doing well on the psets. First half of the material was mostly how to approach and think about proofs, which isn't too useful for non–academia. However, second half of the material was actually very applicable to other topics in CS and leetcode DSA type interview questions. I think the course was structured well and I liked how the material built upon itself. Also, the final was relatively easy difficulty–wise compared to the midterm and psets, so don't drop after the midterm unless you really have to.",
                    "38": "I mean it's 212, you probably know what you are getting into... finding a good pm and attending office hours consistently is pretty crucial for this course. Like, there were some homework problems where if I was locked in a room for a week with just that problem, I wouldn't find the solution. If you go to office hours and do well on the homework (100s) , this class is very easy to pass.  Eric is a great lecturer and teacher. Doing the homework problems is what helped me understand the  course  material the best. The practice midterm and final were pretty close to the actual things, and there went any big surprises.",
                    "39": "Overall a decent course that you will have to take. I think the content is what you make of it, but the relevance to CS is apparent. I think so long as you study and put in the hours you can succeed in this course.",
                    "40": "Notoriously, this course sucks but Prof. Evert is FABULOUS. He does an excellent job of teaching the material, and presenting in a way that is engaging even if you already are familiar with the topics. He sometimes will indulge in redundant questions but he does take care to make sure every student is on the same page. Homeworks are manageable and the midterm/ final are very fair. Start the homework early, or go to PM OHs, at some point they'll pity you and walk you through the proofs until you understand it.  (&lt;3 pms)",
                    "41": "The class is definitely manageable but you've got to make sure you stay on top of it!",
                    "42": "Hard"
                },
                "school_demographics": {
                    "Weinberg": 31,
                    "McCormick": 28,
                    "Medill": 1,
                    "Comm": 0,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 29,
                    "Juniors": 20,
                    "Seniors": 10
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.41,
                    "student_count": 82
                },
                "student_opinions": {
                    "0": "Eric Evert is a great teacher and I really liked him.  It's a shame that he isn't going to keep teaching this anymore.  I was told stories about how this class was going to be awfully impossible and confusing, but if you go to office hours for homework help when you need it (you'll need it), I think you'll do fine.",
                    "1": "Hard and confusing",
                    "2": "Hardest class I've taken as a CS major at Northwestern but that is by the nature of the content. Pure mathematics is HARD. Evert is a great instructor nonetheless and is very helpful and passionate about the subject matter. HWs are 50% , miderm and final are either 20% 30% or 15% 35%  respectively depending on which one helps your grade more.  Homeworks are super hard but if you go to enough office hours (I went to 2–4 OH sessions every week) you'll end up with a 100 in that section which you WILL need as a buffer. The exams are hard but the questions are often easier than the HW questions. We averaged a 70% for the midterm and a 81% for the final (definitely not the norm, I feel like he kinda went easy on us there). The curve is STRONG so the class is passable.",
                    "3": "Lots of homework but not as bad as everyone says it is. Evert is a great and very kind/enthusiastic teacher. Make sure you go to office hours and/or have a good group to review material with and you should be set.",
                    "4": "I was pleasantly surprised at how much I was able to learn from this course, despite its difficulty. Eric taught it in such a way that it wasn't unbearable, and I got a lot out of it. Sad to see him go, but I'm grateful that I was able to take this class with him.",
                    "5": "For my fellow CS majors, this class is tough but you just have to push through. <br><br>There were 7 homework assignments for 50% with you lowest grade dropped. Then a midterm and a final. The midterm and final weights change based on your grade. The final can be 30% or 35% with the midterm at 20% or 15% depending on which one you do better on. Tests aren't curved but your overall grade is.<br><br>PMs were great and for me OH was a necessity. Good luck.",
                    "6": "This class was not as bad as it could have been, largely due to Eric. He made this class very manageable, and made it clear what was expected of us on the midterm and final. If possible, take this class with Eric.",
                    "7": "This class will challenge you, but take it with Prof. Evert if possible. His passion for the material is admirable, and even if you don't like proof–based math classes like me, you will still find class engaging and the material manageable.",
                    "8": "I think this course is very difficult, manageable, but difficult. It was the first class here that I was genuinely afraid of failing, make sure to do as much practice before the exams as you can, doing proofs under a time limit is harder than you think.",
                    "9": "Eric is a great prof honestly. He explains this really well and takes the time to answer questions. Some of the homeworks were really hard and confusing but office hours is immensely helpful. The exams were pretty fair ngl if you go to discussion and take the practice exams. Overall, not nearly as horrific as I thought 212 would be (and that's coming from someone who struggles a lot in math)",
                    "10": "Good class, Eric is really good prof, not too hard",
                    "11": "A lot of people ended up doing well in this class (except for me lol). HWs require a good amount of time, so go to office hours and just try to do your best. You'll get through it.",
                    "12": "I think the course ultimately allows students to develop keen intuition around applied math in cs",
                    "13": "Professor Evert is a pretty good professor. From all the things I heard about this class, I thought that I'd have to fight for my life just to survive. However, this class hasn't been nearly as stressful as all the rumors make it out to be. Professor Evert is very lenient and understanding towards students. He gets that the class is hard and definitely makes an effort to keep the class manageable. Some homework assignments were pretty hard, but I never felt like I wasn't going to get it done. Professor Evert encourages people to work in groups on the homework and office hours are super useful. I haven't taken the final yet, but the midterm was really fair in my opinion. Overall, professor Evert makes this class manageable – would recommend taking this class with him.",
                    "14": "Might be a difficult class if you've never done proofs before. Otherwise it's not too hard, as homework is 50%. Final was very easy. This class has a bad reputation, but is interesting and isn't bad if you pay attention.",
                    "15": "Homeworks are not too challenging and class is engaging. If you understand the homework, the midterm is light. If you have any background in math/proofs, you will be fine",
                    "16": "Did not think I was a math person before this class, but it really shows that math is more than just calculus.",
                    "17": "Standard hard course. Just got to tough it out. Make sure to go to lecture",
                    "18": "I didn't find this course to be as hard as everyone says. It's hard, don't get me wrong, but with the frequent helpful office hours, heavy weights of the homework assignments toward your grade, and the curve, you have lots of resources to get through. The topics are hard but it's not really too much work. Just a homework assignment each week that takes maybe 5 hours, less if you go to office hours a lot.",
                    "19": "I was really nervous before taking this class as I had heard it was very difficult. However, I found it to be a rewarding experience that allowed me to learn a lot. Lectures were engaging, HW assignments were challenging but ultimately helpful, and discussions were also helpful.",
                    "20": "Loved it. Office hours super helpful.",
                    "21": "Honestly, great class. Eric is really attentive and understanding, explains everything very clearly, and is always well prepared for lectures. The homeworks are reasonable, the exams are well structured, and the class is very well organized. The piazza page is also really useful. Overall, recommend taking it with him! A lot of people might be scared since this more of a math than a CS class, but it's a really nice and gentle introduction to discrete math.",
                    "22": "Eric is a great professor, he makes the content as engaging as it can be. Constant hw assignments are pretty tough, but you just gotta get through this course.",
                    "23": "The exams are a time crunch but reasonable—they're the same problem types as the problem sets<br><br>If you know some discrete/math already, the lectures will be slow for a lot of the quarter",
                    "24": "This class is hard. Hws not that bad tbh, just study hard for the midterm and final.",
                    "25": "the content in this class is very interesting and unique because you may not have learned anything like it before, however the tests are very very difficult and hard to do well on regardless of your grasp on the material.",
                    "26": "The homework assignments are like puzzles, which sometimes are fun, and other times frustrating. Be sure to start them early because they take a while.",
                    "27": "Hardest course I've taken by a mile. Definitely harder than 213 and 211 combined. I could study for this class 14+ hours a day and still not do well in it. But do take it with Evert if you can, I can't imagine how much worse it would be with anyone less knowledgeable",
                    "28": "I liked this course a lot, I thought the proofs were manageable and the homework was a fun puzzle when started on time.",
                    "29": "CS 212 is, as expected, hard. The class covered a lot of material that was new to me such as formal proofs, graph theory, and more. This quarter was shorter, so we didn't cover certain topics that were covered in the past, but I still learned a lot. Professor Evert was a good lecturer with useful slides, and responded quickly to emails and questions on Piazza. TA office hours were necessary to complete homework, and while I definitely struggled on them, I learned a lot through the process.",
                    "30": "Most people in this course are here because they have to be for a CS major or minor. Ultimately, the course is not as terrible as people say, it's just a math class –– not easy, but not impossible by any means. I highly recommend attending the discussion sections for addition practice problems and starting the problem sets early so you can go to OH. Any prior discrete math experience will help (counting, graph theory).",
                    "31": "I was honestly surprised by how much I liked 212 with Professor Evert. I was very nervous going into it, but I ended up liking it a lot more than some of my much easier courses. It is definitely a difficult class, but if you put in the time you will be completely fine. The homeworks take about 10 hours per week (at least), so make sure you have a lighter course load. I think the best way to do well is to just go to office hours every day and do one problem on the homework.",
                    "32": "I knew almost nothing about proofs going in, but Evert did a phenomenal job at explaining them!  While the course was difficult, the workload was manageable and office hours were invaluable.",
                    "33": "The weekly homeworks were brutal and I had to go to PM office hours to complete them, like I genuinely could not have figured out the answers on my own. That being said Evert is a good professor (he's leaving tho rip) and I thought the exams were fair.",
                    "34": "Honestly did not find it as bad workload–wise as I had heard other people describe it (for reference, I would personally say that 211 and 213 were more work than this).  Grading of the class is half homeworks and half midterm/final. Eric said the homeworks should take 12–14 hours to finish, but most of them only took around 4–6. Eric is a good lecturer and I appreciated how he was always pretty conscious of time, getting through all of the material fairly quickly while still explaining it well, leaving some time for questions.",
                    "35": "Hard class for CS. It is all about learning the types of proofs and how to write them. Also went into graph theory and counting. Gets easier once you learn how to write the different types of proofs and the situations where each proof is needed. Allow you to work in groups of 3, so make sure you have a good group to work with. Make sure you keep up with the homework, as those were very good tools for practicing the material before the midterm and before the final.",
                    "36": "This course can feel like a lot, especially if you don't have a strong math background. But the more practice you have, the more intuition you accumulate to help you figure out what direction you should go when approaching a proof. Definitely start early with the PSETs––they can be time–consuming––and definitely go to OH for those. It's super nice that we're able to work in groups, so find some good groupmates to tackle the PSETs with. I think the exams this quarter were much easier than in previous years, as we had a substantially higher exam average. Exam questions are somewhat similar to PSET questions (in content and difficulty), so again just do as much practice as possible. Eric is a great lecturer, but I feel that this course does try to cover too much material.",
                    "37": "It was very very difficult but the topics are somewhat interesting and Eric teaches the class very well. He is great at answering questions.",
                    "38": "For me, while the course was extremely challenging, it opened my mind to completely new ways of problem solving and revealed ideas to me that I didn't realize could even be considered mathematics. It was very enlightening and I value what I learned from it a lot. Graph theory sucked though haha...",
                    "39": "Eric is amazing. Explains super well and very accessible. CS degree requirement, so it's a mandatory class. Of course, it was challenging and hard, but not unreasonable. Tests were very fair.",
                    "40": "Great course. Take with Evert.",
                    "41": "This course is very challenging, but also very rewarding if you put in the requisite amount of effort. Professor Evert is a really wonderful lecturer, and he puts a lot of effort into his slides and lectures, making for a really clear and concise learning experience that effectively conveys the course content. Beyond that, the professor is also very willing to answer student questions, either through class or on Piazza. The homeworks and exams can be difficult, but they are still very much doable, especially if you work in a group and take advantage of office hours. Beyond the fact that this class is a prerequisite for the CS major, I would highly recommend it to anyone who is interested in the mathematical foundations of the various concepts used in the field of CS.",
                    "42": "Go to office hours for help on the homework. Prof. Evert is a great teacher!",
                    "43": "HW takes long if you do it alone. Go to office hours, and the TAs will help you get unstuck. Then you can get the HW done in 2 hours every week.<br>Mathematicians complain that math education doesn't really teach kids math, but rather that it is senseless instruction–following. CS212 is not that! CS212 is thinking about mathematics, and doing proofs, and finding patterns, and all the good stuff math class should always have been.",
                    "44": "Prof Evert is awesome. His explanations are clear and the way he speaks is incredibly precise. Yes, the course will take A LOT of time if you want to actually learn so be prepared.",
                    "45": "Content is very conceptually difficult to grasp. Midterms / finals are difficult but homework is fine.",
                    "46": "class was difficult but very straightforward with content. practice problems helped a lot with exams and homework questions were significantly more difficult than exam questions. go to office hours for homeworks!",
                    "47": "Tough class in terms of material and time required to understand concepts, but if you do the homework, practice problems and do enough proofs, you will do fine in the class. Evert was great at explaining concepts and always took time to answer questions in class, even if not relevant. Overall, homework was quite difficult but really helped me in the midterm/final.",
                    "48": "Pretty difficult class, expect to put a high amount of effort in for an A. However, use the resources given and go to OH.",
                    "49": "This class will be hard. Just expect that and prepare for it. Study hard for the midterm/final; the practice tests go a long way. LaTeX is annoying but that's just how it goes. Eric is chill",
                    "50": "I don't know even know what to say. As someone who has never seen this kind of material before, this class was exceptionally hard, despite my best and worst efforts. I don't how to describe it, its like,  the lecture would go over the material at a basic level, and then the problem sets were in outer space. And there was very little I could do to bridge that gap. I guess as far as improvements go, maybe have different class sections for people who know the material and people who haven't seen the material at all, because the averages where really high, and the kind of questions some people asked in class made it very clear that people had some prior exposure to the material. When I took AP Calc and high school, we did problems to understand the concept first before doing higher level word problems. The same needs to be true of this class. This class also needs a review session at least 2 hrs long before exams, especially covering problems that a lot of people have missed in past exams or homeworks. Also I think that all core classes should have peer guided study groups, not just intro classes. I don't like that 200 and 300 level classes just assume that we are just CS gods after the 100 level and use that as an excuse not to provide support to those who need it. This sounds dramatic, but I don't really see myself getting through this class without additional support structures in place. I may have hit the wall in my CS major progress, and I might have to quit because of it.",
                    "51": "CS 212 is still a hard class, but they've made it easier (less total content). It's a necessary evil for most who take it, but it's manageable if you go to office hours and find the PM's who give out homework answers. Definitely take it with Eric if you can, he gives fair exams and very clear lectures that don't assume students have any prior knowledge of the material. He also does a good job deflecting questions in the \"I'm asking this because I want to sound smart\" category.",
                    "52": "I feel like this is not the best class to learn these concepts well for the first time."
                },
                "school_demographics": {
                    "Weinberg": 36,
                    "McCormick": 46,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 6,
                    "Sophomores": 48,
                    "Juniors": 24,
                    "Seniors": 6
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 2.86,
                    "student_count": 81
                },
                "student_opinions": {
                    "0": "this professor sucks so bad at teaching it's unreal",
                    "1": "This is a hard course made harder by a professor with little organization. For being a proof–based math class, lectures rarely focused on proofs or even what the instructor was looking for in our work. Because the instructor provided no examples or practice problems beyond the homework, the weekly homework/problem–sets were extremely challenging if you did not attend office hours. Grading was very inconsistent–  just because you could accurately do a proof on a homework did not mean that you would get the same points for the same proof on the midterm. The homeworks were not graded for the entirety of the quarter, so you could potentially be making the same mistakes over and over on all your proofs but be none the wiser since you did not receive any feedback. As I write this, after having taking the final, I still have no idea what my grade is for the majority of the homeworks. Before the final, since we did not know grades or solutions for the homeworks, the instructor said he would release solutions to help us study only to release partial solutions. The final was exceptionally difficult ( the majority of the class scored about a 50%).  Instructor's answers to topic questions were rarely helpful and /or extremely convoluted. TA's seemed like received conflicting information as well. Hopefully this course is better taught in the future.",
                    "2": "I would recommend taking this course with Professor Dong, he has a relaxed attitude and is not unreasonably demanding regarding exams and problem sets.",
                    "3": "Interesting class but never felt like I 100% understood anything past like Week 4. Enjoyable content but definitely taught in not the most straightforward manner, which could just be a byproduct of discrete math's nature.",
                    "4": "Professor reads off slides, and sometimes slides are just material from other colleges.",
                    "5": "I had a hard time with this class. While Professor Dong was flexible and made a genuine effort to communicate the concepts properly and update the slides/content along the way, the content just did not click. The lectures left me feeling mostly confused and unprepared for the weekly homework assignments. Although the midterm went well, the class average for the final was about a 50%. <br><br>Grade distribution: seven problem sets (50%), a midterm (20%), and a final (30%).",
                    "6": "This class is so difficult. I don't really understand how mathematical proofs is related to computer science and why this class is required for the major. The professor is very incompetent in teaching. First, he posted the syllabus a week after the quarter started. He regularly forgets to post the slides on canvas and has to be constantly reminded to post stuff.  We had 7 homework assignments for the entire class, and they still have not finished grading by the end of the quarter. Moreover, he only posted partial solutions to the homework at the very end of the quarter, meaning I had absolutely no idea if I was solving the problems right which made it difficult to study for the exams. Truly, one of the worst professors I've had, and I do not recommend at all.",
                    "7": "N/A",
                    "8": "Very bad formatting. Lectures didn't have a lot to do with test material",
                    "9": "This class isn't very useful unless you go into theoretical CS",
                    "10": "Okay. So, whatever you do, do NOT take this class with Prof Dong. <br><br>Let me preface by saying that Prof Dong is a funny, kind person outside of the lecture room and very intelligent (obviously, as he teaches discrete math). However, the way he communicates topics in lectures is simply (really) bad. <br><br>The first few lectures were good, as he was going over properties/concepts dealing with prime numbers, impossible solutions to certain equations, etc. But, once we started doing actual proof stuff (induction, set theory, functions), things fell apart very fast. I don't think he did a single proof in class the entire quarter, so it was very difficult to gauge what constituted a 'good' proof from his POV. This issue continued to snowball as we learned he did not give out any rubrics to the TAs for the homeworks, so the TAs, in a sense, did not grade evenly, as it was up to their own discretion which proofs were credited or not (thankfully, only one TA graded each question for the HWs, so at least there was some consistency there). Things got kinda crazy after the first midterm. I thank Prof Dong very much for making the midterm basically the same as the practice midterm, BUT since all of our HWs were graded by TAs and not Prof Dong, there was a disconnect between what Prof Dong and the TAs thought was correct for a proof. For example, there was an induction problem on the first midterm, and I wrote my answer exactly how I wrote it on the HW (which got full marks), but I did not get full credit on the midterm. Many other students had a similar issue, so we went to Prof Dong's office hours to review our midterms. At this office hour session, one student asked, \"So just because we do a problem this way on the HW and get full credit does not exactly mean we will get full credit on the exam if we do it the same way?\" To which Prof Dong responded with, \"...Yes.\" To be honest, from this point on I knew this class was going to be a grinddddd because A) it is a hard class and B) The prof was very disorganized. <br><br>Luckily, there was some extra credit offered on some HW, but even the TAs did not know how to do the extra credit problems, so that was interesting. I think I spent at least 5+ hours in office hours per week doing the homeworks and understanding concepts, as it was hard to learn at all from Prof Dong's lectures (YT saved me). In short, do not take this class with Prof Dong. Also the final was really bad.",
                    "11": "This class felt disorganized and the final exam was difficult. 48% average for the final exam is crazy.",
                    "12": "Everyone knows this is the hardest CS core class and I can't disagree. I thought the professor did a good job despite the difficulty of teaching such complex topics to a sleepy 9:30am class. The midterm was pretty much exactly like the practice midterm which I am SO SO SO grateful for. Love the prof for that. It could be hard to follow his teaching, and I think he could have given more examples of the concepts (especially examples more similar to the homeworks) instead of diving deep into only a few complicated examples, but that's just me. I know this prof will get a lot of criticism, but I honestly think he was really good for being new to teaching this class and new–ish to NU in general. He's clearly very passionate about the material and cares a lot about the students. This class is just challenging no matter how smart you are or who's teaching the class. I definitely think this prof will continue to get better at teaching the class, so if there are any negative comments about him, I caution you to not take them TOO seriously.",
                    "13": "Very good!! I loved this class. Take this class with Jinshuo!! He's so good at explaining things, clarying questions and overall guiding you :)",
                    "14": "He is an incoherent professor and does not communicate his ideas well. He is also reluctant to help with questions expecting you to know everything. Rude.",
                    "15": "The teacher was very ineffective at instructing. He would often try to speak through proofs with no supporting written material (very hard to understand a proof when its said orally and informally!). One time he orally explained the Ramsey theorem 4 times (because of course people will ask to repeat), and on the 5th time he told the class: \"I've gone over this 4 times already. Can you guys explain clearly what it is that you don't understand?\" Maybe try writing down the proof so we can follow it !!<br><br>My main problem with this course is that the homeworks are not a learning reinforcement tool, but rather the learning tool themselves. I don't think they expect you to know how to do the homeworks when they assign them and want you to self–study and learn most of the concepts. Otherwise, you lose lots of points on things such as proof syntax and theorem usage (when these things were never covered in class!!). The class lacks good examples or scenarios to motivate learning. Don't know why I'm paying tuition for this....",
                    "16": "Lectures were terrible. Final was the hardest thing I've ever taken. Things that the professor word for word said we did not have to prepare for the final were ON THE FINAL. Never got clear feedback on our homework and thus points were taken off on midterm even if you had the same format you got 100 on the homework on. Would not take this class with Jinshuo if possible.",
                    "17": "Don't take it with Prof Dong. His lectures are fun because he has a genuine appreciation for theoretical CS, and goes on tangents about genuinely cool topics. But he is not accustomed to lecturing, so he takes too many questions. He's also pretty disorganized: no answers on Piazza for important logistics questions, closing homeworks on Canvas early and not replying to emails about submitting those homeworks, etc. He gave a really easy midterm, though. The median was 17/20.",
                    "18": "So for 95% of the quarter, it was pretty nice. The homework and midterm were definitely easier that Eric Everet's. When the final rolled around, I thought I knew what to expect since the homework and the midterm were pretty much straight from what we learned in class. However, the final pretty much murdered the entire class. I heard the final was on par/maybe even easier than previous quarters with Everet, but the class wasn't prepared and it kinda destroyed us. So my advice would be to be extra paranoid for the midterm and final since they add up to 50% of your grade.",
                    "19": "Hard course, but to be expected. Teaching was very unclear and lots of questions were left after every lecture. Never seen office hours more packed.",
                    "20": "This course is not fun. Prof. Dong's exams and problem sets were fair, but the material itself was hard. Prof. Dong is not the clearest or most organized professor at times, but he is understanding, encouraging, and fair with his students.",
                    "21": "CTEC drafts<br><br>212:<br><br>This is by far the most poorly organized class I have taken at Northwestern. Logistically, this course was a disaster. There was no schedule of topics provided until the drop deadline, and compared to previous quarters’ syllabi, we spent much longer than expected on topics other iterations of the class were able to cover in one day. In the minimal syllabus we were provided, Professor Dong said that there would be discussion sections each week. These never happened. We also did not receive homework solutions before the midterm for the work we had handed in, leaving us unsure about our actual understanding of the content. Our final exam mean and median were around 14–15/30.<br><br>Professor Dong struggled to even reserve rooms for office hours. According to our syllabus, problem sets were supposed to be released Wednesdays and due the following Thursdays. Instead, they were released Thursday and due the following Thursday. One week, he forgot to release the homework until Sunday.  It was difficult to get in touch with Professor Dong, and the Piazza forum we are encouraged to ask questions on is often left unanswered for days. <br><br>The lack of communication about things like office hours, grading, etc. was incredibly detrimental to learning. The day before the final, we still had not received complete homework grades for problem sets 4–7. Prof. Dong released only partial solutions to the homework, leaving us no way of checking whether we have been writing our proofs correctly, to the degree of detail required for full points. He was changing the scope of the final exam up until the day before, which confused as to what we should spend our time studying. <br><br>When asked if he could explain how an student with little prior experience to proof–based math might go about understanding the logic/strategy of writing a proof, he said, “I don’t know how to teach that.” Professor Dong is clearly very smart, but many of us found his lecture style confusing and his explanations to our questions vague. I do not feel like I left this course with a good grasp of many of the topics we covered.<br><br>On one problem set, there was literally a problem that asked us to ChatGPT a 300–400 response about the lives of 3 prominent mathematicians. What were we supposed to learn from that? It would have been more effective for us to learn about these people if he had just assigned a Youtube video. This kind of pedagogical approach felt like not only a waste of our time but also an insult to our academic abilities. <br><br>Lecture attendance was reflective of the disorganisation and Dong’s lecture style. He went on tangents, and often preferred to simply show us coding examples that did little to help our understanding of the proof–based math we were expected to master for our problem sets and exams. He often punctuated his lectures with “I should write that down,” (regarding important key concepts or formulas) which made it feel like he had not really thought through what he was about to teach us in lecture beforehand. <br><br>I have had a really fantastic experience with the pedagogy of the CS department up until this quarter. It’s disappointing to know that our experience with such a critical topic like discrete math is left to someone who doesn’t seem like he has much experience teaching. I would suggest taking 212 with another instructor––although the problem sets and exams are allegedly easier with Dong, I would have much rather learned more difficult material with a competent instructor.",
                    "22": "I will preface by saying that I had a lot of pure math experience from high school and college, so this class was very much useless for me because I had already learned almost everything that was covered in the class. Mostly, I'm frustrated that I had to take it despite my level of prerequisite knowledge. Besides that, the class was incredibly disorganized and not taught very well, so it probably wasn't a great experience for people who had less pure math background than I did either. Overall, not a great class. I do believe it is a very important class, but I wish it were taught better.",
                    "23": "This course was pretty good with Prof Dong. While his lecturing may be a bit abrasive at times and hard to follow, he is quite passionate about the subject and is very attentive to students' concerns when they are raised. The most important part of this course is to complete the weekly homework and NOT fall behind on them. Future iterations of CS212 may change the grade weights, but so far most iterations have weighted homeworks heavily (nearly 50% of your total course grade). Thus, it is important to go to PM office hours, ask plenty of questions, and try to score your best in those homeworks to provide yourself with a strong foundation not just grade wise but knowledge wise. This course is difficult and some concepts are very confusing, but it is again important to go to office hours. The PM's are honestly some of the best lifesavers in CS212 and their expertise can help you quickly fill holes in your understanding.",
                    "24": "I was a bit disappointed with this course. While the professor seems like a nice guy, the lectures during class were not very engaging. Additionally, the class pacing was quite slow (especially during the first couple of weeks). Homework assignments and the midterm were fair, as most of the content can be found in the slides. Overall this was a very straightforward (albeit dry) introduction to the subject matter.",
                    "25": "It really was not as bad as people made it out to be at least with professor jinshuo dong. It's not the easiest and there are some pretty frustrating parts to it but it really wasnt as bad as i expected<br>Just go to office hours as needed for homework",
                    "26": "Dong's lectures can be a lot of tangents and word dump, but if as long as you don't get bored or go over slides you can learn the content well. He's a funny guy though and cares to make class fun if he can. Problem sets are hard and you will almost NEED the internet to help you out, but exams are much easier and almost seem trivial to the problem set difficulty.",
                    "27": "DO NOT TAKE WITH THIS PROF. Lectures were extremely disorganized and super hard to understand. The slides were often too hard to decipher as well even when i revisited the material. I learned more from random videos on youtube then from going to class.",
                    "28": "If you are allergic to organization and communication, this class is for you. I don't even know how to write this. Didn't have a syllabus for first week and a half. We spent 30 minutes on a horse problem one time only for it to be a trick question.  It felt like the professor was  just as lost as we were in how to teach it. If you asked a question you had a fifty percent chance of getting the response \"I don't know what you mean.\" Final average was a 48%. Just Don't.",
                    "29": "Professor is not the best, but the midterm was easy. Haven't taken final yet. HWs can be really hard. Overall class not taught well.",
                    "30": "Jinshuo takes some time to warm up to, but ultimately he really cares about his students. He's willing to help and takes feedback on how he can make the learning experience better. TA's are really nice for OH.",
                    "31": "I will preface by saying that Prof. Dong is a nice person and kind professor. That out of the way, it became incredibly obvious within even the first few days that he cannot teach undergraduate math courses. I understand that sometimes in college classes the professor's lecture style doesn't align with your learning style and you might have to teach yourself. But having a professor so disorganized that it makes it nearly impossible for you to teach yourself is truly ridiculous. The CS212 course material is challenging enough without a professor who can't explain introductory proofs. Last fall, I remember reading a CTEC for an Organic Chemistry class that likened the course to \"drinking out of a firehose.\" In one memorable class, a student asked Prof. Dong to go over how to solve a proof from beginning to end and he answered \"I dont know how to teach that.\" In a proofs class. These past 10 weeks were about as close to the experience of drinking out of a firehose as I think I will get from a Northwestern class. The average for our final is a 48%, which I think sums up the experience nicely. The TA's and PM's deserve the absolute world, I have no doubt that almost all of us would have failed without countless hours of their help each week.",
                    "32": "wasn't familiar with proofs much before this class so i was a bit nervous going in. i think prof. dong made the homeworks and midterm considerably more reasonable than previous professors. i would take the course with him if you have the chance.",
                    "33": "Extremely difficult. Go to office hours and self study.",
                    "34": "Did not learn that much in this course –– professor was nice but was not effective at lecturing and it was hard to tell exactly what we were learning. Exams were also extremely difficult + students were not adequately prepared for them (average for the final was a 48%).",
                    "35": "Just get through it. It's not an enjoyable class, and you will likely not understand much from the lectures. Attend the office hours – ALWAYS. Prof Dong is a nice guy, not the best teaching style, but as a person he is very nice",
                    "36": "I came in this class with kind of low expectations, and ended up exactly what I expected. This class introduces you to important topics such as proofs and graph theory, but did not go into depth into any of them nor was it taught very well. If it was not for the CS requirement, I would have definitely taken MATH–300 and MATH–308 which goes much more in depth and actually solidifies your understanding of the topics, rather than bits and pieces like this course.",
                    "37": "I wish I could say more positive things about this course considering how foundational it is for CS majors. However, unfortunately, this course’s disorganization has been both incredibly frustrating and distressing. <br><br>Starting at the beginning of the course: the syllabus for this class was not released until the Add Deadline (Monday of Week 2). When a student asked if Prof. Dong could take us through how to think through coming up with and writing a mathematical proof (the very purpose of the course), he responded with “I don’t know how to teach that.” A Piazza for the course was not set up until the end of week 2, and despite the course being over, not all of the course staff (meaning PMs and TAs) are on it. Up until week 5, rooms that were meant to be reserved for 212 office hours turned out to not actually be reserved, causing last–minute room changes. Course materials are split between our Canvas page, HackMD page, and announcements, often forcing us to look in multiple places to find relevant links. No homework answer keys were released prior to the midterm, leaving us with only 1 graded homework prior to taking the midterm. Given that homework 1 was graded more leniently since we were still learning how to write proofs when doing it, we were left unsure if the way we had been doing more rigorous proofs on Homeworks 2 and 3 were good enough to receive full credit on the midterm. <br><br>In addition to the disorganized course structure, lectures often felt slow, featured tangents, and lacked the necessary clarity and conciseness necessary for learning new concepts. Prof. Dong often featured code in his slides relevant to the topic for that day, which was initially nice to see because it reassured me that what I was learning was relevant to CS.  But, at times, this code more so bogged down the lecture rather than helping to improve my understanding of the course content. Furthermore, there were multiple lectures where Prof. Dong mentioned that he “should have written” something down, suggesting that the slides were not properly prepared to ensure our understanding of course content. <br><br>I will note that Prof. Dong does seem genuinely passionate about the course content and provides research topics or stories that he recommends checking out if we’re interested. He also seems like a nice person who genuinely cares about ensuring that his students understand the course material. To my understanding, this was Prof. Dong’s first time teaching an undergraduate course, so I can see how his lecture style might be better suited to a graduate level course. <br><br>However, overall, the combination of the lecture style, the course’s disorganization, and of the challenging nature of the course content made this course unenjoyable. My best advice would be to go to office hours as often as you can, to pair up with 1–2 people to work through the weekly homework assignments together (as the course policy allows and encourages), and to make sure to review course content as frequently as possible to make sure it periodically sinks in.",
                    "38": "Hard class but you need to do it, just go to office hours. 7 homeworks and midterm and final",
                    "39": "Professor Dong is not a great teacher but he seems like he wants his students to do well. The homeworks aren't that bad if you go to OH / read the slides, but they just can be tedious. The midterm was almost exactly the same as the practice midterm and you're allowed to bring a cheat sheet so it's pretty doable. The final was much harder and the average was really low but it seems it'll be curved.",
                    "40": "This class was good overall, I learned a lot",
                    "41": "Practice midterm and final were very similar to the actual exams, very nice.<br>The pace at the start of the class is slow but then the content gets exponentially harder every week after the first midterm.",
                    "42": "The professor, though very nice and caring during office hours, needs to improve his teaching style and organization. For example, there were significant delays in grading homework and arranging an alternative exam for students with internships. Despite asking for a headcount a month in advance, students' companies had to organize remote proctoring at the exact same time as the real final, which seemed unfair given the ample notice provided. However, the class was easier compared to other quarters. The midterm was manageable, but the final was quite challenging, with a median grade of 48% and an upper quartile of 61%.",
                    "43": "I really wish I had good things to say about this class and jinshuo but honestly the whole quarter was a disaster. very disorganized, got behind in content and then suddenly started going very fast, slides/materials gradually worsened in quality, piazza response times were abysmal, feedback on homeworks was abysmal, grading time was abysmal, jinshuo was not good at answering questions or explaining concepts in other manners, reused other peoples' materials (evert). worst of all provided a very easy final practice exam, said final would be similar, and then dropped the hardest exam possible in which some problems were only solvable if you remembered an extremely specific fact from lecture, and were frankly harder than all of the homeworks we received (which should be the other way around lol).. honestly a nightmare of a class and I thought the content wasn't even that bad, it was just the instruction was genuinely so horrid that the quarter just felt like a waste, i genuinely tried to like him but the final was just the nail in the coffin",
                    "44": "Lectures really all of the place with no clear theme. Homeworks even more all over the place.",
                    "45": "Take it with another professor. The content is actually not that difficult, it is just explained in the most complicated and worst way possible. A 10 minute youtube video of the content is 100 times better than the confusing and convoluted 80 minute lecture which has been specifically designed to actually reduce your understanding. Just take it with a different prof.",
                    "46": "The content was pretty interesting but the pacing was inconsistent and lectures were difficult to get through. The year started with extremely basic concepts: proof by contradiction, induction, and elementary set theory notation. This took up more than half of the quarter, and was excruciatingly easy. The second half covered more advanced runtime complexity, probability, and graph theory. We started learning content much quicker, which made the topics feel pretty rushed. I think at the beginning of the year, Jinshuo was overly concerned with the few students who were confused, ignoring the vast majority of students who were bored. There would be minutes of back and forth of students asking questions, him explaining, them still being confused, him still trying to explain, and so on. I think he's a fine lecturer, it's just difficult to stay engaged when he stays on the same topic for so long. The problem sets were great, though. They were a reasonable length and the questions were not too hard (and made good use of the lecture material). The midterm was pretty easy—simply doing the homework and maybe the practice exam were more than enough to be fully prepared. You get a cheat sheet, too. There was, however, very little room for error given that it was graded out of 20 points. Overall, a decent class with decent instruction, but could definitely be better. I think if you've taken a proof–based math class, you should be able to skip 212 and just take 335 for the major requirement."
                },
                "school_demographics": {
                    "Weinberg": 42,
                    "McCormick": 38,
                    "Medill": 1,
                    "Comm": 2,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 14,
                    "Sophomores": 51,
                    "Juniors": 15,
                    "Seniors": 3
                }
            }
        },
        "COMP_SCI 213-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.15,
                    "student_count": 109
                },
                "student_opinions": {
                    "0": "Ghena is the GOAT. Such a good lecturer, super fair midterms, I always learn so much in his classes. If you take this class, take it with a buddy because there's a ton of partner work. The labs are Hell but theyre infinity times better if you have a friend you're working with.",
                    "1": "This class was not that hard but there was a lot of information packed into it. The labs were also very time extensive but the homeworks were relatively easy. The exams weren't too bad and theyre not waited that heavily and we got cheat sheets. The biggest part of your grade in this class is the labs so I would reccommend getting a good lab partner.",
                    "2": "great course, ghena is the best. love him, def try to take 213 with him!!",
                    "3": "If you have to take this class, take it with Ghena. He is a great lecturer and really fair grading policy. You will most likely get close to 100 on the labs and an A on homeworks if you put in a little effort and go to office hours if needed. midterm isn't bad at all and the final was hard but I think graded pretty easily because i did way better than i thought i did. Here's what I'll say: I ended with an A in this class and I am NOT good at CS. This is the first CS class I've gotten an A in since 110 and I'm a senior now. So def take with Ghena.",
                    "4": "Really good class. Everyone has to take it and I'd suggest taking it with Branden. I previously took it with Nikos in the spring and dropped. I really got the impression that Branden was there to help us learn. When I'd previously taken it the teacher seemed to have little interest in teaching, it felt forced. PMs are great – definitely go to office hours and start the labs a few days in advance. Exams are reasonable.",
                    "5": "I found the class overall very fair, challenging at points, and informative. Ghena taught it very well.",
                    "6": "I've taken this class with another professor and did not have a great experience. I recommend taking this class with Branden if you can. In my opinion, he is the best CS 213 professor.",
                    "7": "CS213 with Ghena is awesome. This is his bread and butter and although I liked taking 211 with him, he is a(n) (even) better instructor for 213. You learn a lot in this class but it was never overwhelming. The curriculum is very well developed. I'm not really looking forward to taking more systems classes after this class (stuff just isn't terribly interesting to me), but I feel prepared for when I do have to take a systems breadth. Unlike 211, the office hours for this class are never overwhelmed, so I actually found them much more helpful than they were for 211. Ghena in particular is a master at providing helpful feedback without giving away the answer. Looking back, some PMs didn't really know what they were talking about, and some PMs really did.",
                    "8": "I mean it's a required class...but Ghena seems to be the prof to take this with. Office hours and Piazza are a lifesaver",
                    "9": "Take 213 with Ghena! He is a great professor, speaks very clearly, tests are not hard.",
                    "10": "Extremely cool course. Puts programming into perspective in a way that was remarkably useful, and interesting, if CS is something you actually care about. I loved that this course was taught through experience, i.e. the labs and homework, but I personally had a really hard time managing the 2–3 weeks per lab. When you take this class, make sure you are prepared to schedule and manage your time well, because there are no reminders and you will be extremely stressed out if you save the labs for the last few days.",
                    "11": "As someone who took 6 of 10 weeks of this course with Nikos and then dropped, I cannot emphasize enough how much more tolerable, less stressful, and more INTERESTING this course is with Ghena!! Slides and lectures are clearer/better, and the exams felt MUCH more fair and based on homework material (plus we got practice exams which Nikos refused to provide). Also, Branden got rid of the awful datalab and replaced it with packlab which helped me learn more about bit shifting and masking than datalab because it felt less like I was being tossed into the deep end of a pool without knowing how to float and felt more manageable and relevant considering what Branden had taught us in class. PMs for this class are incredible, definitely go to office hours (if you go early in the week when OH are mostly empty it's like getting 1:1 tutoring).",
                    "12": "Great course",
                    "13": "Branden was fantastic and this course was fun! Succeed with PM help and the internet.",
                    "14": "Please take this class with Branden. He is amazing and makes complicated things so clear.",
                    "15": "Branden is the GOAT. EASILY one of the best profs at this school. He's a great lecturer and very accessible with questions (during lecture, on piazza, etc). I loved CS213 (im a CE major) but it's definitely conceptually harder than 214 or 211. The labs are cool and you learn a lot while doing them, homeworks are pretty similar to the exams (there's no surprises). <br><br>GREAT CLASS def recommend esp if you're a CE major (lots of overlap with CE203)",
                    "16": "I felt challenged, but the PMs and Prof helped me meet expectations and motivated me to ask questions. The labs are interesting, and Branden is always looking for ways to get students more immersed in the topic",
                    "17": "Branden made this course actually interesting–50% is labs, 20% is homeworks, and 30% is exams. Just do well on the homeworks and labs so you don't have to do as well on the exams",
                    "18": "Urgent changes are needed to this course. This feedback is less of my experience and more of actionable changes that can be made so that this class is less of a source of stress, which Northwestern students do not need more of.<br><br>The peer guided study group program should be extended to all core classes in the CS program. With these classes so poorly structured for retaining information, we need this. I came into this class with very little previous exposure which put me on an uneven playing field. This would be another built in support for those like me who need more built in practice outside of school (and for an opportunity to learn from our peers who can explain concepts in a more intuitive way). I tried to do an impromptu PGSG but it kinda fell apart (I am grateful to everyone who expressed interest and participation though, and formalizing this will make it more effective for future iterations of this course).<br><br>We need a repo of practice problems by skill, following the lead of the chemistry department (for clarification, the chem department does not have such a repo, but since the material is more closely based on a textbook, and the textbook has a range of problems by skill, this is what I am referring to). I learn by application of theory; reviewing the theory is important, but until I have a chance to apply it, I can gaslight myself into thinking I understand something better than I actually do. The textbook problems would be fine, but they aren’t skewed towards the material we are meant to learn in this class, so the repo should be composed of older practice exam problems, organized by skill to assist in targeted skill based practice.<br><br>Another suggestion from the chem department, review sessions (at least one) before the exams, recorded for people to review if they can’t attend in person.<br><br>In class time, lectures should be less dense to give time to practice the skills where we can get immediate feedback. This class should be meeting at least 3 times a week due to the density of lectures. More frequently, which is inconvenient, but I think things will stick better if we space things out a bit.<br><br>Small assignments should build up to the labs. There was not a gradual buildup to this assignments, artificially increasing the difficulty. If we had some more practice with the skills on the lab before hand, things would not be nearly as difficult.<br><br>Discussion sessions should be held on off days – if we aren’t going to do practice in class this is a must. This would be a great place to do the practice problems or pre–lab practice assignments I mentioned before.<br><br>Lastly SETI Lab should not be assigned during thanksgiving; that was a low move. I was mostly dependent on OH for completing labs and my partner had to drop after midterm 1, and without support during thanksgiving break I was unable to get much done due to all of my unanswered questions. Bomb lab or Attack lab would have been much better for getting done over Thanksgiving break since they followed a similar process for the different parts of the assignments. I understand this is based on the order in which the curriculum is taught, but SETI was absolutely awful getting done over break (in fact, it did not get done, I waited until school resumed so that I could go to office hours. A choice I don’t recommend)<br><br>Of course, many of the above suggestions are dependent on the hiring of more TAs and PMs, which I know has been a challenge. But this is urgently needed, and I know this school of all universities can afford it.<br><br>This is probably the meanest ctec I will ever write, and for that, I do apologize. But it doesn’t have to be this way.  There isn't a word I can say to describe the harrowing experience I had in this class that won't get this comment banned on the CTEC site, and this is coming from someone who puts in 8+ hours a week into this class, attends office hours religiously, and is constantly lurking on Piazza. We can make things so much better than they are. Things can be challenging, but you have to have the resources to support the level of challenge, otherwise you’re just punishing people.",
                    "19": "I took this course Spring 2023, but dropped as I was unsatisfied with another professor (Nikos) style of teaching and approach to class. However, the experience with Branden made up for it! Branden explains everything carefully and gives plenty of time for assignments. There are 4 labs and 4 homeworks. 2 exams, each worth 15%, you are technically required to average a passing grade between the two to pass the course, but in reality, this is a non–issue for virtually everyone who takes this course.  Many extra credit opportunities on labs. Exams are very fair and match homework closely. All lectures are recorded. PMs are excellent for help.",
                    "20": "This class is extremely interesting and eye–opening; it goes into detail about the various internal processes of our computers that are often abstracted away from our notice. The lecture slides are extremely clear and convey the course content very well—Professor Ghena also does an amazing job of teaching the content and answering questions. The labs can be pretty challenging, but they are also extremely rewarding once you complete them. Overall I would highly recommend this class if you are at all interested in computer science or simply want to learn more about how your computer actually works.",
                    "21": "Take this class with Brandon if you can. I imagine you're coming out of 211 if you're taking this class, and I found it to be overall easier than 211, and significantly less work. There are only four big assignments, you get at least two weeks to work on each of them. They were all challenging but nothing insurmountable. The hardest may be the first one, packlab, which feels like a 211 assignment but with binary. The exams were pretty straightforward, no big surprises, and the practice exams are very helpful. Lots of extra credit opportunities in the assignments as well. Decently difficult class, but it feels fair. My only complaint would be that some of the lecture content felt irrelevant, and a lot of what we cover doesn't show up on exams, so I found myself tuning out every now and then. If it's not on the homework assignments or the practice exams, it's probably not on the exams.",
                    "22": "This is a pretty good class, it does a good job of introducing various computer systems topics. Try to get started on the labs as early as you can because those are the most difficult part of the entire course",
                    "23": "This course was interesting. Lectures were engaging for the first half and then most people end up lost. The homework’s weren’t that difficult, but often times they didn’t line up with lecture super well. I wish more example problems were done in class and that exams were easier to prep for. Definitely take this course with Branden though because he seems to be improving the course each time he teaches it.",
                    "24": "This is definitely my favorite core computer science class. The course material is very interesting and covers alot of topics. Alhtough there is alot of material the focus isnt on rote memorising and the midterms are fair and dont test details. The labs took a significant amount of time to complete however they were interesting and different from each other. Ghena is a really  good instructor.",
                    "25": "Great class, professor is great and grading is very fair",
                    "26": "tough course, great teacher.",
                    "27": "Very difficult but learned a lot. Ghena is good at lecturing.",
                    "28": "I think the course did a great job of covering a lot of baseline material. It was a great way to learn what is actually happening in a computer. some lab debugging stuff is a little annoying, but overall its a great class",
                    "29": "Branden is a really good instructor. Take 213 with him. Makes the content really easy to understand through his lectures and slides.",
                    "30": "The people who made the technologies you'll learn about in CS213 were geniuses, and when you understand it (and your project finally works) you'll feel almost as smart as them. I especially loved the hacking lab (Attack Lab).",
                    "31": "A typical computer systems class. Sometimes the labs were unbearably difficult but the concepts on the exams are fair and pretty much what we practiced on the homework. Office hours were really useful in understanding the concepts too!",
                    "32": "Brandon Ghena is a top 3 professor I've had at NU.  In my opinion, the rankings for the core CS courses from least to most difficult is 214, 213, 211, 212.  Labs are not that bad since you can work on it with a partner.  You get ample time to complete the homeworks and labs.  The quiz/midterm is fair.  Love brandon so much &lt;3.",
                    "33": "213 is great. You have to take this as a CE major. Ghena is the goat professor of NU (sorry Ilya)",
                    "34": "Ghena is great. Definitely do NOT procrastinate on any lab. This class is not as easy as 211, but also not *too* hard. Also, actually try for the exams. I didn't do great on the first one (still ended up fine in the end), but having the looming thought that I could automatically fail the class due to the minimum midterm rule was not fun.",
                    "35": "Very fast paced, felt like something that would be taught in a semester but instead was done in 10 weeks. A lot of interesting content and the labs were pretty good.",
                    "36": "GOAT!",
                    "37": "The course is definitely time–consuming, but the lectures are really great and well done, and office hours are very very important and helpful",
                    "38": "This course is a hard course. I'd recommend taking it with Branden but the exams are hard and just be prepared to work a lot.",
                    "39": "Ghena is the professor to take this with.",
                    "40": "Seti lab &gt;:(  That is all",
                    "41": "Lots of new information but Branden is awesome at explaining and knows when things are hard.",
                    "42": "DONT WAIT TO START THE WORK! The labs will take a lot more time than you think, so its a good idea to look at them as soon as they're released even if you don't start them immediately. Branden and the PMs are all very helpful and there are plenty of office hours so go to those.",
                    "43": "This is a really tough course but good for anyone involved in CS",
                    "44": "As someone who isn't really interested nor very good at systems, Ghena does a really good job of explaining concepts and answering questions on Piazza. Grading is fair if you put in the effort to understand.",
                    "45": "Branden is the goat teacher. Take this class with him!",
                    "46": "Professor Ghena is a very good lecturer. He explains the concepts in ways that are easier to understand. The lectures are recorded and slides are posted to help with referencing back at the material. Grading is 20% homework (4 total), 50% labs (4 total), 15% midterm 1, and 15% midterm 2. The homework is mostly math–based, but it wasn’t too hard. The labs could be done with a partner and are pretty time consuming, so it is a good idea to work on them early. There is up to 10% extra credit on 3 out of 4 of the labs. The first midterm was not too bad, but the second midterm was pretty hard. The midterms are not cumulative, and there are cheat sheets allowed. Because the midterms are not worth that much of the grade, there is a new rule that you must score an average of 65% or higher on the two midterms in order to pass the class.",
                    "47": "CS213 is an interesting course jam–packed with content. The labs are not especially difficult but I highly recommend that you start them early in the case that you get stuck or have a pesky bug/issue. Ghena is an amazing professor and I cannot stress enough that you should take this class with him. He knows how to teach this content and his midterms are quite fair. His homework assignments help a lot with understanding the content and align nicely with the midterm exams.",
                    "48": "Take CS 213 with Dr. Ghena! He is an amazing professor: he's super lively and enthusiastic, and the lectures are clear and well prepared. It's a fairly hard course. The labs can take a while, but are very fulfilling. Dr. Ghena is very fair when it comes to regrade requests on the exams.",
                    "49": "This is a really cool class. Disclaimer: I took this class because I wanted to, not because I had to, and wanted to learn more about C and x86 Assembly for microcontroller programming. I know so much more about how a computer works at even lower levels than 211 went into, and feel like I can write fast, secure C code with knowledge of how it'll affect the Assembly code that my C code produces. Branden is a great prof, too – he gives engaging lectures, answers lots of questions after class, and is generally really great at responding to students in a positive way on Piazza and when answering questions in class.",
                    "50": "I personally don't have an interest in the content of this course, but I do feel like it was taught well. I think this course relies heavily on student's learning in office hours which I don't think should be a burden placed on the student's or the PM's. Lectures were very informative and Branden thoroughly explains the content.",
                    "51": "The course is very manageable if you start the homeworks and the labs early. Office hours are not very helpful, but they sometimes give okay tips. It is very doable if ghena is teaching just because he is a very good professor and teaches in a way that allows everyone to understand whats going on.  Highly suggest taking it with him",
                    "52": "I don't think anyone is taking 213 that doesn't have to, but it's a great class for learning fundamental computing knowledge and it's not very scary.",
                    "53": "The course taught me a lot about computer systems through hands on assignments",
                    "54": "Learned a lot in this class, most of it was kind of random (still don't really know what this class was actually about), but it was pretty interesting. Start the homework and labs early because the servers get pretty slow once everyone starts using them and they crash a lot. Overall, not that hard of a class if you take it with Branden",
                    "55": "The professor is great at teaching. Very difficult and time–consuming, but taught well. All the assignments were helpful.",
                    "56": "I really liked this class and Prof. Ghena was a great lecturer",
                    "57": "Everything was great.",
                    "58": "Prof. Ghena was an amazing instructor and explained complex concepts very clearly. His slides are amazing",
                    "59": "Course is well structured, staff is communicative, and assignments are well spaced out while not being overwhelming.",
                    "60": "Branden might be the best professor I've ever had and ever will have. His lectures are well–structured, full of information, but still easily digestible. His grading policy is incredibly forgiving but doesn't make it feel like a blow–off class. I can't stress enough how much he made this class enjoyable, because 213 can be a doozy.<br>Give yourself enough time for the labs. If you do so, you'll be fine. Try to avoid stacking other hard classes on top of this one so you can do the labs well, because it's worth doing. Pack Lab is probably the worst in terms of frustration, Bomb Lab is a big time commitment, Attack Lab is really easy, and SETI Lab is... definitely one of them.<br>Midterm 1 was fine. We were allowed a note sheet, so it was just more of a litmus test of \"do you pay attention to this class.\" Some of the topics can get confusing so definitely go to office hours if you need help; some massive topics get the same amount of lecture time as some of the fluffier topics, so it can range from \"this is easy and I understand this\" to \"what in the world is a compulsory miss?\"<br>Homeworks can be rough, but not unbearable. The only feedback is your grade, so it makes it hard to understand where you went wrong, and some of the questions can be finnicky.<br><br>Overall, take this with Branden. Fun if you're an absolute geek about computers.",
                    "61": "Branden is a great professor, he tries to keep things interesting even with all the material being thrown at you in the lecture. It's pretty hard to lock in the entire 1hr and 20min especially since there's so much new material a lot of the times, but it's helpful that he posts recordings and stuff. Homeworks are pretty doable from just the lectures, but office hours are a good resource for the labs. Try to get a reliable partner for the labs, it is very helpful.",
                    "62": "TAKE THIS WITH BRANDEN HE IS THE GOAT. This class alternates between pretty easy homeworks and harder labs due each week. Overall the class is not that much work and the exams are not bad.",
                    "63": "Great course.",
                    "64": "It is a lot of work but it is also very cool if you're interested in computers. The last two labs were really interesting. 9.5/10 would recommend.",
                    "65": "covers a ton of material very very quickly, exams are hard if you're underprepared at all, hard to keep up without constant review and staying very on top of all the work",
                    "66": "Branden is the GOAT. Take 213 with him and no one else. He's incredibly kind and open to any questions and help you might need and does an exceptional job at relaying difficult and complex information.",
                    "67": "Ghena is the goat. The 4 labs are the main grades for this class and they are all relatively easy to get a 100% on, with the last 3 have an opportunity for extra credit as well. Just make sure you don't bomb the tests and you'll get an A easily.",
                    "68": "Take this class with Ghena. Ghena makes the exams straight forward and makes sure that the material tested is content that will be stuff we encounter in real life.",
                    "69": "This class isn’t that bad at all. Ghena was a great professor who was good at explaining concepts and lectured at a good pace. You’re almost guaranteed to pass if you do well on the homeworks and labs. That being said, the second midterm is the hardest exam I’ve taken at my time here at Northwestern so study extra hard!",
                    "70": "This is a good class that you obviously have to take if you’re a major or minor. Ghena is a good teacher for it because his OH are helpful but even without them the class is pretty doable especially if you have a partner. Sometimes labs can be long so start early.",
                    "71": "Take this course with brandon. If anything he'll make the lectures interesting"
                },
                "school_demographics": {
                    "Weinberg": 59,
                    "McCormick": 48,
                    "Medill": 0,
                    "Comm": 2,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 2,
                    "Sophomores": 51,
                    "Juniors": 41,
                    "Seniors": 14
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 5.02,
                    "student_count": 149
                },
                "student_opinions": {
                    "0": "This was a good class and Ghena is the best professor to learn from. Some of the best PM's at Northwestern are with 213 as well, so make sure you go to office hours if you need help. With that being said, the midterms don't really reflect what you learn in the class and they are on a time crunch. It's easy to make mistakes that will cost your midterm grade if you aren't prepared enough.  Also, I didn't like the 65% average midterm grade required to pass the class– if you did well on the 4 labs and 4 homeworks, then it means you will either fail the class or get an A, no in between. As for the labs, definitely start early and go for the extra credit as they're not much more work than doing the assignment. Overall I never was interested in systems and still am not, but I learned a lot and am glad I took this class with Ghena.",
                    "1": "Ghena is a joy take this class with him, he makes the unbearable material interesting and fun. Not toooo bad a core CS class. start labs early",
                    "2": "Hard class, but take it with Gheenna",
                    "3": "This is definitely a hard course if you've never investigated the mechanics of computers before, but rest assured you're not the only one struggling. Branden is a really great lecturer and does a great job at making the lecture as engaging as it could be. Exams can be pretty difficult, but the homework assignments really help get an understanding of topics. While time–consuming, I found labs to be quite fun, especially because I had a good partner. <br>Unless you just love computer systems, I'd say it's a rough class. But if you go to class and office hours you can really learn a lot. And Branden makes it so much better and so much more interesting than it could have been.",
                    "4": "Prof Ghena is amazing",
                    "5": "This course is probably my favorite out of the core CS sequence, because you learn a lot of new concepts that aren't in other CS classes. You learn the assembly language, parallel programming, how hacking works, and lots about computer systems in general. Ghena was a very good teacher and Piazza responses were always very quick. Only thing would be lecture could get a little boring, but the labs were well made, although pretty difficult. Overall a good class.",
                    "6": "Difficult class!! office hours and the such can help but there can be pretty long queues and the exam average policy (65% avg on exams minimum otherwise fail) makes it critical that you do well on them.<br>Do NOT slack on the labs even if you have groupmates who are doing the majority of the work!! You need to know how to do the labs and why they work since they will show up on the exams<br><br>otherwise Ghena is a great professor, great energy, pretty understanding, and all around approachable",
                    "7": "A really interesting introduction to computer systems for those who are interested in it. For people without an affinity for hardware, the class was pretty confusing and unintuitive. I wish Branden had more time to cover each topic, because given the breadth of topics, one lecture each was not enough to fully grasp what the class was trying to communicate.",
                    "8": "bomb lab and attack labs made me cry. otherwise easy course",
                    "9": "The labs were the most important part of this course, and they were challenging but also forced you gain a deeper understanding of what we were learning.",
                    "10": "It was a very good class.",
                    "11": "GHENA IS INCREDIBLE!!! He's such a fun and interesting lecturer, and he's really superb at explaining complicated topics. I loved how engaged he was with the class during lecture, answering everyone's questions really thoroughly. I felt the workload was very reasonable (as long as you don't put things off until the last minute), and the grading scheme is also very reasonable. Pretty easy to get an A if you start work early. Ghena is super passionate and so nice as a person. I honestly love the guy so much and I feel bad for anyone who doesn't get the chance to take this or another class with him. I learned a lot thanks to his great teaching, and I honestly didn't find this class nearly as difficult as people led me to believe it would be",
                    "12": "Branden is a great professor! This class is definitely challenging, though. Start your work/studying early!! Go to office hours as well!",
                    "13": "hard class but you have to take it, Ghena is very nice but sometimes he goes fast, make sure don't mess up first midterm since you need an average of 65% across both to pass",
                    "14": "Heard it's kinda intense, but actually not too bad. Really enjoyed the learning process.",
                    "15": "Love Ghena's lectures! He has a lot of check–ins and practice questions to help you do well on the tests and understand concepts.",
                    "16": "I think the importance of this course has been largely overlooked by the cs communities as it would serve as a firm foundation for every students within the field",
                    "17": "This class is brutal. If you're CS there's no getting around it so buckle up. Overall, this class was torture. It's a course designed to weed people out of the CS major. Our class started at around 240 people and ended at 193. This is evident from the 65% average rule on the midterms. There are two midterms weighted 15% each and if you don't get a 65% average on both you automatically fail (even if you have a 100 on everything else). The bulk of your grade consists of labs (50%). These can be done with a partner (make sure your partner is good!). Labs are only tangentially related to lecture content and are almost impossible by yourself and without OH. But OH is hit or miss, because when I went the TA just said he didn't know the content and couldn't help me. My partner was able to get help though. Besides pack lab (which was just C coding) all the labs felt really pointless unless you're into the specific niche (low level stuff for Bomb Lab, security for Attack Lab, parallelization for SETI). Homework was related to lectures and worth 20% of the grade. It was still super tough though since the lecture instruction left a lot to be desired. Overall, just make sure you get with a good partner and don't take this class with any other hard classes like I did...",
                    "18": "This course has 2 midterms, 4 labs, and 4 homeworks. I think things are spaced out pretty reasonably, but the 65% average midterm is so stressful honestly. He also makes the midterms different from the practices and so I found both midterms quite challenging. I think the course has been continuously getting harder because of that.",
                    "19": "Not too bad of a course honestly. The exams were very fair, and we were given practice exams that were quite similar to the real exams, so I felt very well–prepared for those. The homeworks weren't too bad and the labs were very interesting. Some labs could definitely be done in one day (if you're willing to spend a large portion of your day on it), while others not so much. Branden is an amazing professor! He explains everything super well and is generally very kind and understanding, which I really appreciated. Overall, this was a very interesting course that made me realize I may be more interested in systems than I previously thought.",
                    "20": "Definitely not an easy course, but you can get through it if you stay on top of the work. The labs are worth 50% of the grade and will be what you spend most of your time on, but there's also weekly homeworks and two (non cumulative) midterms. Branden is a great lecturer and explains the concepts really well. One of the PMs just helped me on a part of the final lab that my lab partner and I had been stuck on for the past five hours like 5 minutes ago, so shoutout to the PMs too, y'all are the goats.",
                    "21": "This class is actually really easy if you take it with Brendan as he is a very good lecturer. He provides a lot of examples in class for you to practice on which is nice. The labs weren't as bad and time consuming as people made them out to be. Also, there is a fair amount of extra credit opportunities for the labs that you should take advantage of.",
                    "22": "Branden is a great teacher, take this class with him! He really wants to make sure you understand the concepts. The class is fairly challenging and time–consuming, focuses on a lot on low–level topics like assembly and computer memory. If you have to take the class, try to take it with Branden!",
                    "23": "Professor Ghena is great at explaining concepts and has a good attitude, which motivates me to come to every class. It did take me a while to go through the topics again in preparation for the midterms, so I'd suggest not leaving that until the last minute.",
                    "24": "Branden is a great professor. The class is made up of four homeworks, four projects, and two exams. The homeworks are pretty easy and there are usually examples of what to do in lectures. The projects are challenging, but manageable and you get to work with a partner which is super helpful. The exams are also manageable and the practice exams are super helpful.",
                    "25": "Pretty much required for comp sci minors. Advice I would give is to truly understand lectures.",
                    "26": "This class was interesting, because you learn about how code is translated into assembly then binary then into physical material.",
                    "27": "CS 213 was definitely very manageable, but it was definitely a lot harder than CS 211. Plan to spend more time than 211 on the homeworks and the labs.",
                    "28": "ghena is a fantastic prof",
                    "29": "Tough class, but required. Do the homeworks, have a good lab partner, and be prepared for the midterms.",
                    "30": "Overall, I liked this course and it helped me to learn quite a bit. Was not as overwhelming as I heard from my upperclassmen friends.",
                    "31": "Branden is an amazing lecturer and he's the best to learn systems from. This course is hard. Go to office hours and start everything EARLY!! A lot of the PMs are really great. The topics were really interesting to learn about even though it was definitely hard. It's easier to stay on top of the class when you go to lecture, so I tried not to skip unless I really needed the time to work on something else. Also take this class with a friend because you can do labs with a partner, which really helps as they get pretty hard!",
                    "32": "nothing but good things to say about branden, 10000% the best instructor in the department, they need to promote this man asap. would do everything in your power to take this class with him if possible.<br><br>course content itself is really not as bad as people make it out to be, mostly felt to me like a glorified math class, lots of stuff with floating point etc which isnt necessarily a bad thing. the labs are actually really useful/interesting if you put in the effort to get what you need to get out of them instead of the alternative. exams aren't super difficult and practice is generally more or less the same, though i will always be miffed by the memory system branden put on the structs question on the final :|. that said, im not 100% sure how well this class translates to other 300–level systems given that it feels more like a math/assembly course <br><br>all in all, enjoyable class, not as hard as other people make it to be if you put in the time, take it with branden 100%, that guy is the lebron james of teaching",
                    "33": "Branden is a great professor who is enthusiastic about teaching the class. The homework/labs are challenging but very doable as long as you're willing to put some effort in.",
                    "34": "This is a very challenging course, but I don't imagine you could take it with a better professor. Tough but fair.",
                    "35": "Though this class was definitely challenging, I learned a lot. I was happy that I could get a general introduction to a lot of the different aspects of computer systems, including assembly languages (particularly Intel x86–64), cybersecurity, caches, and much more. The coursework is composed of 4 written worksheets/problem sets, 4 labs (which are more difficult and make up half of your grade), and 2 exams. However, you can work on the labs with a partner, which was helped a lot because you could talk through any problems that you ran into and work through them together. Systems might not be everyone's favorite part of computer science, but I think that overall, Branden is a great lecturer who also structures the course well. Peer mentors at office hours are also super helpful if you're ever confused about content or feel stuck on the homework. If you can, I recommend taking this class with Branden.",
                    "36": "This class is so manageable with Branden, you HAVE to take it with him. The class is definitely a lot of information very quickly, and sometimes lectures seemed to move very fast, but I found it very interesting which I was not expecting at all. There are two exams (which are medium difficulty and 30% total), 4 problem set like homeworks (which are not too bad and 20% total), and 4 labs (which take a good bit of time and 50% total). This class is necessary for comp sci major or minor so there isn't much use to convince you to take this or not, but I will say again to try to take it with Branden because he makes this course interesting and manageable.",
                    "37": "Please for the love of God do not attempt to take this if you are not a CS major",
                    "38": "Take this class with Branden Ghena! He is great at teaching. Highly recommend going to lectures and listen, but they are recorded. <br><br>4 HW assignments and 4 programming labs.<br><br>2 exams, very similar to the past exams that he gives you for practice. You get to make a cheat sheet, so you are chilling.<br><br>HWs are easy, labs take time but are doable. Make sure you go to office hours, TAs are helpful.",
                    "39": "This course is not really anything of interest to me, however, if I have one recommendation it is ASK QUESTIONS and TAKE WITH BRANDEN!!! The 65 cut–off rule is a little nuts, but it's not that bad, just really ask questions when you have them!!! PMs in this class are amazing and Branden answers piazza a lot.  He is willing to work with you if you are struggling. I really don't care about systems and find it boring, but Branden makes it useful and well–taught. Highly recommend.",
                    "40": "This is not a fun course, and you definitely shouldn't take it unless you have to. The labs are difficult but doable and the exams are fair though, so that's a positive. Definitely don't expect this to be a fun class, it's a lot of memorization and just isn't interesting content.",
                    "41": "This is a challenging course but Ghena is one of the best professors ever and really gives you a great introduction to computer systems",
                    "42": "213 with Branden is definitely the best. While this course is very difficult without any prior knowledge of assembly or binary number systems, Branden helps ease you into it and provides plenty of examples. He also loves to answer questions during lecture which was really helpful and made the lecture feel welcoming and interactive. The labs are definitely difficult so make sure to start early and avoid starting late as office hours can become VERY crowded near deadlines (which is honestly true for any CS class). Despite the difficulty, I felt like this course was very intellectually rewarding.",
                    "43": "Most aspects that I thought would be covered were, plus more. Good class",
                    "44": "Very good class, try doing all the extra credits–you’ll learn a lot.",
                    "45": "DO THE EXTRA CREDIT FOR LABS.",
                    "46": "Branden Ghena is one of the best CS professors here! I have learned a lot from him in terms of computer systems, and I definitely recommend everyone to take this class or another class with Professor Ghena!",
                    "47": "Branden was an awesome lecturer and the workload for this class is very reasonable. The labs were obviously challenging, but they were incredible examples of \"learning by doing.\"",
                    "48": "this class covers a lot of content and every lecture is packed with information to remember. A LOT of math but we get cheat sheets for the exams. the labs take time too but aren't too bad. the exam policy was really stressful and midterm 2 was way more difficult than midterm 1.",
                    "49": "A hard but fair course. This course is super low level meaning you will be sifting through assembly and C code. It isn't a \"coding\" heavy class but you will have to look at a lot of code. Unsurprisingly assembly is difficult. The labs were all very distinct. They are all little coding puzzles. My partner enjoyed bomb lab which I despised but I thought the final concurrency lab was super cool. Brandon is a great professor and while I know I don't want to do more OS I think it is a great experience to have in my back pocket",
                    "50": "I definitely learned a lot in this class. Branden is an amazing professor. His lectures are thorough, with plenty of visuals and examples to better illustrate the topics. I also found the homeworks to be excellent practice. The workload was very manageable and the labs were really cool.",
                    "51": "CS213 is a challenging class but Professor Ghena is really good, Reach out to him if you are struggling . He is always willing to help.",
                    "52": "People keep saying this class is bad but now that I've taken it I can confidently say that it's actually not bad at all. Most of the CE and EE classes I've taken are much harder. People were freaking out about this but truthfully the 65 exam average requirement is no big deal – the grading on the exams is quite lenient. The labs are also very doable; aside from the bomb lab you can do the other 3 in a day. I had a lot of fun solving the puzzles in the labs and found the content of the course to be very interesting. Professor Ghena is great and keeps the lectures entertaining. Highly recommend this course!",
                    "53": "I didn't really know what to expect out of this class (I'm a CS major but didn't really know much about the systems field prior), but I ended up enjoying it. Definitely take this class with Ghena. He's a great professor and clearly actually wants his students to perform well. I didn't go to class much and opted to watch the lectures on Panopto but as long as you watch them prior to completing a related assignment, you should be fine. The labs can be hard but the PMs are super helpful and there's lots of office hours. Pack and SETI lab aren't bad but I found Bomb lab and Attack lab to be pretty difficult. It depends how good you are with assembly code. The exams are very similar to the practices he gives you and as long as you do the practice problems they're pretty easy. Overall, as a required CS core class, I didn't really mind it.",
                    "54": "So long as you go to class, you will be fine. Ghena and the TAs are very helpful and give you a lot of chance to succeed.",
                    "55": "The tests and homework were very reasonable, and the labs were engaging and directly applicable to the material. Labs, however, took a LOT of time.",
                    "56": "Branden is such a good lecturer. He explained things with so much clarity and was willing to help with anything. I took CE 205 the same time as this class and the first half overlaps a lot, but the second half of 213 gets very interesting and we got to learn caches, memory, stack and many more related concepts. I havn't learnt many of these from other classes and I think 213 did a great job of introducinbg them.<br>Labs are hard but if you understand things from class and have a partner, things can be easier. Probably took me and my partner 4~8 hours each.",
                    "57": "The labs were all do–able and the homeworks actually help you prepare for the test. good class overall",
                    "58": "The course was pretty interesting. I learned a lot.",
                    "59": "This class isn't as difficult as people make it seem. Branden explains things very well &amp; encourages questions. Grades consist of 4 labs, 2 midterms, &amp; 4 written homework. The labs were difficult but if you have a good lab partner you will likely get close to 100% (if not more with extra credit). The homework was not too difficult (most people get an A or A–). The exams were difficult but reasonable &amp; you're allowed to have a double–sided cheat sheet.",
                    "60": "This class has a good amount of work, but you'll get a lot out of it. I found the labs interesting, and you get a lot of practice for exams. Good class!",
                    "61": "Branden is a great lecturer. The labs were pretty hard at times but the homeworks were mostly easy.",
                    "62": "Working with a partner was really helpful in keeping me accountable. With that, procrastination wasn’t a big issue for me and though each project took a lot of time, it was satisfying to work through and understand. Homeworks were very good practice for the exams, so just attending all the lectures set me up pretty well to do well on the exams.",
                    "63": "There are some very cool assignments in this class, and I obtained a much deeper understanding about lower level programming and various computer systems.",
                    "64": "Take it with Ghena if you can; hes the goat. Core class you need to get through. Weekly homeworks were pretty straightforward and not too hard (mostly math), but the bi–weekly labs were definitely way more time consuming and harder. There are two midterms which somewhat difficult but not too hard if you study and use the practice tests.",
                    "65": "Rather interesting, definitely a side of CS that isn't really seen in the classes preceding this. There are homeworks and labs which take up a lot of out of class time. The homeworks are easy if you pay attention in class (basically all answers are in the lectures), the labs are really time consuming and make you bang your head against a wall. However, I'd say that the labs are very interesting and unique, because they immerse you well. Midterm and final is not too bad if you study, and there are plenty of extra credit options. Also TAKE THIS COURSE WITH BRANDEN IF YOU CAN.",
                    "66": "love love love ghena his class structure is super organized and super supportive. i really enjoyed the class even tho some labs were tedious to complete, they were fun",
                    "67": "Hard class but great prof! 4 Labs 50%, 4 HWs 20%, 2 Midterms 30%, but you need an average of 65% or higher on the exams in order to pass.",
                    "68": "My favorite actual class this quarter! Ghena is great at explaining complex topics, I learned a lot, and the projects, while hard, taught me a lot outside of lecture material<br><br>Make sure you start on projects early (the week they are assigned) and go to office hours when you get confused on what you're supposed to do<br><br>The exams are very studyable (just take the practice ones) and the projects are honestly fun if you get started early",
                    "69": "Branden is probably my favorite CS professor here at Northwestern. His lectures are super engaging &amp; easy to understand visually + he records and uploads everything. That being said, I currently have like an A/A– in the class, but I'm worried I might fail this class and have to retake it. There's a rule where you need to get &gt;= 65% exam average, and if you got &lt;65% on the first exam and &gt;85% you're fine. Otherwise, you automatically fail despite what your actual grade might be. I have to admit, I am a pretty bad test taker and didn't feel confident, and I think it's a bit unfair that exams play such a huge role in this class. Branden gives you a lot of practice exams though, so I'd recommend doing lots of practice &amp; going to OHs.",
                    "70": "Great class. Take it with Ghena if you can. Lectures recorded. Attendance not mandatory. Labs are done in partners. HWs are challenging and midterm and final are very hard. So study hard!",
                    "71": "This is a great course. A bit too low level for me as I dont plan on building any computer systems/languages, but the instruction,  homeworks, labs and exams are all made in a way that makes you learn a lot. I wish there a bit less of a focus on simple mechanics like bit conversions and addressing/memory etc. and more focus on conceptual concepts but for what the goals of the class are, you learn as much as you do in any class. Ghena is a great lecturer and it is totally doable to get an A if you put in the work",
                    "72": "Brandon is a legend – very good lecturer and very nice guy. You can't really go wrong with him – TA were also very helpful",
                    "73": "Overall, I would say that the material for the course is mostly good: the lectures are informative, the exams and homework are fine, and Prof. Ghena is a nice instructor who is very supportive. My issue is mostly due to the labs, which make up half of your grade. I struggled a lot with them and really only them, and the instructions for them tend to be long and contain a lot of fluff. It'd be nice if the instructions were streamlined and contained a little more guidance.",
                    "74": "Take this course with Ghena if you can. The explains concepts super dearly and I never had a problem finding him in office hours.",
                    "75": "First half of class was really easy – almost like a cakewalk, but the second half of the class was much harder and requried a lot more engagement. The labs aren't bad, but they take a while to get an understanding of.",
                    "76": "The course was definitely challenging, but it taught me a lot. However, the last lab was a little vague in its instructions and I struggled a lot with progressing through that lab.",
                    "77": "Required course but pretty interesting in my opinion. Strikes a good balance between explaining subtleties and details while not losing sight of bigger motivation for teaching these concepts. Labs can be hard, but if you have the right partner, they're not too bad. I'd say that you don't necessarily need to understand every single technicality of labs to do well in the course; if you can get the bigger ideas and somewhat grasp how to implement them, you'll be fine.",
                    "78": "Not terrible but the labs can be hard.",
                    "79": "Ghena the goat",
                    "80": "Note: Your understanding of class material is based heavily on how well you do on the two final exams. Your grades on the assignments are really useless outside of bookkeeping, so do well on them I guess, but the exam is the priority",
                    "81": "This course is a combination of math and programming, and studying for exams is similar to how you would study for non–CS courses. It's definitely a new way of thinking about computers and coding, especially if you've never really looked into how computers work. Prof. Ghena is an EXCELLENT lecturer, and the way he has the course structured is super helpful. The labs can be difficult, but office hours is a great resource, and the exams are fairly tested.",
                    "82": "This class is hard at first but it gets better and lowkey you start to have fun....! Ghena is one of the best teaching profs I've had in the CS department. Labs are time consuming but not terrible. You just need to try hard especially for the tests and GO TO CLASS. If I could do it as a senior with severe senioritis, you can too.",
                    "83": "good teacher that was able to teach us the content really well",
                    "84": "A good intro to systems that covers a wide–range of basic content. The labs felt somewhat monotonous at times, but largely consisted of enjoyable challenges that engaged you to think critically about the content and the topic. Ghena was an extremely knowledgeable lecturer and while his class at times feels hard to follow do to the speed, he does an overall great job given the breadth of content we have to cover in one quarter.",
                    "85": "This course is hard. Plain and simple. Read the notes before class so you can have an idea of what the hell is going on in class then go to class so the material can sink in. I tried skipping class because the material was dense and I reasoned that I could pause the lecture to figure things out... didn't work out very well. Having the option to get your questions answered in real time is unmatched. Good luck",
                    "86": "As an intro, the course did a great job introducing the concepts. However, it does feel like we were not learning anything. You won't remember the labs after doing them and they are not very helpful for your career if you are not doing system.",
                    "87": "I think a lot of the high–level content and discussions are interesting, but a lot of the technical details can definitely be confusing. Branden does a good job of clarifying concepts in class, so don't be afraid to ask questions. Overall a class you have to take, and gives good overall knowledge.",
                    "88": "why do i need to know assembly man",
                    "89": "Brendan makes this class as engaging as it can be, and this grading is perfect in my opinion. It's not an easy class by any means, but if you can finish the assignments and do alright on the midterms you will do well.",
                    "90": "Brandon is a great professor and lecturer so I enjoyed this class overall. Although some of the content is quite challenging, I do think that the  course is manageable if you have enough time available to study for it. The labs are interesting and are more enjoyable to work on with a project partner.",
                    "91": "Labs take a long time, especially bomb lab",
                    "92": "Must study for exams, special minimum exam grade requirement policy insta–fails you if you do too poorly."
                },
                "school_demographics": {
                    "Weinberg": 83,
                    "McCormick": 59,
                    "Medill": 1,
                    "Comm": 4,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 5,
                    "Sophomores": 93,
                    "Juniors": 42,
                    "Seniors": 7
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 3.76,
                    "student_count": 84
                },
                "student_opinions": {
                    "0": "If you take the class with Prof Nikos, just make sure you actually do read the reading s before class. That's the only way you'll be able to keep up. Then asking questions in class helps in understanding the concepts.",
                    "1": "The content is interesting, the homework challenges you and helps you learn, the labs are cool, and the midterms are more than fair. This is an amazing class. Nikos is an outstanding lecturer, but you could also just read the textbook instead (though this takes more time since Nikos explains way better than the book). In my opinion, you don't have to do the readings AND come to lecture—you can pick one. But you do have to double down on what you pick. If you aren't completely engaged in lecture, you will get confused. If you skim the readings, you will get confused. On a separate note, people were upset that Nikos instituted a rule where you must have an average of a PASSING grade (64%) on the midterms, but it's really not that hard to pass them. On our first midterm, he gave everyone 22 points for free. Meaning all you needed was a 42 raw score. I also have to stress that the exam was not very hard, and it was open notes and open book, with tons of partial credit. Most of the questions were fill in the blank or multiple choice, and you got partial credit even if your answer was wrong but was similar to the right answer. If you do the homework thoroughly and don't cheat on the labs, you're more than prepared for the exams. The assignments are also fun. They're difficult, though, and take a decent amount of time. <br><br>My only issue with this class (and with any CS class that does this) is that every assignment is done in pairs. Why? I could not imagine a worse way to organize CS learning. For some people, it might be great, but to have it as a requirement for everyone? If you want every student to understand everything, then every student should do all of the work. Having a partner means you only have to do half of the work. In an ideal world, you'd be working through everything together. In practice, this just doesn't happen for most people. I found it difficult to start assignments early and stay on top of everything because, in the back of my mind, I felt like I had a safety net of another person who could take the lead this week, and then I could just take the lead next week. It shouldn't be like that. But for a lot of people, that's exactly what ends up happening. If you want people to collaborate, great news, they already do. For the majority of people, having joint submissions does not encourage collaboration. In fact, it discourages collaboration. People think, \"I don't have to bother to learn this because I don't even have to be the one who submits it. I'll just get the next one.\" Stop requiring partners.",
                    "2": "The is is the worst class I've taken at Northwestern. The class setup with Prof. Nikos is significantly different from other professors, which is unfair. Prof. Nikos doesn't post his lecture recordings, doesn't allow for late assignments, and fails to provide practice exams. The midterm policy adds unnecessary stress and pressure throughout the quarter, as the majority of your grade depends on your midterm performance.<br><br>This class had significantly fewer office hours compared to when other professors taught it. The professor only offers office hours by appointment, which is inconvenient and limits opportunities to ask questions. I found a PM, Andrew Li, to be quite rude and condescending, making me feel bad when seeking help.<br><br>Piazza responses from Prof. Nikos were often very slow, and he frequently posted homework and lab assignments late. The exams were particularly difficult to prepare for, as there were no study materials or practice exams provided. The grading in this class has been excessively slow; as of writing this, we have yet to receive our final exam grades, despite taking the exam over a week ago.",
                    "3": "This class is pretty hard but if you put in the work and try to care about the topics, you will be rewarded. Systems knowledge is useful and really what separates good CS students vs great ones. You can clearly see Nikos wants his students to succeed. Not impossible by any means if you try your best, go to class, and read the book. Labs can be challenging but always manageable if you dont procrastinate.",
                    "4": "You've seen the other CTECs. They're pretty on point. I'll say that Prof. Hardavellas is actually a pretty interesting lecturer to listen to, but the content is so dense that it can be hard to follow along nonetheless. He will answer any question you have though, so make full use of that. Also, he's decently mindful of class performance (gave us bonus points on the first midterm that raised the class average from a 50–something to a 70–something) and will be gracious with random mistakes. <br><br>There were not enough PM office hours. Be prepared for that. And don't forget to submit the fourth lab to Gradescope.",
                    "5": "Not as bad as everyone says it is. The worst part is having to get at least a 66 average on the midterms or you automatically fail, because the exams count for much less than the labs and homeworks so you basically get an F or an A–/A. Exams were all open book open note, any amount of paper you wanted to bring it you could. First midterm was definitely easier than the second, but both were still hard and had extra points to bring grades up. Labs definitely took some time but they were manageabble and office hours are helpful.",
                    "6": "Nikos seems like a really good guy (he curved the first midterm by alot) and he definitely cares about people learning, but I don't think he is necessarily for me. I self–learned most of this class by watching CMU lectures (most of the slides are taken from them) and looking at Stanford lecture slides (they're better than the ones we use). I really liked the homework assignments because they helped me learn the content, but some of the labs were just straight up painful and felt unfair.<br><br>Pack Lab – Pretty easy and chill lab, it was really easy to transfer what we learned in class to the lab.<br>Bomb Lab – Really, really, really painful. We learned the content in this lab during lecture, but going from the lecture to the lab felt like going from 0 to 100. In short, this one is really hard.<br>Attack Lab – Not that bad, it was pretty easy to transfer what we learned in class to the lab.<br>SETI Lab – We learned the concept behind parallel programming, but almost no time on how to actually code it. Literally looked at the lab and had no idea how to do it.",
                    "7": "Do not take this class with Hardavellas. He makes the content way more tricky than it should be. He is not a good lecturer. Not engaging and does not explain well. His w man’s are designed to trick you, and since he has the “you have to pass the midterms to pass the class policy” I’m pretty sure I failed the class because of his impossible exams. He is unresponsive when trying to schedule office hours and the PMs often do not know what is going on. Horrible experience. It’s sad because I understood the content and felt I learned so much by doing the labs and self studying, but it’s so frustrating that the exams don’t show that.",
                    "8": "I now understand why the ctecs say don't take it with Nikos. He is extremely knowledgeable, but he does not convey information in a very interesting way. That being said, I'm actually pretty glad I took it with Nikos. CS213 is a class that I feel like I have learned through studying the slides, doing the hws and labs, and going to office hours. I think that it's because I'm taking it with Nikos that I have a better understanding of everything. His midterms really really really test your understanding (and a bit more –– they're so hard).",
                    "9": "Despite the difficulty of this class, it was very enjoyable. Homeworks were fine, labs were hard but you could get them done. Nikos is a fantastic lecturer and a genuinely nice and funny guy who just wants his students to learn, there may be  a lot of noise about the difficulty of this course, but I absolutely feel that it made me a better CS student!",
                    "10": "Course was pretty excellent I mess with Nikos, he's a great lecturer who answers questions in a way that benefits the whole class. He is clearly passionate and extremeley knowledgable regarding the course material. He's also an entertaining lecturer who'll throw in some humor every once in a while.",
                    "11": "The course was very challenging, and there was a lot of information that you needed to absorb. The homeworks, labs, and tests were also very challenging, but getting a good grade seems decently easy if you complete all assignments.",
                    "12": "If you're looking at this CTEC, it's probably because you're comparing the professors who teach this course to see which one you should take it with. It is true that Nikos's class is more difficult than other iterations, but you will also learn more. Also, when I say \"more difficult\", I don't mean that it isn't doable to get an A. It's actually the opposite – Nikos does everything he can to boost our grades, including giving us all an automatic 22 (22!!) extra credit points on a 100 point exam. <br><br>As far as his lecture style goes, I have no complaints. If you go to class and actually listen to what he is saying, his slides are very effective. If you are looking at the slides at home for the first time after skipping lecture, I could see them being a little confusing. <br><br>The class itself is conceptually hard, but not as much of a beast as some made it out to be. The labs are actually very enjoyable, especially Attack Lab. Overall, less work than 211 and better labs.",
                    "13": "retook the class because i didnt make the exam average policy last time<br>Nikos's hw and exams are more difficult but a generous curve is given",
                    "14": "Nikos is a pretty good lecturer and answers questions well – but you have to go to lecture and actually read the textbook like he says to. He's up front about the fact that his class and tests are going to be hard and he's being very serious when he says that. His tests are BRUTAL and much harder than the tests from other quarters which is tough because of the 64% test average minimum (which is a requirement for any professor teaching this class). I don't dislike Nikos as a professor for the most part, other than the fact that I think he makes his tests unreasonably difficult, and feel like I learned a lot in this class. However,  you will have a much easier time with a different professor.",
                    "15": "Pretty hard, but do the work. I didn't read the textbook, lectures should be okay but just review the homeworks and lectures a lot. Tests are extremely hard, maybe reading the textbook would have helped.",
                    "16": "The professor was very good and knew his stuff. Just go to class and complete the labs and you'll do fine. The exams are difficult but the grading is lenient.",
                    "17": "Difficult course but doable if you put the work in. Nikos is a very good teacher who is incredibly knowledgeable.",
                    "18": "This is a partner–based course where your homework and lab submissions count for both of you. Make sure you know somebody in the class that you can rely on. My teammate was not the best and I was the one who ended up submitting everything myself. It would have been nice to have someone double–check my stuff. Either way got some more practice but it meant having to spend 10+ hours on hw and lab.<br><br>The exam average for both midterms has to be above 65%. There is a generous curve so you should be fine if you know what you are doing. However, no practice exams are kinda bogus because some people had an unfair advantage of having access to past quarters' exams while others did not.",
                    "19": "Intensive course that introduces students to basics of computer system. Great for those who want to learn more about basic computer operations.",
                    "20": "Need to pay a LOT of attention in lectures, unless just very good at CS and everything comes easy. I was an average student, so I really had to pay attention",
                    "21": "If possible, do not take this class with Nikos. The homeworks and tests are absurdly harder and are incomparable to the lectures that we zoom through in class",
                    "22": "This is a very difficult class. Nikos is not a bad instructor and teaches the content well but the exams are extremely difficult, more so than other quarters.",
                    "23": "Nikos is very knowledgable, but not very good at lecturing. CS 213 covers a wide variety of content related to system and hardware. Be prepared for tons of hard work, but it's worth it.",
                    "24": "I've been saving this one for last my dudes. Okay. What to say about this class. CS 213 is...interesting to say the least. So here's the overview. Nikos Hardavellas. Worst instructor I have ever had at this university. BUT. That does not mean I didn't learn anything at all from this class. The content is very very very interesting. Nikos simply rips off his lecture slides from Carnegie Mellon and uses those. So you're honestly better off not going to class and rather just watching those lecture videos online instead.  I learned so much from this class, but not from Nikos personally. It's because most of it was self taught or learned.  It's fun, but now I never want to go into systems or security because of this.<br><br>What makes matters worse is that Nikos's tests are SIGNIFICANTLY HARDER than Branden Ghena's tests. To simply pass or get above a 64 on Nikos tests, you needed to have PEAK FUNDAMENTAL KNOWLEDGE. This was just to pass. There was so much reading and Nikos tests were so long.  For the first midterm, the  . Everyone says the second midterm is easier but I only think this is true because of virtual memory and simply your own knowledge now of how the tests work and the class structure (which is that there is no good structure). <br><br>Camp office hours. It's the only way you'll survive the HWs. Start the labs early. Bomb Lab is horrid. Attack Lab requires a good amount of Stack knowledge. SETI Lab was a joke. Pack lab was sort of fun.<br><br>My biggest recommendation? USE THE STANFORD SLIDES.  CS 107 at Stanford. It'll get you through the basic concepts of CS 213, but I don't think it hits some of the later topics like caches and Virtual memory. Here's the link. You're welcome. These slides saved my life. <br>Link: https://web.stanford.edu/class/cs107/<br><br>Conclusion: If you want a good professor who will walk you through everything, Nikos is not your man. I don't know how the other professors are, but I do know that Ghena's tests are easier and more lab based. Nikos tests are really HW based. However, it is not impossible to succeed in Nikos' class. You just have to put 110% effort in self learning. Put the time into this class and you'll succeed.",
                    "25": "Least favorite class I have ever taken at this school. Labs are terribly hard and took up a lot of time. Homeworks were not as bad. Make sure you have a good partner to work with. Try to take it without Hardvellas as your professor, just a very uninteresting lecturer",
                    "26": "Very very challenging. Should have listened to the previous CTECS that said not to take this class spring quarter with this teacher. It's required that you get a 64% average on both exams in the course or else you fail the entire class. Much easier said than done.",
                    "27": "Super useful in learning about low–level",
                    "28": "I think this  course is useful and important. It was the first CS class I've taken without thinking in terms of human code, and more thinking about how the machine works, which is just generally useful for designing programs that are very optimized. That said, the workload of this class combined with other courses means you will have to invest a lot of time into this class if you want to do well.",
                    "29": "tough class midterm 2 was brutal",
                    "30": "The labs were actually very fun, and I enjoyed doing them. The homeworks were more boring, but they are essential for learning the material.",
                    "31": "Lord have mercy on whoever takes this class.",
                    "32": "Hard Hard Hard. Go to lectures, and Do the readings. Do Not procrastinate everything before the midterm/finals, or else it will be a hard time for you.",
                    "33": "The course was advertised as an introduction to computer systems, but it predominantly focused on assembly language. This was unexpected, as I anticipated a broader overview of computer systems. I feel that I might have benefited more from taking a dedicated assembly language class first and then tackling COMP_SCI 213 in a subsequent quarter.",
                    "34": "I'll start by saying you will learn more with Nikos but you will be tested more and it will be harder to get a good grade. Take that how you will. I thought this was a very good way to introduce students to computer systems and assembly and it was my favorite core CS requirement. Nikos has challenging exams and has a policy where you fail the class if the average of the two exams &lt; 64. This makes the exam weeks pretty stressful, but thankfully the exams are not really cumulative. There's plenty of bonus points on the labs and the homework isn't impossible. An A is feasible, but you definitely do have to work for it.",
                    "35": "Really hard class. Avoid taking with this prof if you can. Exams and homeworks are impossible to do.",
                    "36": "I think this course is doable if you put the work in! Just go to office hours or post on Piazza. The second half of the course got much harder, so if you're struggling a lot in the first half, just be aware it does get worse in the second half.",
                    "37": "The main thing I did not like about this class is that the lectures and slides are an exact copy from Carnegie Mellon University. I would appreciate it more if Professor Hardavellas' lecture slides were original. The lab assignments are also unoriginal, but I enjoyed doing the lab assignments. <br><br>I felt as though the first exam was not so reflective upon the material we learned. I think the second exam was much more reflective about what we learned. <br><br>One thing I really appreciated about Professor Hardavellas is that he was very welcoming of questions, sometimes running short on time and not finishing the lecture because he took time to answer everyone's questions. Since it's a large lecture room, he often paused and asked people if they have any questions which I appreciated. <br><br>One thing in particular that I did not really like about the class is the way groups work. I like how you are able to get in groups of two to discuss HW answers and lab solutions. But there's only one submission per group. The reason why I don't like this is because the professor emphasized to NOT divide and conquer. For this reason, if members come across a conflict in their solutions, they will have to compromise. Since you are recommended to not divide and conquer, I think all groups should have the option to submit their own assignment independently of the other group member.",
                    "38": "This felt like one of those classes where the point was to make the question as complicated as possible, when in all actuality it could have been written in 10 fewer sentences.",
                    "39": "This class was much harder with Nikos than with Branden. If you're looking for an easy A with more relaxed exams and homework, definitely take it with Branden. The homework assignments were pretty challenging, and while the labs were the same for both professors, the exams (both midterm and final) were tough. As someone with little interest in low–level programming and needing this class for a CS minor, I definitely wished I had taken it with Branden.",
                    "40": "i feel that people overstate how hard the class is. yes the concepts are confusing at first but ultimately if you sit down with it and watch some lectures you'll be fine. i did most of the labs and hws the night before and everything is good on the grading front. go to OH and use online resources",
                    "41": "This is the WORST class I’ve ever taken at Northwestern. The professor didn’t teach how to solve pset problems in lectures, and his slides are unclear. Students have to get an average of 64 in the two exams in order to PASS this class, and this policy is very unreasonable because the average of midterm 1 was around 55 (he curved to low 70s.) He said he imposes this policy because it’s unfair for someone who did well in homework but bad in exams to get a B, but this is the problem of his grading rubric. He could have increased the weight of the exam scores in the total grade instead of just failing his students. It’s even more unfair that all students get B+ or higher as long as reaching the 64 threshold while others just fail.",
                    "42": "Please please please do not take this with Nikos unless you are ready for a challenge and to devote many many hours per week to this class. The material is already hard and he makes it harder (compared to Ghena) by making you go more in depth for every subject. Certain parts of the homework were indecipherable until I went to OH which by the way are absolutely required to pass this course (you have to go at least once a week). Also be prepared to prepare for the midterm and final without any review sheet or practice exams or problems. The tests are very hard and you need an average of 65% between them to pass. The labs are hard. He posted the last homework one week late and made it due one day earlier than on the syllabus. Also, part of the homework had content that he wouldn't cover until the day it was due. This is the kind of stuff you will be dealing with. Just take it with Ghena.",
                    "43": "I genuinely loved this class and it helped me realize that I want to do low–level systems programming. I think if you have a lot of programming experience this class isn't horrible, but if you are new then it will probably be tough. People say this teacher is hard, but I felt that he was very generous with extra credit and exam grading.",
                    "44": "Instruction of this course during lecture was okay but didn't stimulate interest in the subject. Nikos exams were difficult with minimal resources provided to prepare for them.  Office hours were also unhelpful and they expected you to know everything already."
                },
                "school_demographics": {
                    "Weinberg": 21,
                    "McCormick": 58,
                    "Medill": 2,
                    "Comm": 2,
                    "SESP": 2,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 36,
                    "Sophomores": 30,
                    "Juniors": 15,
                    "Seniors": 3
                }
            }
        },
        "COMP_SCI 214-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.75,
                    "student_count": 106
                },
                "student_opinions": {
                    "0": "For the most part, the 5 homeworks and the final project is the most important. Manageable if you stay ahead. Modifiers can be a killer if not careful.",
                    "1": "I really enjoyed CS 214's course contents––especially as someone who likes organizing things (lol) it was fun to think about the most efficient ways to sort data. Although at first it was a bit of a challenge, in class we only learned about the concepts, and we were expected to figure out/implement the coding aspect ourselves. I'd say the only challenging part is the grading system––if you're doing really well but make a tiny misstep, you could end up with an A–/B instead of an A, which is pretty frustrating. The PMs are, as usual, super helpful and approachable.",
                    "2": "As an IEMS major, I was initially afraid to take this class coming with only a CS 150 background, but I’m so glad I took it! I learned very useful concepts. I think the class was challenging at the right level. <br>I also really appreciated that the professor records lectures because that gives us more flexibility to watch the lecture later if we need to. If you go to office hours and dedicate to the HWs and the final project, you should be fine.",
                    "3": "If your doing CS, you're going to have to take it. Vincent is super awesome, I 100% encourage anybody needing to take this class to take it with him.",
                    "4": "it was very challenging for people that are not proficient in coding already",
                    "5": "Very important course for a CS student. Funny grading system which honestly isn't better than a regular grading system. Course gets harder as it goes and the final exam was quite hard.",
                    "6": "If this course is elective for you, it may be good to take other similar courses.<br>The overall scoring system is different from the normal scoring system in Northwest, which brings a lot of freedom. But at the same time, this system is very unfamiliar and not very friendly to students.<br>The grading of the exams was loose on two occasions, but this did not alleviate the psychological pressure. Because the limited questions will not test every knowledge point, in many cases only a small part will be tested – and this small part, which accounts for a large part of the test score, may only take up 10 minutes in the lecture. This makes the focus of review become very important. It is possible to review 80–90% of the content, but miss the key points of scoring because of reviewing too quickly.<br>Another noteworthy aspect is that the self–evaluation grading of this course is very rigorous. Although the meaning is similar, points will be deducted if the required code is marked differently or if there are several lines that are not included in the number of marked lines.<br>All in all, this course was a challenging journey, but the results were okay because of the liberal grading system.",
                    "7": "In my opinion, this class is pretty doable, but I hated this class. As someone who was going through it physically and mentally, this class absolutely wrecked me. I still don't understand the grading system, and I personally think it's so stupid. Vincent always says that the base grade &amp; plus, neutral, minus modifier grading system is to help US, the students, but I (+ a lot of other students) disagree. I would very much prefer this class to be structured in a normal way – with just a points/percentage system so I can know what my actual grade is AT ANY GIVEN TIME. Instead, I have to wait until I finish all my HWs, see how I did on the projects, self–evals, etc. I just don't get it. The only good thing about this class is that Vincent is a somewhat good lecturer, and the TAs are great, but that's about it.",
                    "8": "No because the whole time you are completely focused on your grades rather than actually learning because of how he decided to structure the class.  And we saw that this was true because of the score on our second midterm when most people clearly prioritized coding their project rather than learning the material. He tries to make it seem like the way he grades (with positive and negative modifiers for certain things that change your base grade), is better for us but it's not.  You mess up one thing and suddenly you can't meet the criteria for a positive modifier. You mess up two more times and your grade goes down from an A– to a B. Not to mention the highest base grade you can get is only an A–. And the class is so focused on the project that even if you do all the homeworks correctly and mess up a test on the project your base grade goes from an A– to a B, whereas someone who messed up the homework and also got the same score as you on the project would also get a B. And additionally the grading for the assignments  isn't based on how many tests you pass but how many test suites you pass.  So messing up one singular test out of 20 for example, causes your grade to SUFFER. Yes there are positive modifiers that can negate things but there are only three at most that i can say that everyone can definitely get.",
                    "9": "– This is an easy course if you keep up with the lecture material<br>– Homework was very doable, with flexible deadlines<br>– Prof. St–Amour is a great lecturer and his slides are super comprehensive.",
                    "10": "It was fine.",
                    "11": "I think that the class difficulty is very fair throughout and DSSL2 is quite easy to pick up especially for those who are familiar with Python. I think the grading system, while Prof. St. Amour does have good rationale behind it, doesn't necessarily facilitate the learning I think it intends to, although it does promote meticulousness. I'd probably advise future students to be familiar with the grading structure.",
                    "12": "Good class. Vincent is very passionate about the material and you definitely learn a lot. Tests require you to really understand the concepts. PMs are super helpful in office hours with the homeworks. Start project early or you’ll regret it",
                    "13": "Vincent is a great teacher, and the way the class is structured allows for a lot of learning. If you have prior knowledge on how data structures work and basic coding knowledge, you can get by.",
                    "14": "The prof was amazing, really made an effort to engage with the class more than any CS professor I've ever had. Help is always available in this class if you are willing to ask for it. Class content, while difficult, was incredibly reasonable if you kept up with lectures.",
                    "15": "Overall this class was not too bad, the homeworks were much easier than CS 211 and I learned a lot from them. Office hours are always super helpful and the professor was also really kind and helpful.",
                    "16": "I liked this course.",
                    "17": "This was probably my favorite CS class I've taken so far at Northwestern. Projects aren't necessarily easy (the last couple were kind of tough), but they don't feel like wasted busy work; every part feels intentional. The course as a whole is truly set up for you to learn through the homeworks and final project, which I really appreciated. Office hours are your best friend!",
                    "18": "I really enjoyed this class. Vincent is a great instructor, with engaging slides, funny jokes, and pure enthusiasm for what he is teaching. The grading system is a little weird at first, but you'll end up appreciating it by the end of the quarter. The class itself isn't too demanding, with 5 homework assignments and one final project. You also get two submissions for each assignment, which allows you to not only learn from your mistakes, but also save your grade. Overall, a great class that enhances your understanding of abstract data structures. Take this with Vincent if possible.",
                    "19": "Great class, enthusiastic instructor, helpful TAs. Grading is weird and it makes getting a good grade on the final project super important, so do all the submissions for the final project with working code (you get three submissions)!",
                    "20": "I felt like this course helped me prepare decently well for interviews and understanding algorithms/time complexity on a deeper level. I felt like the grading system was flexible and fair and encouraged me to learn the content deeply, both the midterms were fair (although the second one was definitely tougher), and the class was very manageable as a whole. Definitely enjoyed my time taking this class a lot!",
                    "21": "Good class and good organization. I wish the class wasn't taught in DSSL2 however, just found myself having to relearn a lot of syntax when actually Leetcoding (the reason why I took the class). But the topics are very useful for conceptually understanding Leetcode.",
                    "22": "Good class where you learn a lot, homeworks aren't that bad, go to class and you will be fine. grading is different in this class so read syllabus",
                    "23": "I found this class to be difficult because the lectures were very different from what we actually have to do for our weekly assignments. Professor St Amour is amazing at explaining the concepts and the logic but there is little to no instructions on the coding implementation. The first couple of homework assignments were not bad but it gets worse towards the end, especially the final project where you have to start things from scratch. I appreciated the PMs but whenever I went to office hours there would be 2 TAs to 20–30 students and the office hours slots were not sufficient. I felt like office hours were not as useful since I would be sitting there for hours to just be helped a couple times. Even though the general consensus is that CS 211 is harder than this class but I would say otherwise just because of the way this class is structured. Grading wise it is not as bad but just know that you have to dedicate A LOT of time for this class, so I would not recommend taking this class with 4 other classes (overloading does not work!!!!!!)",
                    "24": "Easiest of cs 200s by a long shot. The knowledge in this course is essential, so make sure to thoroughly learn and pay attention even if you can easily glide through with a good grade. Assignments are pretty simple, project takes a bit more time. Make sure to study up for the first midterm to make the project and final less stressful.",
                    "25": "Really useful/relevant class. Must take if you have any interest in CS. Not overly difficult but super interesting. Grading structure is weird and I both love and hate it. Prof St. Amour is a great lecturer and very well spoken",
                    "26": "Very useful course. I think the expectations of what to learn is very straightforward and you don’t spend too long working on the assignments.",
                    "27": "Vincent is a great professor and wants to help you succeed. There was one time where I was talking with my friend in lecture, after which he sent me a reprimanding email. I thought it was quite funny but I completely respected it. The final is much harder than the midterm, don't get lulled into a false sense of security like I did.",
                    "28": "This course is okay. It is definitely time consuming so make sure to take that into account. But, it teaches very important topics within computer science and I feel as though I have improved as a computer scientist in this class. Each week, there is one homework assignment due. You get one resubmission for each homework so don't worry too much if you mess something up. Each assignment is accompanied by a self–evaluation that makes sure you are testing your code adequately. Moreover, you get 3 two–day extensions to any assignment including the final project. I recommend saving these till the later assignments which are harder. There are also two midterms. The assignments are time consuming but do–able, just make sure to get help when needed. The first midterm was reasonable so as long as you study and go to lecture, you should be fine. The grading for the course is a little odd, so I would suggest making sure you understand it as soon as possible. My biggest piece of advice is to start early on the assignments and make sure you don't fall behind. The last assignment is a final project that takes a VERY long time, and impacts your grade a lot, so ensure that you have enough time to complete it. Overall, the course is time consuming and difficult, but not impossible to get a good grade in if you put in effort.",
                    "29": "While you certainly do learn a lot in this course, the practical application of the material seems rushed and incomplete. Essentially only half the course is applied in coding–based homework projects outside of lecture – something extremely disappointing from a core sequence data structures class for the Computer Science major. It's almost like the material from the last half of the course is just skipped over and never interacted with in a software–development setting. It's just mildly gone over in lecture, and then you are tested on the material on a paper–exam after having received no practical experience with the concepts (not to mention it blows my mind that paper–exams are used as a factor in your grade for this course – that's not how you adequately calculate a student's understanding of computer science concepts). That brings me to the grading structure – unbelievably poor. Grades are determined through a base–grade / modifier structure that depends upon performance across a wide range of course assignments. This structure completely fails to reward students that have consistently put in hard work and effort throughout the entire quarter, but fall short in some small aspect of one project or another (and thus receive an entire letter grade deduction as a result). This did not happen to me. However, I know many other students who received grades that in no way reflected their understanding of the course material or effort put into the course, even after receiving 100s on all homework labs, etc. And while grades certainly do not matter in the grand scheme of things (in terms of actually learning, etc), that's an unfortunate illusion when it comes to the real world. Jobs and internship opportunities use a grade basis as a somewhat standardized method of determining talent recruitment, and receiving a deduction to your GPA because of a poorly–designed course can impact your access to certain opportunities in varying degrees. It's a stark disappointment this course is given in this way. I hope there are improvements in the future, seeing as this course is vital to the foundation of any computer science student.",
                    "30": "CS 214 is a great class. You learn about Data Structures &amp; Algorithms, which is critical as a Computer Science major, and greatly beneficial in preparing for internship interviews, and eventually new grad/full–time position interviews. Professor St–Amour is a wonderful teacher, who is knowledgeable, friendly,  interested in the topics he is teaching, and most importantly wants to see his students do well and achieve great results. Office Hours are run professionally, with all the TAs and PMs being well–versed and able to provide guidance. Class is paced well, allowing you to learn new concepts consistently without overwhelming you. Overall, CS 214 is in my opinion the best and most well–run CS 2XX class at Northwestern.",
                    "31": "Professor St–Amour is one of my favorite professors here at NU. He is extremely passionate about his class and wants you to succeed. While initially, the grading scale made me confused, the first homework makes you very fluent in it. He knows every student's name and remembers when you answer in class. And so, he is very easily approachable with any questions or what not. Absolutely recommend taking this class with him.",
                    "32": "214 is a very okay course. I think Vincent is an okay lecturer. Important in the grand scheme of CS.",
                    "33": "This was a great course! St–Amour is a great professor, and the class is designed in a way to help students really learn. I saw myself get more confident in my coding skills throughout the quarter, and the office hours were really helpful too. I took this course after 211, so I had a better experience overall with this class. Coding just started clicking in my mind for me! Kind of a similar vibe to 111, I guess as we used Racket too.",
                    "34": "Vincent is a great lecturer! The grading system is kind of confusing but it's also super fair and reasonable. The content is interesting, and super super useful!!!",
                    "35": "The syllabus was very confusing but the first homework helped to clarify that part by a large extent. I liked the repeated trying system because second chances were good for improvement and learning. I also enjoyed learning about code ethics, implications, and alternative considerations. This feels holistic and not exclusive emphasis on the  technical part.",
                    "36": "I really enjoyed this course. I found the lectures engaging, the visualizations very helpful, the assignments bth very reasonable and excellent practice for developing skills and understanding. I also really appreciated that the grading system ensured that I didn't worry about superficial matters and instead was able to actually focus on learning and internalizing the material. Overall, I found the course very interesting and learned a lot in a low stress environment.",
                    "37": "Vincent is a good lecturer, the TAs were very helpful during office hours.",
                    "38": "214 is easy if you know how to program. It's also probably the most useful class you've ever take if you want to do software engineering",
                    "39": "I think Vincent did an amazing job of teaching of data structures and algorithms. He is a great teacher and I highly recommend taking him.",
                    "40": "The course is decent however, Prof. Vincent is unusually strict about small things and gives absolutely no leeway which while is understandable to keep stuff fair for all students but at times it just feels too much like talking to a wall if you've made even a small error which can mess up your grade. Overall it's a decent class, I'd take it with another instructor though if I were to do it again.",
                    "41": "Time commitment fairly low, fine to take while overloading/taking three hard courses. Grading system strange but overall fair. \"A\" easily obtainable if you are diligent with weekly homeworks and final project, finish the two worksheets, and do not mess up on the exams/self–evaluations.",
                    "42": "For someone who's not a CS major, I found this to be a pretty good course. There were 5 homework assignments, 2 worksheets, 2 midterm exams, and a final project. The homeworks were sometimes challenging, but office hours and piazza were very helpful. Vincent's lectures were long but very informative. This is a really important topic, and I enjoyed taking this course.",
                    "43": "The homeworks were really helpful in making you learn. Wish there were more practice problems dealing with the theory of the course. Exam questions kind of came out of no where in the sense that there is only one practice exam .",
                    "44": "This was a great class. The material is interesting and relevant for industry, the slides are extremely helpful, the grading system is fair, and it is easy to succeed as long as you put the work in. Furthermore, professor St–Amour is clearly passionate about the material and does a good job of creating a class environment that promotes asking questions.",
                    "45": "Make sure you keep your eyes GLUED to the syllabus. Grading is super strict and it's not very lenient if you make stupid mistakes (e.g. typos, submit stuff in the wrong places, etc.) for some reason the second midterm was also super hard in this class. Just manage your time, leverage your late tokens, and go to class if you can. I learned much better when i went to the class in person as opposed to watching lecture.",
                    "46": "difficult ish class! dssl2 isnt that bad if you know python but some of the concepts gets finicky<br>prof is great",
                    "47": "It was a good class and I learned a lot, but the thing I found most frustrating was the grading system. they basically make it seem like it is relatively easy to get an A in the class,, but that is not the truth. You could have an A going into the final project and final and then your grade drops three full letter grades.",
                    "48": "It was a good course that taught me a lot, although the grading system was a little weird (no utilization of actual percentages, etc.)",
                    "49": "I found this class difficult and I strongly disliked the grading system, but the expectations for this are very clearly laid out at the beginning of class, and nothing comes as a surprise which is nice. The theory side of class is interesting, and most of the homework assignments were not too bad but still felt useful and relevant.",
                    "50": "Vincent is a nice professor. I don't like the grading system for this class at all. Oftentimes, I felt like I struggled a lot with this class, and the only place I could get help was during office hours, which was a struggle timing–wise.",
                    "51": "Vincent's a good teacher, although I felt like he goes pretty fast in lecture, but his slides explain things clearly. The grading system is unique –– the homework assignments and final project make up your base grade, while other assessments (exams, worksheets) are modifiers –– the points you earn push you up or down a partial letter grade from your base grade. The assignments and project were challenging, but definitely doable. Office hours helped a lot, so definitely go to those if you need any sort of help.",
                    "52": "If you’re a “great student”, possessing lots of intellectual enthusiasm and excessive time to learn this stuff and come to class and be excited, then you’ll enjoy 214 with st amour. Otherwise, the lectures are boring and don’t help much with the homework, but they’re necessary because the second midterm especially is quite hard (almost all conceptual and not related to the coding assignments in the second half of the class).  St. Amour is very into pedagogy and that’s probably great for 20% of the class but for the rest of the class that is just expecting a big lecture hall, doing the assignments and studying a decent amount to pass the midterms, he comes across the wrong way.",
                    "53": "This is one of the most practical CS classes I've taken. Very straightforward. In lecture, he teaches you about some data structure. You're given a homework assignment to implement the data structure, no real busy work or anything like that. My only gripe with the class comes from Vincent's unique grading system. It's very weird. You're given a base grade based on the homework assignments and the final project, max of A–, and then a bunch of modifiers that bump your grade up by a + from self evaluations, worksheets, exam scores, and little writeups from the final project. To get a base grade of A–, you need to get 100% on every homework assignment and the final project. I missed one test on one of the homeworks, which means my grade dropped immediately to a B, which feels a little silly. On the flipside, I scored a 12/20 on the first exam  and a 9/20 on the second exam, and my grade only went down by a –. Very forgiving but also very punishing, overall I'm not a fan. But not enough to detract from the class entirely, still a good class, I recommend taking it with Vincent.",
                    "54": "vincent is a great professor and his lectures are very extensive and insightful. always go to office hours when working on assignments. I thought the assignments were mostly manageable but its super super important to also stay on top of lectures. i feel like the assignments are emphasized for a lot of the class and then the actual exam content (which isn't really relevant in the assignments) kind of sneaks up on you. the grading system was confusing at first but it really helps a lot. i wish this class provided more practice for the lecture content that isn't programming assignments. that would've really helped me polish my understanding of the topics as a whole, but also to prepare me for the exams.  overall, take this class with vincent and as much effort that you put into assignments, you should probably put into actually reviewing the lecture content to compensate for the lack of practice or application outside of  the two worksheets and exams.",
                    "55": "This course really focuses on actual learning – Vincent is a great professor, and a couple people I know took this class a year ago and didn't like him that much, but everyone who took it this quarter that I've talked to loves the guy. He's a wonderful lecturer, really focuses on making sure you understand the content during class, and he took the time to respond thoughtfully to many of my emails. The homework in this class can be tough, but you will definitely learn a lot, and you have a lot of time to get it done. Also the grading system is confusing, but the first assignment is basically coding it, so you'll understand it eventually.",
                    "56": "This course is not too hard. It is based on a base grade and modifier system so if you just do the homeworks and final project and score well–enough on the two exams, you can get an A",
                    "57": "This is definitely one of the more useful CS classes at Northwestern. Getting through it will definitely teach you the basics of data structures and algorithms. It is not without its flaws though. There is definitely a LOT of content, like way too much. I think some of the content that Vincent squeezed in at the end (like SQL, AVL trees, Quick Union) should be left to CS 336. The amount of content made it very difficult to study for the midterm. Thankfully, they aren't that big of a portion of your grade. I think the class also suffers from being confused between coding and theory and I felt like it was difficult to keep up with both aspects at once in one class. I also strongly dislike Vincent's modifier based grading system, as unless you do everything right you will not get an A. This (and other 200 level CS classes) at times felt less like a class (where the purpose is to teach effectively) and more like a weed–out mechanism for CS majors. Vincent's teaching style is extremely boring and he loves to like point at a graph for an hour while demonstrating how an algorithm runs. While it's fine to do this, I think he needs to begin with an 'in words' explanation of what the algorithms do instead of jumping into an example. I also feel like because so much of it was theoretical (you don't actually use the data structures until the final project, the homeworks are about building them from scratch) it is not really as useful as I hoped for coding interviews (Leetcode). Hopefully CS 336 is.",
                    "58": "I think this class was honestly really good for me as someone who still felt very much like a new coder. Aside from the content, I feel much more confident in my coding ability after this class from tackling these projects and being challenged to problem solve and create tests. I think the final project was also really good for combining all of the work of the past quarter and implementing it, and while it was tough, I actually really enjoyed working on it and not feeling like I had no idea what I was doing.",
                    "59": "This is an overall very good class and the professor is great. If you go to lectures he'll get to know you by name and is clearly passionate about the topic. The 80 minute lectures can make it hard to stay focused the whole time but it's overall a good class.",
                    "60": "This course covered a lot of what I had expected in a good way.",
                    "61": "I honestly really liked this course – the content in this course is super important for computer science and tech in general and a lot of the material taught is stuff you will need if you want to go into software at some point. Although the grading system definitely needs some work and can be kind of harsh, I really appreciated the emphasis this class put on the homeworks (which you could resubmit), with abundant office hours so you had plenty of resources/time to work out the code. The midterms were pretty hard but I also liked that earning a 60% on a midterm would not affect your grade in the class. Overall, I would say this class is definitely one of my favorite CS classes I've taken so far.",
                    "62": "vincent's a g, 214 is just a fine course but that's just me. exams beat me up",
                    "63": "This course is very manageable and the content is not too challenging. <br>While the lectures tend to drag, they are very thorough and informative, and they often provide pseudocode needed for the homework assignments. As long as you attend class and put effort into the homeworks/final project, you will do fine.",
                    "64": "I absolutely loved everything about this course. It is perfect. From the grading system (I am sure others will explain) to the homeworks. My only complaint is that there aren't a couple more homeworks (maybe for modifiers?) to help learn the content from the latter lectures. I felt because of the homeworks I had a better grasp of the exam content."
                },
                "school_demographics": {
                    "Weinberg": 55,
                    "McCormick": 46,
                    "Medill": 1,
                    "Comm": 2,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 70,
                    "Juniors": 23,
                    "Seniors": 8
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.48,
                    "student_count": 130
                },
                "student_opinions": {
                    "0": "As someone who already has prior knowledge of abstract data structure, I found myself more perplexed than ever in the course because the instructor makes it more complicated and confusing than it actually is.",
                    "1": "Yes, the grading system is weird. But her heart is in the right place, and it makes it easier to get a good grade so i don’t complain. More importantly, she’s just a good teacher who clearly explained concepts, and nagged me as a student, and communicated class information effectively in general. I did not expect to like this subject and yet I found myself enjoying it.",
                    "2": "This class was fine. Projects are straightforward but exam were hard.",
                    "3": "This course was really good, really engaging lectures and well–guided projects that reinforce the content.",
                    "4": "Loved the class! The lectures weren't intense and were pretty clear. Homeworks were just implementations of the ADTs discussed in lectures, and the fact that we had extra tries for these homeworks made them much more enjoyable. It's a chill, yet informative class!",
                    "5": "It wasn't super challenging as I could complete assignments relatively quickly.",
                    "6": "I really liked Sruti for this course! At times instruction can be a bit unclear, but she clearly really wants to help and help us understand material. She frequently asks for questions in the middle of class and is relatively engaging. Make sure you start assignments early for this class and carefully plan out when you will complete and submit things. Since most assignments are back to back with some leniency from late tokens, definitely try to stay on top of things or it's easy to be overwhelmed. and DEFINITELY come to class. You will learn a lot in 10 weeks and it's really easy to get lost since most of the material in the last 2/3 of this class build on top of the first data structures you learn. Take office hours seriously if you need them, and make sure you sign up early for the queue. This class is manageable and is very lenient with grading (the base grade and modifiers is a bit weird at first, but it really will help you in the end, especially if you're bad with exams), but definitely keep deadlines in mind and save late tokens for when you REALLY need them.",
                    "7": "It was fine for a computer science core. Lectures were boring but you have to go for attendance.",
                    "8": "I enjoyed this course! There were weekly coding projects and two midterms. The final project is pretty big, so I recommend starting it early!",
                    "9": "This is a very good class. The content, to me, was very interesting and the professor did a very good job at teaching it. I felt like I have genuinely learned a lot in this class.",
                    "10": "Important foundational class, but concepts are not too difficult. There is a unique grading system employed that is meant to \"encourage learning\" rather than make the class about grades, but I feel like the grading system only made me stress more about the grades, even for trivial assignments. Course not too challenging, information is important, grading is annoying",
                    "11": "N/A",
                    "12": "The class is pretty easy in my opinion, as while it has an unorthodox grading system, it is pretty easy to get a good grade if you grasps the concepts and do well on the projects and homework. Professor Sruti kind of just teaches off of the slides and it does get pretty tedious at times, but she does explain the topics well.",
                    "13": "This class is a good introduction to learning about the different kinds of data structures that you'll need to know if you decide to continue pursuing computer science for things like interviews and such. Overall I enjoyed the class but I did feel like lectures were fairly boring and then I did most of the learning through the actual assignments. The weekly projects were definitely the most time consuming and I think the grading structure can be a bit confusing especially when you don't know your final grade until you finish the very last project. Sruti was really understanding and I would definitely recommend going to office hours if you need help.",
                    "14": "Modifier structure of class and lots of opportunities for resubmission made this class easy to do well in if you put in the work.",
                    "15": "Prof. Sruti did a great job of teaching this course. I think I and others had a better experience than my friends who took it with other professors. Attendance is mandatory, but the projects are not difficult if you come to class, so it's a good trade–off.",
                    "16": "The concepts were very useful, forming a foundation for any structures and algorithm questions during interviews and the professional world.",
                    "17": "Class is definitely useful and basically the foundation for everything else in CS. If you are recruiting for SWE internships this is also a must–take class. Material is hard to wrap your head around but the grading system is very fair and makes it easy to get a good grade even if you fumble sometime during the quarter.",
                    "18": "If you already have decent DSA knowledge, this course is definitely one of the easiest A's in the CS curriculum. That being said, I do appreciate the way it was graded because it felt more conducive to learning, for example giving second tries on the homework assignments. I was skeptical about it being taught in a language specifically designed for the course but I think it was ultimately a good decision.",
                    "19": "Homework assignments were immensely constructive in learning the main concepts. The grading system is unconventional but sensible.",
                    "20": "In my opinion, this course is not well constructed at all, which is a real shame because DSA is supposed to be one of the most important classes a college student takes. The specifications grading system is unnecessarily punitive of small mistakes. Example: I had a friend who failed one test case through all 5 homeworks and got a \"base grade\" of a C+. Really unfair. The lectures aren't organized well –– it seems like 90% of them is building up to the main idea, and by the time the 10% that is important comes around, it's already time to go and the concept is completely glossed over. I feel like I learned more about data structures by taking 211.",
                    "21": "Going to PM's office hours really helped with the homework assignments, which are time–consuming but doable. I recommend only taking this class if you know you can dedicate a significant amount of time to it. The final project was also extremely long, so make sure to start it the week it's released.",
                    "22": "This was a decent class. In my opinion, the pace of content is quite slow and lectures can drag sometimes, but I suppose this class got the job done in introducing the concepts of data structures and algorithms. In terms of grading, the modifier system makes it extremely doable to end with an A as long as you stay on top of your work for the class and are meticulous on the homeworks",
                    "23": "I really liked the grading system with this class. While it's quite strange, I think it offers a lot of flexibility for students and gives them the opportunity to make mistakes and learn from them without being penalized for their grades. The content for this class is quite difficult, I struggled a lot with coding since it was in dssl2, but it gave me a lot of useful tools for the future. I loved taking this class with Prof. Sruti; she is great lecturer and is so easy to follow, which made this class a lot easier to manage.",
                    "24": "It was an ok class, and attending in person is incentivized. The grading system is a little funny too.",
                    "25": "This class is great with Prof Sruti. She has a very lenient grading system that allows a second resubmission for most assignments. The homeworks are very manageable if you keep up with lectures and the exams have an extremely low impact on the final grade. The final project is open ended in terms of implementation but she provides enough structure to not be starting from scratch. Overall this class is pretty decent compared to some of the other CS required courses.",
                    "26": "TAKE THIS CLASS W SRUTI NOT VINCENT –– prof sruti is great at explaining topics and although the in class activities could kind of feel like a pain in the ass for forcing you to come to class, i did feel like they really helped a lot in my understanding of the course material. the slides are also much easier to study with and there was slightly less material covered on the second midterm than with vincent's exams",
                    "27": "I think that the course content itself is very interesting, and the slideshows are detailed and easy to understand. That being said, there are a lot of unnecessary stressors. For example, a single mistake on a homework could completely screw up your grade. The details on the assignments can be difficult to understand and the in class exercises are graded on engagement but there is never a clear definition on exactly what engagement means. There are self evaluations which are pretty much impossible to score well on unless you spend far more time on testing your code than writing it. The lessons themselves are comprehensive but fail to show how we would actually implement whatever we are learning with code. There is also little instruction on how to code in DSSL2, and you are just thrown into the new language with very minimal guidance and references.",
                    "28": "This course is a lot of work. I spent many, many, many, many hours in office hours and was constantly struggling. Sruti does not do a great job explaining ideas in lectures and often spends over half the class talking about an ineffective approach that she doesn't want us to use, only to spend roughly 20 minutes telling us what she actually wants us to use. The homeworks are not very intuitive and I got confused a lot trying to figure out what I was actually supposed to do. This class is a huge time commitment.",
                    "29": "probably the easiest course out of the cs 200s. the hws are chill and i appreciated the chances to resubmit.",
                    "30": "I liked this class, and I liked Prof. Sruti. I just hated the grading scheme. I worked so hard to get perfect scores on all the homework, but since I got this course's equivalent of a 4/5 on the Final Project, my base grade is a B instead of an A–. Her exams are super hard and I messed up on two of the self–evaluations (which are literally so annoying, if your code is perfectly functional and relatively efficient you can still mess up on them lol), so the highest possible grade I can get in this class is an A–.<br>I also think this course helps people who do worse, rather than people who start at a good level. There are tons of bonus modifiers for improvement, but none for just consistently doing well. This is really annoying, as people who slack off during most of the course will be rewarded for improving to a level you have been at the entire course.<br>But other than that, if you go to at least 1–3 office hours for each homework and every single office hours for the project, you will end with a good grade. So this course will suck up all your time. The project is pretty hard, so get started the day you get it. If you go to office hours, the TAs are super nice and will help you through everything. I don't know how anyone would pass this class without going to office hours. So, don't take this class if you have a really busy quarter.<br>Lectures were fine and you will need to attend all of them for her in–class exercises. There are office hours every single week day, so you'll always have options for help. Prof. Sruti is also willing to help you at other times if you can't make any office hours. She is really nice and a good teacher. She moves fast in lecture, but I think that's because there is just a ton of content to cover. Also has a very nice late policy.<br>The exams are super hard but set up in a way such that is you get at least a 55%, it cannot negatively impact your grade. Be warned, however; plenty of people do not even get a 55%. <br>Overall good course, great professor. But it'll suck up a ton of time, especially with the project, which is assigned a week before finals/reading week. So it'll really pile up. <br>**ALSO: If you are planning to take this course, save AT LEAST 3 late tokens for the project. Obviously you don't know what those are right now, but just keep this in mind. It will save your life.**",
                    "31": "Fun class that gets you working with lots of different data structures and understanding algorithms along with it. Grading scale is very lax and you have lots of opportunities to keep a good grade from homeworks.",
                    "32": "This course is pretty important for anyone interested in CS. The content is applicable in the future and really recommend taking it. The grading is weird though and calculated using a base grade (which is determined on your homework scores and final project score), and positive or negative modifiers (based on worksheets, in class assignments, self evals, and midterm grades). You basically had to attend every class in order to do the in class assignments and earn the +1 modifier, so while the Prof says the grading system means you can be sick once in a while its not really true for that. Homeworks aren't so bad, and you get two chances on them. You get three tries for the Project but it takes a lot of time so definitely recommend starting early and going to office hours. Piazza is super helpful and the TA's and Prof are very on top of answering questions. The exam modifier basically lets you get an 11/20 without impacting your grade, so if you put in the time and effort for the homeworks, you should be able to get an A. The Prof was helpful but not my favorite.",
                    "33": "i went to nearly every office hours session every week to get homework done because i suck at programming. grading system with modifiers and base grades can be controversial but fair. 4 no questions asked extensions given throughout the quarter which i appreciated a ton. if you aren't very experienced at programming be prepared to go to office hours (in person, online OH sucks) a ton. professor and pms definitely did their jobs well though, this class was just very difficult for me.",
                    "34": "I thought the grading structure of this class was interesting. Basically, you get a base grade depending on how many homework assignments you pass all of the tests on and get modifiers (usually –1 to +1) to move your grade up or down however many partial letter grades. While it was made to be less stressful, I found it to be a little frustrating when not passing one test on one homework assignment would immediately drop your base grade from an A– to a B. The difference between having a base grade of A– to a B is quite a big difference (you have to get all 5 homeworks perfect for an A– and only 3 perfect for a B). Having the exams as modifiers did make them less stressful which was nice, as you could get up to 9/20 points wrong and have it not affect your grade. Aside from grades, I found the lectures to not be the most engaging. Each lecture's slides consist of 40–60 slides which take up the entire hour and 20 minutes, and compared to CS 211 which I took concurrently, I found it much harder to focus and absorb content during class. Otherwise, the course was ok and I did enjoy learning about different data structures and algorithms.",
                    "35": "This course was very manageable and relatively straightforward, and while the grading system was somewhat hard to understand at first, it didn't end up being too jarring a shift.",
                    "36": "Sruti was an amazing instructor, she was very easy to understand and her office hours were always helpful, she was also very understanding. The class itself was very nice, the grading system is very nice as well and helps take the stress off of exams, as long as you pay attention in class and do the assignments you should be fine. Overall very enjoyable class.",
                    "37": "The evaluation polices are complicated. It gives second chance for each homework, which is a great way to notice the mistakes I made and correct them",
                    "38": "This class was good. The homeworks were a little difficult because the lecture content focused on how to store data and not so much on actual coding. Other than that, the workload was manageable, with weekly homeworks, 2 exams, and a final project. You get two submissions for each homework, which is nice because it allows you to fully understand each assignment and do them all completely correctly.",
                    "39": "I really disliked the grading scheme and wish we dropped modifiers/base grades all together and just had regular percentages like every other class. I understand the reasoning behind this approach but it was frustrating to navigate and honestly didn't make the class any less stressful in my opinion. It was just such a hastle to navigate compared to my other classes which all used regular grading systems.",
                    "40": "Best class I've taken at Northwestern so far. Prof. Bhagavatula is a great lecturer and I like how the lectures are structured to have us approach the different ADTs/algorithms from a variety of perspectives, first taking a naive approach, looking at issues, and then working our way to actually good designs. While the grading structure is a little odd, it really does make sure that learning is at the core of the class, which I think made it a lot less stressful and a lot more fun.",
                    "41": "This class is now essentially mandetory attendance, which is very unfortunate because it would be a lot better to watch the videos on 2x speed instead. Classes are very very long because the lectures are very boring. Professor really tries to make it interesting but the class material itself is just boring, so not really her fault. The class grading system is very weird, where you get a base grade based off of the 5 hws and final project. There are 2 midterms but you get modifiers which allows you to get a bad grade but not ruin your grade. If you finish the hws and final project, you should get an A.",
                    "42": "Decent class—but it can be really boring and repetitive. The content itself is interesting but it's almost impossible to stay engaged. Professor Bhagavatula explained the concepts alright but just kept giving the slowest, most obvious examples—like for 30min+. She also explained things incorrectly a few times? Add on to that that class attendance is required, and you're left with a class that you have to go to, not one you want to go to. On the topic of class attendance, the grading scheme was just bizarre. It's unnecessarily complicated and—in my opinion—could land you with a bad grade even if you understand everything or a good grade even if you understand nothing. Turning in assignments and attending class felt like a battle with the grading system rather than a learning experience. I know Professor Bhagavatula has this system in place to encourage learning instead of trying to get a grade, but I think the effect is the exact opposite. The first homework assignment is to code up the grading system (it's that complicated), which really sets the scene for you constantly calculating your grade. That said, I think her intentions are definitely in the right place, and the act of doing the homework itself was enjoyable and taught me a lot.",
                    "43": "Class is too fast to actually learn anything (quarter system's fault). Additionally, the grading system in this class is one of the most ridiculous things I've ever seen.  Essentially, if you don't do everything exactly perfectly then your grade will tank, even if you demonstrate that you comprehend the concepts. Granted there is decent opportunity to do everything correctly, but the idea that a trivial error in a single line of code can drop you three letter grades is silly.",
                    "44": "If you can, take this course with prof. Sruti B. She always has engaging lectures prepared for class, with interesting homework’s and a final project that implement the data structures taught in class.<br>This class is very easy to get a 4.0 in because of her unique grading system, and the generous late policy. Each student has 2 attempts for each weekly hw, with the second one due a week ahead. Additional, students have 4 late tokens, worth 2 days each.",
                    "45": "The professor goes pretty fast but knows her stuff. The homeworks aren't too bad if you start early and utilize your extra attempt. The tests can be a bit tricky, but not over the top.",
                    "46": "Pretty challenging course but content is important. Stay on top of self evals and in class for modifiers especially if you struggle with taking tests",
                    "47": "Professor Sruti explains things very well. Though I'm not a fan of the grading policies.",
                    "48": "Racket is dumb but you already knew this. Should've just taught Python if DSSL2 is so similar anyways. Initial homeworks were pretty easy but gets much worse over time. Start the project early!!! the first weekend she puts the assignment up! Exams are not bad but the grading scheme allows for flexibility. However, getting \"got its\" on all the homeworks was a little tough since they don't give you test cases, but you can resubmit once.",
                    "49": "Generally, you will not get help in this class unless you beg for it. Starting early on projects/ assignments are important because of the awful grading system you need those to be the most important part. Take this class if necessary.",
                    "50": "I think a decent amount of experience is necessary for this course",
                    "51": "I found this class to be difficult. It is still possible to do well though, because of the Professor's unique grading system that does not put that much emphasis on the exams. A lot of the concepts you learn are abstract and are confusing to figure out how to actually code so homeworks definitely took a lot of time when getting started. The professor is a good instructor, and I did enjoy this course and did well, but found it difficult.",
                    "52": "The class helped me learn a lot about data structures except I will never understand why we learn it in Racket. I am #1 Racket hater. It was kinda hard to learn the syntax of the language especially since theres not many resources online, but as you complete the homework, you learn to understand how to code in racket. Aside from that, data structures is really important in comp sci, so this class was really beneficial. The grading system is weird but it's an easy class to do well in.",
                    "53": "I know it's easy to brush off, but truly start the homework assignments as early a possible to allow yourself the greatest amount of time to work on it. Office hours are super helpful and the PMs are great and helping you understand how to debug your code so it makes sense to you. The grading system allows you to make mistakes without super worrying about your grade numerically. The biggest thing I can advise is to ASK QUESTIONS if something doesn't make sense!!!",
                    "54": "Class was interesting for sure, I felt like we went pretty fast through many important concepts.",
                    "55": "The lectures are very long and just getting talked to. You have to attend because there are in class exercises, but they are pretty easy and low stress. The two tests really don't matter much for your grade because of how weird the grading system is. Overall, a really easy class that does not take that much effort to get an A in.",
                    "56": "I really enjoyed this course. I thought it was challenging and fun, and that it had a really fair grading system.",
                    "57": "Homeworks aren't bad. The grading system does make exams a little less stressful, but I would appreciate if there was a little more leeway on the attendance policy––it's kind of difficult to get a positive modifier. Exams are doable, and an A isn't hard to get as long as you do the work.",
                    "58": "This is a really great course and Professor Bhagavatula is a really great lecturer. She is very knowledgable about the subject she teaches.",
                    "59": "Okay. So going into this class, I heard from every upperclassman that 214 is much better than 211. Here are my actual thoughts. 214 is very content–heavy and is actually decently hard, which makes sense because this is a historically hard class across Computer Science. However, my main issues with the class lay in the grading. The class does not go by percentages or any numerical statistics. They go by modifiers and changes in letter grades. It won't make sense now, but I promise it'll make sense later once you see the syllabus. Her grading is so hard to understand, but basically what you need to know is that you won't truly know your trajectory or grade in the class until the very very very end when you submit the project, because you can be doing well all quarter only to not do well on the project. Just know, you are not guaranteed your grade or an A at all and can go from an A to an F in minutes. <br><br>However, I will say compared to 211 that this class takes maybe a couple of hours a week to finish the coding homework. My advice. Go to office hours the minute you feel like you are stuck. A big part of the class is making sure you understand the concepts fully and correctly. Also, DSSL2 is a very wacky language even though it is somewhat similar to Python. <br><br>But I liked 211 much more even though it is a lot of work. I didn't like the way 214 was taught because I found it hard to understand the concepts taught in class.",
                    "60": "This course is very useful if you want to pursue a career in CS in the future. I think this should be one of the first computer science courses you take (before 211 and 213), and is also not as difficult. The teacher teaches very clearly but sometimes a bit slow.",
                    "61": "Ngl this course was an in between for me. Not quite sure how I feel about the grading scheme yet and definitely didn’t appreciate our final being on the first day of reading period lol (WCAS here). I see what they were trying to go for but the whole modifiers thing and qualitative grading was just not it for me. The CS majors yearn for percentages!",
                    "62": "This class can be kind of difficult at times but ultimately really worth it! If you're even looking at this, I assume you're doing cs or data science. Most of the course is learning a handful of main data structures and applying them in different contexts. The grading is very unique, you get points for your performances on homework, exams, etc, and those points lead to a final grade. The system's weight is very homework and final project–heavy, so (if you play your cards right), exams won't really hurt your grade.",
                    "63": "I took a data structures and algorithms class in high school, but even with that background, I learned a lot from this course, mostly about optimizing algorithmic complexity. Overall, the concepts taught in this course were not very difficult, but the work was still quite time–consuming due to how the assignments were designed. The course follows an unconventional grading system with a lot of intricacies; essentially, the philosophy behind it is that you should only get credit for assignments you submit that are completely correct. I would say about two–thirds of the time I spent working on assignments was clarifying what I was being asked to implement, reading through Piazza posts, and attending office hours to ensure my work was completely correct before submitting. The actual nitty–gritty coding and applying concepts learned in class constituted only about a third of my time spent on this course’s work.<br>Professor Sruti was clearly passionate about the subject and this course’s teaching philosophy, so she was always responsive to student questions during lectures and over Piazza. With her and so many PMs, there was definitely more than enough staff support for students to succeed. However, I would strongly advise starting early on assignments, particularly in the second half of the quarter and with the project.",
                    "64": "Pretty easy course if you are interested in CS. There are weekly homework assignments and two midterms. You get resubmissions on the homework without penalty, so it isn’t hard to get a good grade if you try. The grading is a bit different because there are modifiers, but it benefits us more.",
                    "65": "This class is very easy despite its arcane grading system. Sruti is a good professor and spends a lot of time on ethics, but the amount of information you're responsible for is very low.",
                    "66": "Overall, I liked this course. The grading system is a little weird but it's not that difficult to do well if you just go to class and use piazza when you need it to clarify information.  Prof. Sruti is enthusiastic and kind. The class covered a lot of material I was already curious about and I feel like I learned a lot.",
                    "67": "This is a solid course on data structures and algorithms and Professor Bhagavatula is a very effective lecturer. The grading system is quite unorthodox and a bit strict–seeming at first glance BUT it's actually very helpful and provides a lot of chances for extra credit or gaining back lost points. Overall this is a solid course that I would highly recommend, and it's easy to do well if you put in the effort (although be warned that taking it concurrently with 211 requires a lot of time management since the weekly deadlines are similar).",
                    "68": "This class is an easy A if you do the homeworks and the project well and earn a base grade of A– (which is in trivial because PMs staffing office hours have every incentive to give answers away, as that boosts their ratings up for the next PM recruitment round). The complex grading system you have heard lore of works in *your* favor. Worksheets give you a free modifier that bumps the base A– up to an A. If you get even a 50% on both exams after that, you'll get 0 modifiers on both and pass the class with an overall grade of A.<br><br>Bhagavatula is a decent teacher. Another note: you can speedrun her lectures at 2x speed and do fine. So, I recommend showing up to as few lectures as you can without taking on a negative modifier. For me, that meant going to just slightly over 50% of the lectures.<br><br>It is a ridiculous pain to code in DSSL2, though, which is the language custom–written for this course by some Northwestern professors. DSSL2 has unhelpful error messages and hard–to–parse documentation. What's more, the DrRacket IDE is awful: it lacks an IntelliSense, can't collapse functions or blocks of code, does janky indentation, and it's not possible to select a line of code in it with the ctrl+shift+up or ctrl+shift_left key combinations or the double mouse click (a shortcut whose usefulness becomes clear only once it's taken away). The CS faculty should adopt a standard language like Java, C or C++ for their algos course like the rest of the civilized world, or majorly overhaul DSSL2.",
                    "69": "The content in this course was very interesting (and definitely super helpful for CS). Prof. Sruti was a great lecturer. The homeworks and project were honestly all fairly easy so you don't really have to worry about that and the exams were also quite straightforward (not too hard to get a perfect score on both). I do wish the lectures moved a little quicker. Also, one word of advice is to actually go to class because you don't want to get a negative modifier for the in–class exercises, but overall a fairly easy A.",
                    "70": "I definitely learned a lot in this class but the grading policy made it challenging sometimes to feel like all the work I put in was rewarded.",
                    "71": "greedy as well as introducing new algorithms that I didn't know before",
                    "72": "This course forms the foundation of the computer science classes ahead. It is crucial in terms of helping you in problem solving",
                    "73": "The way this course was graded made sure that you understood the learning rather than the grade the use of modifiers and making sure that you were doing the projects and Homeworks were a great way to make sure that you understood the topics and further applications of it that you may need in the future.",
                    "74": "I think this course helped me learn about data systems and algorithms. While Sruti's grading system can be confusing at first, I actually really like the room it leaves for mistakes on exams. The grade is mainly dependent on how you perform on weekly homework assignments, and you also have the opportunity to re–submit every assignment once if you don't pass all the tests on the first try.  Also, other systems like late tokens and the fact that all classes are recorded are helpful. The content isn't too hard if you pay attention or watch back on the recordings, and sruti has a lot of good systems in place. I would say all expectations for the course are very clear so there's not much confusion.",
                    "75": "This class was very hard. First exam was bad because we only got 1 past paper and it did not reflect our exam 1 at all. The homeworks were very time consuming. Even if you listened in the lecture, you wouldn't be able to work on your homework by yourself. You're also not allowed to discuss with friends on how to do it. The class has a unique grading system that allows you to mess up in the exam without tanking your whole grade down. But I feel like the homeworks and exam should reflect more on the lectures. At this point, the lectures and homeworks do not overlap at all and you basically have to self–study.",
                    "76": "Professor Sruti is an amazing professor. She allows two submissions for full credit for each weekly homework assignment, and three submissions for the final project. She is an excellent professor who explains topics very clearly. She has in–class exercises which get graded. The exercises are typically easy, but they are sometimes high pressure and intense. I strongly recommend making a friend in that class to talk to for the exercises. I feel like at the beginning of the quarter she did not give much time to write a response, but later in the quarter she would ask if anyone is still working before closing the google form for the exercise. Although I do think the class is difficult, it is not out of reach to get an A as long as you understand the lectures and concepts and put in the work.",
                    "77": "Relatively fair grading system. However, since a lot of weight is put on assignments, the base grade can drop from A– to B pretty easily. There are definitely opportunities to redeem mistakes, which is good.",
                    "78": "I did learn a lot about data structures in this class. Two things is that the homework took a while, and the grading is confusing.",
                    "79": "This teacher is nice at the end of the day, there is a generous amount of late tokens, but I felt that she took way too long presenting very simple topics. Also the programming language you use, DSSL2, is horrible."
                },
                "school_demographics": {
                    "Weinberg": 60,
                    "McCormick": 58,
                    "Medill": 2,
                    "Comm": 3,
                    "SESP": 2,
                    "Bienen": 3
                },
                "class_demographics": {
                    "Freshmen": 64,
                    "Sophomores": 44,
                    "Juniors": 16,
                    "Seniors": 2
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.25,
                    "student_count": 140
                },
                "student_opinions": {
                    "0": "u gotta take it anyway lowkey if ur lookinng that ctecs",
                    "1": "Vincent is the GOAT",
                    "2": "solid content and homeworks. Grading scale is unnecessarily complicated but not that hard to get an A. Vincent is not a good lecturer",
                    "3": "Professor St–Amour is great. Very likable, smart, and made the class fun and interesting.",
                    "4": "The course material is super helpful if you are a CS major and very important. However, the structure of the class and the theoretical content of the lecture do not prepare you for the homeworks or the final project. Be prepared to discover implementation on your own.",
                    "5": "Cool. Grading system is weird, but the first homework assignment helps you get ahold of it. It can be punishing but it is 100000x easier to  recover your grade in this class than normal, and if you make genuine efforts to learn in the class you're almost guaranteed an A. Definitely not an easy A, but surely a worthwhile one.",
                    "6": "This course was definitely more challenging than 111 and 150, but it is a nice breather before taking 211.",
                    "7": "CS 214 was good, I liked the content we were learning. Most of the grade is based on assignments, not tests.",
                    "8": "This class does it's job: you learn about data structures and algorithms. (That being said, there's no reason at all to take this if you don't need it for your major, I'd recommend classes like 211 with Hummel  if you just want to learn more about CS.) Attendance for lectures is mandatory, and he's very strict about people not talking even in large lecture. Participation is expected, and he gets frustrated when the class is \"sleepy.\" While assignments are not hard, I was always stressed in this class because of its infernal grading system.  If you haven't seen, the profs for this class invented their own grading scale with a base grade and \"modifiers\" such that each assignment counts for a ridiculous amount of your grade,  and you have to do perfect  on every assignment (or earn a lot of modifiers, which isn't easy) if you're looking for an A. Make sure to take time to understand the grading scale and explore the DSSL2 Language at the beginning of the class, because both are sure to be brand new and unnecessarily confusing for you.",
                    "9": "It was interesting but the grading system did not work for me.",
                    "10": "Vincent is really a great lecturer and the material is really cool and fun to learn. The assignments are pretty hard and more conceptual so I struggled but some thought it was easier of a CS class. Write really good test cases and read instruction pdfs fully as there are little things that clue you into where points will be given and taken off. Very important class but plan your work accordingly",
                    "11": "I did not like the structure of the class or the instruction",
                    "12": "This course is frustrating.  It should not be difficult, and yet, it is made difficult. There are self–evaluations from which people are meant to judge their progress and their ability to just predict what they're going to be graded off of. They present this class as a low–stakes class, but the reality is that it is still extremely frustrating to feel like it's impossible to reach upper echelons of evaluation.",
                    "13": "I enjoyed this class. The material covered in class is pretty important to learn. It is easy to do well on assignments if you go to lecture. Prof St Amour does a great job teaching.",
                    "14": "Great",
                    "15": "I feel like the class was very lenient in giving you a second chance on homeworks. This was a life–saver more times than once. However, I just wish that the grading system was a bit more clear and not confusing as it took a while to understand.",
                    "16": "This is a very good class and I learned a lot from it. As long as you make sure your base grade stays at an A–, it is very easy to get an A in this class with the modifier system.",
                    "17": "Professor St Amour is very cool. He is a nice person to talk to and doesn't put up with the kids who don't stop talking during lecture.",
                    "18": "Learning data structures is important, but trying to remain focused during the lectures was very difficult because it was nonstop fast speaking.",
                    "19": "Prof. Vincent is a great prof. He is also good at teaching and explaining the materials. Homeworks were fair, Midterms were hard, and the Project was long, so start early. Prof. Vincent is also a great communicator, so if you do poorly on something or whatever, you will see him reaching out to you and checking in to make sure you are fine. Also, the course gives you many opportunities so that if you do badly on one aspect of the course, you will not lose your chance of getting a good grade. Highly recommend this course.",
                    "20": "You learn a lot but the classes are so boring so get ready to have to learn everything yourself. Also the exams have nothing to do with any homeworks or projects, its all based on the powerpoints.",
                    "21": "Good course, no shortcuts you just have to struggle and learn",
                    "22": "Decent class with easy grading but the professor is kind of terrible.",
                    "23": "Extremely useful course, Vincent is extremely passionate in teaching and ensuring that students get the most out of the class. While the grading can seem confusing at first, the course establishes a mentality prioritizing learning over one time grades.",
                    "24": "The class is boring and using DSSL2/Racket is ridiculous.<br>My best advice for incoming students would be not to take this class and improve your proficiency in different ways unless you are a CS major.<br>From the deepest place of my heart, I do not believe Prof St–Amour is a student–friendly professor.  Unfortunately, he is not open to discussions.",
                    "25": "Definitely a useful class, provides foundation for a lot of different data structures and important CS topics. Assignments get harder as they go along. Grading is pretty weird but forgiving to doing badly on the midterms.",
                    "26": "This course is essential for anyone aspiring to have a career in computer science.  This class hones in on the fundamentals of data structures+algorithms that are used in practice, and how they work.",
                    "27": "Coming into this class, I had some programming experience of over 3 years with mainly Javascript. I would say I did not know anything even though if you asked to to write a loop or a program to do a simple task I would. Different data structures covered in this class made me realize all the mistakes I have been making in my past works. It is a very interesting class if you like working with computers. I learned a lot, and I liked how even though I had programming experience, I always came to class to learn something new that needs me to listen then use the skills I already had to implement something efficient",
                    "28": "The professor is an exceptional communicator who doesn't tolerate any nonsense. Make sure to do your homework for the modifier. The midterms are challenging, so take your time to study thoroughly. Take this class if you have the time to dedicate to it. It's excellent for honing your coding skills, as you'll write numerous test cases and become proficient at it. Attend his office hours if you're struggling; he’s very patient and will help you review the material. This class was extremely challenging for me, but I can't deny that I gained a lot from it, regardless of how bad my final grades are  gonna turn out~",
                    "29": "Overall, this course isn’t bad at all and is not a huge time commitment. It will be a bit of work but office hours are useful and the content is not difficult to understand.",
                    "30": "Its not too hard and teaches good concepts.",
                    "31": "Strat for an A<br><br>Tryhard on every homework and the final project so you pass all tests. This gives you a base grade of an A–. Either way tryharding on these homeworks gives you the best knowledge you can take from this class. I could jump straight into doing leetcode easy and mediums no problem. <br><br>Then get 100% on both worksheets which is pretty easy as you have multiple tries. This gives you a +1 modifier. for an A.<br><br>Get 12/20 on both exams giving you neutral modifiers. Get 3 3/5s for the self evals so you don't have to do the final 2. <br><br>Get 2 goods on the final project doc and you don't have to do the third.",
                    "32": "What was most important to me was the way the class it was taught.",
                    "33": "You better love DrRacket",
                    "34": "Do not put off the assignments",
                    "35": ":excited_face_emoji",
                    "36": "The course is very important to understanding algorithms, and the way the course progressed in terms of data structures was very engaging and beginner–friendly. The lectures themselves were kind of boring in my opinion and way too long, but I understand that most students need time to process the amount of information coming at them. Homeworks were reasonable and helped enforce concepts, teacher is good",
                    "37": "good class<br>modifier system is really weird but it can help you if you messed one part of it up rly badly",
                    "38": "Good class, Professor Amour teaches it well. The grading system is kind of strange but fair.",
                    "39": "You learn useful ADTs and the assignments don't take that much time. I wish we did a little more in this class since all the other 200–level CS classes (211, 212, and 213) were more challenging and felt more satisfying to complete. Overall, CS 214 isn't a bad class and Vincent makes it really easy.",
                    "40": "Good class and I thought Vincent was great. The lectures cover a wide range of data structures and advanced data structures which you practice using in the assignments and final project. I appreciated the grading system that didn't penalize you too much if you do poorly on the exams, however this means the weekly homework and project have more weight.",
                    "41": "CS214 is one of those courses that has been perfected down to a science by the instructors. It is one of the most well–thought–out, intentionally designed courses I have taken, and every aspect of it has been pared down to be as efficient as possible. If this course were an algorithm, it would be in O(1).",
                    "42": "Professor Amour is passionate about teaching this class and he is usually helpful. I think he does a good job of explaining concepts clearly. This course uses a different grading system that uses a base grade and positive and negative modifiers . I recommend everyone to understand how the grading system works early on so that they may have an easier time later.",
                    "43": "THERE'S A PLACEMENT EXAM TO SKIP THIS CLASS! PREPARE BY DOING SOME CODING EXERCISES AND EMAIL THE CS DEPARTMENT!<br><br>it's definitely a very theoretical look at the subject. I would say the whole class is taught at a very slow pace from someone who has already had some exposure to these things before. Because of that, I found the class to be very easy,  if not annoying due to the pedantic non–functional requirements for code. I did learn somewhat, but this was not an interesting class for me by any means as I had learned about the subjects of most lectures already.",
                    "44": "This is the first cs class I've taken that is not programming–focused, and this may be one of the most important classes for every cs student. The class syllabus was hard to follow at first, but once you complete the first programming homework, you can understand and evaluate your own progress in the class along the way. I like how the class is organized as you learn the concepts of an ADT or an algorithm and test your understanding by programming its interface. The office hours really helped! There are so many, online and in–person every day, which was very helpful. Professor Vincent also tries to remember everyone's names (it was an auditorium–size class). He knew mine! Overall, it was a great experience!",
                    "45": "I hoped to leave this class feeling more confident in my programming skills rather than just acquiring knowledge I wouldn't know how to use, and the course exceeded my expectations. It made me realize that I should consider studying computer science more seriously.",
                    "46": "I heard it was easy. The grading is atrocious. Tests are ridiculous. Don't take bro",
                    "47": "This course is conflicting to me. The content itself is really interesting, and, on its own, I thoroughly enjoyed it. however, it is brought down a lot by the peripherals; the grading system is weird and somewhat un–transparent (despite the stated aim to the contrary)",
                    "48": "Vincent put a lot of thought and effort into the class. The class is clearly organized and structured (besides the necessarily complicated grading scheme).  If. you're willing to put in the effort, you'll be able to learn a lot from the class.",
                    "49": "I loved the grading system, amazing. Additionally, this class is the only computer science class I have ever taken where I felt like the written exams accurately assessed my understanding of the content. Vincent was amazing, very funny and a very good lecturer. I really liked this class, it felt different from other classes, and it was really fresh. You can really, really tell that a lot of care is put into making sure that this class is the best it can be.",
                    "50": "The course is fine. Feels a bit bad that a lot of the interesting content is hidden at the end when a lot of students seem to have checked out. The scaffolding for the class like learning about trees, big O notation, and other stuff is a bit boring, but I see why it's necessary. Final project is a fun problem.",
                    "51": "interesting grading system but it is definitely very forgiving! pay attention in class!",
                    "52": "If you are taking 214, try and take it with Prof. St. Amour. He is super–caring, a great lecturer, and is passionate about the subject matter. The homework can be challenging but reviewing the lecture slides and/or going to Office Hours will more than likely solve any problem you face. The grading system in this class is also great; I wish every computer science class would follow suit. Definitely the most useful out of the core classes when it comes to preparing for internships.",
                    "53": "His lecture slides are very useful afterwards.",
                    "54": "I love Vincent he's so fun. Great class, most important class when it comes to interviews. It's taught in DSSL2 (Racket Python hybrid) but it's not as bad as you think. Not difficult and homeworks were a breeze. Also he found out my name by looking at the roster sheet which is really funny to me (I may have been talking).",
                    "55": "I actually really liked taking this course, which was a bit of a surprise. Vincent was super nice and took time to get to know you if you ever spoke to him, and remembered our names if we talked with him as well. I know it's a low bar, but many professors seem to fail it anyway, so bravo. <br><br>I was a little worried before because someone told me not to take the class with him due to him only allowing one resubmission per assignment, but that policy actually helped me think through my code more and test it more thoroughly. <br><br>Of all the intro CS classes I've taken thus far, this class has been my favorite. <br><br>ALSO MORE IMPORTANTLY, the grading system. We had a \"base grade\" based on the results of our 5 semi–weekly assignments. The highest possible base grade you could get is an A–. Then you have grade modifiers, a cumulative integer that brings your base grade up or down letter grades. For example, if your base grade was a B, and you got +1 total modifiers, then your final grade is a B+, or if you have an A– and you got –3 total modifiers, then your final grade is a C+ or something along those lines. These modifiers are derived from the results of other assignmets (worksheets, midterms, etc). Literally as long as you do well on the weekly homeworks and do moderately well on other assignmenrs, then you should get an A. The system took SOOOO much stress off of midterms and was really helpful for me specifically because I get near debilitating test anxiety. So, thanks Vincent!",
                    "56": "This was a good course. I feel like I learned a ton about data structures and honestly it was really valuable material. I didn't love the grading style, and it would definitely be hard to end with an A, but I still liked this course. Vincent was a bit of a boring lecturer, but it was mostly because the lectures were long and I got tired. I liked the homework and the project, and although it was decently hard, I did enjoy this class.",
                    "57": "Professor: In my personal opinion Vincent St–Amour should not be a college professor. He is very demeaning and treats his students like they are in high school or younger. In a class of over 100 students he tries to make everyone absolutely silent. It is a large lecture room where sound doesn't even carry. If he hears even a slight sound of someone talking he will stop lecture and in a very condescending voice will ask if they 'have a question' or if they 'have something to share with the class' (and this happens every class multiple times). It is ridiculous behavior for a college professor teaching a 100+ person class. I would understand if someone was talking a lot, but it creates an environment where you can't even ask your peer a simple question which severely limits learning. During his lectures and even in office hours he always talks in this presenter type voice that creates this power dynamic between him and his students. He will also try to get an 100+ person class to answer a question in class by shouting out an answer and when people didn't respond he would say something very passive aggressive like 'well I guess you all are not interested in class'. He is obviously very interested in what he is teaching but seems like he has to feel better than everyone to teach it. <br><br>Class: This is a very strangely structured class. It is not graded in a normal way. Essentially your 'base grade' is determined by how well you do on the 5 homeworks and the final project. You get two tries to get a 'got it' (which is basically a 100) for each homework which if you put enough work in you can get easily. Then there are 'modifiers' which can boost your base grade or bring it down. These are based on how well you do on worksheets, exams, evaluations, and the final project documentation. It is pretty easy to get a good grade but it can be really confusing how well you are doing in the class. Overall, it is just a class that you most likely have to get through if you are majoring or minoring in CS but you'll have to deal with a not great professor.",
                    "58": "I think this class is very important and Prof. St–Amour does a decent job of teaching it. Lecture slides are well–organized and recordings are available on Canvas. Homeworks are helpful for understanding each data structure introduced in class conceptually, and are not that difficult. The final project is a bit more hefty, but not that hard/time–consuming if you have a good understanding of the course material. Also, the course's grading system makes it very easy to get an A as long as you're completing the assignments and not flunking the exams (as in, you could get a 55% on both exams and still get an A).",
                    "59": "Good course. Appreciate how organized everything was and, while the \"ungrading\" system is really confusing at first, everything is laid out for you and you get used to it. While it sounds like a good time at first tho, it WILL sneak up on you if you don't stay on top of your stuff. Just one homework can be the difference between an A base grade and a B, just be careful.",
                    "60": "Everything taught in this course is super important to know. The homework and final project make up the majority of your grade so make sure to prioritize those. I didn't feel like the grading was too harsh, especially because you could do pretty badly on exams and it would have no impact on your grade.",
                    "61": "I really liked this course! Learning about data structures was pretty cool since I really enjoy programming. Honestly, it was pretty hard to pay attention to Vincent's lectures sometimes because he talks very fast, but he does try to make sure everyone understands the content of the course. The grading system that this course uses can be pretty confusing at first. Your \"base grade\" is determined by how well you do on the homework programs and the final project. For example, to get the highest base grade (A–), you have to get a \"Got It!\" on all of them. Everything else, including the exams, the self–evaluations, the worksheets, and the design documents for the final project, are \"modifiers\" that can make your base grade higher or lower. Personally, I think it's easier to do well in this course because of this system. The homework programs can be challenging, with some taking more hours to finish than others, but I didn't find them too difficult to finish on time. The final project is definitely the most challenging assignment, but you have a lot of time to finish it and have three attempts. You also have late tokens that allow you to submit any of these two days late without penalty if you need to. It was also pretty hard to do well in the exams, but as long as you don't do too badly on them, they won't lower your grade. I mostly relied on the other modifiers to raise my grade to an A. Overall, I would say this is a pretty good computer science course!",
                    "62": "Prof. St–Amor is a great lecturer, homeworks are much more manageable compared to CS211/213. Exams are straightforward and fair. Good class!",
                    "63": "This class is on the easier side of CS classes and the modifier system is pretty convenient. The homeworks and final project aren't bad at all. The exams are a bit tough to do well so definitely accrue as many modifiers as possible. Professor St–Amour is good, would recommend taking it with him.",
                    "64": "Required course for CS, but one of the most useful ones in terms of learning computer programming and preparing for SWE and recruitment in general. The workload isn't too much but can get heavy if you put off deadlines until the last minute. Try not to use all of your late tokens at the beginning of the quarter, and make sure to use your submissions wisely because you only get a certain number of attempts for code in homeworks/projects. Most things you submit for this course play a large role in determining your final grade. Attendance is required but lectures are fairly interesting and very useful for understanding and completing the assignments.",
                    "65": "Great course, I learned a lot. Prof St–Amour is very passionate about teaching this subject which helped keep the class alive, but even then, it was hard to pay attention during lectures at times do to the longevity and zoning out. The grading system takes some getting used to but I found it pretty fair and helpful, especially because I got two tries on every homework. The self evaluations for the homework were a little aggravating at times because it grades you on your coding etiquette and practices which sometimes are pretty strict and specific, but they helped me reflect on my coding skills as a whole.",
                    "66": "The grading system may seem fair and robust at first but it is actually very flawed in some regards. Requiring students to achieve a \"got it\" on all the homeworks and the final project may seem fair on paper, but in many cases students have failed a single test case for one of the homeworks or forgotten to include the 8 principles causing their base grade to be essentially halved. Several students in the past have achieved positive modifiers from exams, showing far greater mastery of the content than most other students, but received an unsatisfactory grade due to the base grade system. In addition, the modifiers are not consistent across different times when this class was offered.  In the winter there was an additional attendance modifier, and the exam modifier thresholds were also different. For a class of this size that is part of the CS core curriculum I strongly believe these inconsistencies should be addressed to allow for a more equitable learning experience. Furthermore, there are consistency and equity issues when it comes to the course grading. Particularly for the project documents PMs during office hours expressed frustration with the manner in which the rubrics were only released to the PMs and not the students, causing significant confusion when it came to grading. In several instances PM's were shown project documents by students and expressed how they did not think the grade was actually reflective of the project document. This level of inconsistency is frankly unacceptable. In addition, the practice of granting students an \"above expectations\" outcome for their project docs was done in such a manner that the students name would have to be forwarded from a PM to the professor to manually grade the project document. This is also problematic when it comes to ensuring fair and equitable grading, an issue that should definitely be addressed. In other classes, it is typically stressed that students omit their names so that grading may be done anonymously to ensure fair grading practices. While the grading scheme concerns are not unique to this instructor, the problems regarding fair and equitable grading practices are.",
                    "67": "N/A",
                    "68": "This class is well–organized from the lecture slides to the supplemental textbook, in addition to the large amounts of support that the TAs/PMs provide. The grading system is unusual and hard to understand at first, but I think for most people, it worked out well. I am thankful for the second tries offered on the homework and for the late tokens, allowing the class to be flexible. Professor St. Amour is an amazing lecturer, interacting with students and providing check–in to make sure his pacing was good. The exams were extremely fair. They were not easy, but if you paid attention throughout every lecture, the exams reflected advanced versions of the in–class practice. Overall, it was a great fundamental course for computer science.",
                    "69": "The instructor was a good lecturer, but I did not enjoy this course as much as I was hoping to. The grading system is much more complicated than a normal class in order to focus more on the \"learning\" but I think it had more of the opposite effect for me. I also felt that preparing for the midterms was difficult, and preparing for the second midterm while also balancing the final project was not ideal. However, I did appreciate that the class covered many data structures and algorithms used in computer science.",
                    "70": "I have been ready to take this class since many internships require experience in data structures and algorithms. Nonetheless, I actually enjoyed the unique grading system of this class since exam scores aren't weighted as high as homework and projects (mainly). As someone who tends to do better in programming assignments instead of examinations, I really liked the leniency of the grading that allowed you to get at least a 60 to be in A range and if you do fail the exams, yous till have modifiers that could bring you up to an A. I've gotten so used to this grading system that I now wish all grading systems for CS were like this. In addition, Professor Vincent St–Amour is a great professor to have! I really enjoyed his teaching and assisting style.",
                    "71": "Good class to learn DS/algorithms. The grading system is quite odd, but you can do well if you prioritize the homeworks/final project.",
                    "72": "The course is really interesting. The homeworks are rather easy, but the final project is decently difficult (although it is still easy to get full points). The exams are tough, but the grading system allows for you to do an average on them and still get an A. TRY TO GET ALL MODIFIERS POSSIBLE because then you can do worse on the exam (the modifier for the final project documents is impossible to get, so don't even bother trying). Professor St–Amour is very passionate and a good lecturer.",
                    "73": "Overall this was such a great class. Prof St–Amour is a GOATED lecturer and explains all concepts very clearly and is always asking the class if anyone has questions, which is very helpful. The Homeworks (there are 5 of them) get \"harder\" as the quarter progresses, but I use \"\" because they're not exactly more difficult, but rather they require more thinking and conceptual understanding (i.e. graphs). The two midterms were pretty manageable, just make sure you review ALL the slides for the content covered in the exam, as there was one time there was a question asked about something that was only on like 1–2 slides at the end of a lecture. The TAs are sooooo helpful, so make sure you go to office hours. I typically went to office hours just to do the homeworks, then asked questions if I had any.",
                    "74": "Despite learning a lot in this class and having a good time doing the work, my reaction to this class is very negative. Mainly, the professor incredibly condescending. It comes through during his lectures and if you meet with him in office hours. It makes the course unbearable and a challenge to go and pay attention in class. Also the grading system is super unconventional and hard to understand even when reading the syllabus. Do NOT take the class with Vincent.",
                    "75": "This class is definitely easier than the other classes in the 200 CS sequence. However, the grading system in this class is way more complicated than it needs to be and made me worry about my grade in this class way too much this quarter. I will say that this course was extremely well organized. I don't necessarily regret taking this class (I took it because it sounded interesting) but sometimes I wish I took another class instead.",
                    "76": "I think the projects were not too bad, because you learn a lot from them, but the exams were quite bad. I felt that no matter how much i understood the topics the exams were very hard.",
                    "77": "Avoid taking this class with Prof. Vincent. His class is boring and not engaging. The grading system in this class is a nightmare to even understand, even if u did very well u might still ended up screwing yourself up with those modifier. And u have to do absolutely perfect to get a +1 modifier and they do not tell u what is expected to get the modifier.",
                    "78": "The homeworks take some time but are good for you to learn. Exams are extremely hard but you only need to get from 12–18 / 20 so that it doesn't impact your grade. The grading system is crazy weird and makes it hard for you to get an A. The professor is super helpful but his lectures are really fast and it is hard to understand",
                    "79": "Vincent is an amazing professor and has crafted this class extremely well. There are 5 homework assignments, 2 midterms, and a final project. Each homework isn't bad, just make sure to get started on them sooner rather than later. The midterms are purposely really challenging, they won't affect your grade too much so there isn't as much stress associated with them. Just make sure to study earlier for them. The final project was personally really fun to work on. It takes some time but it ties everything you've done in the class so far. Vincent stresses how much learning is important and the grading scale/policies reflect that. This is personally one of the more fun classes I've taken so far.",
                    "80": "Hard course. But you learn a lot! Be punctual, not an easy A...",
                    "81": "The grading system is a little bit too complicated and the reasoning behind some parts of it did not make sense to me. The homeworks are pretty manageable",
                    "82": "Don’t take w Vincent, extremely strict about modifiers and will not give much leeway",
                    "83": "Material is okay, some times overcomplicated. The way the class is structured is nice as there is a very strong focus on the homework and project and not on exams. Take your time to understand the grading since it can be confusing in the beginning but you will come to find out that it is to benefit you the most. The homeworks and project allowed more than one try which is very helpful. The only non–lenient and hard to get used to thing was the self–evaluations, it is very easy to miss them or make a mistake with them. Ensure you practice the good coding habits they stress and write as many tests as you can. Overall, very doable. Lectures do get boring and hard to focus for the entire time. This course also does not play about plagiarism. It also does not benefit you whatsoever to cheat, although I do find it helpful to engage in conversation with your peers if you are confused at all. Just make sure your code is actually yours and your logic.",
                    "84": "A bit of an nitpicky professor but good class overall",
                    "85": "Prof Vincent is a very passionate, smart, and helpful person. You can learn a lot in 214, so come to lectures and listen. Also, don't cheat, it's not worth it – Prof. Vincent loves catching people :)",
                    "86": "Worst grading structure ever.  Assessments test on the most random and obscure topics, often ones covered on only one slide out of 300. Do not take with St Amour, other professors offer an attendance modifier to boost your grade. Also, he is a very strict grader on the project docs. These are documents we have to submit alongside our final project with very vague instructions, but Prof St Amour grades them using a rubric he doesn't share.",
                    "87": "The concepts are fun to learn and extremely important in computer science.",
                    "88": "Solid course. Good materials provided and non–stressful grading system.",
                    "89": "Good teacher, good teaching style. Fair assignments, interesting grading system. Slides are incredible.",
                    "90": "Prof Vincent is clear and really nice. Homeworks were fairly easy if you pay attention to the lecture and slides",
                    "91": "This class has a very weird grading system which I appreciated and disliked. Vincent is very nice and accommodating and is super good at communicating with students, but his exams could be a bit difficult. You learn a LOT in this class, but be prepared for the final project and START IT EARLY. The first few programming homework are not super difficult, but the final project can be a bit of a doozy because you're trying to tie together EVERYTHING that you've learned in the quarter. The PMs are usually pretty helpful (shoutout to Tues/Th PMs) but you have to get very used to drawing everything out yourself. Diagramming is super helpful! Not an avoidable course and it can be difficult for test–takers, but you definitely learn a lot.",
                    "92": "Prof. St. Amour is not the best. He yaps a lot during lectures and over simplifies important concepts. The exams were kind of a force. Grading system was stupid and doing bad on one homework will screw you over in the class. Make sure to do all your assignments yourself. For such an important class, I didn't think it was taught as well as it should be.",
                    "93": "The true thing I picked up from this course is how based on it is of the whim of the PMs, a good and nice PM would just pass you by but an unlucky harsh one would make your grade drop down like crazy. One mistake on anything, it's over for the modifier.",
                    "94": "Starts off pretty slow and easy then picks up a bit. Harder than I thought it was going to be the test are okay everything is in the slides. However this class did take more time than I thought.",
                    "95": "Homeworks and projects are easy. Exam is very difficult.",
                    "96": "Very lenient course.",
                    "97": "I think it's given me a sufficient base to start preparing for technical interviews with LeetCode."
                },
                "school_demographics": {
                    "Weinberg": 53,
                    "McCormick": 76,
                    "Medill": 1,
                    "Comm": 2,
                    "SESP": 3,
                    "Bienen": 2
                },
                "class_demographics": {
                    "Freshmen": 101,
                    "Sophomores": 31,
                    "Juniors": 6,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 217-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.15,
                    "student_count": 52
                },
                "student_opinions": {
                    "0": "I've been asked about SQL so many times in job interviews so was happy to see that NU offered a SQL course! The setup of homeworks and in–class exercises was good and the material was pretty straight forward. You definitely need a bit of coding background because there is one lesson that uses Python but besides that no SQL knowledge necessary.",
                    "1": "needed this class for the data sci major –– it's not a crazy hard CS class but you have to put work in. the midterm/final are only like 10% of your grade (each), so it's really important to focus on the homework. overall would recommend over the stat equivalent for the data science major.",
                    "2": "Honestly was made a lot harder than it needed to be",
                    "3": "It was pretty hard to follow the lectures because of issues with the instructors proficiency with English but the class itself was doable and tests are very low risk",
                    "4": "This course was not bad at all. The exams are a bit difficult given there are no practice exams, but the weekly homeworks and the in class exercises are pretty easy. The final and the midterm are both only worth 10% each.",
                    "5": "Pretty easy class, just pay attention in lectures and do the Assignments (they're pretty straightforward). Whole class is straightforward, through the slides, very doable class, and very simple class for my data science minor elective requirement.",
                    "6": "This class helped me learn technical skills and work with SQL but I found myself pretty unengaged with the lectures. The workload is very manageable, with homeworks and exercises in class every week. I thought Prof Hu wasn't the greatest at teaching conceptual units and didn't really learn that much outside of coding. The tests were more concept–focused and I didn't do the best on them because it was hard to determine what we would be tested on – but they aren't worth much of the grade",
                    "7": "This class was very useful as an introduction to SQL and database design. The professor answers questions well and the slides are very well–organized so it's easy to follow and easy to catch up on if you miss class. There isn't much work outside of class: one homework a week and it's very manageable and good practice of the material. The exams were a little too based on memorization of the slides, but the coding questions were very fair and graded as such. Overall, this class is useful, not that stressful, and SQL is kinda fun.",
                    "8": "It is a really easy course, but it picks up slightly toward the last half",
                    "9": "Pretty chill class if you already know SQL. Just be sure to review things before the midterm, as she does ask some detailed questions about the lecture content. Just do the homework and try to pay attention in class, you will be fine.",
                    "10": "This is a low–effort class. It is NOT a no–effort class, unless you are proficient in SQL and understand distributed systems.",
                    "11": "This class was alright. Not too easy and not too hard. The slides are very well made and are very useful for studying, however the professor isn't the best at explaining things super clearly. With HW and Exercises being 80% of your grade, it's not too hard to get an A if you put in the work.",
                    "12": "Great Prof. Midterm and final total 20% of your grade",
                    "13": "Genuinely one of the better CS classes. The first half about SQL is really applicable and handy. Second half gets more into just database design and implementation, which got boring. Slides are super good.",
                    "14": "Overall, this is a pretty good course. The content (in the first half especially) is about SQL and is very useful for data–related jobs post grad. I highly recommend taking this course if you're looking to go into data analysis/science. There were a few lectures which were less helpful (ex. about data storage and computer processing), but they weren't overly difficult. There were 6 weekly homework assignments, 7 in–class assignments (15 minutes each, on Thursdays), and 2 midterms.",
                    "15": "This is a fun course. SQL is pretty easy to use once you get the hang of it, and I genuinely enjoyed doing some of the homework assignments. Lectures are a bit dry sometimes, but the content overall is not hard. The weekly homework assignments don't take more than a few hours and that's the only work outside of class to be completed. The midterms are very conceptual which caught me off guard because the homework focuses on applying skills, not conceptual questions, but there's only 2 tests worth 10% of your grade each. Very very doable class and should be relatively easy to get an A if you put in the effort.",
                    "16": "This course was well–structured to help you learn SQL basics, was very informative. Six assignments and a weekly in class activity, then a midterm and a final. Very manageable!",
                    "17": "This is a good intro class to SQL. Even for someone like me who already knew SQL going in, I still learned about a few new things.",
                    "18": "Very reasonable class, not sure how much I learned tho",
                    "19": "This course helped me get a foundation in SQL. However, I feel like the lecture slides could have more information on it because sometimes I had trouble understanding the point of the professor. Also, whenever we went over example questions, it was sometimes unclear what the correct answer was and the professor does not release the correct answer either. This made it inconvenient when going over the slides in the future for reference whenever doing homework or studying for exams.",
                    "20": "Good class! SQL is very helpful and good tool to know. The tests are unnecessarily harder than they should be, but that’s okay since they are weighed much less that the homeworks.",
                    "21": "It was a good class, do not need a lot of coding background to do well. The grading format was also very easy to do well in, since 80% of the grade came from homework and in class exercises.",
                    "22": "She can’t speak English",
                    "23": "This is a good CS course! You learn how to use SQL and work with databases. There are 6 homeworks, a few in–class exercises, a midterm, and a final. It wasn't a difficult class to keep up with by any means. I stopped going to the Tuesday lectures after week 4 and just watched the recorded lectures. Overall, I really liked this course. Highly recommend!",
                    "24": "I really liked SQL, and thought that the actual content taught in the course was pretty interesting. However, I didn't like the style of lectures, as they were very slow and tended to drag a bit. The content taught in the lectures definitely could be squeezed into 50 minutes periods, but are dragged out over an hour and 20 minutes. I also found that the tests weren't a good measure of how much you learned, as many little topics were asked about rather than the main ideas of how to use and write sql.",
                    "25": "easy class but not very organized, requires some self–learning by doing homework because lectures are not very effective",
                    "26": "This class was a lot easier than I thought. If you go to lectures the homework are really easy and don't take very long to do. Also, with homework being most of the grade it allows you to focus on that rather than the 2 tests.",
                    "27": "The first half of the class was easy and not time–consuming at all (3 hours per week max). The second half was much trickier because the content was way more conceptual and the homework took much longer to complete. What made the second half especially annoying was the fact that the lecture slides had so much content and then when you see the homework, it covers a small portion of what was taught in class but in a way that was more nuanced that what those few slides can help with. In general though, the class is very manageable overall and at the end of that day, the homework really help solidify the conceptual concepts that may be confusing. The only thing that you need that becomes a nuisance is the in class exercises because we only have 20–30 minutes to complete problems for content that we just learned that day in class. Also, exams are only 10% each (midterm/final) so I would say this class overall is a manageable A–/B+.",
                    "28": "Pretty straightforward class. I think SQL is a pretty simple language, and I feel like a lot of the assignments and in–class exercises reflect this. The hardest part of the class was the midterm for most people, but even that was only 10% of the grade, so doing not–so–great on it didn't ruin anyone's grade. If you're in data science and are thinking about using this class as a replacement for stat 305, I'd say this is a safe choice.",
                    "29": "Help a lot. But the Grading is strict"
                },
                "school_demographics": {
                    "Weinberg": 25,
                    "McCormick": 23,
                    "Medill": 2,
                    "Comm": 1,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 18,
                    "Juniors": 16,
                    "Seniors": 14
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.07,
                    "student_count": 69
                },
                "student_opinions": {
                    "0": "The lectures for this course were not engaging at all, I found more success in going to office hours and using online resources. I wouldn't say it was an easy A but if you're okay getting a lower A or a B you shouldn't have to spend too much time with it.",
                    "1": "This course is very straightforward. Good course materials and reasonably difficult assignments and exams.",
                    "2": "TLDR: easy distro. You could learn more SQL in a 30 minute YouTube coding tutorial than you could in this class.<br><br>I took this class for a Data Science Minor distribution requirement. I'm a junior and this class was one of the easiest classes I've taken at Northwestern. As of Winter 2024, one midterm – (10%), final – (10%), homeworks – (60%), 6–in–class exercises (18%), class survey (2%). She didn't make the homeworks available until the day they were released. If she would've made them available from day 1, I would've knocked them all out in an afternoon, and only gone to the midterm and final. If you want to learn SQL, take one day, watch YouTube videos. You'll get more out of them than this class.",
                    "3": "i think i wanted to learn how to code more in sql more and the first half of the class did a good job",
                    "4": "Good for learning about SQL and how to use it, homeworks and exercises weren't too bad but midterm and final were relatively hard since you had to code using lockdown browser",
                    "5": "The course is a good intro to SQL and very manageable. Midterm and final are only 10% of grade each, and then weekly homeworks are 10% each. Lectures were not very engaging though and the second half of the course strayed away from SQL making it hard to understand how it relates to the course.",
                    "6": "It was a pretty good course. I liked how the class grades were distributed pretty less heavily on the exams and more on the homework and exercises.",
                    "7": "Not too hard not too easy. Lecture is more helpful in first half of quarter. After that didn't think it was worth the time. Two exams were pretty challenging because there was very little preparation material and little guidance from instructors on content. Weekly assignments and in class exercises manageable but did take some time and a little confusing at times. Not a huge fan of professor Hu.",
                    "8": "Interesting class and not super hard. Thought instruction was very poorly done though",
                    "9": "This class isn't horrible, however, Prof Hu does some stuff that can be really annoying. 1. Prof Hu doesn't post homework answers ever. 2. Prof Hu didn't post the grades for homework assignments until after the final exam which is extremely annoying since it's really the only way you know you know the concept since she doesn't post the answer key. 3. She assigned homework that was due after the final which is crazy considering the topic the homework covered was on the exam and we could not even test if we understood the concept. The midterm and final are 10 percent of your grade so it's not a horrible class but Prof Hu annoyingly organizes the class.",
                    "10": "You do not learn much from this course.",
                    "11": "Homework is most of the grade and not too difficult. However, lectures are really difficult to understand and tests are nearly impossible.  Easy B, hard A.",
                    "12": "not as easy as it seems – the grading is pretty forgiving but prof writes pretty difficult eexams (even if they may be worth low percentage). content is okay, first half is essentially writing queries and the second half focuses more database layout/building with create table statements etc, each hw is worth ~10% so make sure you don't slack on those, lecture isn't always the most helpful",
                    "13": "Coming from someone who is not good at coding this class was pretty ok. Lectures can be hard to follow. In class exercises are a big part of the grade and they are not very hard and take little time. There are 6 homework that are pretty ok, they are not hard and they do not take a lot of time to do them. Actually doing the homework helped me a lot to understand the class and get better at coding. There is one midterm worth 10% and one final worth 10%. The exams are tricky!! Exams are not only coding but they also include CONCEPTS from the slides and lecture.",
                    "14": "This is a pretty easy class, but it's useful and gives you a great understanding of SQL. Hu's lecture slides are really clear and the homework is straightforward. Most of the grading is homeworks which is nice. The tests aren't a breeze but with a lil studying you should be fine.",
                    "15": "Professor is horrible. Hard to understand and is clear that she doesn’t know how to engage an audience. Only went to the first class and self studied the rest of the course",
                    "16": "This class ate down. Very helpful for learning SQL and other data querying technologies. Very easy and laid–back class as a CS major.",
                    "17": "Great class to take to learn SQL, pretty straightforward",
                    "18": "Wonderful introduction to SQL. Well structured class and instructor definitely cares a lot about the students learning in the class and knows the material well.  I definitely learned useful material that is relevant from this class.  Huiling is an amazing professor! <br>Although i never went for office hours, there were plenty of opportunities to get help if needed.",
                    "19": "Video recordings",
                    "20": "I thought the course was relatively easy and the assignments were straightforward.",
                    "21": "Homeworks being 60% is nice because you get a week to do them and if you go to office hours they are easy to complete. Class can be a little boring because prof just reads off the slides but SQL is a cool program to learn. Exams are kinda weird but since they only count for 10% each (one midterm one final) they don't really matter all that much",
                    "22": "It's a very manageable course that teaches you relevant and applicable knowledge. The professor is very helpful and accommodating. One thing to know is that the grades are heavily weighted towards homework, and there's only 6 of them with no drops. Make sure to go to office hours to make sure you didn't miss something major in each homework.",
                    "23": "This class is pretty well taught and useful. You learn SQL which is a very common tool in  data analysis. The midterm and final are also not weighted that much.",
                    "24": "SQL is not a difficult language and the subject matter of the class is very interesting. However, Professor Hu is not an engaging lecturer. I really only attended to receive help from the TAs on in–class exercises. Homeworks were manageable, but Exams were unnecessarily difficult. Our class average was a 75 because of odd multiple–choice conceptual questions on topics that were glossed over. Would be a great class with a different professor.",
                    "25": "2 exams (10% each, not cumulative), 6 bigger HW assignments and 7 short in class exercises, class was recorded. Overall good class, I got a pretty good understanding of basic SQL and the theory is mostly interesting and understandable as a DS minor with little CS background. HW are doable, usually took me 2–3 hours each and peer mentors were helpful. Exams are a little tricky considering the content  is not so hard so I underestimated them but as they are not worth so much, you don't need to get 100% on them,",
                    "26": "I learned a lot about the basics of SQL and feel equipped to use it in real world applications such as for a career post grad after having taken this class. There are a mix of assessments such as exercises, homeworks, and exams that help to solidify the material, and as long as you do your work and go over the slides, the class is not very challenging.",
                    "27": "if you are a data science major, take the stat class instead. the professor is an awful lecturer, she does not coherently express ideas and is also extremely quiet. also, the class definitely diverges from just SQL. like why are we coding in python in a SQL class? the midterm is extremely difficult and the average was a 73%, but it was only 10% of the grade. you can get an A but the class is so unhelpful overall",
                    "28": "I think this class could be much better if it were taught by another professor. The content itself is actually pretty interesting and applicable, but there isn't enough depth to the course to really learn how to use the skills well. The professor is tough to understand at times and you will definitely be bored in class. 80%+ of people stop going to lectures by the end because they're so dry and it's painful to listen to the professor speak.",
                    "29": "Honestly very easy class – take it with friends so you don't drop random points on the homeworks worth 10% *each*. I do wish we learned more SQL and database design instead of random bug facts about RAID and databases. Take CS whatever the number is if you want to learn, take this class if you want to stat pad.",
                    "30": "Great class. You learn the basics but that is more than enough if you are not going into data science. Very manageable too.",
                    "31": "It's a nice introductory course to SQL. The second half of the course is a bit boring.",
                    "32": "Overall this  course, even though was a pre–requisite, I was initially quite excited for. But I feel the reason this class wasn't very useful was Hui Ling her self. She wasn't the most engaging person and not very clear when you asked her questions. If the class wasn't made quite easily, I would've 100% failed, genuinely. It's no wonder I somehow passed this class but I feel I barely learned anything because of her dry lecturing and unclear responses.",
                    "33": "Pretty easy course. I think it has relevant material but I never went to class and still did well. Hu is nice but can be hard to understand",
                    "34": "I learned a lot without ever being stressed! Weekly in–class activities and weekly assignments are the perfect amount of work/hands–on experience to learn the concepts without being too much. 2 exams were pretty reasonable and only worth 10% each (the same weight as a single assignment).",
                    "35": "The lecturer is very knowledgeable and really cares about her students. She has a very thick accent, so be warned. You have to really pay attention to understand her, but the slides are great so it makes up for it. Not an easy class but not too hard.",
                    "36": "Professor's lectures can be a somewhat tedious, however the course content is extremely applicable to real life.",
                    "37": "Not great. The content didn't particularly interest me, and the lectures didn't help. The content wasn't hard, but the exams somehow were.",
                    "38": "Overall good class! You need to step on top of the power points for the exams and for the labs; just make sure to look at the slides. Overall, it is very manageable.",
                    "39": "I found this class to be pretty straightforward and easy to do well in if you put in some effort. It's not hard at all just learn the slides and do the homework. The exams can be a bit difficult but they're not worth much overall, so that's alright. I actually found SQL to be easy to use and the homework to be kind of fun to do.",
                    "40": "this is actually a good and well applicable class",
                    "41": "Overall is a good course. I learned basic knowledge of using SQL. The class record, online discussion platform, and Office Hours are super helpful. The professor and TAs are responsive. If you have any questions they will reach back within a day. <br><br>Grading is based on 1 big homework &amp; 1 in–class exercise per week (6+7 in total), mid &amp; final exam."
                },
                "school_demographics": {
                    "Weinberg": 30,
                    "McCormick": 29,
                    "Medill": 1,
                    "Comm": 5,
                    "SESP": 2,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 3,
                    "Sophomores": 29,
                    "Juniors": 27,
                    "Seniors": 6
                }
            }
        },
        "COMP_SCI 260-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 5.49,
                    "student_count": 47
                },
                "student_opinions": {
                    "0": "I really enjoyed this class! I took it as a legal studies elective, and it really taught me a lot about how AI can be impacted by the law and vice versa. The workload was really chill and the main grades were only composed of the debate, final paper, and also weekly readings that were honestly really interesting. Using Perusall was a bit time consuming because you have to make sure to comment on each reading, but I think it was beneficial because it made me rad everything and become just overall more knowledgeable about the topics that we talked about in class. Definitely recommend this course and having the alternate professors gives a more wide range of perspective and I thought it was really cool!",
                    "1": "Great class; not necessarily what I was expecting. I knew there would be some work going into this class, but honestly the material was so engaging it was very easy to get the readings (not more than 10 pages in total each week), presentation (less than 5 minutes only once in the quarter), debate (with a team also once in a quarter and with so much time to work on), and final paper (also given so much time to work on with outlines, comments, etc.) all done fairly simply. I really really enjoyed the class, and even IF YOU HAVE NO COMPUTER SCIENCE BACKGROUND, I RECOMMEND TAKING THE CLASS just because the material is really applicable to so many different aspects of your life and the future other than intersections between law and technology.",
                    "2": "The class is quite enjoyable, though a little sleep–inducing at times. The topics are generally interesting and I do like engaging in ethical discussions of tech companies, but when you are bored it is like a high school English class sometimes and a little dull. I'm not very acquainted with the U.S. government system, and sometimes stare into the distance and have no clue what is happening. It is a fun class if you enjoy these topics, but if you don't, it is easy to feel bored.",
                    "3": "Prof. Villasenor is a good lecturer, Prof. Linna not as good but still solid. Lecture sometimes feel really long and discussions should be way shorter. A lot of law, not as much focus on the tech.",
                    "4": "The most important aspect were the class discussions and peer reviews.",
                    "5": "Class is not much work at all. The debate requires a small amount of time preparing with your group. Only weekly assignments are readings on Perusall, which don't take very long. One essay at the end with a presentation and outline due earlier in the quarter. Interesting class with very qualified professors.",
                    "6": "This class is taught by 2 professors, Dan from NU and John from UCLA, both terrific lecturers. Assignments consists of weekly readings, one group debate, one self recorded 5 min presentation, and one long paper (1400 words for undergrad, 2000 words for grad). I found the content of this course very interesting as I was previously unexposed to the legal implications of tech innovations. The grading was pretty generous, not a stressful class.",
                    "7": "Really cool class to take as a CS major. The only part of this course that is remotely related to CS is its discussion of how law might apply to AI / current technology and is mainly used to demonstrate how slowly law moves in comparison to tech. Each week is set up to be about a different part of the law, such as copyright, fourth amendment, etc., so you end up covering quite a bit of content. Professors Villasenor and Linna are both engaging speakers and it does make class go by a bit faster, even though the entire class period is 3 hours which is pretty horrendous. The coursework consists of really short 2–3 weekly readings (each requiring 4 comments on perusall), a weekly in–class group discussion post (to track your attendance), and a final 1400 word paper and presentation to go with it.",
                    "8": "The content of this course is super interesting and focuses on a different topic every week. The professors and TAs were super helpful, and all of the deadlines were laid out so I knew exactly what to expect. This class is 3 hours a week (1.5 hour lecture followed up with 1.5 hour discussion) but I don't think it's bad at all because it frees up other times on other days. If you're interested in law with tech applications, this class is for you.",
                    "9": "The course and discussion sections were easy and all the TAs/professors are great. Theres one essay and discussion posts and readings before classes as work for the class.",
                    "10": "Moderately paced course with readings, a short debate, and a final research paper. Decent amount of learning and not too hard to get a good grade. Informational and interesting. Focuses on AI laws but you also get a chance to research a topic of your interest. Would highly recommend.",
                    "11": "I loved this class! Really recommend for a FD, not a comp sci major. Prof Villasenor is an amazing lecturer and this is his only class at NU",
                    "12": "This class is super interesting, especially for a distro. You learn what you put in. You can sit in class and do other work, and not learn anything, or you can engage and learn a ton about really interesting legal and technological topics. Highly recommend and the professors are amazing",
                    "13": "I liked it a lot.",
                    "14": "I thought that the course was overall very good. Lectures from the professors were excellent and my graduate TA was also exceptional. I do think the student experience  for grad students would be improved with a grad–only discussion section and some type of additional writing or presentation assignment, or more additional optional readings for nuance, to replace some of the more basic readings.",
                    "15": "This is a great course! Not too much work (weekly readings, a debate, a presentation, and a final paper). Very manageable! The professors were very nice and gave interesting lectures! Loved it!",
                    "16": "Loved this class! Low stress but you get a ton out of it – the information is super interesting and both professors are fantastic lecturers",
                    "17": "Really overall interesting class! Very knowledgable professors who do enjoy teaching the class (one flies in from UCLA to teach). This class is fairly easily especially for weinberg students who already know how to hold a discussion and write one short paper. The TA's were also very lenient.",
                    "18": "This course is interesting, easy, and helpful. It addresses problems and conflict between the technology and our society.",
                    "19": "Take this class for your ethics distro. Easy A and minimal work. The TAs and professors just want to see you learn and do the work. The topics are interesting but be prepared to only talk about AI for 10 weeks, which is a little disappointing since there are a lot more issues in tech law intersection. The 3 hour class block can be brutal but you'll survive. Weekly Discussion posts every week (easy), one debate in team (graded on completion), one presentation of your essay topic (easy) and one essay (easy)",
                    "20": "The readings were interesting; the debate was fun; and I aimed to write a worthwhile final paper. I understand privacy and IP laws better thanks to this class. The amount of policy I learned per unit effort was probably competitive with my other options (and the class provided a good structure).",
                    "21": "This is a fantastic course. Both professors are engaging, funny, and have a deep understanding of each of these issues and the complexities that arise within each. I would be careful if you are only looking for a course that's an easy A, as the readings graded by Perusal require paying attention and effort. Also, given that its a combined class with undergraduates and graduate students, the level of work and thinking expected of you seems pretty high to me. They professors do say in the beginning that everyone in the class CAN get an A if they try, and that there is no curve or quotas for grades, but they still expect a good amount from you. Overall, I enjoyed this class because the content was genuinely fascinating and it only met once a week, but I still had to work pretty hard.",
                    "22": "good course to fill the ethics distro. The topics that were discussed were actually interesting and the professors were engaging. <br><br>Weekly work was pretty minimal, just reading and annotating a couple of articles. The debate and video presentations were graded pretty leniently I felt. The final paper was not too hard to write.",
                    "23": "Love this class. Lightest class (workload wise) I have ever taken here. The 3 hour lecture + discussion on Monday evening was a lot, but I enjoyed it. This is the class for you if you love CS and Law. The class talks about so many of the new and rising technologies and some of the policy implications these have. Such a great class. No exams. Just show up to lecture and discussion, do the comments on the readings, and submit the deliverables (Final paper, debate, and topic outline)",
                    "24": "Great distro, interesting topics covered in lectures, reasonable amount of reading per week that are mostly interesting. Participation is determined by discussion post written during the discussion session, which is low stakes for people who have a hard time speaking up in a larger class. The paper is well instructed, lots of rounds of feedbacks received (topic, outline, presentation) that I personally received great feedback from my peers. The debates are on interesting topics but the quality really depends on the execution of each group. Very knowledgeable instructors definitely value taking a class with a prof that flies in to teach!",
                    "25": "TAKE IF YOU HAVE THE SPACE TO!! I LEARNED SO MUCH AND I GENUINELY ENJOYED IT SO MUCH!!!",
                    "26": "This course was a lot of fun! We learned a lot about how new technology influences the law.",
                    "27": "I am not super interested in law and so this course wasn't really for me, but I think it covered a wide variety of relevant topics. The readings are definitely helpful and not too long, and the assignments are spaced out with plenty of time to complete them.",
                    "28": "Fun class. If you're looking for an easy distro, take this class. There were readings each week, which on average were about 10 pages. We also had to do comments on the reading, but those didn't take too long either. There was then a debate, a presentation, and a paper. The debate wasn't too difficult, and was graded very leniently. The presentation is about your paper topic, and is a great way of setting up the research for the final paper. The final paper is worth 40% of your grade, and was 1200–1400 words for undergraduates. If you are like me, such a paper might stress you out. However, this paper is worked towards throughout the entire quarter, with feedback at multiple steps of the process. It ended up being very manageable. The lecture content itself was very interesting as well, discussing intersections of law and technology that I hadn't really thought about. Overall a really good class.",
                    "29": "The topic itself was very interesting. I wish there were more interactive activities other than discussion and debates, like group projects.",
                    "30": "This class was a great class!! I feel like it wasn't overwhelming in terms of work, however, you still had to be thoughtful in terms of engaging with the assigned readings, in discussion if you wanted to, and in the components of the final paper. I thought the intersection between law and technology was super interesting and this class is making me rethink my career path because I found this so interesting. Professors are great lecturers.",
                    "31": "At the start of the quarter, there were a lot of discussions on real trials and court decisions and I really liked it. However, since this is an emerging field and a lot of this is still theoretical, as we moved on to topics like copyright infringement and biases, there were fewer trials available and we were mainly talking about news articles. Still, I like this class because it is very interdisciplinary.",
                    "32": "Fun class. If you're looking for an easy distro, take this class. There were readings each week, which on average were about 10 pages. We also had to do comments on the reading, but those didn't take too long either. There was then a debate, a presentation, and a paper. The debate wasn't too difficult, and was graded very leniently. The presentation is about your paper topic, and is a great way of setting up the research for the final paper. The final paper is worth 40% of your grade, and was 1200–1400 words for undergraduates. If you are like me, such a paper might stress you out. However, this paper is worked towards throughout the entire quarter, with feedback at multiple steps of the process. It ended up being very manageable. The lecture content itself was very interesting as well, discussing intersections of law and technology that I hadn't really thought about. Overall a really good class.",
                    "33": "The topic itself was very interesting. I wish there were more interactive activities other than discussion and debates, like group projects.",
                    "34": "This class was a great class!! I feel like it wasn't overwhelming in terms of work, however, you still had to be thoughtful in terms of engaging with the assigned readings, in discussion if you wanted to, and in the components of the final paper. I thought the intersection between law and technology was super interesting and this class is making me rethink my career path because I found this so interesting. Professors are great lecturers.",
                    "35": "At the start of the quarter, there were a lot of discussions on real trials and court decisions and I really liked it. However, since this is an emerging field and a lot of this is still theoretical, as we moved on to topics like copyright infringement and biases, there were fewer trials available and we were mainly talking about news articles. Still, I like this class because it is very interdisciplinary.",
                    "36": "I really enjoyed this class! I took it as a legal studies elective, and it really taught me a lot about how AI can be impacted by the law and vice versa. The workload was really chill and the main grades were only composed of the debate, final paper, and also weekly readings that were honestly really interesting. Using Perusall was a bit time consuming because you have to make sure to comment on each reading, but I think it was beneficial because it made me rad everything and become just overall more knowledgeable about the topics that we talked about in class. Definitely recommend this course and having the alternate professors gives a more wide range of perspective and I thought it was really cool!",
                    "37": "Great class; not necessarily what I was expecting. I knew there would be some work going into this class, but honestly the material was so engaging it was very easy to get the readings (not more than 10 pages in total each week), presentation (less than 5 minutes only once in the quarter), debate (with a team also once in a quarter and with so much time to work on), and final paper (also given so much time to work on with outlines, comments, etc.) all done fairly simply. I really really enjoyed the class, and even IF YOU HAVE NO COMPUTER SCIENCE BACKGROUND, I RECOMMEND TAKING THE CLASS just because the material is really applicable to so many different aspects of your life and the future other than intersections between law and technology.",
                    "38": "The class is quite enjoyable, though a little sleep–inducing at times. The topics are generally interesting and I do like engaging in ethical discussions of tech companies, but when you are bored it is like a high school English class sometimes and a little dull. I'm not very acquainted with the U.S. government system, and sometimes stare into the distance and have no clue what is happening. It is a fun class if you enjoy these topics, but if you don't, it is easy to feel bored.",
                    "39": "Prof. Villasenor is a good lecturer, Prof. Linna not as good but still solid. Lecture sometimes feel really long and discussions should be way shorter. A lot of law, not as much focus on the tech.",
                    "40": "The most important aspect were the class discussions and peer reviews.",
                    "41": "Class is not much work at all. The debate requires a small amount of time preparing with your group. Only weekly assignments are readings on Perusall, which don't take very long. One essay at the end with a presentation and outline due earlier in the quarter. Interesting class with very qualified professors.",
                    "42": "This class is taught by 2 professors, Dan from NU and John from UCLA, both terrific lecturers. Assignments consists of weekly readings, one group debate, one self recorded 5 min presentation, and one long paper (1400 words for undergrad, 2000 words for grad). I found the content of this course very interesting as I was previously unexposed to the legal implications of tech innovations. The grading was pretty generous, not a stressful class.",
                    "43": "Really cool class to take as a CS major. The only part of this course that is remotely related to CS is its discussion of how law might apply to AI / current technology and is mainly used to demonstrate how slowly law moves in comparison to tech. Each week is set up to be about a different part of the law, such as copyright, fourth amendment, etc., so you end up covering quite a bit of content. Professors Villasenor and Linna are both engaging speakers and it does make class go by a bit faster, even though the entire class period is 3 hours which is pretty horrendous. The coursework consists of really short 2–3 weekly readings (each requiring 4 comments on perusall), a weekly in–class group discussion post (to track your attendance), and a final 1400 word paper and presentation to go with it.",
                    "44": "The content of this course is super interesting and focuses on a different topic every week. The professors and TAs were super helpful, and all of the deadlines were laid out so I knew exactly what to expect. This class is 3 hours a week (1.5 hour lecture followed up with 1.5 hour discussion) but I don't think it's bad at all because it frees up other times on other days. If you're interested in law with tech applications, this class is for you.",
                    "45": "The course and discussion sections were easy and all the TAs/professors are great. Theres one essay and discussion posts and readings before classes as work for the class.",
                    "46": "Moderately paced course with readings, a short debate, and a final research paper. Decent amount of learning and not too hard to get a good grade. Informational and interesting. Focuses on AI laws but you also get a chance to research a topic of your interest. Would highly recommend.",
                    "47": "I loved this class! Really recommend for a FD, not a comp sci major. Prof Villasenor is an amazing lecturer and this is his only class at NU",
                    "48": "This class is super interesting, especially for a distro. You learn what you put in. You can sit in class and do other work, and not learn anything, or you can engage and learn a ton about really interesting legal and technological topics. Highly recommend and the professors are amazing",
                    "49": "I liked it a lot.",
                    "50": "I thought that the course was overall very good. Lectures from the professors were excellent and my graduate TA was also exceptional. I do think the student experience  for grad students would be improved with a grad–only discussion section and some type of additional writing or presentation assignment, or more additional optional readings for nuance, to replace some of the more basic readings.",
                    "51": "This is a great course! Not too much work (weekly readings, a debate, a presentation, and a final paper). Very manageable! The professors were very nice and gave interesting lectures! Loved it!",
                    "52": "Loved this class! Low stress but you get a ton out of it – the information is super interesting and both professors are fantastic lecturers",
                    "53": "Really overall interesting class! Very knowledgable professors who do enjoy teaching the class (one flies in from UCLA to teach). This class is fairly easily especially for weinberg students who already know how to hold a discussion and write one short paper. The TA's were also very lenient.",
                    "54": "This course is interesting, easy, and helpful. It addresses problems and conflict between the technology and our society.",
                    "55": "Take this class for your ethics distro. Easy A and minimal work. The TAs and professors just want to see you learn and do the work. The topics are interesting but be prepared to only talk about AI for 10 weeks, which is a little disappointing since there are a lot more issues in tech law intersection. The 3 hour class block can be brutal but you'll survive. Weekly Discussion posts every week (easy), one debate in team (graded on completion), one presentation of your essay topic (easy) and one essay (easy)",
                    "56": "The readings were interesting; the debate was fun; and I aimed to write a worthwhile final paper. I understand privacy and IP laws better thanks to this class. The amount of policy I learned per unit effort was probably competitive with my other options (and the class provided a good structure).",
                    "57": "This is a fantastic course. Both professors are engaging, funny, and have a deep understanding of each of these issues and the complexities that arise within each. I would be careful if you are only looking for a course that's an easy A, as the readings graded by Perusal require paying attention and effort. Also, given that its a combined class with undergraduates and graduate students, the level of work and thinking expected of you seems pretty high to me. They professors do say in the beginning that everyone in the class CAN get an A if they try, and that there is no curve or quotas for grades, but they still expect a good amount from you. Overall, I enjoyed this class because the content was genuinely fascinating and it only met once a week, but I still had to work pretty hard.",
                    "58": "good course to fill the ethics distro. The topics that were discussed were actually interesting and the professors were engaging. <br><br>Weekly work was pretty minimal, just reading and annotating a couple of articles. The debate and video presentations were graded pretty leniently I felt. The final paper was not too hard to write.",
                    "59": "Love this class. Lightest class (workload wise) I have ever taken here. The 3 hour lecture + discussion on Monday evening was a lot, but I enjoyed it. This is the class for you if you love CS and Law. The class talks about so many of the new and rising technologies and some of the policy implications these have. Such a great class. No exams. Just show up to lecture and discussion, do the comments on the readings, and submit the deliverables (Final paper, debate, and topic outline)",
                    "60": "Great distro, interesting topics covered in lectures, reasonable amount of reading per week that are mostly interesting. Participation is determined by discussion post written during the discussion session, which is low stakes for people who have a hard time speaking up in a larger class. The paper is well instructed, lots of rounds of feedbacks received (topic, outline, presentation) that I personally received great feedback from my peers. The debates are on interesting topics but the quality really depends on the execution of each group. Very knowledgeable instructors definitely value taking a class with a prof that flies in to teach!",
                    "61": "TAKE IF YOU HAVE THE SPACE TO!! I LEARNED SO MUCH AND I GENUINELY ENJOYED IT SO MUCH!!!",
                    "62": "This course was a lot of fun! We learned a lot about how new technology influences the law.",
                    "63": "I am not super interested in law and so this course wasn't really for me, but I think it covered a wide variety of relevant topics. The readings are definitely helpful and not too long, and the assignments are spaced out with plenty of time to complete them."
                },
                "school_demographics": {
                    "Weinberg": 28,
                    "McCormick": 8,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 10,
                    "Sophomores": 16,
                    "Juniors": 9,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 262-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.5,
                    "student_count": 6
                },
                "student_opinions": {
                    "0": "I liked this course, and the professor was really cool. You pretty much get what you see on the course description; problem sets and homework are similar to CS 212. Some of the linear algebra topics were a little repetitive from EA 1, which should have been a prerequisite so that we didn't have to go over it again.",
                    "1": "This class was a continuation of Cs212 so expect it to be as difficult if not more.  Very interesting and good for stats credit but definitely required a lot of work.",
                    "2": "I think the professor is very genuine and a kind grader, the content is kind of basic, but all these elementary ideas combine in a very interesting way that I personally think is worth learning. i will admit my experience might be biased because this is the first time the class is being offered and there are literally only 7 people in the class (so I think he is being extra nice?). Overall, worth taking if you have the interest. Oh yeah, we also didn't have that many grades in gradebook (literally like 7 total).",
                    "3": "Aravindan is a good instructor who writes quality homeworks and thorough slides. The homeworks are not easy and you'll want to start early so you can attend office hours. I think my biggest struggle in this class was the lack of practice problems relative to the number of concepts covered, but I have to cut Aravindan a lot of slack because this was the first time this class has been offered. For a first go, CS 262 was a good course, and I have high hopes for what the course can become with more quarters of refinement. If you're looking for something to fulfill the McCormick statistics requirement, this class will definitely teach you a ton, but it's also going to be much harder than IEMS 201. Pick you poison!"
                },
                "school_demographics": {
                    "Weinberg": 3,
                    "McCormick": 3,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 4,
                    "Juniors": 0,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 295-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.37,
                    "student_count": 93
                },
                "student_opinions": {
                    "0": "Nice class. Games were interesting, but ultimately, I’m not sure how much I’ll use/play them in the future.",
                    "1": "Learning about the generative methods behind Imaginarium and similar programs was very interesting. The troupe meetings were pretty fun, albeit a bit more time consuming that I would like.",
                    "2": "if you like ian, take this class. If you don't like ian, do not take this class",
                    "3": "This class is great! Its essentially learning through RP games (i.e. like D&amp;D), so if you don't like rp I wouldn't take this class. If you do, perfect! Because Ians amazing and the class is fun. The time commitment can be a lot, but you can also work out a minimal time commitment with your group. The time commitment is about 4–5 hours outside of class for meeting to play the game assignments. Easy class, very easy.",
                    "4": "The course has a decent amount of work to be done. TTRPGs are role playing games that are more narration based, so if that is something that interests you, then this course would be perfect. There is also coding assignments that do teach you important algorithms/ concepts.",
                    "5": "Pretty much what you would expect, play role playing games once or twice a week. More fun if you sign up with a group of friends (6 per group). Not very time consuming but you know you need to meet every week so it's not difficult but you will have to put aside some time.",
                    "6": "Only take this class if you have a group of people you would be comfortable forming a role–playing group with. I had a few friends in the class and ended up with a good group, but I imagine this class could be miserable if you end up in a group you don't click with. The course was 90% synchronous group work, which made scheduling and logistics frustrating at times. The computer science component of the course was very doable, and there was pretty limited extra expectations for the CS students. If you have a group, this is a very fun and creative way to get an A in a CS elective.",
                    "7": "Class focuses on roleplaying and requires playing weekly games that can take anywhere from 2–4 hours. The coding projects just felt like busy work added in order for the class to even be considered a CS class; they also didn't seem to be very practical. Only, take this if you are looking for an easy A to boost your GPA.",
                    "8": "Very fun an interesting course. Group is super important, if you have a good group it'll be a good time. Otherwise it would be difficult to get through the course.",
                    "9": "make sure you get a cool group<br><br>grading:<br>Individual assessments (50%)<br>Group assignments with your troupe (50%)",
                    "10": "In theory this should not be a difficult class if you are willing to a) self–learn some C# and b) meet up one or more times a week to play board games with a group. However, unless you really love learning new board games all the time and roleplaying, I would warn you about taking this class. It gets pretty dull after a while.  Also we don't cover any programming concepts during class for the two coding assignments, so it was kind of jarring having to suddenly do some coding in C# in the middle of the quarter. He does give like 2 weeks to do them though, so it's fair. Overall, an in–theory easy class that isn't for everybody.",
                    "11": "This class is really interactive, and was a fun way to incorporate theatre/role playing with comp sci. The coding assignments themselves weren’t bad, though they were pretty non traditional  hw assignments.",
                    "12": "This class was fun. You play games every week with your troupe and each session takes about 2–3 hours. The coding assignments were not too difficult as well. Overall, fun class.",
                    "13": "This class is about ttrpgs. It is incredibly fun, but it is not too much of a cs class.",
                    "14": "We got to play a lot of table top roleplaying games with our group, but some of the games have very long instructions and can be confusing to someone who never played. There's no hard work but some busy work.",
                    "15": "Overall, a very fun class, but as the quarter progresses, you realize that lectures and readings become less and less relevant to what you're actually doing. A whole week of lectures can be used just explaining a game system you'll only play with one time, and readings were interesting, but never necessary to understand any of the concepts we talked about. <br>The main focus of this class is the games you play. They're a great time and a good opportunity to make friends, but also very demanding of your time.",
                    "16": "The documentation for the language used in imaginary is very frustration at times.",
                    "17": "Watching the recorded lectures vs the ones in person was a pretty large disconnect, especially with the hacking assignments but playing the roleplaying games was fun.",
                    "18": "Very chill class. I learned a lot about TTRPGs and role playing, not so much CS though. Take this class if you enjoy games like Dungeons &amp; Dragons, or have any interest in those games. The C# assignments were pretty useless in facilitating learning though.",
                    "19": "Troupe chronicling take the most time",
                    "20": "I definitely think that this class is best taken with a group of friends. If you're looking to take this course as an easy class, beware that this course has a fairly big time commitment outside of class compared to what you might expect. My group and I met twice a week for 1–3 hours each session. On top of that, you're responsible for weekly group reports (which are fairly straightforward, always asking the same questions), individual coding assignments, and occasional readings/asynchronous lectures. However, if you think you'd enjoy table top roleplaying and learning about how AI can be used to help with story generation, I'd definitely recommend taking this class. Coding assignments relating to AI systems that Ian has made (called Imaginarium and Step) were fairly straightforward and the hope was that you would have fun with it. There were also 2 C# assignments, which definitely took relatively longer, so I recommend starting those as soon as possible so that you can go to office hours once you run into bugs or confusion. Otherwise, I do think your experience with the class will largely depend on your group. My group and I had a lot of fun because we were all on board with making each game as goofy and chaotic as possible, so I recommend coming in with an idea of who you'll be working with, ensuring that your play styles are compatible.",
                    "21": "Pretty chill class, mostly roleplaying, however, I expected more AI (which is the main reason why I signed up).",
                    "22": "idek how this class counts as a CS credit tbh. Requires a decent chunk of outside of class meeting time every week with your group. Reverse classroom style and you just play mini RP games during class. Lots of readings/videos the first few weeks but it gets lighter later in the quarter. 2 CS assignments this quarter based on implementing parts of programs that the professor has written.",
                    "23": "This class is pretty fun it u want to take it seriously",
                    "24": "This course was a complete waste of time. There were way to many assignments about nothing. The only fun part of this class was that I had a fun troupe to play the roleplaying games with. Otherwise, this course is just bad. It's not a CS course. There were two CS assignments and I didn't feel like they really taught me anything. Yet I still ended up spending a lot of time doing assignments because there is just so much non CS related busy work. This class overstayed its welcome. I stayed until Thursday of finals week to do our final presentation (which is a bs, no stakes, basically means nothing final btw) when I could've gone home earlier. Easy A though.",
                    "25": "Cool class. Try to be in a group that likes RPG though. those are the best.",
                    "26": "Not really what I expected it to be but it was pretty fun, just need to block out time for meetings",
                    "27": "Pretty great course if you want an easy A and simply play some fun role playing games. I've never played role playing games in my life but this class was actually pretty fun, it was a breath of fresh air compared to all of the other grindy and painful CS courses. Take this course if you just want to have some fun and get a bit of time to relax in your schedule.",
                    "28": "If you like TTRPGs, take this class. If you have friends who are trying to bring you into this class bc they like ttrpgs, have them do a quick one with you to make sure you like them. I don't like TTRPGs. The class was fine. The homeworks became more and more like pulling teeth towards the end. It's a great class and Ian's my spirit animal, but be sure that you like this class. 50% group project (3–5 hours of a group project per week) and 50% personal stuff (2 C# homeworks, 2 AI homework assignments). If you want to learn C#, take a different class. Take Ians 376, bc it's incredible and amazing. It wasn't a lot of work overall, but it was a bit boring.",
                    "29": "This course depends a lot on how engaged your troupe is.",
                    "30": "This class was so much fun! Ian is a great instructor, and the assignments aren't too difficult if you attend class and watch the additional lectures. It is a big time commitment outside of class, but overall, super enjoyable.",
                    "31": "Please only take this course if you happen to have a relatively free quarter and are looking for fun classes to fill your schedule. It's not particularly a difficult class but rather time–consuming and you may have to block out chunks of time during your week to play the weekly games. I do have to clarify that it is loosely computer–science–y but when you get to do the computer science stuff it's the very nitty gritty parts like SATSolvers and language parsers. As a freshman with 0 experience with these concepts as well as the C# language, I found this to be quite exciting and rewarding actually – Ian does a very great job guiding you through most of the assignments and so do the TAs.",
                    "32": "One of the most entertaining classes; take this class with a group of friends to mess around and have a chill time",
                    "33": "Course was fun!! Go in with a troupe in mind or group of friends, cause you'll be spending a decent amount of time with them every week. Lectures were boring and not always super related to the game at hand, but we did a lot of activities in them that were fun in their own right. All in all,  a fun elective if you don't mind RPGs and are in a good group!!",
                    "34": "fun class. surprisingly troubling coding assignments. was a little annoying to meet outside of class so often and have to understand 40+ page rulebooks for games",
                    "35": "just play games every week and write a chronicle and report per game not very hard; coding assignments every once in a while kinda hard for those new to programming but manageable",
                    "36": "This class was really fun and unique, especially for a CS class. We played RP games with our troupe (groups of around 6) assigned in class for around 4 hours per week, which is a bit of a time commitment but it's very fun and manageable. For the CS majors, there are 2–3 coding assignments in C# which were doable and 2–3 Imaginarium assignments (for non–CS students too). Overall, it was a really interesting format for a class, and I totally recommend taking it.",
                    "37": "Ian is a great professor his classes are great. This class is a Computer Science class, as CS student you will need to do a few assignments that range in difficulty and if you haven't ever used unity or C# can be pretty hard because they are a little bit out of focus relative to the rest of the class. With that said, the focus in this class is generating stories and game design by focusing on table top rpgs. This is a great class to take with friends (groups are 6 people), but if you get a really bad group you will most likely not enjoy the course. Playing games is really the focus. If you are looking for a CS elective, it's a great class but if playing role playing games where you use dice and have a dungeon master does not sound fun, maybe take a different class.",
                    "38": "Note: I would highly suggest only taking this course if you're actually interested in tabletop roleplaying games. <br><br>If you are: this is a really fun course! I highly enjoyed it, and it was fun to get an opportunity to try out new systems while also learning more about coding topics related to integration with random generation and the space they could have in tabletop gaming.<br>I would also suggest making sure that your teammates are also interested in tabletop games. Otherwise, it's very easy to run into a situation where you're very excited for this class, but your teammates are not nearly as interested",
                    "39": "This course is more work that I expected, and even though it was a lot of busywork, it still caused its fair share of stress. Make sure you find troupe members that have similar expectations for the intensity of the games you play (a good balance between CS and theatre majors is key).",
                    "40": "Prof. Ian is so whimsical",
                    "41": "I enjoyed having a group to work with.",
                    "42": "This is a class mainly about narrative games and game design. Much of the time spent on this class is outside during group meetings where we play tabletop RPGs. Each game session usually went for four or five hours. It's not easy to do in one sitting and becomes tiring, especially if you do not particularly like the game. I recommend taking breaks during your group meeting in between rounds of a game. The few programming assignments in this class were difficult, mainly because I did not have C# experience beforehand, but the instructions provided for each assignment were clear enough. It was a fun class, but I would only recommend it if you can get a bunch of friends to join with you. It also feels difficult if you have no experience in game design. For the game design projects, it was clear which groups had members with lots of game design experience or already took COMP_SCI 376 (game design and dev),  which is not a pre–req for the class, but definitely gave those who did a slight advantage.",
                    "43": "A for–fun course you can take if you enjoy some TTRPGs. It seems like a good portion of students taking this course are just here for the easy credit though. If you're not taking it with friends, don't expect others in your group to be enthusiatic in your weekly games.",
                    "44": "I was so excited to take this course, thinking that it would be really insightful into the mechanics and narrative capacities of tabletop roleplaying games. However, upon seeing that it was a large lecture course, the course began to lose its appeal. We barely interacted with the professor, and he didn't even have his own office hours, and it seemed that students were playtesting a game for the professor's friends that wasn't very good to begin with.",
                    "45": "I think the course was very fun and I highly recommend it if you have a group of friends that all need to knock out an elective requirement. The C# assignments were not very well explained and they ended up being very difficult. If you go to office hours you should be fine though. Other than that this course was a whole lot of fun.",
                    "46": "The professor was very nice and willing to help out his students.",
                    "47": "The class is pretty good overall. If you like to play tabletop role play games you'll enjoy the class. If you don't, the games are definitely going to be tedious as you have to come up with some on your own and play them for several hours each week. The coding assignments range in difficult from incredibly easy (less than 30 minutes) to several hours if you aren't already familiar with the concepts on some of the C# homework.",
                    "48": "play games",
                    "49": "I think this course helped me learn more about AI and tabletop games. However, I did not feel like I truly understood what I was doing in the coding assignments fully. I managed to finish both of them but even now I can only understand about half of what I even did. It's a good course if you really like playing tabletop games. It is not a good course for learning code, and it is really really difficult to complete the coding assignments not because they are terribly long but because it's hard to understand what you are being asked to do.",
                    "50": "This course was super fun and Professor Horswill is easily the best professor in the CS department, so you can't go wrong taking a class with him. He made this class super fun and I enjoyed it a lot. Definitely take this class if you are looking for a chill fun class, although there is definitely some hours you will have to put into this class to complete the assignments. None of them are hard and you should easily get an A on them, but they definitely can take some time to complete.",
                    "51": "Easy but time consuming course, make sure to prepare for the coding assignments, they are not as easy as you think",
                    "52": "This class is fun, BUT TIME CONSUMING! Make sure to just make time for this class if you really want to reap the benefits and enjoy to the fullest! Ian is also a very understanding professor, but you cannot turn in assignments late or you get a 0 (no redemtion). If you get permission from your school, you can get an extention, so it is kind of a process, but if you want the A and know you cannot turn something in late, then you just gotta do what you need to do. Overall tho, great class. AND SHOW UP FOR CLASS! It is fun, and Ian doesn't deserve an empty auditorium."
                },
                "school_demographics": {
                    "Weinberg": 44,
                    "McCormick": 38,
                    "Medill": 1,
                    "Comm": 7,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 8,
                    "Sophomores": 30,
                    "Juniors": 46,
                    "Seniors": 7
                }
            }
        },
        "COMP_SCI 296-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.44,
                    "student_count": 9
                },
                "student_opinions": {
                    "0": "No coding in this class, just presentations and papers to write. You are put into groups of 3 so make sure you have a good group that you would be able to work well with when creating presentations and papers. VS is a very good professor with very insightful lectures, and connections to guest speakers that are very interesting in the topics of AI and international security",
                    "1": "The course was really interesting, and most of your grade depends on a quarter–long research project that you can choose the topic for, so it's pretty fun. The lectures were clear and understandable, even for non–CS majors, and the discussions about cybersecurity and terrorism were engaging. Highly recommend taking the course with Professor VS, he is very involved in this field outside of NU and you can definitely learn a lot from him.",
                    "2": "I learned about AI and international security.",
                    "3": "I really enjoyed this course primarily because of VS. He was such an interesting professor and I think he, for the most part, carried this class. The slides, homework assignments, and the final project all were beneficial for the class, but I really enjoyed this class just to be able to come in and listen to and talk with VS. He does such real important work in the exact field of what this class revolves around, so he has the ultimate perspective to teach this class well and he does. Sometimes I felt like some students would kinda get a little put on the spot with questions they had no clue how to answer, but it was coming from a place of trying to initiate engaging conversation and he never judged people’s responses (unless it was for a more formal presentation). Overall great class because of the professor and diving deep on the final project was pretty engaging for me."
                },
                "school_demographics": {
                    "Weinberg": 0,
                    "McCormick": 9,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 4,
                    "Juniors": 3,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 298-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.71,
                    "student_count": 17
                },
                "student_opinions": {
                    "0": "This class was great, and learned so much about what CS graduate school feels like. From lectures, discussions, and panels, we had all our questions answered. The assignments are meant to teach you about techniques and tips needed to survive in graduate school and working in a group setting. I loved it and Maryam is a great instructor and a very cool person.",
                    "1": "If you aren't sure but might be interested in CS research, this class is for you. It does a great job of teaching you what research is like, at every level – from undergrad to PHD. You get assigned a group in a topic of your choice, and then meet with a mentor every week (a NU Professor who will supervise your research) as you develop a research project to do with your group the following quarter. In class, you get to talk to PHD students to hear about their tips and tricks and experiences, learn strategies for reading difficult research papers and work towards developing a research project, with your group, that you will participate in the following quarter. The class doesn't have much busywork, and is very student driven, both in that the teacher very open to what you want to get out of it, and in that if you just want to not put much effort in, you can get by. This class was useful for me to find out that CS research might not be for me – I don't know a better way I could have figured this out, at least within a quarter and without making a commitment I would likely have regretted.",
                    "2": "I think this class is a good introduction to computer science research. The weekly lecture often contained a panel with PHD students discussing their research and their experiences which I think is very helpful for any students considering pursuing a PHD. I thought the course was also structured pretty well, covering concepts like how to read research papers, how to give a good presentation, etc. The one issue I have is that having a good or bad advisor for your project can have a big impact on the course, since the advisor is the main influence on the project you are going to do.",
                    "3": "This course brought in graduate students as guest speakers to talk about their research and workflows which was interesting. This was the first time the course was taught so there were some growing pains but all of the projects that groups got were worthwhile.",
                    "4": "I enrolled in this class with the goals of gaining insight into the research process and developing the necessary skills for conducting effective research. After taking the class, I achieved all of my goals!  Professor Maryam is amazing – she's super caring, really warm, always ready to lend a hand, and knows her stuff inside out when it comes to research. If you're thinking about getting your hands dirty in research, this is the class to take. Big shoutout to Maryam for being awesome!!!!",
                    "5": "A good course that gets you started with Research. The staff is knowledgeable and the workload is not heavy. You are responsible for getting the most out of this course by working on your research project.",
                    "6": "A nice way to be hand–held through research in a low stakes environment. Good stuff.",
                    "7": "I think it lacked the ability to stimulate our interest in research. The proper way of just reaching out to a prof with a project in mind may be interesting. Much of the taught info can be learned during that process.",
                    "8": "I found the class enjoyable overall. However, while my assigned supervisor has been supportive, I would have preferred clearer feedback from him. Our team ended up having to navigate most aspects independently, where we initially expected more guidance from the supervisor.",
                    "9": "This class was great! Not too much work but engaging.  I enjoyed hearing from several CS PhD students about their experience and I learned a lot about the CS research process, from idea to paper/presentation. However, I do think my positive experience was largely shaped by my advisor and group.",
                    "10": "I enrolled in this class with the goals of gaining insight into the research process and developing the necessary skills for conducting effective research. After taking the class, I achieved all of my goals!  Professor Maryam is amazing – she's super caring, really warm, always ready to lend a hand, and knows her stuff inside out when it comes to research. If you're thinking about getting your hands dirty in research, this is the class to take. Big shoutout to Maryam for being awesome!!!!",
                    "11": "A good course that gets you started with Research. The staff is knowledgeable and the workload is not heavy. You are responsible for getting the most out of this course by working on your research project.",
                    "12": "A nice way to be hand–held through research in a low stakes environment. Good stuff.",
                    "13": "I think it lacked the ability to stimulate our interest in research. The proper way of just reaching out to a prof with a project in mind may be interesting. Much of the taught info can be learned during that process.",
                    "14": "I found the class enjoyable overall. However, while my assigned supervisor has been supportive, I would have preferred clearer feedback from him. Our team ended up having to navigate most aspects independently, where we initially expected more guidance from the supervisor.",
                    "15": "This class was great! Not too much work but engaging.  I enjoyed hearing from several CS PhD students about their experience and I learned a lot about the CS research process, from idea to paper/presentation. However, I do think my positive experience was largely shaped by my advisor and group.",
                    "16": "This class was great, and learned so much about what CS graduate school feels like. From lectures, discussions, and panels, we had all our questions answered. The assignments are meant to teach you about techniques and tips needed to survive in graduate school and working in a group setting. I loved it and Maryam is a great instructor and a very cool person.",
                    "17": "If you aren't sure but might be interested in CS research, this class is for you. It does a great job of teaching you what research is like, at every level – from undergrad to PHD. You get assigned a group in a topic of your choice, and then meet with a mentor every week (a NU Professor who will supervise your research) as you develop a research project to do with your group the following quarter. In class, you get to talk to PHD students to hear about their tips and tricks and experiences, learn strategies for reading difficult research papers and work towards developing a research project, with your group, that you will participate in the following quarter. The class doesn't have much busywork, and is very student driven, both in that the teacher very open to what you want to get out of it, and in that if you just want to not put much effort in, you can get by. This class was useful for me to find out that CS research might not be for me – I don't know a better way I could have figured this out, at least within a quarter and without making a commitment I would likely have regretted.",
                    "18": "I think this class is a good introduction to computer science research. The weekly lecture often contained a panel with PHD students discussing their research and their experiences which I think is very helpful for any students considering pursuing a PHD. I thought the course was also structured pretty well, covering concepts like how to read research papers, how to give a good presentation, etc. The one issue I have is that having a good or bad advisor for your project can have a big impact on the course, since the advisor is the main influence on the project you are going to do.",
                    "19": "This course brought in graduate students as guest speakers to talk about their research and workflows which was interesting. This was the first time the course was taught so there were some growing pains but all of the projects that groups got were worthwhile."
                },
                "school_demographics": {
                    "Weinberg": 9,
                    "McCormick": 8,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 17,
                    "Seniors": 0
                }
            }
        },
        "COMP_SCI 301-0": {
            "2024 Winter": {
                "course_rating": {
                    "average": 3.89,
                    "student_count": 9
                },
                "student_opinions": {
                    "0": "This course is a mixed bag. From a cs perspective, it was a nice change of pace to work with my hands on the physical components, and the coding assignments were interesting but not too difficult. However, having to complete everything during lab was extremely stressful and tiring. The grading was extremely harsh (compared to what I'm used to I guess), since the main thing we were graded on were our lab reports, which were graded extremely harshly. And those lab reports were very time consuming and draining to right, as they had to be very long and thorough. The pms were nice and the professor was great. The lab was also extremely hot even in winter quarter. All in all its a good class, but there are some issues so make an informed decision.",
                    "1": "The course is graded based on how well you do on 4 lab reports. 90% of your grade is based on these reports. The late penalty is insane, 5% an hour so don't even think about turning it in late. Since the class is fully graded on the labs, your success or failure doesn't really matter for your grade. This is a good thing because sometimes your robot is just bad, but its a bad thing because you won't feel like putting in actual effort to make your robot work.  The whole quarter you are working with one partner, which would be bad if you partner doesn't know what they're doing or good if your partner is a genius. The worst thing about this class is that you don't have access to your robot outside of class time so if you want to do extra work outside of class all you can do is write python code and hope that it works.",
                    "2": "For the best experience, don't be afraid to talk to your classmates and make friends with them.",
                    "3": "This is a very interesting and engaging class if you have any sort of interest in robotics, but if you do not, it can definitely be a grind. You have to be passionate about the subject to endure the 6 hours of classes a week. On the other hand, you do not have very much work to do outside of class for the most part, besides the lab reports every 2–3 weeks or so, which are not that bad if you manage your time wisely. The thing is, you can't work on your robot projects outside of class, which can be frustrating if you are unable to finish in class. Professor Argall does not usually expect you to finish your assignments in class, and you can discuss what you would have done in your reports, but with extra credit being tied to robot performance, it would be nice to be able to access your robot outside of class.",
                    "4": "This is such a great class, the professor is really knowledgeable and there's a lot of room for creative freedom. It's a bit fast paced but really fun overall",
                    "5": "I was very interested in learning about robotics as a CS major and this course offered a very solid intro to robotics. Prof was chill, the assignments were interesting, but the hardware was a bit inconsistent but like that's just how it is irl. Only gripe with the course is that we can't work on the robots outside lab hours and the TAs do grade the lab reports pretty strictly so yea spend some time on those although you probably still won't get the marks you expect.",
                    "6": "The course grading is very unclear. The class itself is fun, but a bit stressful because there you have to get so much done in a set amount of time to at least get a chance to get a good grade. But, I gradually started liking the class. There might be easier classes to get an A in but this class is fun and chill. Sometimes seems impossible to get an A though.",
                    "7": "Interesting class. Good professor. She's kind and she grades fairly. <br>Horrible grading system. Based on \"if you check off everything in the checklist, you get a B. You get an A if you go \"above–and–beyond\" in every section\", where the latter is not truly defined (although they give you advice but sometimes doesn't feel like they follow up on it). Because of this, reports take around 20 hours to write. <br>Having a good partner makes the class bearable, but having a bad one makes the class impossible."
                },
                "school_demographics": {
                    "Weinberg": 2,
                    "McCormick": 6,
                    "Medill": 1,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 3,
                    "Juniors": 4,
                    "Seniors": 2
                }
            }
        },
        "COMP_SCI 307-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.78,
                    "student_count": 32
                },
                "student_opinions": {
                    "0": "homeworks were extremely challenging, with at least one question on each homework that even the PMs couldn't help with. no extensions granted. lecture was sometimes too hand–wavey, and other times too in the weeds. i would have liked more practice problems (in class, and practice problems for the final), more class engagement, and more full proofs.",
                    "1": "This course covers difficult concepts (particularly at the start of the course), but as you get a hang of it and Xiao's teaching it becomes much easier and really interesting. I learned a lot, and think the effort was well worth it. Xiao is very fair and tries his best to prepare us well for the exams through the HWs, quizzes, and hints he gives us during class. I never felt blindsided by the questions on the exams. <br><br>I would say in order to do well you have to go to class. Classes are recorded, but it's much harder to grasp the concepts versus if you go IRL. Also, start the homeworks well in advance because they take a while and you will definitely need to go to OHs for help.",
                    "2": "Cryptography is a proof–based course, and the most time–consuming part is finishing the assignments. The concepts themselves are not too difficult, but understanding and then proving them is a lot more challenging.  Exams are not bad, although going to office hours before exams is imperative if Xiao provides practice exams without answers.",
                    "3": "Professor Wang is the best. The course is about introductory cryptography. Although the concepts can be a little bit abstract, Professor Wang is capable of explaining it in a way that is accurate but also intuitive.",
                    "4": "Cryptography is somehow related to artificial intelligence and that is the reason why I picked this subject as my elective.",
                    "5": "I think Xiao Wang has a good approach to teaching and was engaging with his students. The homework was challenging but manageable as are the midterm/final. Provided a good introduction to crypto and sparked my interest.",
                    "6": "It's helpful to know some basic cryptography for CS students and I think this course will help you do that.",
                    "7": "This is one of the few well–structured 300–level CS courses. Prof. Xiao Wang is very passionate in the field of cryptography, and his lectures are tightly connected to the slides that he posted. Overall, I learned enough cryptography concepts from the course that are very applicable to the overarching theme of computer security.",
                    "8": "This class is pretty chill. Prof Wang is a good teacher and he does a really good job of making the material easy to understand (but someone should recommend to him to wear a lapel mic when he's teaching so he can be heard better on the recordings). He's also super nice and a funny guy. The material of the class is not difficult to grasp at all; there is a natural progression to everything we learn.",
                    "9": "Solid class. Be sure to come to class",
                    "10": "Xiao Wang is a great teacher, he explained the material really well.",
                    "11": "Professor Wang is great. He's a good lecturer, and very fun and funny to listen to. He's super knowledgeable and helpful, and seems most of the time like a super smart student than a teacher. It can take a bit to get used to his accent and teaching style, but I really did enjoy lectures.<br><br>This class is difficult, at least at first. Cryptography requires a really different way of thinking than any other CS class I've taken before – it's going from \"how do I create this?\" to \"how do I break this?\" It takes quite a bit to adapt to. But because its so different from other classes, it also presents some really unique challenges and really interesting puzzles. The homework, after the first few, was really interesting, and could be done in 2 hours pretty easily if you're not afraid to pop by office hours every other week. So: expect to put a solid amount of time in at the start of the quarter, like going to every office hour for the first 3 weeks. But after that, it'll be a chill, challenging (mentally, not time–wise) class. Make sure to find someone you know in the class, or meet someone, because being able to discuss HW problems is a huge help. <br><br>Exams are tricky, but not impossible. Grading is very kind, HW is 50%, 10% is quizzes that you have infinite tries on and the answers are given after your first attempt, 15% midterm and 15% final. The last 10% is participation, which you get just about guaranteed as long as you go to class once and watch the lectures most of the time. This is a great class, highly recommended if you have any interest in the subject, even if you don't expect to do much with it.",
                    "12": "This class was not what I was expecting. It was much more proof–based and there was no coding. The prof was not helpful and just pointed you towards PMs.",
                    "13": "I took this course since I was extremely interested in taking more security courses. Although I'm glad I gained a stronger understanding of encryption / decryption and other important schemes, as someone who doesn't enjoy proofs very much, I think I would have been better off learning these concepts at a high–level by myself.<br><br>However, if you can tolerate proofs (I don't believe we had to write any formal ones fortunately),  the course is very reasonable in terms of work / exam difficulty and Xiao is a good lecturer. During lecture he's willing to set aside time to dive deep into students' questions. He's also very funny which was helpful for staying engaged when the topics would get a bit dull.<br><br>Overall, if you have an interest in security and don't mind theoretical math, I recommend this course.",
                    "14": "very interesting and well taught class",
                    "15": "This course is pretty good, but the exams were not very well written in my opinion.",
                    "16": "Very interesting and inspiring lectures – definitely recommend taking courses with Prof. Wang!",
                    "17": "The professor cared about the course material but not the students or if they learned. Very hard to understand. The slides were useless. Exams confusing. Not enough PMs/office hours."
                },
                "school_demographics": {
                    "Weinberg": 9,
                    "McCormick": 17,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 4,
                    "Seniors": 17
                }
            }
        },
        "COMP_SCI 310-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.300918367346939,
                    "student_count": 196
                },
                "student_opinions": {
                    "0": "Very practical class. Nice to learn AWS.",
                    "1": "This course felt like a very surface level introduction to AWS.",
                    "2": "I recommend this course to most CS majors, especially those wanting to enter the SWE space. The course is centered around how to use AWS, and as a result the projects are equal parts following instructions on AWS and writing code. There was a lot of course support, although I could tell that Prof. Hummel was a bit overwhelmed since he was running two 310 sections and 211 in the same quarter.<br><br>Some people say that Hummel is passive–aggressive at times, but I really don't blame him. Some of the questions students were asking on Piazza were pretty absurd, especially for a 300–level class. A lot of people just could not follow directions or were posting vague \"my code is broken\" messages with no info or without reading the error message.",
                    "3": "I beseech any one who reads this to take this course with Joe. It is a must for any CS student. I wish I would have taken it before my internship because the content that I learnt would have come in handy for my last project. But either way, please take it. You won't regret it.",
                    "4": "very informative class for learning one of the more practical CS skills. pretty light course load, but you can still get a lot out of this class if you so choose.",
                    "5": "This was a great class that provided a nice intro into AWS. Projects are interesting and engaging, and the exam isn't too bad either.",
                    "6": "Pretty chill class, learned about AWS. Easy A, lots of extra credit available b/c projects were being released late.",
                    "7": "I loved this course. It teaches you applicable concepts and tools that will help you as a SWE in the \"real world,\" which makes it unique among CS courses at Northwestern. The projects help you get familiar with AWS, sql, and more without being too difficult. Try to find a group early on for final project.",
                    "8": "The content is great, but I guess this class would've been more useful to me if I took it earlier in like sophomore year. Not sure how much new stuff I learned after taken several system classes and done software engineering internships.",
                    "9": "Pretty fun class. Great to teach you the basics of AWS, and the projects are incredibly straight forward and don't require much coding knowledge, just playing around with AWS.",
                    "10": "Solid class that will introduce you to AWS and working with the cloud, something that is not the most exciting thing to learn on your own. Projects are helpful to learn but don't require knowledge from lectures, but the concepts taught are pretty applicable in general. Good balance of difficulty and focusing on the big–picture, important components.",
                    "11": "Great class with good content.",
                    "12": "The assignments are very structured and easy to follow. It helps you focus on what you're trying to do for the assignment instead of wasting a bunch of time with nonsense errors students shouldn't be dealing with. It wasn't too much work.",
                    "13": "Pretty doable class. Hummel is a great professor and cares about student. Exam is hard but there's many extra credits and slip days.",
                    "14": "This was actually a really nice class, would definitely recomend! The grading breakdown was 60% projects, 20% final exam, 20% final projects. The projects were pretty straightforward and easy to navigate even for someone without that much experience. The exam was fine but I would say definitely make sure you pay attention during class. Even if youre able to do the projects well, if youre not absorbing the theory parts of class you may not do well on the exam and youre also not going to be getting all that you can from the class.",
                    "15": "I thought the projects in this class were very easy if you already have a good amount of programming experience. As a senior taking this class, I felt like I didn't really learn anything new.",
                    "16": "The content we were learning is useful and valuable, but the amount of stress that goes into getting a good grade is unreasonable. Lectures are boring.",
                    "17": "I was super interested in learning about AWS as well doing some full stack development",
                    "18": "Quick Facts:<br>– Prof Hummel is a great lecturer, understanding of students, replies fast on Piazza, very organized for the most part<br>– this is a relatively easier class in the realm of 300 level CS classes<br>– probably contains the most real–world/applicable/industry level content for CS majors at this school<br>– covers async programming, JavaScript, SQL, Node.js, Express, AWS, some database design, &amp; scalable architecture as a whole<br>– dives deep into how large scale applications function/scale– opens the black box of how the tech industry functions at a coding level<br>– 4 homwork projects, 1 final project (can be done in teams), final exam<br><br>Other Info:<br>– if you have taken CS 340 (Networks), this class takes those concepts and applies them to how they are used within industry<br>– the content in the class teaches you about the concepts in cloud computing, the options you have as a programmer, and the use cases for each technology",
                    "19": "Professor was very understanding to sickness chronic and acute. Learned asynchronous programming and Javascript officially for the first time. Loved how much Prof slandered JS. May this course continue to scale.",
                    "20": "A must–take for aspiring SWE's. Workload is very manageable and Hummel is a great instructor. The passive aggressive piazza posts are undeserved.",
                    "21": "It was a great course. A little disorganized, but overall worth taking for good exposure to cloud computing.",
                    "22": "Really useful class and professor Hummel has a great teaching style.",
                    "23": "Good class.",
                    "24": "This is a great course to take at Northwestern, and something that I dare say that every computer science student should have to take. Cloud infrastructure is at the backbone of all of the things we do today, and understanding better, can only make you better at understanding the computers we use now. In terms of this course, the material is all very engaging, especially the lectures. The projects, which make up the bulk of the course are related, but also self–contained, in that if you missed a week, you'd be able to pick it up pretty easily. There is a final, that's probably going to be the most stressful part of the quarter, but lectures are all there for you and there is plenty of time in the exam. 10/10 would recommend.",
                    "25": "Good class, lots of important basics of software development, not so hard, professor hummel is a nice guy. Not gonna win awards for most interesting class but it gets the job done.",
                    "26": "I enjoyed this class. I felt like the material was interesting and useful, while the projects were not too difficult. The projects build off one another, and was based on everything we learnt in class. The exam was a bit difficult, but it wasn't too bad. Everything felt a little rushed towards the end though.",
                    "27": "Good course. Prepares you well for what you might work on for software engineering.",
                    "28": "Great and extremely applicable course. Make sure to give yourself enough time for the final project, it can be more work than you think depending on what you choose.",
                    "29": "A must take CS course. Try take this course as early as possible if you are interested in going into software or build/ join a start up. It teaches you everything modern SWE needs to learn. Also not a difficult course.",
                    "30": "If you want to learn some basic AWS, this is a great class for that. Not particularly intellectually challenging, but you do learn some things from it. Projects are not hard and not every week, and helpful in terms of understanding the material and using the tools. The deadlines are kind of messed up as Hummel seems to be busy and doesn't always post the homework and auto graders when he says he would, so it's best to start on work early rather than late despite them not being super hard.",
                    "31": "This class is really fun! The instructor is very nice!",
                    "32": "Super interesting and relevant class. Hummel is a great professor, just don't ask dumb questions or you'll get hit with his passive aggressiveness LOL",
                    "33": "The class is great. Projects are interesting. Professor Hummel is really good.",
                    "34": "This class taught me a lot of really useful software engineering skills, and helped a lot in technical interviews. Joe is a good lecturer and knows how to engage the class.",
                    "35": "Thank you for Professor Hummel's existence.  the lecture slides and project guidelines are very organized, class recordings and audios are always very very on time. Professor actually takes time to reply to most (if not all) piazza post (cry so much gratitude). thank you for NOT being monotone and boring and always have examples. Really appreciate the in class code as well as the class discussions. I felt like this will be such an useful class prior to my first internship (actually encourage sophomores to take it if possible)",
                    "36": "Definitely a great class where you learn so much, and Joe Hummel is a great professor. Very useful content too.",
                    "37": "This is probably my favorite course at northwestern and definitely my favorite CS course. Professor Hummel is a great teacher who is engaging and covers really useful topics. I enjoyed learning about the cloud and how to build web services/apis, interact with databases and s3, and also use aws lambda to perform computation. This class is perfect for understanding how a software platform works in the cloud and can be helpful for interviews. My only minor suggestion is to also teach more about distributed computing technologies.",
                    "38": "This is a great class that teaches you how to use AWS and write server and client components to develop APIs. Highly recommend and also low time commitment .",
                    "39": "This is a great class. Professor Hummel is a bit unorganized, but the content is incredibly applicable to real–world systems and software engineering. Learning AWS is great, and the projects are never too difficult or time consuming. Would absolutely recommend this class.",
                    "40": "great course overall. there are four projects, a final project and an exam, all very manageable but you learn a lot if you go to lecture. hummel is a great lecturer and if you every have an issue, his office hours are super helpful.",
                    "41": "Easy but very useful",
                    "42": "The projects were good and lectures were helpful, definitely go to class when you can and start the projects somewhat early.",
                    "43": "This was a great course! A general overview of AWS that felt very applicable to the real world/internships. Prof. Hummel is a great lecturer, but he did seem disorganized at times.  Overall, highly recommend. It was interesting but not unnecessarily hard.",
                    "44": "This course was super useful for my technical computer science skills! It was basically an overview of how to use AWS, which is a must–have skill for doing self projects (and for having on your resume). The course’s grading is based on a bunch of projects, which are pretty easy in terms of coding, and one test. While I would say the projects are pretty simple, they did do a great job giving me a solid understanding of how to use each AWS feature we covered. I liked Professor Hummel’s more relaxed (but still engaging) teaching style. Overall, a pretty easy course but also incredibly useful for my cs skillset. I feel like I learned a lot, and I'm glad I took this course.",
                    "45": "It was a great opportunity to learn AWS and its various services. The clear and detailed instructions along with the prof's diagrams were very helpful for the learning process. The final project is also a good time to research beyond the course material if you wish. AWS was always a little intimidating due to all the configurations and the seemingly complicated architecture but this course guides you through quite well.",
                    "46": "Great course! Projects were intensive to where you learn the material but not difficult to where it's annoying to do. The class is just 4 projects + final project and one exam. This class teaches some important topics in software engineering and definitely worth taking. Hummel is a great lecturer and very knowledgable on the topic.",
                    "47": "Very easy, do–able course, but you still learn so much. The material and execution was perfect. Greatly planned course. It's not an extremely intellectually challenging course though, if you're looking for something like that.",
                    "48": "Learn all the fun knowledge in a not very code–heavy context.",
                    "49": "Practical application was the most important and useful aspect of this class. The projects helped a lot to understand concepts and to sharpen skills.",
                    "50": "Pros:<br>– Relatively easy class. Unlimited Gradescope submissions means you keep submitting until you get 100% on the autograder. Projects were easy because 80% of the instructions are given, and you write maybe 200 lines of code per project. Exam was a bit confusing for some questions, but definitely not hard.<br>– Hummel is an engaging lecturer as always and very reasonable with deadlines (late tokens provided). Sometimes he seems a bit passive aggressive on Piazza, but I'm pretty sure that's because of his quirky texting style, because he's really nice and understanding in person.<br><br>Cons:<br>– This class becomes trivial if you have past Javascript or web dev experience, so I would not recommend taking it if you have significant backend experience because you won't learn a lot. Otherwise, it's a decent intro to backend development.<br>– Projects are released late and grading generally does not keep up with the pace of the class. So you might feel frustrated if you like to finish things early. I personally worked on the projects close to the deadline so it wasn't a big deal.<br>– This class sometimes feels like a work–in–progress, which makes sense given that Hummel revived it and revamped the content after Tarzia left.<br>– This class covers less content than Tarzia covered in the previous version of the class. There's a lot less systems content, apart from high–level discussions of how to architect a backend system.",
                    "51": "This was an exceptionally great course with a lot of engaging and valuable material for my future career. The projects took so long to show up, making me have to do several last minute work, but overall, 310 was a solid course.",
                    "52": "Very good class",
                    "53": "Really interesting class where you learn about AWS and general system architectures. There are three assignments that are pretty easy. One exam that you will do well on if you attend lecture. The final project is completed in a group and it's pretty much an extension of what you did in the assignments. Great class, highly recommend.",
                    "54": "Learned a lot about AWS and software architecture, and the final project enforced this really well. Would just like for the course to be more organized –– projects were released days after they were supposed to be, and Gradescope would often only be opened the day the submission was due, making it very difficult for people to plan ahead and get the projects out of the way.",
                    "55": "This is really a great course to learn about AWS. The professor is a very good teacher, the lectures are clear, and there will be code demonstrations, which is very good. The homework is normal and the TA is very kind to help you with bugs. Overall, highly recommended",
                    "56": "The projects are relatively straight forward, and this course is definitely a good introduction to programming large–scale web applications using AWS.",
                    "57": "One of my favorite CS classes at NU, tied with CS 343. This class does a deep dive into the cloud and how we build modern applications. Very interesting and engaging class which is super important for you to take if you plan on being a software engineer. Workload is manageable, highly recommend.",
                    "58": "Awesome class, really interesting material and relevant assignments. There are 4 projects/HWs throughout the quarter (4th one ended up being extra credit since it was posted pretty late). Projects are usually a mix of JS, Python, and SQL, not a lot of coding is involved in some of them, just need to know your way around the specific topic. Most time–consuming part is setting up the projects properly in AWS, can take a while to click through all the buttons and pages. There is also a final exam that is pretty easy, can get a decent grade as long as you actually go to lecture. There is a final project that can be done in groups, and is very flexible in topics. Can be pretty simple depending on what you decided to do, just make sure to not leave it to the last minute.",
                    "59": "This was a very practical course and gave me real–world utilities to use in my every day software development. I am not sure I have taken a more practical course thus far at northwestern. This even beats 336 which is a practical course in terms of prepping students for technical software interview questions. This is practical for cloud software systems and system architecture which is lowkey more important.",
                    "60": "Projects are chill and you get to learn about node js and SQL and AWS. Professor is really nice and records lectures.",
                    "61": "This was by far my favorite course I took at NU!! As someone who essentially had no exposure to AWS and limited knowledge of crucial software concepts like REST APIs, architecting scalable software systems, and starting web servers, this course gave me a solid foundation in all of that. I feel so much more confident in my abilities as a software engineer now, and I'll always be thankful for this course.<br><br>Furthermore, the course had a very reasonable workload and was rarely stressful. The exam was also very fair in my opinion if you watch all the lectures and read the questions carefully.  Lastly, Prof Hummel was absolutely amazing and really made this course stand out.<br><br>I absolutely loved this course and recommend it to all CS majors!",
                    "62": "Each projects builds on the one from before. I spent so much time fixing my output to match the Gradescope autograder with exact spacing, etc. That became a headache especially when the logic of my program was correct.  The organization of this course could definitely use some work. I think this might be because it's still a relatively new course and it takes time to make sure the projects are ready to be released. Regardless, I really enjoyed the course.",
                    "63": "null",
                    "64": "This course does a good job of easing you into using AWS and SQL.  The instructions for assignments are well laid out and do not take much time if you follow along closely. The class will be moving away from replit so become familiar with the replacement for that.",
                    "65": "Professor Hummel is an absolute GOAT.  Man gave us projects that made me feel maybe not like an expert, but competent enough to try on my own. I cannot recommend this class enough. This was his second iteration, and I think he really did a good job of giving a taste of all the topics while allowing us to learn enough of the basics (SQL, JS) to make meaningful progress.",
                    "66": "This course covers really important topics, and is probably one of the best CS classes I've taken at Northwestern. Professor Hummel is great, and you learn about technologies that are very relevant to real software engineering jobs.",
                    "67": "Great course!! This is one of the most practical CS courses offered at Northwestern, especially if you want to go into software engineering. I genuinely think this course should be required for all CS majors. The class is pretty low stress and chill, but you learn a lot. This course covers AWS basics, Javascript, asynchronous programming, APIs, and more. There are 4 homework assignments, one exam (during week 10), and a final project. The homework assignments involve a lot of AWS setup and configuration and the actual coding sections are not too intensive/hard. The only frustrating thing about the class is that it can be a little disorganized at times with homework releases frequently being pushed back (HW 4 ended up being entirely extra credit). Prof Hummel was a great lecturer; lectures were broken up with questions, code demos, and classes usually end early. I cannot recommend this class enough!",
                    "68": "Prof. Hummel is extremely communicative on Piazza, his lectures were nicely structured, and he is very understanding with deadlines. He is a fantastic professor who cares for his students.",
                    "69": "This course has a great combination going for it: you learn useful (and job–oriented) skills, and the programming itself is not too tough. There are just a few homework projects, and they're focused on teaching you how to use AWS technologies, not killing you with difficult programming problems.<br><br>This summer, I did an internship where I was using some of this AWS technology in my code, but I had no idea how it worked. (You know, it's \"Here's the code you need, don't worry about it.\") It was great to be able to actually learn what AWS does and the best way to use it in the real world.",
                    "70": "This course is fantastic. It gives real–world applicable AWS skills and Prof. Hummel is a great professor.",
                    "71": "One of my favorite CS classes. Learned a lot, very useful, and wasn't too hard.",
                    "72": "Great class! Would recommend. I do wish more things were covered but it was overall a great class to take.",
                    "73": "Professor Hummel has been fantastic as always in this course, although his curriculum is still in the works; almost every project has released late, and the fourth and last project was made optional. However, the lateness is compensated with relaxed deadlines or extra credit which is nice and always welcome. In my opinion this course is ABSOLUTELY ESSENTIAL for any CS major looking to work in software development. It's one of a handful of courses that are truly practical and applicable in every sense. You cover a lot of ground when it comes to cloud development and get to see firsthand how an implementation may work in Amazon Web Services. Instead of a final exam, you form a group of (up to 4) people and work on some final project of personal interest involving the cloud (specifically AWS). I wish the curriculum was more intensive and in–depth but the broadness also engenders flexibility; it is ultimately up to you how much AWS documentation and cloud development practices you want to read and learn. To close off, highly recommend pre–registering because this course is in high demand",
                    "74": "solid class.",
                    "75": "Really recommend this class and is applicable to outside world. Mostly projects and one exam.",
                    "76": "Really useful content and interesting projects. Professor is good at explaining concepts, thought he was often late publishing assignments",
                    "77": "There is a lot of useful stuff taught in this course, and you will definitely learn a lot. That said, it is not enough content to fill an entire quarter, and more theory of AWS should be taught to make lectures more meaningful as opposed to \"writing javascript in class\".",
                    "78": "Software architecture, Async programming, AWS",
                    "79": "Very practical class, not very difficult.  Most of the assignments building up to the end are somewhat mindless (doesn't require a lot of critical thinking, but maybe that's just an AWS thing).  The final project requires a lot more critical thinking depending on what you want to do.",
                    "80": "how to integrate aws to your current project",
                    "81": "Great class! Very easy, only a 3–4 homework projects, one exam, and an open–ended final project. The lectures are informative, and the content is very practical and applicable for industry.",
                    "82": "This class is an absolute must for any CS majors looking to go into SWE or industry. This teaches you all about how the backend of the internet works, such as servers and databases. This class mostly focused on AWS which is the industry standard currently. Lectures are also very engaging thanks to Professor Hummel, who always asks the class questions and uses replit to code live demos.",
                    "83": "This course teaches us how to utilize AWS and python, Javascript.",
                    "84": "the material in this course is easy–to–grasp, but very useful: AWS, web servers, distributed systems, kubernetes vs VM vs web functions [lambda] vs serverless [elastic beanstalk], scaleability, asynchronous programming. Hummel is a great guy and engaged lecturer. the team was very responsive on piazza. i found the labs to be meticulously detailed, so I was never grasping for straws. i wish the autograder opened up sooner before each assignment was due; each assignment was a scramble testing the code close to the deadline.",
                    "85": "–",
                    "86": "Easy but practical, not teaching some complex advanced topic, instead of teaching you how to use AWS, which is helpful for beginners.<br>To be honest, if I had met him in my freshman year, I wouldn't have hated programming for 4 years. <br>Now, everything is too late; I learned this without pursuing a career as an engineer, but it still helps.<br>Everyone said it is an easy A, but, well, I am not so good maybe.<br>However, one of the best CS courses at NU.",
                    "87": "310 was a great class. The deadlines and final were very reasonable, and it covered a variety of software engineering topics. It's a good introduction to AWS, and by the end you will have built a small cloud native application.",
                    "88": "taught a lot of things",
                    "89": "While the content is super interesting, and Hummel is great lecturer, I think the course was pretty disorganized and not well structured. The projects were always released late and were super simple. There is only one exam and it is not that tough, so you do not really need to be accountable for knowing most of the info nor going to lecture. The info is useful though, and definitely relevant if you want a basic industry standard Software Engineering job/internship.",
                    "90": "Hummel is great, the course felt a little disorganized sometimes with respect to labs and assignments, but overall I feel like I've learned a lot and it gave a good foundation on how to create and work on scalable software architectures",
                    "91": "My main motive for the course was to learn about AWS, and get familiar with the tech, and how it is used with other technologies. This course helped me succeed in it, and I am very glad for that. Plus Prof. Hummel is a really very good professor, he knows his stuff, and teaches really very well. I am delighted with the class.",
                    "92": "You should take this class. There are four projects and then a final project and a final exam. The exam is pretty tricky but there are extra credit opportunities with the projects. Lectures are easy and digestible. Good class and its easy.",
                    "93": "This is a good course! It's not too hard if you pay attention in lecture and give yourself a couple days for every lab. Labs aren't too bad, just use the class code examples, piazza, and office hours as necessary to complete them –– they are more tedious than difficult, but I found them to be very educational and useful. The exam is super short (12 questions for me) and studying is definitely helpful, but i would say it's also manageable. There are also some extra credit opportunities which are useful! Overall, good class, not super hard and yet still useful.",
                    "94": "The course content is amazing. Prof. Hummel explained all the concepts in the best way, right from basics. The hands–on projects really helped me understand the concepts he was teaching better.",
                    "95": "What I have learned will be of great help to my future work.",
                    "96": "This course is a must have and so worth taking – the skills we learn are super valuable with the added bonus that the course is incredibly easy. Projects rarely take more than a few hours a piece of actual coding (more to get the services and environment working) but still leave me feeling I understand the AWS tools we use. The main downside of this course is how unorganized it is. Every time a project was announced to be coming out \"tonight\" it wouldnt be until 2–3 days later we'd actually get access. Additionally we only got access to gradescope 48ish hours before the due date, which normally isn't a big deal but a lot of the tests are on strings, so you'll spend an hour with working code fixing typos (and sometimes the tests have typos too). Its a really cool class content wise and lectures are pretty good but isn't organized the way it should be for a NU class.",
                    "97": "Great course to get an introduction to AWS. Despite not being too difficult, the course actually teaches you a lot of useful information. The labs are fun and the provided instructions are very thorough. Overall, a very great class!",
                    "98": "Very practical",
                    "99": "Professor Hummel is very detailed in his teaching. There are few times when he teaches and I am left confused. The homeworks are directly related to what we learn and completing them solidified everything we have learned. I am confident I can independently build cloud–based software now.",
                    "100": "This course is well–designed and the professor is really an expert in this field. All lectures are well–recorded and materials are available on Canvas. You can always review the material for the exam, which is not very hard.  I have heard complaints about TA or PMs canceling their office hours without notifying students and announcing make–up sessions. I have not experienced any of this, but it is definitely an issue.",
                    "101": "teaching aws is very useful and applicable, the walkthroughs were helpful too",
                    "102": "Very useful class. Introduces concepts for how clients and server work together and aws related topics. Hummel is lowkey passive aggressive in his piazza answers tho idk why. This class switched formats or something, so assignments were always released late and gradescope was open very last minutes until assignments were due.",
                    "103": "ez",
                    "104": "Study with Hummel!! Warm, kind, helpful, modest, passionate! You can learn a lot with interesting and clear lectures.",
                    "105": "The course is organised really well. The professor is very approachable, and I highly recommend this course for anyone interested in Cloud Computing",
                    "106": "This was a great class. The projects were all very useful, and Professor Hummel is a fantastic professor. The three/four projects were easy to get 100% on as long as you spent time on them, and the final exam was very reasonable. My only two complaints: Professor Hummel does have a habit of releasing project details and submission quite late, which makes it difficult to plan out how much time you will spend on this class and when. Also, he can be a little bit passive aggressive in some of his answers to student questions. But he really is a great instructor and made lecture interesting to attend every class.",
                    "107": "The material is very practical for understanding how large scale software systems work but the assignments were very unorganized. Projects were sometimes released within a week of the due date and the automated tests on gradescope often had bugs and were only made available the day before the due date.",
                    "108": "A very good course, learned a lot！",
                    "109": "I had hoped there would be more detailed cloud–deployment–based projects. It was much more basic.",
                    "110": "This course was great! Hummel is awesome. multiple opportunities to do well in the course. he is very active on piazza which is great. Overall this class is great intro to aws and javascript. Projects were manageable . Only thing to study for is the exam. HIGHLY recommend",
                    "111": "We did not get the official grade of proj01 even after the final exam",
                    "112": "Very good course, helps you learn a lot about AWS",
                    "113": "This is a pretty easy class, and teaches you a lot of useful knowledge about how to work with AWS.  It's four projects, an exam, and a final project –– all of which are pretty manageable. The projects are straightforward if you follow the instructions, and don't require much actual coding at all. You have unlimited attempts on Gradescope to submit the project until you get a 100 before the due date, but the problem is that the submission link never opens until at most a day or two before the deadline –– so you have limited time to troubleshoot even if you started working on the assignment early. The hardest thing about the class is the exam, but it's still not too bad and we had many extra credit opportunities (10 points for submitting project 3 on time, and another 30 for doing project 4 at all since it was released at the end of reading week). Final project is super open–ended and you can work with a group, so that isn't too much trouble either. Overall I definitely recommend this for a technical elective that's easy but still meaningful.",
                    "114": "REALLY good class if you want something both practical and do–able. The assignments and exam were very manageable, and while you'll learn a lot of content, it's all very digestible and interesting. On top of it all, it's all extremely useful if you're interesting in Software Engineering, and you get to have a final project for your resume.",
                    "115": "It's definitely the most useful course I've taken so far at NU.",
                    "116": "It’s a pretty good class, especially if you want to learn a little bit about a variety of topics."
                },
                "school_demographics": {
                    "Weinberg": 60,
                    "McCormick": 98,
                    "Medill": 1,
                    "Comm": 2,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 14,
                    "Juniors": 51,
                    "Seniors": 72
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 5.25,
                    "student_count": 164
                },
                "student_opinions": {
                    "0": "Extremely useful class to take, it teaches you about modern architectures and exposes you to very powerful tools. I loved this course because it wasn't overly difficult, it was just really informative. My one problem was the gradescopes were always released one or two days before the deadline, giving you very little time to troubleshoot your projects.",
                    "1": "Learning about the different software architectures was very enlightening, particularly in helping me understand the architectures I could utilize for my personal projects as well. However, I do wish that the course went more into depth regarding AWS.",
                    "2": "Great class. It teaches a lot of really useful content for software engineering careers.",
                    "3": "This class is pretty good, taught some important AWS concepts, make sure to start projects early.",
                    "4": "Loved this class! The content is very important for a career in tech industry and I feel like it's unique in how real–world its applications are. Hummel is a great lecturer and homework were very easy, but you got to do some cool stuff with AWS. Would recommend",
                    "5": "I found the material of the course very useful and covered a wide breath of AWS and web–server related topics. I thought the assignments were enjoyable to complete and were very detailed and easy to follow. The final project was difficult, and I don't really know why we had to do a write up and video of it, but was also interesting to work with the features of AWS of our choice.",
                    "6": "Hummel is a great lecturer. This class is 100% worth taking; one \"midterm\" exam that's not too hard (and too harsh on your grade), 4 mini projects (each around 3 hours), and 1 final project (around 5–10 hrs). You also learn a lot like AWS and a little bit about system design/architecture. Highly recommend to anyone who's considering",
                    "7": "It was really great to take CS 310 with Professor Hummel. He clearly cares a lot for his students' success, based on his Piazza and office hours availability, and the amount of time he spends debugging/figuring out the simplest way to present material to students. From experience in internships, failure to properly apply concepts like authentication can create weeks of issues moving forward. I really appreciate how Professor Hummel troubleshooted the most difficult aspects of projects in advance so that it was easy to successfully create a working app. Furthermore, the information was presented in an accessible way, making it seem deceptively simple, but all the concepts (again based on industry experience) are extremely high yield for moving forward quickly with projects.",
                    "8": "This is a great hands–on class where I feel I really learned how as a Software Engineer I can develop and deploy real world systems, specifically web–services. Hummel is a great lecturer and the assignments do a great job in introducing you to AWS, Javascript, and Node JS. The final project is also a great opportunity to develop something unique if you are so interested.",
                    "9": "This should be part of the core curriculum. I think it's a great intro to understanding how the web works and AWS. As a senior taking the class, I wish I had the course as a sophomore.  Assignments are very manageable.",
                    "10": "This class is easy but useful. Knowing how to use AWS and other cloud technologies is more relevant now than ever. Especially useful for internships after soph/junior year.",
                    "11": "This class is all project–based with the exception of a mid–quarter exam. The projects teach you a lot about the concepts Prof. Hummel discusses, and it's a really cool experience to watch your own \"scalable software architecture\" come to life. Just don't lose sight of the exam, and keep up with the material!",
                    "12": "Great class, learned a lot, and the projects were challenging and fun but not overwhelming. Professor Hummel is very organized and prepared.",
                    "13": "\"Why oh why does everyone post / email / canvas sunday night of the late period?&nbsp; Sure you had mac zip issues, but that's part of the process. You must have time to work through software issues, and many would argue you should know how to create a zip file :–)<br><br>I give up. Sure. whatever. What does it matter anyway? tuesday night, no more. Demoralizing...\"<br><br>A quote from Prof. Hummel on someone's post on Piazza. He's not a bad Professor and his instruction isn't bad at all. His assignments are fair<br><br>4 projects, 1 exam, 1 final project<br><br>And the weight is also fair.<br><br>Its a super interesting class if you want to learn about AWS, which is super useful in the tech industry, although expect some sass like the quote above. <br><br>PA's are super useful too, go to office hours when the tests Hummel writes breaks your code.",
                    "14": "Overall, the bulk of the class is only 5 very small projects over the course of 2 weeks each, and a group final project. The other 20% of your grade is an exam that isn't that hard if you went to class and paid attention, but the average was low due to the low numbers of people that attended class. The final project is a great possible resume project and it's pretty open–ended. Hummel is one of the best professors at this school, and really knows what he's talking about.",
                    "15": "The professor made them very interesting, and is always good to know more.",
                    "16": "I highly recommend taking this course, especially with Prof. Hummel! I can tell that having taken this course in spring quarter will be incredibly valuable for my internship this summer as it covers a lot of the foundational concepts regarding software service design that software developers interact with on a daily basis. Prof. Hummel is incredibly organized, and he does a great job of explaining all of the relevant concepts during lecture, which made for an overall very enjoyable class. The projects can be time–consuming, but I found all of them to be very relevant to the type of work software developers do, so I still found them enjoyable to do. However, you get 1.5–2 weeks to do each project, so I found the workload for this class to be very reasonable. I honestly think this is one of the most valuable classes you can take at Northwestern if you're interested in going into software development.",
                    "17": "great class, great prof, first class where the content you learn is actually applicable and useful, highly recommend taking this class",
                    "18": "This class is great. I learned a lot about AWS, and from someone who had no experience with SQL or databases going in, it was very helpful. The homework assignments were fun and not too difficult. They built on each other well. Professor Hummel is a great lecturer. I would recommend starting to study for the exam early.",
                    "19": "it teaches the general backend knowledge of software development which is cruical for software engineering",
                    "20": "Very good course to learn cloud architectures and constructing cloud utilities. Projects were fairly straightforward and guides were good. Be sure to understand lecture and at least watch all of them for the exam. Hummel does a great job in lectures. Group final project also is pretty good and allow you to do as much or as little as you want, which is nice.",
                    "21": "Class is actually pretty interesting and seems like the most useful CS class I have taken to date. Exam is hard for no reason but projects aren't bad",
                    "22": "I LOVE Prof. Hummel. Like, his level of expertise in the topic is amazing.<br>If you have a question, he can answer it in some way.<br>Even if it's a yes or no question, he will seek to elaborate on why it is yes or no. <br>Also, grading–wise...<br>expect 4 projects<br>Projects: 60%<br>Final Project: 20%<br>Exam: 20%",
                    "23": "You learn how to use AWS and basic cloud architecture stuff. Would recommend.",
                    "24": "Class is very unique and great use case. Very useful if you're interested in being a software engineer and you build great projects that are relevant to industry. Final project is a project of your choosing so you can dive as deep as you'd like. I wish the course was more organized however.",
                    "25": "This class is super helpful for understanding what people mean when they say \"AWS.\" Perhaps it's not an amazing class for teaching you how to use it on your own. I now understand general frameworks of cloud computing, but while the homework are super easy, they're often just \"follow the instructions to a T\" rather than offering time to better conceptualize what we are doing. That being said, this class is super easy and still quite interesting, would recommend.",
                    "26": "A good beginner class to get started with basic web/cloud development, requiring no more than an hour or two per week of your time (outside of class). Projects have very detailed handouts and honestly might be the easiest CS assignments I've ever had. I feel like this is a good primer for AWS/cloud tech before an internship or a personal project or something. I'd recommend this to any CS major though.",
                    "27": "Fantastic class and Hummel is great. Only assignments were 4 pretty easy projects throughout the quarter, an exam, and the final project. This class is great if you're interested in web services, software development, and/or AWS",
                    "28": "Very helpful course that teaches your skills in server–side development and AWS. I will say a lot of the stuff is tedious (setup up AWS and making sure you don't get charged), but besides that homework is pretty easy.<br>And hello?? Like what are the PMs doing? 90% of them cancel their office hours 10 minutes before they're supposed to start. It's giving they don't know what they're doing.",
                    "29": "I loved this course! Hummel is the best he is super good at explaining stuff and makes great slide decks. Also really appreciate that the class is mostly project based. Would def recommend",
                    "30": "Very useful course that teaches you how you can deploy and actually make use of the software you make. The exam was kind of annoying but the homework assignments were chill. You can get a good final project out of this if you choose to.",
                    "31": "Definitely recommend this course, especially if you are looking into Software Engineering as a career. Did an internship over the summer, then took this class, and I think I used every single topic covered while on the job. It's much more than just learning AWS/cloud, you learn a lot about how to design different server architectures and how they communicate with one another. Professor Hummel was one of my favorite CS professors, he was very patient with each student and all of his lectures were interesting + relevant to work experiences. The workload was not stressful at all. 4 projects, 1 midterm, and 1 final project. If you start early, you will get a good grade on the projects for sure. You are also exposed to a wide variety of skills, but it is not an overwhelming amount.<br><br>In summary, highly recommend. Not overworked, very relevant material, and great Professor.",
                    "32": "Low key, take this class. Homework wasn't that bad. Plentiful office hours and PMs. Interesting topic (for me at least lol). If you want to know how to build a website, take Full Stack Dev. If you want to drill down on backend stuff, this class is an okay view of that. It only went into AWS infrastructure, so if you're looking for some other backend, look up videos. Overall a good perspective in how the backend of websites worked. JavaScript, Python, and SQL knowledge helped me, but I think I would've been fine if I went in blind. Hummel is...Hummel's a bit sassy. He's an acquired taste. If you don't cross him, he's fine. He wants to help, he will call you out on your BS. Go to him when you're ready to take constructive criticism. He's a great professor imo.  <br><br>As of Spring 2024 with Hummel, 4 projects (project 1 and 4 aren't bad, 3 is okay, 2 isn't great) worth 60% of your grade (15% each) a final exam (good amount of which was on Project 3 material) worth 20% and 20% for the final project (which you do with a group). The final project is taking what you did and building 3 nontrivial functions on top of it. It was super fun and fs useful.  <br><br>Overall, good class.",
                    "33": "Great class, super easy as well. Please stop pissing off Hummel 🙏🏻 the man is stressed.",
                    "34": "This course was fairly light in terms of workload, but I thought it gave a pretty good intro to AWS, and was overall pretty useful.",
                    "35": "hummel is the best!! super great lecturer, breaks down everything clearly and takes the time to answer questions. he literally recorded a supplementary video for us once because he felt he didnt go in depth enough in class which is actually goat behavior. he also records all lectures and posts slides and handouts which is so so kind and accomodating. i think this might be the most supported ive been in a class lol. <br><br>projects are pretty straightforward and he also responds on piazza super quickly which is great. 4 projects, each with around a week to work on (60%), one exam (20%), and one open ended final project you can do with a group (20%). just a really chill class and hummel pushed back the deadlines like 3 times i think which is truly so kind of him. overall loved this class and found it super useful in real life application 10/10 would recommend wish hummel taught more classes. <br><br>ps. he definitely voices his annoyances though which might not be your vibe but theyre kinda justified sometimes lol",
                    "36": "HUMMEL THE GOAT!! HBAS!!!",
                    "37": "This class is kind of cool and not the hardest. Its frustrating sometimes because a lot of it is just aws set up and if you mess it up at all you get stuck forever. Not a bad breadth area",
                    "38": "This class is really interesting and super useful. It teaches you the basics of AWS and how to set up web services. You will learn about APIs, servers, and clients.",
                    "39": "Great class for learning cloud stuff, very important for any CS major to take.",
                    "40": "The projects are more like tutorials. There's very little to figure out on your own. Honestly I felt bad for the professor, as I feel that people didn't care about the class enough and made his life harder.",
                    "41": "Hummel is SASSY....however I definitely learned a lot in the course. I don't particularly like AWS or Cloud Computing, but I feel like it was valuable information.",
                    "42": "It's an easy and useful class. We learn about software architecture and server side development.",
                    "43": "Super practical course, one of my favorite CS classes taken at this school. Teaches the AWS suite in a practical manner",
                    "44": "its a very useful class but Professor Hummel does struggle a bit to fit everything into the quarter... that along with a lot of other classes also pushing everything to the last week made it really difficult to actually do the final project – start early if you can, just think of a reasonable–ish project and start laying the groundwork for it<br>the requisites for the final project is *very* vague, which is intended but i feel like it couldve been specified more to prevent students from accidentally underachieving or going too far with scope–creep (feedback was also given out late and wasn't too in depth to properly let you know sometimes)<br><br>i think outside of that part though the class overall is not too difficult and its a very useful class to take",
                    "45": "Very good class! There are four projects (60%), an exam (20%), and a final project (20%). The projects are very doable because the instructions that Hummel writes are very clear, and we get unlimited submissions on Gradescope until you pass the tests. We didn’ti have much time for the 4th project, so it was very short. The exam felt okay and had a 71.7% average. The final project can be done in groups of up to three, and it should be an easy A as long as you follow the instructions.",
                    "46": "joe hummel is based",
                    "47": "Good course with good projects.",
                    "48": "Really a class about AWS. Exam is the only thing that was difficult.",
                    "49": "Loved this class. Great lecturer – I learnt loads, projects were doable. Very easy final. 10/10 would recommend.",
                    "50": "This is a very useful course for learning AWS. I definitely recommend it.",
                    "51": "This class was definitely one of my favorite CS classes. Unlike other classes, you can see the outcome of your work and actually see how your knowledge can transfer over to real applications. It is mostly back–end web development, but also some front–end as well. This course is done in javascript and python, and it was interesting to learn js. The grading is based on 4 projects, all of which don't take longer than a day in most cases, and walks you through AWS configuration and coding as well. The final project is very free as you can choose whatever you want to explore in AWS.",
                    "52": "This was one of my favorite CS classes so far at Northwestern. It felt like one of the first classes where I learned enough practical skills to the point where I feel like I could actually build a basic software application for use in the real world. Most other CS classes have been about different concepts and algorithms, but you don’t always get to put these skills to practical use, so that is the main reason I loved CS 310 with Professor Hummel. Additionally, as long as you go to class and can follow directions clearly, this is a pretty straightforward class.",
                    "53": "I really enjoyed this class. It was not a stressful class and I think that helped me learn/enjoy learning a lot more. The topics covered in lecture were all very relevant and well–taught. The projects were interesting and very well–structured. Would recommend!",
                    "54": "Useful course for learning about cloud computing. There are 4 projects, 1 final project, and a small exam.  Assignments give you a lot of help and don't take too long to complete. Final project is open–ended and can be a group project if you want. No practice test for exam, but we went over some practice problems in class that I felt were reasonably similar to the exam.  Overall, a very useful, but also surprisingly relaxed class.",
                    "55": "This course is great and everyone should take it. You learn  a lot and it is probably one of, if not, the most useful course for SWE I have taken at NU thusfar. It's not always easy, but honestly it's feasible, don't know why people struggled so much. Hummel is an awesome professor who really loves teaching, but the amount of cheating in this course is insane and I don't blame him for being fed up with it. He started to get really salty in his piazza responses, but it makes sense...he could be a little harsh sometimes though. Again, great course, just people need to stop cheating, it's ridiculous. this is a fun class, why are they cheating? dunno",
                    "56": "Literally the sassiest teacher on campus but the class itself was pretty good",
                    "57": "Hummel is the guy. His Piazza responsiveness is unparalleled. His answers to dumb questions are also quite funny. This class is incredibly useful and actually teaches you stuff about industry and how coding works beyond single–file programs where we 'solve' problems in other classes.<br>Go in expecting to learn about cloud architecture. Some people think this class is 'easy' and don't put much effort in because the projects don't take super long and don't always involve lots of code. The point of this class isn't to test our python coding. If you really soak in what we're doing when we follow instructions and read his explanations about setting up AWS stuff you can get so much out of this.",
                    "58": "I think all CS students should take this course, it was very informative and did a good job of connecting the dots of software architectures which I hadn't connected before. It made the task of building software much less intimidating in general.<br>If possible, don't take this class with Joe Hummel. I had taken a particularly discombobulated class with him before, and I thought I'd give his teaching style another try. Unfortunately, he was as unprofessional as he was prior. Brazenly rude emails were common when students expressed confusion or concern, one example being \"Why do I work here, it feels like high school, not a top–25 university.\" I personally have never experienced that level of immaturity from a professor in any circumstance.",
                    "59": "Hummel is great and lectures are really good. Pretty easy class but definitely something worth learning.",
                    "60": "Amazing course. You learn a lot about AWS and web servers. The content feels very applicable in the real world. Professor Hummel is great. The assignments teach you a lot without being too demanding. He is also very helpful during his office hours. He seems passionate about what he's teaching.",
                    "61": "Great course. Super useful content for real world applications.",
                    "62": "I learned so much in a non–stressful setting. Really straightforward projects if you actually watch lectures and read the handouts. Final project can be as easy or as hard as you want it to be. The exam was fair. I think that Hummel is a very engaging lecturer. He can be sassy on piazza but is super willing to help (and clearly wants to see you succeed) if you don't wait until the last minute to ask and have demonstrated some effort of solving the problem yourself first.",
                    "63": "Great course. Valuable lectures.",
                    "64": "Really good CS elective to take. I learned a lot of useful info and the projects/exam were very manageable. Only 4 projects, 1 exam and 1 group project. Hummel is a good teacher but very sassy on the piazza sometimes lol",
                    "65": "Highly recommend this class; not only do you gain practical experience by using AWS for all the projects, but the course instruction itself is extremely good. Professor Hummel has put a lot of effort into designing the lectures and it shows: go to class and listen to his teach and you'll gain a lot from doing so. Office hours are plentiful and this course makes great use of Piazza, so if you are ever stuck then there is an abundance of resources for you to take advantage of. Once again, I'd highly recommend you take this course if you are at all interested in practical applications of the cloud.",
                    "66": "This class was great. As someone extremely interested in systems, and security I really enjoyed the course content. <br><br>The class is broken into the following: <br>60% projects (4 projects)<br>20% midterm <br>20% final project <br><br>Project 1 is extremely easy, projects 2 and 3 are slightly more challenging but not by much and project 4 was also extremely easy but I'm not sure if that's the norm as Prof Hummel did say he was simplifying it due to time constraints. Since fall quarter is longer than the other two its possible it can be more difficult then though I doubt it'll be worse than project 2 or 3 meaning you can finish it in one afternoon. <br>The midterm was also pretty simple. Just review the slides, make sure you do all the in class practice problems and you'll be fine. <br>The final project is entirely up to you. <br><br>Hummel is a great teacher and funny in class though his piazza personality is like a dr jeckel/mr hyde switch haha.",
                    "67": "This was a good class. project were well outlined and not too hard. final project was flexible and it didn’t have a test finals week it had a final project which i liked more. teacher is funny and a little passive aggressive but pretty reasonable over all",
                    "68": "The class taught good content. All lectures were recorded as well. Prof. Hummels was moderately good at answering stuff on Piazza. Sometimes he would answer by saying something like you should try better or saying that you should have better debugging skills, which was not really helpful. But the class overall was good.",
                    "69": "projects were very straightforward. would recommend taking this class because it goes over very important concepts.  final project was very open ended which made it confusing on the requirements and rubric but the other projects were simple and helped me learn a lot",
                    "70": "i liked this class way more than i thought i would. homeworks are well documented and make sense when doing them and don't usually take too much time. would recommend",
                    "71": "I enjoyed the format of the course, with the projects not being too much work. Pretty light workload overall for the course.",
                    "72": "Glad this course is being offered more often",
                    "73": "Great lectures, cool introduction to cloud computing. Projects are a lot of configuration work though.",
                    "74": "Great course. Learned a lot about AWS, SQL, and async programming. Midterm hard but proper studying leads to success",
                    "75": "Very easy class, but you do learn a fair bit about AWS.",
                    "76": "Good class, learned a lot, thought midterm was really hard, and 2 of the  4 projects took the life out of me. Got charged like $30 this quarter for AWS.",
                    "77": "Projects are very doable &amp; easy to do well on. The exam was not more difficult than I thought it would be, but your grade highly depends on who grades your exam. Some of my friends believed their grader was super nice &amp; gave a lot of partial credit. I did not get a nice grader &amp; had to make regrade requests to get the bare minimum of points back. The final project is very vague, which is nice, but how well you do on it is a bit of a toss–up. Some people ran into config issues on AWS &amp; the professor nor the TAs could help. Overall an interesting &amp; chill class though.",
                    "78": "Great great class. Super practical, fun, and interesting. 100% take it.",
                    "79": "This was one of my favorite CS classes at Northwestern and I would highly recommend taking this class before any software engineering internships. This class teaches you so much about AWS, clients, servers, and databases and gives you great experience that is very relevant to software engineering jobs. There are only 4 projects and a final project and none of them were too hard. Only one exam which is nice but it was pretty hard. Would 100% recommend taking this class with Professor Hummel because he's a great lecturer and will teach you a lot about scalable software architectures!",
                    "80": "This course did a great job of teaching software engineering – something that isn't addressed in a lot of the CS courses here. Hummel makes the projects and lectures engaging and fun. A must take for CS majors here.",
                    "81": "Good class, useful to real world understanding of scalable systems. Good for PM.",
                    "82": "Amazing course to take. All the project work never feels just like busy work –– there's always a purpose. Try to start projects early, especially since debugging full stack projects can be a lot more time–consuming than those in 211 and 214. Doing bits of work then testing functionality piece by piece (and just a bunch of print statements) helps a lot with the debugging aspect.",
                    "83": "Very useful course if you are learning to use AWS. Not too challenging, but good introduction to the material. Hummel is also an awesome professor.",
                    "84": "Great class. 1 exam, 5 projects.",
                    "85": "Very good and practical class that teaches you how to use AWS to build cloud based–applications. Hummel is a menace on Piazza so watch out for that.",
                    "86": "I like the detailed instruction to guide us through the system &amp; structure design",
                    "87": "Hummel is an excellent lecturer, slides were always helpful, class structure and pacing were great",
                    "88": "I appreciated this class because it was very straightforward, contrary to many other CS department courses. I also appreciated having two weeks to work on the projects, it gave breathing room for the material to sink in and let me work at my own pace. There was a bit of a crunch towards the end of the quarter as the last HW and the final project were assigned to be due the same week, however. I would have preferred skipping HW 4, as it is very annoying to manage two assignments due in the same week, worth large amounts of your grade, but HW 4 was adjusted to be simpler given this, at least. Asking questions on Piazza was annoying bc Prof. Hummel was low–key being a smart Alec and passive aggressive, which was something. Apparently he is nicer in person, but idk it's not a good look to cyberbully your students.",
                    "89": "Hummel is the goat.<br><br>Attendance is not required, and lectures are recorded, but lowkey go to lecture if you want to actually learn about how to write back–end with AWS. It's useful to learn since you will 100% be able to use this knowledge later.<br><br>4 projects throughout the quarter, all very doable just by following the docs he gives you. If you need help, there are always office hours and the PMs can help you pretty well.<br><br>1 final, not hard, but make sure you review the lectures. I bombed it because I was too confident. It's not that huge part of your grade though.<br><br>1 final project, you can make anything you want so it's a fun project that you can put on your resume. If you are cracked enough to carry your 2 other friends, then do it. If not, just find some people that will actually do the work. I kind of did 90% of the work (my friends were freeloaders) for my group but it wasn't that bad tbh.",
                    "90": "Very useful class and easy as every step you need to take in AWS is given to you in the handout.",
                    "91": "Hummel is a great lecturer and explains the concepts well. The projects were relatively easy compared to other CS classes, although the final project did take a while. The midterms were a little bit difficult, but the grading scheme puts more weight on the projects than the exams. Check Piazza regularly, if not for finding out the answers to your questions, for Hummel's very entertaining responses to some of the posts.",
                    "92": "I really liked the structure of the course, with one exam and several projects, including a flexible final project. I feel that I could go on to develop my own AWS web service for real–world applications after taking this course. The only downside was it felt like only 5–10% of people went to lecture, which was not the professor's fault, but it made me less motivated as one of the students who did go.",
                    "93": "Pretty good class – a good intro to the cloud and building cloud applications. The labs were every two weeks basically, and it was interesting to actually build applications that we talked about in class. However, the class is pretty disorganized – I'm not sure if we fell behind or something, but there was no communication when the assignment releases and due dates were changed, especially later in the quarter when it was the week before finals and they still hadn't announced the last homework even though we were working on the final project already. Hummel is a good lecturer and pretty knowledgeable, but he is also curt and rude to a lot of questions. I can understand being impatient when someone is asking a fairly obvious question, but a lot of times it felt unnecessary and discouraging.",
                    "94": "project is really tilting, exam is a bit difficult make sure you study, some projects are difficult but for the most part they're pretty easy",
                    "95": "fantastic course. taught me so much and gave me the tools to learn more and know what I still need to understand. also incredibly easy, which is often a bad thing for a comp sci class, but in this case, it is just another win! teaches you a lot without requiring a lot from you!"
                },
                "school_demographics": {
                    "Weinberg": 83,
                    "McCormick": 70,
                    "Medill": 1,
                    "Comm": 2,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 59,
                    "Juniors": 75,
                    "Seniors": 19
                }
            }
        },
        "COMP_SCI 311-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.93,
                    "student_count": 29
                },
                "student_opinions": {
                    "0": "Great class! Deadlines were flexible &amp; there weren't a lot of assignments. Overall super interesting &amp; an easy A if you do what the assignments ask for",
                    "1": "If you've taken any other classes with Prof. Worsley, you probably know exactly what to expect. He and the TAs are all very nice and understanding, and the class is very low commitment. That being said, there isn't much organization or learning being \"enforced\", but if you're looking for a chill class to take definitely take this one.",
                    "2": "the first two assignments were tricky because you had to go to a maker space and then volunteer somewhere (you were able to interview someone as an alternative) we were able to do reflection for final which was nice.",
                    "3": "Very chill class, chill professor. Doesn't take a lot of work.",
                    "4": "Poorly structured, we just had class discussions every day that felt very unplanned, very easy though",
                    "5": "Amazing class, must take.",
                    "6": "Loved this class! This class is important for different majors to take and should be required for all!",
                    "7": "The organization of the course is a little messy, and many times the homework timeline on the home page is not the same as the real homework timeline, but fortunately it is easy to complete",
                    "8": "Very good course. Challeges your understanding of disability",
                    "9": "this course is so easy for a CS elective. there was basically no homework and everything was just due by the end of the quarter. also super eye opening since we often do not talk about making spaces inclusive for people with disabilities",
                    "10": "Professor Worsley is my new favorite CS professor at Northwestern. I enjoy his teaching style and he creates a welcoming environment. Most classes he brought snacks for students and wanted to know how we are doing which is rare in the CS department. I highly recommend taking any class he offers. This course was very informative, taught me a lot, and I had a good time learning the material. It’s definitely a class you can get an A in if you put in the work.",
                    "11": "Awesome course, really interesting, not too many assignments and are pretty easy, can also be submitted in many formats (essay, video, etc.). Final project can be very broad, and can also be done individually as a class reflection. Recommend this course!",
                    "12": "This class is pretty cool, but I feel like you get the core ideas in the first week or two and the rest of the quarter is just rehashing that over and over. It's nice to have a dedicated space to think about empathy and inclusivity in design though."
                },
                "school_demographics": {
                    "Weinberg": 14,
                    "McCormick": 8,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 3,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 7,
                    "Juniors": 8,
                    "Seniors": 9
                }
            }
        },
        "COMP_SCI 312-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.48,
                    "student_count": 21
                },
                "student_opinions": {
                    "0": "Not a difficult course, don't have to put in too much effort to do well and learn the content.",
                    "1": "This is a great course, and Sruti is the sweetest prof ever. Go to class to get your in–class activities done, and don't work on your project at the last minute and you will be completely fine.",
                    "2": "This was a great course! The smaller class size was a nice change of pace from most computer science courses. Prof. Sruti is a great instructor and the class was engaging. The class wasn't difficult at all, as long as you put effort into the assignments you'll be fine.  Highly recommend, especially if you have a heavy schedule and want to take a lighter class.",
                    "3": "Loved this class! Great, insightful discussions complemented by student presentations and group projects.",
                    "4": "Great course. This is my first time learning anything about data privacy and this made me realize how much work goes through protecting user data. I suggest starting the homework early since they can be quite long. For the project, if you are recreating a study done by a paper I recommend you try to set up and run the code provided by the authors ASAP since Python dependencies can be a huge pain. Overall the course is interesting and workload is manageable. The final presentation was quite fun and you get to learn about what the other students have done. Sruti is very supportive and does a great job checking in with the students to make sure no one is behind.",
                    "5": "I think anyone who is interested in data privacy or security or any related fields should definitely take this course. It really helps to give an overview of data privacy techniques, attacks, and defenses as well as letting you have some freedom to try a project of your choice. Much of this course is what you make of it. You will get lots of helpful information if you just go to lecture and do the homework, but it is a lot more meaningful if you pick a project that actually interests you. The time commitment is really not too bad which is another pro of this class. And best of all, no exams.",
                    "6": "Sruti is an awesome teacher, she is very passionate about data privacy, and that translates directly into a great learning experience for her students. For every class, Sruti is always very prepared and is very knowledgeable about all the content she teaches. If she does not know something, she will come back to it when she does have an answer. This level of honesty from a teacher is amazing to see! In general, the assignments and projects were not overly difficult, some of the coding does take more time as you are reading new code.",
                    "7": "This class teaches so much useful content about data privacy and what it is like in different fields, like AI/ML. Sruti is a great professor and teaches this class well, and the content isn't bad. Most of the work is group work and it is easy depending on the project you choose to work on. It is the homework that will need more time, but those are also easy if you go to lectures and go to OH.",
                    "8": "Prof Sruti Bhagavatula is a great lecturer! class is well organized. there are homework assignments, in class discussions, a big final project, and a student led presentation, no exams in this class.",
                    "9": "The assignments seemed difficult at first, but they were generous with grading – as long as your work reflects an attempt to understand the concepts. Pretty interesting and wide range of topics too, would recommend.",
                    "10": "Pretty interesting class. Covers topics like enforcing privacy guarantees, privacy in ML, bias in ML, and privacy in the real world (web privacy, anonymous communication). Overall, I thought that this class gave me some pretty good exposure to all of these topics (some of which are not covered in any other classes at Northwestern). The content of this course is mostly conceptual, but I wish it was a bit more technical. As an example, ML is relevant to about half of the course content, but since CS 349 is not a prereq, topics have to be presented as if we have no ML knowledge. <br><br>Your grade consists of in–class exercises, hw assignments, a presentation, and a course project. Each class will have an in–class exercise and is essentially there to enforce attendance (and you can miss a few without hurting your grade) which is a bit annoying, but also understandable since the class is small and discussion–based. There are approximately 5 hw assignments which cover applications of the topics covered in class. I thought that the assignments were really well–designed and provided an opportunity to look at real–world implications/applications/implementations of the topics from class. The presentation is a one–time thing that you do during class. You are placed into a random group and you sign up for a topic (which mirrors the topics from lecture), and then you give a 20–minute presentation on research papers or news articles of your choice that cover your topic. The course project is essentially a mini–research project that you conduct throughout the entire quarter. You form a team at the end of week one, submit a project idea by week 2, submit a more detailed project proposal during week 3, and then have a midterm checkpoint, a poster presentation during reading week, and a paper due during finals week. I didn't really like how early we had to submit our project idea since you barely cover any content before you have to decide what you'll work on for the rest of the quarter. It's also pretty difficult to properly scope out a project for the quarter. If you take this course I highly recommend just doing a spin off of previous projects/papers. Besides that, as long as your are clearly making progress on your project and meet the deadlines you'll be solid. The professor and course staff are also very open to providing feedback and support.",
                    "11": "Great course! Breaks down interesting topics into a digestible way and connects to real life events."
                },
                "school_demographics": {
                    "Weinberg": 5,
                    "McCormick": 14,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 6,
                    "Seniors": 13
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.31,
                    "student_count": 16
                },
                "student_opinions": {
                    "0": "Pretty interesting topics but sometimes lectures were a bit dry",
                    "1": "Data Privacy is a pretty good class to take to balance out a harder course load. Its interesting but has no exams and a pretty light amount of homework. The main extra thing is project you do in groups of 3–5 people. I felt that choosing the topic was very rushed but after that it was not bad as long as you choose something relatively straightforward – expectations aren't  too high. Overall easy A and a good introduction to a lot of the main topics in Data Privacy.",
                    "2": "Easy class but there are too many topics covered to learn much about anything.",
                    "3": "Easy enough course that goes into some details of data privacy. Lectures were interesting enough, although some of the course content overlapped quite a bit with CS 349 Machine Learning. Each lecture had a student presentation for the last 15 minutes, which wasn't hard to do in groups of 4/5.  <br><br>Homeworks were not hard,  interesting, and complementary to lectures. The homeworks were where I was able to keep up with the more theoretical mathematics behind the concepts in class. Final poster was fun to do, although your choice of topic and assigned group members can really impact how you feel about this.<br><br>Overall an easy overview of data privacy with some deeper elements behind how it works. Coursework is not demanding.",
                    "4": "I hope we can decide on our project later in the quarter. It is hard to have a good idea when we just started to learn about privacy policy",
                    "5": "This course made me feel like I was back in middle school or early in high school. Not because it was easy, but because the professor really wanted to force a high level of interaction out of everyone. Mandatory attendance, two mandatory presentations, routine discussions in class, etc. just felt like overkill at a certain point. I also didn’t find the material as interesting as I thought I was going to; there was minimal coding and a lot of 212–like math. This course feels like it has potential but it is still early in its development. I would not recommend this class.",
                    "6": "Pretty chill class, no exams, just five homeworks, a short group presentation, and a quarter–long group project of your choosing. As always Sruti is super sweet and a solid lecturer.",
                    "7": "To avoid losing points on each assignment, more than 20 hours must be dedicated, as the tasks are quite challenging.<br>It may be possible to get an A, but only if you put in a lot of time(like going to office hour every week)",
                    "8": "The class occasionally got repetitive but lectures were always very clear and well–organized. Take this class!",
                    "9": "Good class for anyone interested in data science/data engineering. Not sure that what I learned will be that applicable to other classes but it was interesting and wasn't a lot of hours each week. You get to do pretty much anything you want for the project so that was cool too.",
                    "10": "I did learn quite a bit about data privacy, however some assignments often felt like busy work rather than actually helping us learn.",
                    "11": "I like the open natured discussions about moralities and the technical aspects of the course, especially the focus on ML",
                    "12": "Professor is great at teaching about privacy, good references to outside sources. Wish there could be more help on the understanding of material outside of class though.",
                    "13": "This is a pretty good class. Prof Sruti is really really nice, and she lectures well. The homework assignments can be kind of annoying, and sometimes have confusing instructions, but they're not too bad. Would recommend it!"
                },
                "school_demographics": {
                    "Weinberg": 9,
                    "McCormick": 5,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 2,
                    "Juniors": 8,
                    "Seniors": 5
                }
            }
        },
        "COMP_SCI 313-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 5.03,
                    "student_count": 30
                },
                "student_opinions": {
                    "0": "solid course but required a lot of time outside of the classroom to create stuff for the exhibit. Mike and the TA's were super helpful throughout the course",
                    "1": "The class was really enjoyable! Professor Horn and the TAs were very helpful in and out of class time. As long as your group works together on the project, and you dedicate some time to the essays, the class is really manageable!",
                    "2": "Really good class! Highly recommend everyone in CS take if possible.",
                    "3": "Although the class was relatively straightforward and had an interesting concept, I did not enjoy all the busy work that came along with it. I also think the course lacks in teaching real world applications of the field as I often come away from readings and lectures still unsure of how exactly these developments will benefit people realistically.",
                    "4": "Class is super easy and pretty fun, but it's a group project so it depends on your group. You design a science museum exhibit and bring it to an elementary school at the end of the quarter, so hopefully you're okay with kids. If you're a CS student like I am, there's not a lot to learn here. But easy A and fulfills some requirements.",
                    "5": "This course imo was not particularly useful, I don't think I learned anything, but it is a fun course to mix up a heavy CS load and do something a little more creative. It can be a lot of busy work at times, but it's not hard",
                    "6": "very fun class. nice if you know people but also everyone is very nice. professor Horn and the TAs were wonderful. I enjoyed the reading material and overall structure of the class. Learned a lot about design and design concepts. highly recommend!",
                    "7": "Very interesting class. Whole quarter is working towards making a science exhibition to present to an elementary school at the end of the quarter. We ended up spending like $20 per person to figure out our project, but you can get some equipment from Mike as well. Overall, very chill class.",
                    "8": "Overall low coding course that's not particularly rigorous. As far as the learning and content itself, the whole course is essentially one big project to build a museum exhibit –– except you are given very little guidance, direction and materials. I think one of the most interesting things about this course to me are the lack of scaffolding or support for this project. Arduino coding or breadboard wiring? Figure it out yourself. Need materials other than a breadboard or some wires? Pay for it yourself (you can get reimbursed 40$ at the end of the quarter in a \"buyback\", but I would be surprised if you keep your costs below that figure). There is a six (6!) hour popup museum activity assigned to you at the end of the quarter, right in the middle of finals. It's several miles south of campus, not easily accessible by the L –– need transportation? Figure it out yourself. It's definitely an easier elective but I would not describe it as enjoyable.",
                    "9": "The course definitely depends on what group you end up being in. Mine was great! It was also very dependent on how much effort you want to put in. You could make an awesome project that requires a lot of coding or just do something more simple."
                },
                "school_demographics": {
                    "Weinberg": 15,
                    "McCormick": 11,
                    "Medill": 1,
                    "Comm": 1,
                    "SESP": 2,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 6,
                    "Juniors": 15,
                    "Seniors": 5
                }
            }
        },
        "COMP_SCI 315-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.4,
                    "student_count": 5
                },
                "student_opinions": {
                    "0": "If you're interested in learning research then I highly recommend this course. However, if you're not interested in research then you probably won't enjoy this course. Overall though I have no regrets and I would recommend this course to anyone looking yo get some research experience and to be a part of a community!",
                    "1": "DTR is a great class for people interested in research. I was not initially too interested but the lessons you learn from Haoqi and Kapil are invaluable. I recommend this class to high–achieving CS students who need more work to feel satisfied."
                },
                "school_demographics": {
                    "Weinberg": 4,
                    "McCormick": 0,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 1,
                    "Seniors": 2
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.5,
                    "student_count": 8
                },
                "student_opinions": {
                    "0": "While this is a very time consuming class, this is one of the few classes I've been involved in that I actually enjoy the work I was doing and was willing to put my free time into it. I really enjoyed the community aspect of the class and how I felt like I was part of a bigger team than just myself and my project teammate. I was surprised I made it into the class because I did not previously think I was very highly technically adept, but you just need moderate CS skills and also the skills to learn and the willingness to become a researcher. Overall, great class that helps you think about your projects in ways that is not just surface level or working to complete the task.",
                    "1": "DTR is very much like, what you put into it is what you get, but I personally learned a ton of things that I would not really have any chance to learn in other classes– it's just a very very valuable exp for me overall and I'm grateful to be a part of it!",
                    "2": "Research should not feel this bad mentally nor be this emotionally taxing. If you really want to take this class/are interested in it, I beg of you, ONLY do it for one quarter. And when Haoqi says \"I want you to *really* think about what DTR can offer you\"...run. Don't get sucked into the cult. If you notice any reluctancy or disinterest to join/stay at DTR, **don't** ignore that feeling. <br><br>I didn't know what doing research entailed prior to this class. This course soured me to the idea of doing research, or at the very least doing it in the DTR way/with DTR. You need to be fully interested in the topic and the prototype. If you hate your prototype, you're stuck with it more or less. Try your hardest. Nothing will fly by Haoqi, so don't make excuses. Have thick skin coming into this class. Class–time is not three hours. It's 3 hours of Studio, but as a first–time student, it's 1–hour a week teaching you about how to do things in the DTR way. It's also a 1–hour weekly update meeting and a minimum 30 minute meeting with your mentor. **It's 5.5 hours of class a week, and at least 8 hours outside of class**, prototyping, reflecting, finding your \"riskiest risk\", and gathering the data to make points in your weekly meeting with Haoqi. <br><br>Don't get me wrong, you learn stuff in this course. This course makes you learn things. The canvases are seared into my brain and some if not most of these resources may be helpful for my future research endeavors, but just know, this class isn't the only option to do research or to fulfill your project class requirement at this school.<br><br>Haoqi is an acquired taste. My opinion of him changed each week, but ultimately landed negatively. If you think you like him, give it a few weeks, I guarantee it'll change. He needs to do better at knowing conversational boundaries with his students and at generally not guilt tripping his students. I hope by the time you take this class he has gotten there. Saying \"he's stubborn\" doesn't do it justice. He made me not like DTR. Good luck dealing with him.",
                    "3": "Self–guided research project is a unique experience, very different from the usual classes I took before. We learn a lot of conceptual representations in the class to help guide our thinking processes.",
                    "4": ":partystella:"
                },
                "school_demographics": {
                    "Weinberg": 5,
                    "McCormick": 1,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 3,
                    "Seniors": 2
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 5.0,
                    "student_count": 7
                },
                "student_opinions": {
                    "0": "I am very grateful to be in DTR – very unique CS class experience that has really been helpful in basically all capacities",
                    "1": "DTR is a really fun place. It is quite some work on a time scale, but it is also not time–consuming in the same way as your typical tech classes, where you sit there and code for hours straight. Most weeks there is a meeting every other day; some days you walk away feeling super enlightened, some days you walk away equally confused and you just have to keep pushing for understanding. You have class meetings, sig meetings, meetings with your teammate, and you have to work outside of class. It is quite enjoyable if you feel connected to your project because you actually feel responsible for it, and the class and community really does help you feel like you are self–leading your own project because you are taught how to seek–help, represent your learning, etc.",
                    "2": "It is very good to be able to work on a project continuously through out quarters, learn and reflect on how we approach to problems.",
                    "3": "This was one of the most engaging courses I've taken at Northwestern. Haoqi has very high expectations for his students, which makes the class somewhat stressful but very rewarding. The image of DTR has been tech–heavy in the past, but I think it's important for prospective students to know that in recent quarters, research interests in the class have shifted to learning sciences and other design intersections over purely technical research, which could be good or bad news, depending on your interests.<br>You should be warned that Haoqi is more impatient and blunt than most professors you will encounter. I doesn't really come from a place of annoyance or frustration, but usually just his constant efforts to maximize time. It can definitely be bothersome at times, but it's something you'll get used to."
                },
                "school_demographics": {
                    "Weinberg": 3,
                    "McCormick": 3,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 4,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 321-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.76,
                    "student_count": 33
                },
                "student_opinions": {
                    "0": "I didn't care for programming languages but still loved this course. Christos gives great lectures and very clear explanations of difficult concepts.  The assignments are difficult and time consuming but Christos and the PMs were very helpful during OH.",
                    "1": "If you are interested in interpreters/how programming languages work this is gonna be an interesting course for you. I am not personally but it was still interesting to learn about.",
                    "2": "If you disliked using Racket in CS111 or DSSL2 in CS214 or the word \"DrRacket\" sends chills down your spine, this course may not be for you. However, if you are open to using yet another Racket–based language (PLAI) and functional programming, this is a fantastic course for learning about semantics like lexical scoping, closures, continuations, garbage collection, type checking, compiling, etc. With seven homeworks, three attempts per homework, no exams or projects, and a grading policy similar to Professor St–Amour from 214, I truly felt the emphasis was on learning and understanding the course content. Yes, you will get a low grade (0 or 1 out of 3) if your program fails even one test case, but that is why you get three tries; a failing program deserves a poor grade. Yes, the garbage collection assignment is intimidating, and from past CTECs I was expecting to spend 15+ hours on it. In reality it took me as much time as any other homework (~4–5 hours). Just make sure you attend lecture and pay attention to what Professor Dimoulas says and every homework becomes straightforward. FYI this class is unofficially part of 2 separate 3–course sequences (321, 322, 323) and (321, 396, 324) so if you are interested in those other courses keep that in mind!",
                    "3": "Honestly, not really worth taking unless you have a really good reason to. Garbage collection is helpful to know, as is the way programming languages function logic–wise, but the class doesn't feel strictly necessary if you're going into it for the content. Racket is a painful language still. The class population that showed up to class by the end of the quarter shrank to about 10 people. But hey, no exams and just homework isn't bad at all.",
                    "4": "Pretty solid. The last few assignments are way harder than the first few but the 3 submissions structure is good.",
                    "5": "This course presents concepts in programming languages that you'd otherwise take for granted in interesting ways. Lectures can be a little slow sometimes, especially the programming demonstrations, but I don't blame the professor as he does the best he can with the amount of participation he gets. The course starts with some easy concepts that just feel like busy boilerplate work but it gets interesting with recursion and garbage collectors, then goes back to easy with type systems.<br><br>The grading scheme is homework–based only with three attempts each, so there's a very good chance of getting a good grade. You have to get perfect on all assignments to get an A, though.",
                    "6": "Very interesting class on the basics of programming languages and how to add more features. Lectures were well done, weekly projects were interesting, no exams was very nice as well.",
                    "7": "This course is hard and time–consuming if you haven't used racket before. Not a practial course, but a good one if you want to learn the fundamental of programming language",
                    "8": "It is an exciting fundamental CS course, though it could initially have a steep learning curve and be challenging.",
                    "9": "This course is a nice preview into how programming languages are designed and what abstract concepts were developed in order for them to work. There were no exams and you get 3 tries on most of the programming assignments, which was a huge stress reliever. 75% of lecture time is spent live coding, which can be a positive or negative depending on the person.<br><br>However, Racket is frustrating to work with as always, and it definitely made the course less enjoyable for the most part.",
                    "10": "It was very helpful to learn general idea of programming languages. However, if you are not familiar with Racket, it can be pretty hard to do the assignment. It takes quite a lot of time to do this. Professor and all Tas are very helpful to finish this course.",
                    "11": "This class is by no means a joke. The homeworks, even though Christos writes like 80% in lecture, still makes you think about exactly what is going on. For many, the fact that this class is in Racket is a turn off, but that makes your life way easier because the tokens you are parsing are already in a tree form. The homework on garbage collection really helped me understand what was going on, not only because it was an interesting concept, but because Christos' explanation was really well done in lecture. Going to lecture has definitely helped me understand what is happening, even if half of it is watching Christos write code and making typos. I learned a lot in spite of this.",
                    "12": "Dr. Dimoulas is an incredible professor. The lectures were very engaging and connected well with the assignments. The first 3 are relatively easy, but work picks up for assignment 4 5 and 6. The 6th assignment was one of the best assignment I've ever done. You get to create a garbage collector which helps you understand very well how memory is managed for some languages. The class itself is an easy A–, A, you just need to manage your time well and not do the assignments last minute. Showing up to class actually helps you do the homework and the lectures are very engaging.<br>Recommend 10/10",
                    "13": "Would prefer more commonly used language other than racket",
                    "14": "The lectures were essential to finish the assignments on time."
                },
                "school_demographics": {
                    "Weinberg": 7,
                    "McCormick": 17,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 7,
                    "Juniors": 7,
                    "Seniors": 5
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.91,
                    "student_count": 47
                },
                "student_opinions": {
                    "0": "This class is a nightmare. Writing programs in racket combined with the professor's insistence on abbreviating every single variable name makes the code nearly impossible to read. On top of that, the grading scheme is incredibly stressful. Not being able to get an A unless you get a perfect score on all seven homeworks was the biggest stressor of the entire quarter.",
                    "1": "Robby is a great lecturer, but this class is really hard. DON'T FALL BEHIND!",
                    "2": "I liked this class and the racket projects were genuinely pretty fun",
                    "3": "homeworks were very very challenging but it was rewarding when you completed them. i also really liked robby's instruction he's funny",
                    "4": "Idk why everyone hates on the garbage collection hw. It was my favorite one :(",
                    "5": "The course setting is great. For weekly assignment, it have moderate retry times and fast grading. If you show up in the lecture every time, it's easier to get the full score for this course.",
                    "6": "Robby is amazing. The class is interesting but a lot of work. Definitely take the class with Robby.",
                    "7": "I really like the content of this course and the professor is really engaging and helpful but the homeworks take a really long time– most of them took me around 15 hours. The professor is really active on Piazza though and always willing to meet with you to help.",
                    "8": "It was a fabulous course overall. Professor Robby is the best professor I have come across so far at Northwestern and he has an excellent command of the topics. He makes stuff easy to understand and teaches really well in my opinion. The course is not too much work (if you pay attention in classes) and it is very possible to get an A with a decent amount of effort.",
                    "9": "The class's grading system effectively alleviates stress, while the course itself presents a significant intellectual challenge. Professor Findler is exceptionally knowledgeable in programming languages, though his teaching method might benefit from being more direct. He tends to spend a substantial portion of the class—about 40%—asking questions to the students, another 35% on debugging, leaving just 25% for direct explanation of the material, which could be better balanced for clearer understanding.",
                    "10": "Take 310",
                    "11": "Good class, introduces a few topics and builds on them heavily over the course of the quarter, so GO TO LECTURE, I missed one or two and struggled to get back in the swing of things. I found the assignments pretty interesting as well.",
                    "12": "Really recommend this class if you have time for its assignments. Professor Finder is the best instructor I have met in northwestern. Very humorous and enthusiastic to help. The assignments are quite challenging but interesting, and there are lots of office hours to help you work them out. Just understand the contents in lecture and do a lot of thinking, you'll eventually get a good grade",
                    "13": "I thought the layout of the course was good and provided opportunities to get all points on the homeworks.",
                    "14": "Robby is the best CS professor I have taken a class with thus far. He is super personable and super funny. He is also so good at making sure you understand the lectures. Most of the class is him live coding, but he does so in a way that ensures that he interacts with the class so he can gauge where everyone is at. I will admit that halfway through the quarter he had to make attendance mandatory because we had so little turnout, but I had been going to every class anyway because of how engaging a professor he was. I wasn't even enthused about taking this class at the beginning of the quarter, but he made it my favorite class. The material was super interesting, and I found it fascinating to take a look at the reasons why programming languages function the way they do. Homeworks were hard, but as we had 3 attempts per assignment, it wasn't hard to get a good grade. I really hope he teaches more undergraduate classes. He's the best!",
                    "15": "Medium difficulty CS course. No exams, and all coding assignments. Course content is kind of dry/doesn't feel that useful in the long run, but some stuff is interesting. Prof. Findler is a pretty good lecturer, but sometimes felt very disorganized and he would lose half of the students halfway through the lecture. Personally not my favorite CS course.",
                    "16": "this course was awesome! so different from any cs class ive taken (in terms of \"type of programming\" and concepts covered). we covered so many things from deferred substitution to state to garbage collection to  type–checking. i really enjoyed the homework methodology, where you had three attempts to complete each assignment and your final grade on the assignment was your best grade on the three attempts. some of the assignments are very challenging (hw 3–6 out of 7 total). i liked the emphasis on creating our own tests, but one suggestion i have for the class is to provide a \"representative set\" of all the types of test cases that will be used in grading on the third submission; sometimes I got no qualitative feedback from the testing suite on attempt one and/or two because of something silly like naming a function incorrectly.",
                    "17": "Very solid class and Robby teaches the material well. Everything we did in lecture felt useful for completing the homework. <br><br>There are 7 assignments and at the start of the class he'll show a \"perceived difficulty\" graph. Basically linear except difficulty drops drastically at HW 7. To share my own difficulty graph on scales of 1–10, with 1 being super chill and 10 being pretty headache–inducing. (These are just my opinions)<br><br>HW 0: 3<br>HW 1: 5.5<br>HW 2: 3.5<br>HW 3: 4<br>HW 4: 8<br>HW 5: 6<br>HW 6: 9.5<br>HW 7: 1.5",
                    "18": "This has been my favorite class at northwestern so far. Robby is an amazing teacher and the class is super interesting. The homework’s are a cool challenge so make sure not to fall behind.",
                    "19": "321 is a very well organized class. Each professor fully knows what they're talking about and really cares about the class. If you have any interest in implementing programming languages or want to write more functional code, then definitely take this class! Each HW has 3 attempts and all are very fair, especially if you thoroughly read and understand the lecture slides.",
                    "20": "I enjoyed taking this course with professor Findler. It was an enjoyable learning experience to see how a professor writes code and reasons through complex programs.",
                    "21": "Very difficult but very pedagogically robust. Professor Findler cares deeply about student learning of complex subject matter.",
                    "22": "The class was fun. The only thing that was frustrating was the syllabus said that if you couldn't do HW0, then you shouldn't take the class. I found that HW0 was by far the most challenging assignment for me. As long as you stay on top of what is being covered, the hws are not hard just fun problems to think through and take a little bit of time. I would recommend that that message not be included in the syllabus because it might have deterred me when it didn't need to.",
                    "23": "Attend lecture and the course is very manageable. <br><br>Only issue I had is that, on the few occasions that I asked questions on Piazza, Robby seemed antagonistic / unwilling to help. This is because he assumed these questions stemmed from me not having attended lecture (fair enough given the questions, although I DID attend lectures) when I was simply clarifying.",
                    "24": "Not an easy course by any means, but the professor was so engaging and the homework assignments, if you work hard, are doable.",
                    "25": "It was a challenging course. Lot harder than anticipated."
                },
                "school_demographics": {
                    "Weinberg": 14,
                    "McCormick": 28,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 11,
                    "Juniors": 17,
                    "Seniors": 9
                }
            }
        },
        "COMP_SCI 322-0": {
            "2024 Winter": {
                "course_rating": {
                    "average": 5.42,
                    "student_count": 31
                },
                "student_opinions": {
                    "0": "This was by far the best class I've ever taken in my life. I've never been one to attend class regularly, but this class is one that I would be excited to attend each time every week. Simone was super passionate and knowledgeable about the subject, and the structure of the course and the slides were outstanding. However, the class does take up a lot of time and requires some basic C++ experience. If you have the time, I highly recommend taking this class.",
                    "1": "Amazing class. It takes tons of work (around 20 hours a week) to get everything done, but by the end it's all worth it. Compilers are seriously cool pieces of software and you get a really deep sense of appreciation of how they work after building one from scratch. A side effect of this course is that your software engineering skills will go through the roof, and that's a promise.",
                    "2": "Two things you need to know<br><br>1. you need to have a lot of time on your hands for this class. you are writing a new sub–compiler every week, and each of those assignments takes average 20 hours of work, varying a little based on how good at coding you are. but even the smartest folks in this class, the grad students who have taken compilers classes before and know how to use macros and other fancy stuff, even they average at least 15 hours per week. i've seen people spend 35+ hours on a single assignment and still aren't able to complete it. you have to write so much code that, if you don't enjoy coding itself, you may well get sick of writing/looking at code.<br><br>2. if you have the time and spend it on this class, you will learn so much in such a short amount of time. you will learn more per minute spent on this class than any other class in the entire CS curriculum. not only will you have with an extensive understanding of how compilers work, but you will also leave the class with a ton of practice with advanced object oriented programming concepts and techniques, practice working with large codebases, and knowledge about how to design and implement complex ideas in code. you will become a MUCH better programmer all around. these skills are widely applicable to any industry field; the knowledge you gain is incredibly useful even if you aren't going to specialize in compilers in your career.<br><br>Grading is very very fair. If you spend 20 hrs/week on this class, and you give a genuine effort in the assignments to not write disgusting code (ie. you put thought into the design of your code and it makes sense for the problem you're trying to solve), you'll get an A. <br><br>The biggest drawback of the class is that there is not a lot of help and support available if you need additional help. This class is managed only by Simone and one TA Brian. There are no PMs. This means there aren't a lot of office hours and piazza questions take forever to get answers to. This class relies heavily on your own debugging skills and forming groups with other students to help each other out. In most CS classes, if you're stuck, there is a large support system. In this class, if you're stuck, its pretty much up to you to unstuck yourself.",
                    "3": "Good course, A little bit cramped of work. There are no breaks between assignments",
                    "4": "This class definitely pushes harder than most of the others at NU, and the drop ratio reflects that. You really do learn a lot about compilers, and I would recommend it to anyone. Myself and my partner went into the class with a good amount of prior experience in Software and C++, so we didn't find the programming assignments too demanding – more just tedious. I think the difficulty is a little bit overrated, unless you are trying to win the contest. Take the class! You will learn!",
                    "5": "Unless you are really skilled, this class is a test of will. Everything said about the past CTECs are true and more; this class truly is a massive timesink that you have to plan around. Knowledge of C++ is pretty much required, and it helps to have a partner in mind walking in as well. This isn't a class to be taken lightly, and it's definitely not for everyone.<br>That said, I found this class to be one of the best made in the entire CS curriculum. <br>– Most of the policies are very fair towards the students; there are no late policies because you can turn the compilers in whenever you finish them, but you are rewarded with a chance to get an extra point through a panel if you do turn it in on time. If you turn everything in at the end and it all works without a hitch, you are guaranteed to get at least a B+ in the class.<br>– The above point means that there is still value in pushing and struggling through all the way if you are determined to, because<br>– You learn so much about software engineering as a whole as well as compilers. Most of the materials that the professor gives you are relevant; he gives you an algorithm, and it's up to you as the programmer to find a good and maintainable implementation. You directly experience the saying \"you reap what you sow\", as each compiler builds on top of each other (very often you will copy paste code from your previous assignments).<br>– The professor cares about what he's teaching. His lectures make sense and are natural to follow.<br>Again, this class is a massive timesink. You will suffer a lot unless you are a programming genius. It's completely understandable if you end up dropping in the middle. But the best way to learn is unfortunately by suffering.",
                    "6": "This course was definitely my favorite (and the most well designed) course that I've taken so far. The overall goal of this course is to take a high–level C–like language and build a compiler capable of compiling it down into assembly. You start off by writing a compiler to translate a language very similar to assembly into proper x86–64 assembly. (Almost) every week, you are taught a new language that adds a new abstraction, and your homework is to write a compiler which translates the new language into the one learned in the previous week.  Simone has done a really good job chunking up the compilation pipeline into very digestible pieces, and its really cool how you implement a lot of features that are used in real production compilers.<br><br>As you can probably tell from the CTECs, this course requires a LOT of time. Most people say this course takes 15+ hours per week and that doesn't count the good percentage of people who dropped the course. Compilers are very complex by nature so assignments take a long time to code. You are also not given explicit instructions on how to implement homeworks so you are responsible for making significant design choices (and you'll also suffer the consequences if you make bad choices). This class also only has one TA so office hours and piazza responses are fairly limited, so you won't be able to get much help with things like debugging. While this course is great, I think you should only take it if you have the time AND you have some confidence in your ability to code and debug independently.",
                    "7": "This class is a LOT, and Simone knows it. Be prepared to code for pretty much the entire weekend and then some every week until like week 6. Class eases out a bit after that, as in you’ll probably finish on Monday/Sunday instead of Tuesday/Wednesday. Basically, each week you build a compiler from one language Simone designed to another. You build up from outputting assembly to by the end of the quarter basically taking c code as input. The class is extremely well designed, and you will learn so much software engineering skills, as long as you are willing to put in/have the time. If you have the time, you’re basically guaranteed an A. Probably the most valuable CS class I’ve taken so far at NU, was rough but absolutely worth it. Oh, and Simone is wonderful just as a person. He cares so much about your learning, more so than anything.",
                    "8": "The course is pretty cool, but depending on your level of perfectionism, might take up all of your time. The actual content of the class is not that difficult and is important to know if you want to know anything about compilers at all, but the main struggle is the homework assignments. Part of your grade comes from how many \"panel\" participations you get, which is basically one opportunity per assignment for your code to be deemed good enough to present to the rest of the class. Even if you don't get a single one of those points, you can still get an A because he gives extra credit assignments at the end.",
                    "9": "This class demystifies the secrets behind the common compilers we use every day. So it is a decent class to take for anyone interested in this topic. The assignments provide good opportunity to gain hands–on experience for compiler engineering. However they are very time consuming, and a large portion of it is writing parsers, which is repetitive and boring towards later parts of the class.",
                    "10": "Really time consuming, but made me better at designing C++ programs in general. Compilers were very unexpectedly cool. If you have the time and grit you should take this course",
                    "11": "PREPARE FOR THIS COURSE TO BE YOUR LIFE FOR AT LEAST SIX WEEKS<br><br>Assignments are weekly, and the first 5 took 12–20 hours each (and I was working with a partner). I cannot emphasize how important it is that you prepare for this reality.<br><br>Once you've accepted the time commitment, the course is absolutely fantastic. Simone is one of those lecturers that is clearly wicked smart and knowledgeable but is even more passionate about the course material. He has very high expectations for the students in this course, but makes it clear that it's his priority to make sure you can meet them.<br><br>The course layout is interesting: there's no exams, just 9 weekly compiler programming assignments (plus coding some tests in the target languages). The course is much more difficult in the first 2/3s (difficulty probably peaks around week 5) and drops off pretty quick to being probably easier than most other systems class in the last few homeworks. You're done by the beginning of reading week, which is very nice.<br><br>You will do so so much C++ programming, and Simone teaches a lot of good code practice and software engineering patterns that are useful to know in general, so the class is great at advancing your C++ ability independent of compilers.<br><br>Would strongly recommend this to anyone somewhat systems–oriented and looking to challenge themselves!!",
                    "12": "This course is a lot of work. Do not take if you do not want your life to revolve around it. Also do not take if you are not comfortable making relatively large projects in C++. This is class you take if you want to challenge yourself. It was probably the hardest CS course I've ever taken.",
                    "13": "I had a positive reaction to this course",
                    "14": "It's a lot of work, but it's definitely worth taking.",
                    "15": "Great course with a lot about compilers to learn about except that the pace of the class is a little bit too fast at the beginning. It will be nice to have some buffer to keep up with the class say a two week assignment at the beginning.",
                    "16": "the first reaction to those difficult and time–consuming homework is depression and burnout for sure. But by pushing myself to learn more and try to finishing those code, I can see my personal growth afterward.",
                    "17": "The survivorship bias is real in this one. CTECs should provide the drop rate.",
                    "18": "I will say there is very little help in this class  (2 OH and a bit of time b4 and after class to ask simone questions) –&gt; make sure you choose a good partner because y'all are gonna be in the trenches together all quarter",
                    "19": "This course helped me learnt a lot of the construction of compilers. It basically tells you the algorithms and mechanisms under the hood of compilers, layer by layer. Learnt a lot from this class.",
                    "20": "This course was an insane amount of work. If you don't have a very solid base in c++, it becomes even more of a time suck – it's also extremely important not to fall behind. It's very likely your other classes will suffer so be smart with scheduling.",
                    "21": "This is one of the best courses I have taken at Northwestern. However, none of the CTECs are exaggerating when it comes to the workload. Be ready to spend ~20 hours a week on this class for the first 2/3rds of the quarter. Professor Camapanoni understands that students are taking other classes as well, so the most time consuming and intellectually challenging assignments are given out early on and the last few weeks are pretty trivial. I definitely recommend reviewing and learning more about C++ before the quarter starts; 211 is insufficient. Besides that, you will have the unique opportunity to work on basically a quarter–long project and feel immense satisfaction whenever your compilers finally pass all the test suites and participate in a class–wide competition.  Take this class even if you are on the fence! Professor Campanoni truly cares about the course and puts in an insane amount of time and effort into the student experience.",
                    "22": "This class is a lot of work. Many elements have been simplified to make it more reasonable, but it remains unreasonable. It is an important thing to learn though."
                },
                "school_demographics": {
                    "Weinberg": 2,
                    "McCormick": 22,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 5,
                    "Juniors": 13,
                    "Seniors": 2
                }
            }
        },
        "COMP_SCI 323-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.79,
                    "student_count": 14
                },
                "student_opinions": {
                    "0": "The course introduced a lot of interesting concepts but the homework load was just too much.",
                    "1": "I have always been interested in how compiler optimizations work. This class has been a good start!",
                    "2": "This course was extremely challenging and time consuming. Be prepared to spend more than 20 hours a week on assignments if you're not a genius.<br><br>On the flip side, you will learn a ton about the conceptual aspects of code optimization and the middle–end of compilers. Also, there are no exams; all of the grading is based on homework and extra credit opportunities.",
                    "3": "This class is definitely as hard as people say it is, but doable. The course covers how industrial grade compilers optimize and transform the code that you write. You get a lot of exposure to the technical tools used to do optimization (clang, LLVM, c++) as well as even more exposure to the conceptual/theoretical ideas behind different kinds of optimization techniques. For hw, you are essentially building a program to optimize a library of c++ functions that Simone has created. You start off with very strong assumptions and simplifications, but as you progress through the quarter those assumptions relax and you are asked to add more features. There is a new assignment every week, and your solutions build off of your solutions to the previous assignment. The homeworks get progressively more difficult and peak at hw 6, before they get easier again. I'd say that even the hw is very challenging, it is challenging from a conceptual standpoint rather than a technical one. If you want to take this course you should be very aware that this class requires a very large time commitment, and that many students drop because of the workload. You should also be aware that it is very easy to fall behind since each hw is dependent on the previous, and there is very limited support. There is only one PM and TA, so there are only a few OH per week, response times on Piazza on long, and it will take some time for Simone to give feedback on your assignments. Aside from that , if you are able to make the commitment, I'd say taking a class with Simone is a very rewarding experience. Simone has really perfected how he teaches this course, and he somehow has a way of breaking down and explaining the most conceptually difficult topics into understandable chunks. Even though his class will work you like a dog, Simone is extremely kind and sincerely cares about making sure students understand the course content.",
                    "4": "This class is possibly the best one I've taken in the CS department. Expect to spend a lot of time, but not one second of that time feels wasted.",
                    "5": "It turned out to be extremely difficult and time consuming, and I got quite behind on the work. But nevertheless, I really enjoyed all the topics we learned, and it was interesting from beginning to end.",
                    "6": "Another excellent class by Simone. Its a good idea to take CC before this, and while CAT is not an easy class, I found it to be less work than CC.<br><br>Simone is very passionate about teaching, and he wants to make sure you learn the material. There's no exams, just weekly programming assignments. <br><br>HIGHLY recommend you take this if you are interested about compilers.",
                    "7": "This is one of the best courses that I've ever taken. Prof. Simone is an amazing instructor and he pays a lot of attentions to details to improve students' experience from the course. The homeworks are quite challenging, and it feels very satisfying and rewarding when my solution passes all the tests and even further optimizes the program in some cases."
                },
                "school_demographics": {
                    "Weinberg": 0,
                    "McCormick": 11,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 5,
                    "Seniors": 0
                }
            }
        },
        "COMP_SCI 324-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 5.44,
                    "student_count": 25
                },
                "student_opinions": {
                    "0": "The course was a great intro to reading PL papers, though I felt that it would have been nice to go beyond the topics discussed in CS321,  a few additional lectures that go towards discussing advanced topics would be appreciated. I felt like the class lacked some depth in that respect, which the project didn't fulfill.",
                    "1": "Christos is such an amazing professor! The class definitely has some tricky concepts to wrap your head around, but if you're interested in the topic, you'll definitely enjoy the class. The whole course is based on a final group project, which is a very manageable amount of work if you space it out. Otherwise, you just show up to class and learn. And again, Christos is SUCH a great professor. You can tell how enthusiastic he is about the subject matter.",
                    "2": "Much more interesting than 321 IMO. If you liked the more abstract parts of 321 (e.g. type–checking), and/or didn't like writing tons of interpreters, and/or you're fond of greek letters and arrows, you'll probably enjoy this class.",
                    "3": "This course is like 321 but is more formalized. You model some of the languages from 321 using a library in racket called redex. Its pretty confusing and not really well explained at the start, but by the end of the course it becomes pretty easy to use. The only assignment in the class is a quarter long project where you model a language from a research paper in redex and present it. The project takes a bit of time and effort but its extremely reasonable. Overall I'd say that Dimoulas is a good professor and made the class/project very manageable",
                    "4": "This is one of my favorite courses I’ve taken here! If you like programming languages, I would definitely take it. The biggest time commitment is the project but it really helps you understand modeling programming languages.",
                    "5": "Great class! Solid lectures, light workload, interesting content. Easy A. This class focuses on the mathy–theory behind programming languages. As someone who doesn't like math, I was worried about this going in, but the math is simple (nothing harder than algebra) and the theory is actually very interesting. It absolutely isn't like any traditional math class where you solve problems for homework, it's more like you are learning to conceptualize how programming languages work using various mathematical/logical frameworks. If you liked 321, I absolutely recommend signing up for this class.<br><br>Dimoulas is a fantastic lecturer, although he may go a bit too fast at times because he has a lot of content to get through. Don't be afraid to ask him to repeat/reexplain something if he went too fast. Half the lectures are lab time where you are practicing exactly what he just lectured about with your partners, which really helps to solidify your understanding.<br><br>There are really just 2 assignments –– one is a short presentation about a research paper, and the second is a presentation about the model your team (of 2–4) created based on the paper. You aren't expected to do any work outside of that.",
                    "6": "This was a great course as an extension of 321. Dimoulas is an awesome and caring professor. Though you have to go to class, most of the work for the course happens during lab time. The content went over my head a bit during lecture, but his live–coding examples always helped everything click together. Highly recommend if you found 321 interesting.",
                    "7": "CS 324/424 is a great class to take if you are interested in PL research! You'll learn all that you need to know in order to read PL papers. The course moves quickly, but I'd say just try and grasp the main ideas of what is taught so that you can (a) succeed on the final project and (b) back–reference as needed in the future when reading PL papers.",
                    "8": "This course is one that really makes you think about what it means to execute a program. It took me a while to understand everything that was happening, but once I did, everything went perfectly well. I believe the rigor of the formalization will prove to be useful in both later courses and my research to come.",
                    "9": "I got a sense of what \"formalizing properties of programming languages\" means and familiarized with the notation used in papers affine to my research area. This was more or less why I decided to take this class",
                    "10": "Had no idea what to expect going in. Christos Dimoulas is such an amazing professor. He cares about the students learning, and is extremely understanding. (I also love no exams)",
                    "11": "I would recommend this class to anyone who enjoyed 321/Racket and is interested in a more mathematical description of programming languages or programming languages research. You get to work on a quarter–long group project implementing a model in Racket/Redex described in a research paper. There are no other assignments or exams. As always, have good teammates and don't push everything off until the end of the quarter."
                },
                "school_demographics": {
                    "Weinberg": 5,
                    "McCormick": 16,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 4,
                    "Juniors": 10,
                    "Seniors": 3
                }
            }
        },
        "COMP_SCI 325-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 3.61,
                    "student_count": 28
                },
                "student_opinions": {
                    "0": "Prof. Riesbeck is an enthusiastic lecturer and he gave out accurate feedback to my code. You have to attend his lectures to know what's going on and why this course is called AI programming in the first place. You'll get to code in Common Lisp which is a no–nonsense functional programming language. It's quite challenging but it really gets you used to linked lists.",
                    "1": "The structure of the class is terrible, the way students got critiques from the professor is horrible and it is totally objective so we have no idea what we should do on each assignment.",
                    "2": "My programming has improved and I had fun.",
                    "3": "This class takes coding to a brutal new level. Just passing tests is the bare minimum. Getting code that actually is accepted must have been coded flawlessly. The professors critiques are pretty harsh, and very unhelpful as to how to actually implement them. This class feels very much like a grad school class being taught to undergrads. Most exercises took me around 4–5 hours to get passing the tests, and usually another 2–3 hours to fix the critiques per exercise. I had to send each exercise back in for critiques around 3–4 times before it was finally accepted. In total it took around 10–15 hours to get an exercise completely done. It will for sure make you a much better coder, but it can be very time intensive and pretty demoralizing at times. The critiques often made me feel rather stupid, and then even more frustrated when I couldn't understand/implement them. Furthermore the help offered in this class is minimal. My experience with reaching out when I was at sticking points was usually just \"re–read the description\" or \"think about what you've been trying to do, but smarter\". I was am intermediate coder at the start of this class, and as such I would not recommend taking this course unless you are at the very advanced level.",
                    "4": "The exercises are challenging, especially because Riesebeck will continuously pick different aspects to ask you to optimize your codes. The workload is huge, and I guess so is for Professor Riesebeck, but it is the multiple submissions of the same question that make you know how to write really good code.",
                    "5": "This course encourages me to write better code.",
                    "6": "Homework: The professor suggested to complete 3 assignments every week, but students could choose what they wanted to complete. I appreciate the freedom, but the criteria for grading is not very clear. It is also sometimes frustrating to get homework done, because it's difficult to get help on Campuswire. <br>Courses: Could be more structured. We talked about different aspects of AI, but we rarely talk about coding in class. Most of the Graham book was self learned.",
                    "7": "This class is definitely difficult and time–consuming, especially if you are not familiar with Scheme–like languages. My biggest advice is to set some time every day to work on it a bit. You will need to complete 30 Lisp and/or Javascript exercises by the end of the quarter, which will need to be resubmitted a couple times to revise with critiques given by the professor. It's doable! But requires patience and diligence. Don't do what I did and leave 15 exercises for the end.",
                    "8": "I'm not really sure how to feel about this class. In my view, the lectures weren't very helpful when it came to getting the exercises in this class done. If it weren't for the professor taking attendance, I probably would have stopped showing up a few weeks into the class, as a lot of other students seemingly did. <br><br>If you didn't know, this class has an alternative grading system. The exercises do not have deadlines, and you can work at your own pace, although the professor expects a pretty consistent amount of submissions per week. The professor personally reviews every submission for every student, and provides critiques for each submission. The exercises are not considered done until the professor has no critiques. This is where the majority of my negative experiences with this class come from. <br><br>From personal experience, there were many times where I believed I found a very clever solution to a given problem, and submitted it, only for the professor's critiques to tell me to just do it a different way. The teacher also provides test cases for each exercise and a program that automatically critiques your code for you. Even if you pass all those tests, he'll most likely send your work back the first couple of times. I was just writing code exactly how the professor wanted me to write it. That sounds strange, of course the professor's goal is to improve your code writing, so he wants you to write it a certain way, but it killed my curiosity and enthusiasm many times. It was pretty demoralizing to just be resubmitting the same exercise multiple times for what sometimes felt like nitpicks. At times, it felt the professor was just skimming through my submissions. There were multiple times when I would address all of the professor's given critiques, only for him to send it back with more critiques unrelated to my changes. Why not address all the issues you have, and reduce the number of submissions you have to review? <br><br>I also didn't find the professor very helpful when it came to asking for help with exercises. In personal conversation, he's pretty helpful at getting to the root of your misunderstandings, but over email or Campuswire, it honestly feels like you're interrogating an uncooperative suspect for answers. I can tell he really wants students to figure things out on their own. I've had a few teachers like him before, attempting to give just enough information for students to have that \"aha!\" moment when solving a problem. The difference is that other teachers address and point out misunderstandings early to prevent long–winded spirals of thought that lead to dead ends. This professor didn't really do that over email or Campuswire. This led to a few really long and annoying backs–and–forths about exercises. I felt like I was going crazy at times; I'd send emails with multiple questions, looking for closure or clarifications, and he'd respond with a few sentences, none of which addressed any of my questions. You will very rarely get a straight answer about anything.<br><br>This class isn't all bad, though. It really was immensely satisfying to finally understand an exercise or get lots of submissions done in a week, even if I knew most of my work would be sent back. The professor is also clearly very knowledgeable about these topics and the language we use, and his passion came through in the lectures. I also found that right after class was a good time to ask questions, as he's very helpful in person. I didn't feel like I learned much about AI Programming in this class; I mostly just learned how to write Lisp programs and macros. Then again, I didn't attempt a large number of exercises which tested skills that would be paramount in AI programming, so I guess you only get what you put in. If you're really really good at Lisp, you'll do fine. Otherwise, I would suggest finding another class to fulfill your requirements.",
                    "9": "I think this is a great class to take if you are interested in developing your own ability to write clean code. We cover AI topics in class, but there is significant focus on not just getting code to work but writing it the best way possible. It can be challenging to meet the quota of exercises to submit so it does take a good amount of effort outside of class, but I am a big fan of the individual critique system; Prof. Riesbeck puts in a lot of effort to give everyone feedback on their code.",
                    "10": "If you can avoid it, do not take this class unless you have taken the entire 200–level CS sequence and have a strong grasp on Common Lisp. I did not know Common Lisp before the course was taking 214 concurrently, but there were so many advanced topics on exercises that I did not understand. Basically the way the class works is you have to complete 3–ish exercises (Common Lisp functions) a week, and you will get critique on how to make your code better until it's done. It is extremely difficult to reach this goal and emailing the professor also results in very little help. Lectures were also not helpful at all to my learning so there were very little resources for this class in general and it's really hard to meet the goal he wants you to meet. Do not recommend. Also the course name is not an accurate portrayal of the class we rarely coded with AI–related topics.",
                    "11": "DO NOT take this class. This class is terrible, there are not TAs and no office hours so you are basically stuck learning everything yourself. I asked to meet with the prof one time because I was having a hard time with an exercise and he straight up told me no. Riesbeck is really rude to his students when they are only trying to ask for help. Even though this class says that you only need 111 and 150 as a pre–req, i felt that was not the case. The class focused on advanced topics and stuff that was way out of reach for me. Just don't take this class.",
                    "12": "This course was challenging but very enjoyable. It is completely self paced. The exercises are tough but you get to choose which ones to complete.",
                    "13": "NA",
                    "14": "This course is primarily about learning lisp, with some application to AI topics but the interesting AI uses for lisp were not discussed much until the last few weeks of the course.",
                    "15": "Prof Riesbeck is such a wonderful teacher. He is very quick to respond to students when they reach out for help. I would get stuck on an exercise for hours, and I would just send him an email on what I've done, and if he sees that you are making an effort, he would bridge the gap between what you know and what you need to know to complete the exercise. I really loved this class.<br><br>One suggestion for improvement though is that class status progress should be sent out more frequently to keep students on their toes so that they don't fall behind. If you're being called out, I think you would be pushed to put in more effort. Also, I think the grading scale should be made more explicit by specifying combinations of exercises that will get you an A, A–, B, etc."
                },
                "school_demographics": {
                    "Weinberg": 8,
                    "McCormick": 10,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 6,
                    "Juniors": 3,
                    "Seniors": 8
                }
            }
        },
        "COMP_SCI 325-1": {
            "2023 Fall": {
                "course_rating": {
                    "average": 3.61,
                    "student_count": 28
                },
                "student_opinions": {
                    "0": "Prof. Riesbeck is an enthusiastic lecturer and he gave out accurate feedback to my code. You have to attend his lectures to know what's going on and why this course is called AI programming in the first place. You'll get to code in Common Lisp which is a no–nonsense functional programming language. It's quite challenging but it really gets you used to linked lists.",
                    "1": "The structure of the class is terrible, the way students got critiques from the professor is horrible and it is totally objective so we have no idea what we should do on each assignment.",
                    "2": "My programming has improved and I had fun.",
                    "3": "This class takes coding to a brutal new level. Just passing tests is the bare minimum. Getting code that actually is accepted must have been coded flawlessly. The professors critiques are pretty harsh, and very unhelpful as to how to actually implement them. This class feels very much like a grad school class being taught to undergrads. Most exercises took me around 4–5 hours to get passing the tests, and usually another 2–3 hours to fix the critiques per exercise. I had to send each exercise back in for critiques around 3–4 times before it was finally accepted. In total it took around 10–15 hours to get an exercise completely done. It will for sure make you a much better coder, but it can be very time intensive and pretty demoralizing at times. The critiques often made me feel rather stupid, and then even more frustrated when I couldn't understand/implement them. Furthermore the help offered in this class is minimal. My experience with reaching out when I was at sticking points was usually just \"re–read the description\" or \"think about what you've been trying to do, but smarter\". I was am intermediate coder at the start of this class, and as such I would not recommend taking this course unless you are at the very advanced level.",
                    "4": "The exercises are challenging, especially because Riesebeck will continuously pick different aspects to ask you to optimize your codes. The workload is huge, and I guess so is for Professor Riesebeck, but it is the multiple submissions of the same question that make you know how to write really good code.",
                    "5": "This course encourages me to write better code.",
                    "6": "Homework: The professor suggested to complete 3 assignments every week, but students could choose what they wanted to complete. I appreciate the freedom, but the criteria for grading is not very clear. It is also sometimes frustrating to get homework done, because it's difficult to get help on Campuswire. <br>Courses: Could be more structured. We talked about different aspects of AI, but we rarely talk about coding in class. Most of the Graham book was self learned.",
                    "7": "This class is definitely difficult and time–consuming, especially if you are not familiar with Scheme–like languages. My biggest advice is to set some time every day to work on it a bit. You will need to complete 30 Lisp and/or Javascript exercises by the end of the quarter, which will need to be resubmitted a couple times to revise with critiques given by the professor. It's doable! But requires patience and diligence. Don't do what I did and leave 15 exercises for the end.",
                    "8": "I'm not really sure how to feel about this class. In my view, the lectures weren't very helpful when it came to getting the exercises in this class done. If it weren't for the professor taking attendance, I probably would have stopped showing up a few weeks into the class, as a lot of other students seemingly did. <br><br>If you didn't know, this class has an alternative grading system. The exercises do not have deadlines, and you can work at your own pace, although the professor expects a pretty consistent amount of submissions per week. The professor personally reviews every submission for every student, and provides critiques for each submission. The exercises are not considered done until the professor has no critiques. This is where the majority of my negative experiences with this class come from. <br><br>From personal experience, there were many times where I believed I found a very clever solution to a given problem, and submitted it, only for the professor's critiques to tell me to just do it a different way. The teacher also provides test cases for each exercise and a program that automatically critiques your code for you. Even if you pass all those tests, he'll most likely send your work back the first couple of times. I was just writing code exactly how the professor wanted me to write it. That sounds strange, of course the professor's goal is to improve your code writing, so he wants you to write it a certain way, but it killed my curiosity and enthusiasm many times. It was pretty demoralizing to just be resubmitting the same exercise multiple times for what sometimes felt like nitpicks. At times, it felt the professor was just skimming through my submissions. There were multiple times when I would address all of the professor's given critiques, only for him to send it back with more critiques unrelated to my changes. Why not address all the issues you have, and reduce the number of submissions you have to review? <br><br>I also didn't find the professor very helpful when it came to asking for help with exercises. In personal conversation, he's pretty helpful at getting to the root of your misunderstandings, but over email or Campuswire, it honestly feels like you're interrogating an uncooperative suspect for answers. I can tell he really wants students to figure things out on their own. I've had a few teachers like him before, attempting to give just enough information for students to have that \"aha!\" moment when solving a problem. The difference is that other teachers address and point out misunderstandings early to prevent long–winded spirals of thought that lead to dead ends. This professor didn't really do that over email or Campuswire. This led to a few really long and annoying backs–and–forths about exercises. I felt like I was going crazy at times; I'd send emails with multiple questions, looking for closure or clarifications, and he'd respond with a few sentences, none of which addressed any of my questions. You will very rarely get a straight answer about anything.<br><br>This class isn't all bad, though. It really was immensely satisfying to finally understand an exercise or get lots of submissions done in a week, even if I knew most of my work would be sent back. The professor is also clearly very knowledgeable about these topics and the language we use, and his passion came through in the lectures. I also found that right after class was a good time to ask questions, as he's very helpful in person. I didn't feel like I learned much about AI Programming in this class; I mostly just learned how to write Lisp programs and macros. Then again, I didn't attempt a large number of exercises which tested skills that would be paramount in AI programming, so I guess you only get what you put in. If you're really really good at Lisp, you'll do fine. Otherwise, I would suggest finding another class to fulfill your requirements.",
                    "9": "I think this is a great class to take if you are interested in developing your own ability to write clean code. We cover AI topics in class, but there is significant focus on not just getting code to work but writing it the best way possible. It can be challenging to meet the quota of exercises to submit so it does take a good amount of effort outside of class, but I am a big fan of the individual critique system; Prof. Riesbeck puts in a lot of effort to give everyone feedback on their code.",
                    "10": "If you can avoid it, do not take this class unless you have taken the entire 200–level CS sequence and have a strong grasp on Common Lisp. I did not know Common Lisp before the course was taking 214 concurrently, but there were so many advanced topics on exercises that I did not understand. Basically the way the class works is you have to complete 3–ish exercises (Common Lisp functions) a week, and you will get critique on how to make your code better until it's done. It is extremely difficult to reach this goal and emailing the professor also results in very little help. Lectures were also not helpful at all to my learning so there were very little resources for this class in general and it's really hard to meet the goal he wants you to meet. Do not recommend. Also the course name is not an accurate portrayal of the class we rarely coded with AI–related topics.",
                    "11": "DO NOT take this class. This class is terrible, there are not TAs and no office hours so you are basically stuck learning everything yourself. I asked to meet with the prof one time because I was having a hard time with an exercise and he straight up told me no. Riesbeck is really rude to his students when they are only trying to ask for help. Even though this class says that you only need 111 and 150 as a pre–req, i felt that was not the case. The class focused on advanced topics and stuff that was way out of reach for me. Just don't take this class.",
                    "12": "This course was challenging but very enjoyable. It is completely self paced. The exercises are tough but you get to choose which ones to complete.",
                    "13": "NA",
                    "14": "This course is primarily about learning lisp, with some application to AI topics but the interesting AI uses for lisp were not discussed much until the last few weeks of the course.",
                    "15": "Prof Riesbeck is such a wonderful teacher. He is very quick to respond to students when they reach out for help. I would get stuck on an exercise for hours, and I would just send him an email on what I've done, and if he sees that you are making an effort, he would bridge the gap between what you know and what you need to know to complete the exercise. I really loved this class.<br><br>One suggestion for improvement though is that class status progress should be sent out more frequently to keep students on their toes so that they don't fall behind. If you're being called out, I think you would be pushed to put in more effort. Also, I think the grading scale should be made more explicit by specifying combinations of exercises that will get you an A, A–, B, etc."
                },
                "school_demographics": {
                    "Weinberg": 8,
                    "McCormick": 10,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 6,
                    "Juniors": 3,
                    "Seniors": 8
                }
            }
        },
        "COMP_SCI 326-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 5.73,
                    "student_count": 40
                },
                "student_opinions": {
                    "0": "Joshua D'arcy is an amazing professor, I hope he continues to teach this class. We all loved him. The grading consists of homeworks (which help you learn but are not deadly challenging), attendance, a quarter–long team project, and a final test.  This course was greatly constructed.",
                    "1": "One of the best classes I have taken at this school. It is so well structured, and you really get to learn all there is about the data science pipeline. The professor is clearly very passionate about the subject and his students, making it a powerful combo for learning. It's rare to have a class that's easy to get an A, and have you learn a lot at the same time.",
                    "2": "Absolutely fantastic class. 11/10. Prof D'Arc is the best lecturer I've had at NU. He really understands the fundamentals of the topics he teaches and is super enthusiastic about Data Science. It is refreshing to see a professor actually excited to teach the class and engage with the material. The assignments are very resonable and you are given time in class to finish them. Final project is cool and a fun way to apply the stuff you learn",
                    "3": "Professor D'arcy is fantastic, good teacher but also a nice + helpful guy. If you've taken ML some parts will be a review, but others will be new and interesting. If you aren't planning on doing the data science sequence but are interested in the subject I would definitely recommend.  The final project is weird though, the groups were huge so you don't end up doing anything individually.",
                    "4": "Great course. Highly recommended",
                    "5": "I had already taken machine learning, so I honestly did not learn as much as I could have in this course, but I think that if I hadn't this would have been a great introduction.",
                    "6": "Joshua D'Arcy is truly the goat. He's really enthusiastic in lecture and makes concepts very easy to understand. He dedicates portions of class to helping students with solving homework issues, which is really helpful for time management and just getting the homework done early. I can tell he also cares more about us actually learning than just regurgitating information, which I really appreciate. There are homework that are fairly straightforward and a team–based project. The project itself is very open–ended, so if you have a good team you should be fine. Great class, definitely take this!!",
                    "7": "D'arcy is a very helpful and caring professor. He actually cares that you learn and understand the material and does not go too hard on grading. Class has required attendance.",
                    "8": "A good amount of homework. Good opportunity to apply concepts with the project. It's a very informative and comprehensive overview of data science and the data pipeline.",
                    "9": "Felt like we moved so fast and covered many things, yet retained nothing. The class is great, but at times it was \"let me show you this very complicated data science technique then never go over it again/never do it in homework\".",
                    "10": "This was the best CS class I took at Northwestern in terms of teaching and grading. I loved the professor; his enthusiasm made me want to come to class. The professor really wants us to understand the subject and apply the knowledge we get from the lectures to our project. The quiz was pretty straightforward and manageable if you study the lecture slides. Don't leave Nu without taking this class!!!",
                    "11": "Professor D'Arcy is great. Lectures were interesting, and the homework assignments were enjoyable and straightforward. Highly highly recommend taking this course for an elective.",
                    "12": "very good, highly recommend",
                    "13": "Good for students who want to be a DA or DS in the future.",
                    "14": "Professor D'Arcy is a great professor and really understands the field well. He is happy to answer questions and does a good job in doing so. The course was not too challenging. Homework assignments are straight forward as long as you pay attention in class. Highly recommend this class to anyone thinking about Data Science as a career path.",
                    "15": "If you have taking ML you might have seen some of the methods covered in this course. However this course provides a new prospective, more industry–driven in my opinion. I personally enjoyed learning about how to deal with different kinds of data, which models to use, and how to get the most out of our analyses and evaluations.",
                    "16": "D'arcy is the GOAT!! Genuinely one of the greatest lecturers I have ever had at NU. He's so passionate about what he teaches and is so knowledgeable and eager to help students. Genuinely a wonderful guy and a great class where I learned so much. TAKE THIS CLASS.",
                    "17": "d'arcy is honestly a godsend, not suure how he ended up here but will be grateful that i was able to take the class. the material is pretty trivial if you have previous background in ml/ds but there are still somet things you will learn especially if you 'specialize'. he seems like a smart guy, very busy, but you can learn a lot from him especially if you take the time to interact with him and he's really willing to go out of his way to help you as well. super cool dude and class, would highly recommend!",
                    "18": "This course was very chill and helpful at the same time. You can get a nice final project out of it and Prof. D'Arcy was very helpful. His lectures were also engaging.",
                    "19": "good organization",
                    "20": "Great course. You learn many various topics, and you go into decent depth in all of them. There is a lot of content here that I think is beneficial for people wanting to be introduced or even have past exposure to data science. The professor explains concepts very clearly, and the pacing is perfect.",
                    "21": "Professor D'Arcy is such a great professor and lecturer, super enthusiastic and nice! His lectures are straightforward and easy to understand, and prepare you well for his homeworks, which are generally pretty easy but still teach you a lot. Recommend this class",
                    "22": "Professor D'Arcy is fantastic and always makes himself available for students who have questions on the lectures or homework or data science and machine learning in general. I feel like this course is invaluable for anyone with a slight interest in data science/ML as it covers a wide breadth of topics and focuses heavily on application and practice over theory. You get to work on a quarter–long group project where you apply the data science pipeline to gain actionable insights from datasets and address some sort of problem. The overall workload is very reasonable and draws directly from the lecture material.",
                    "23": "Take this class with D'Arcy! The workload is super manageable and the lectures and homeworks are very well organized in straightforward. Unlike many other CS classes that are extremely overwhelming with way too much content crammed into one quarter, D'Arcy covers all the essential and relevant topics in data science at a very comfortable pace. I genuinely enjoyed this class and felt I learned a lot without any stress.",
                    "24": "This is a really good class if you are interested in data science and want to learn how to create actionable items from datasets."
                },
                "school_demographics": {
                    "Weinberg": 18,
                    "McCormick": 16,
                    "Medill": 1,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 9,
                    "Juniors": 13,
                    "Seniors": 6
                }
            }
        },
        "COMP_SCI 327-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 3.99,
                    "student_count": 172
                },
                "student_opinions": {
                    "0": "Through taking the class, you will learn important skills for making web arts.",
                    "1": "Prof is nice and the HW assignments sometimes can be annoying. Overall pretty fun though.",
                    "2": "Only take this class if you have to. I would definitely recommend this class if people enjoy programming graphics in Javascript.",
                    "3": "Personally, I was not a fan of this course at all. I can see people with a passion for generative art maybe enjoying this course more, but if you're not into that, I highly advise not taking this course. Within the first few weeks I started to dread doing the assignments every week. I came into this class thinking that it would be pretty easy and somewhat interesting, but I found that the assignments are very repetitive and annoying to complete. To add some difficulty to the assignments, some of the assignments would just ask for multiple of the same thing but with a different design. The assignments are not intellectually difficult. Rather, the difficulty arises from the sheer lack of motivation and dread I had in doing these mundane assignments that essentially seem like busy work.<br><br>The course is also a bit disorganized. I appreciate the grading scheme as a concept—there ended up being around 120 possible points, only 94 of which you needed to get an A—but it ended up being hard to plan ahead when some of the assignment instructions were quite vague or released late, or when some of the points she initially had on the syllabus were changed later on.<br><br>Overall, maybe if I had a very very strong passion for generative art, I would've enjoyed this course more. But I don't, so I didn't.",
                    "4": "Prof Compton doesn't get enough credit for what she does tbh",
                    "5": "I think the Prof. Compton tried to foster a learning and collaborative environment for students who are genuinely interested in generative methods and arts. The Large Model Study Session gives students some do–ocracy as to what they want to learn. Just like most other CS courses at NU, you get what you put in, and it is not enough just to get all As. More time outside of assignments is needed if you really want to learn. An A is definitely not that hard for this class if you do the work.",
                    "6": "I wish we decreased the volume in this course and really just focused turning in 1 good thing per week, instead of 3 or 4 meh things per week. The teacher definitely tried to employ a teaching philosophy that they thought would encourage students to be curious and learn on their own, but I think there philosophy misjudged what Northwestern students are like. We are busy and do not want to be as engaged with this course as the teacher wanted us to be.",
                    "7": "Decent course, but the assignments were pretty long and sometimes annoying.",
                    "8": "I know I should expect to put work into CS classes, but it was too much work compared to previous years. I took this class because I expected a lower workload so I could devote more time to my more rigorous class. I wish courses didn't drastically change the workload/rigor randomly because I rely on these types of classes to not burn out. The grading is mostly completion–based and flexible, though. <br><br>The projects are a bit hard if you don't have Javascript experience. You're allowed to use ChatGPT so that was okay.",
                    "9": "Definitely prob the best Tech Elective you can take for the CS major.",
                    "10": "The course is kind of a mishmash of subjects and it can be tricky to constantly learn so many skills all at once if you're new to html, p5, glitch, etc. I found myself struggling to make progress because of the tricky learning curve . Thankfully, the course was very forgiving in terms of grading and late policy. I would review the next instructor before taking this course since Kate is leaving this quarter.",
                    "11": "In the bluntest way possible, this class is a time sink with the \"accumulate as many points as you need\". Because of the course changes, some of the tasks are a lot more time–consuming now while not providing much knowledge in return. Those of us who want to put effort into the assignments often get the worse end of the stick as the requirements of a 100% on an assignment is incredibly vague. The readme's that have to filled out are also pretty useless. The best part about this course is the LMSS, where you get to learn more about machine learning and AI related content, but they often do not relate to generative methods at all.",
                    "12": "Pretty easy class with Compton",
                    "13": "This course was not as easy of an A as I thought it would be, but it definitely wasn't that hard. 80 total pts for completing weekly assignments (mostly frontend stuff with generative ideas mixed in), and then there were various bonus assignments to get up to 94 total points. Prof was great but lectures were really early so I don't think anyone went to them.",
                    "14": "This course had around 8 assignments and other components, like student–led presentations, that you could earn points from. The assignments and class in general are not very time consuming but some assignments can be challenging and require a decent amount of time to work on.",
                    "15": "bad class",
                    "16": "I was frustrated by the lack of clarity i the course description which said that class time was purely for office hours. The professor was not available outside of class very much",
                    "17": "One of the EASIEST CLASSES you'll take for Computer Science at Northwestern. With Kate Compton, as of Fall 2023, this is how the course broke down: 80 points are the homeworks, the rest are some other random stuff. You got to take a small late penalty on the homeworks (which gave you a week of leeway). If you do the homeworks on time, and keep track of where the other points need to go (like some group tutorial sessions she had us do, along with class attendance, and a final presentation), you should be able to get an A. I don't use \"easy A\" a ton in my CTECs, but this class is probably the closest thing you'll get to an easy A (as long as you do the weekly homeworks on time). Keep your head down, you don't need to go to class (ours was at 8AM MoWeFr, so I basically always went to Zoom class). Overall, it's a pretty good class. Take this class if you're interested in Javascript/Processing5/HTML/CSS and if you want to make some cool art!",
                    "18": "Overall, I'm happy that I came out of this class with strengthened JavaScript programming skills and some projects to show off. If you're interested in creative programming, this class is definitely for you–– you'll utilize a lot of different techniques and Dr. Kate is *the* person to talk to if you're interested in joining the generative art scene. That being said, I think that most people came in with the pretense that this was going to be an easy class (based on previous quarters). That is somewhat true because the threshold to get full points is low, but you have the opportunity to refine your projects. This allows for people who are new to creative programming to get points for their effort. The main problem I have with this class is that it's too big in size to allow for the amount of flexibility there was. I think Dr. Kate has the best intentions to make learning fun and accessible for everyone, but it became disorganized quick with the large class size. In all, I did enjoy making these fun little projects–– I think you can definitely polish them up for a portfolio, especially the chatbot/mask/ML/data essay assignments. But this course would have benefited a lot from more organization earlier in the quarter and perhaps another line of communication (instead of Discord).",
                    "19": "Very good class to take.",
                    "20": "DO NOT recommend. Not even for a free class (takes too much time...).<br><br>The prof seems not exactly stable and we just draw pictures using JS in a site called glitch.",
                    "21": "This class was kind of harder than I anticipated. Professor Compton encourages ChatGPT use, but I think that makes the expectation for each assignment high. The grading is lenient, but expect to put a decent number of hours in for each assignment.  Assignments make up to 80% of your total grade, and you need to make up the rest via a bunch of other random things that are a bit annoying but doable).",
                    "22": "You get what you put in, you can choose to finish everything in under 3 hours per week so manageable easy A. Lectures I found only complement the material and doesn't help all that much, but very interesting to go to.  If you want this can be a very Hands–off kind of course, but make sure to management time well to finish everything.",
                    "23": "The assignments and topics covered in this course were pretty cool, but unfortunately the grading scheme was not my favorite. Doing weekly assignments alone would at best get you to an 80, which is fine, but the other assignments you have to do to bring your grade up felt more like extra credit, tack–on work rather than anything connected to the course content. I would have preferred a more structured approach with defined objectives and larger assignments rather than the ad hoc, choose your own adventure vibe of doing a dozen small assignments to nudge your grade up.",
                    "24": "This class was more of a doing class than a sit–down and learn concepts class. Grading is based on a points system where you have to rack up enough points for an A. There is an assignment every week where you create your version of the project of the week and you get to show it all off in a showcase at the end of the quarter. This class is as hard as what you put into it and can be a great opportunity for you to learn how to use Vue.js and get experience with doing small, low–stakes personal projects. It is obvious Kate is passionate about her students and generative methods and her energy is always infectious.",
                    "25": "interesting grading system. Don't know if I like the emphasis on doing more things at an average–level rather than doing less things very well. I think this was the last time this course was taught at NU so I don't think this ctec will help anyone. Bye Kate Compton I hope you have the time of your life at LEGO, sounds like a cool job",
                    "26": "Many projects felt like busy work, but not too difficult a class overall.",
                    "27": "I didn't like how most of the assignments were \"do this, but 4 or 5 times\", and I found this amount was arbitrary and tedious. However, I think the biggest issue was the lack of transparency of the course structure, and the lack of professionalism on Kate's end. <br><br>On Week 10, Kate announced that she would actually not be giving attendance points anymore because students were exploiting the attendance tracker and it was impossible to tell who actually was present. Not like I was one of them (I literally can't even wake up in time to fake an attendance if I wanted to), but I felt like this was unfair to people that actually attended, especially considering our demographic (tired CS students), the time of the class (8:00 AM), and how it was literally a week before finals week. I felt like where other professors would take partial blame in the jankiness of the attendance tracker, Kate would be defensive to any criticism and instead put this blame on the students. She was also quite condescending to us in her email about this too, flat–out calling everyone who didn't attend her class not following \"normal Northwestern student behavior\".  This wasn't the only incident, there were also lots of *last–second* (weekend after finals) grade changes and either blamed it on the TAs for not grading properly or the students for not submitting properly. Obviously, this is not very fair to the students who stopped seeking points after expected they would hit a certain grade. But also, when like 15 students let you know that they got a 0 because the assignment didn't fit the format of the autograder, you may suspect that the instructions were, in fact, unclear, and that it is only fair that those students get the grade they worked for. Aside from the emails, Kate also publicly vented about her feelings of frustration towards the students and of being overwhelmed with regrades in the class discord. It was just super unprofessional to lash out at students when they themselves are being professional and trying to get the points they worked for. <br><br>Aside from that, the content was fine, if you're interested in design you may like the exposure you get of p5.js. But I just wouldn't recommend taking a class with Kate.",
                    "28": "this course was so much more work than i expected which would have been fine but it ended up taking so much longer to figure out how to work with her code rather than just start and do your own. Never a stressful course but the assignments definitely take time.",
                    "29": "Kate is an awesome person! Really chill class while still learning how to make things. Sadly she's leaving NU – she will be missed!",
                    "30": "This class is truly one of a kind in this department; one of the only classes exploring computational creativity.  The void being left in this area is huge, and Northwestern should definitely continue to find faculty to teach in this area. Despite the CS+X initiative that we have, very few upper level classes I have taken have reached this level of interdisciplinary study. I particularly appreciated the learn through playing model that the class used, as it made things feel less grind–y and more fun. The only negative about this class is that since Dr. Compton is split between this class and 150, there aren't any dedicated office hours, which made debugging difficult. We will miss you Dr. Compton!",
                    "31": "This was an ok class",
                    "32": "I would have liked to see more AI involved vs. just digital art.",
                    "33": "Dr. Kate is definitely a very gifted programmer. She is also a human being, and tries her best to be understanding of her students' needs. However, I think her class is unreasonably fast–paced and a little naive. Every week I was barely able to scrape enough understanding of the material (this is after spending over a dozen hours on a single assignment) to submit something barely passable, and I felt disappointed that I couldn't even get at a little bit of the vast creative liberties her assignments were expecting students to take. Also, a frequent issue that happened was her and her TA's asking people to stop \"lightly modifying the example code\". I don't know about other people, but for me, I felt like it was impossible to start any of the projects from scratch. The class was too fast–paced for us to actually get anything more than a superficial taste of each new topic that was introduced. I feel like, if it was my only class, I could've had so much fun thoroughly getting to know each topic and designing something creative and artistically fulfilling, but unfortunately I am a dual degree student who is lucky if I get 6 hours of sleep a day. I hope to further explore some of the concepts she taught one day when I have more time, though.",
                    "34": "*I mean Kate is going to work for LEGO so I don't really think this matters* It was fine in the beginning, but she only did live coding which is not for everyone and it was not for me. It made it harder to understand what was happening and the point system for grades was also weird. things that were worth 1 pt would take longer than things worth 3–4, so it never felt worth it to do those",
                    "35": "Very interesting class, projects are not bad, make sure to do the extra things for points to get an A",
                    "36": "Very easy course, you get as much as you put in. If this is something you're passionate about then you can get a lot out of it, otherwise you can do the bare minimum and still get an A.",
                    "37": "Course has some weeks where the assignment feels very topical and interesting, other weeks the assignments just feel like busy work. Attendance is very optional.",
                    "38": "This was not as good of a class as I hoped. Though the content is incredibly cool and Professor Compton has great credentials and industry experience, the course itself was difficult to follow and the assignments were both too challenging and too easy, somehow at the same time. There was an assignment every week with starter code provided, but it was difficult to get questions answered in the discord, and the live–coding lectures were difficult to follow as they didn't seem to have a very clear plan. I think Professor Compton is a very cool person, but I wouldn't recommend this course as a way to learn this stuff, unless you're just looking for exposure.",
                    "39": "I think the amount of creative freedom was integral to this class, and I really appreciated the way the grading was done, because it gave the students many opportunities to learn, and allowed the student to easily earn a lot in the class within the amount of time they had in their schedule.",
                    "40": "I thought this class was fun, you learned how to make a lot of cool interactive tools. The class lets you use your creativity. It was also self–paced for the most part, and there were plenty of extra credit opportunities. This is one of those classes that are really what you make of it.",
                    "41": "This class had really good reviews, but I did not enjoy it. It isn't well structured at all, which you may prefer, but you also end up having to teach yourself almost everything to do the assignments. The \"lectures\" are just watching the professor speed run some example code and trying to follow along.",
                    "42": "I liked this course because I learned concepts that were useful to me, and I could use some of the code to add to my personal portfolio website. The course was structured very flexibly so I didn't stress an unhealthy amount over deadlines, and I was instead able to focus more on my commitment to learning.",
                    "43": "Good class, more work than expected, and a little unclear on grading but fine",
                    "44": "For me, this course was valuable because it teaches you much more than technicalities, it teaches you how many elements of digital art work and how you can also use them to create your own art.",
                    "45": "You can easily get the grade you want to get, and there's an abundance of ways you can receive points to get said grade marks. However, most of the work was very very tedious (but not hard). If you're interested in UI/UX,  visuals of websites, etc. you'll enjoy this class; if not, it might be a bit tedious. Easy class though.",
                    "46": "Only take this class if you're genuinely interested in Generative Methods.  If you're motivated to create art using a computer, then I'm sure this class would be great for you.  If you're just looking to take a class because it's easy I would not recommend.  I didn't learn very much, and most of the work felt rather tedious.",
                    "47": "do not take this class. very disorganized",
                    "48": "This class's actual content does not match with the topic – I thought I would be learning state–of–the–art generative methods used in LLMs but I ended up drawing canvas using javascript. I feel like I am spending an unnecessary amount of time polishing the canvas, instead of learning meaningful content. There is a weak connection, though, in the force fields (only for one assignment). The assignment content also does not entirely match with the content of the lecture – both of which offered a weak connection with generative methods. As part of the class, we need to give tutorials on LLM, instead of learning them, which deviates from the goal of this class. <br><br>Overall, time is not well spent on assignments and not interesting content. Not recommended",
                    "49": "Overall the course was run fairly well. Assignments are evenly spaced and not overwhelming and the points system gives a lot of flexibility.",
                    "50": "If this course is ever offered with Kate Compton, please do not waste your time. She is super unprofessional, and cannot handle large class sizes. The things you learn are somewhat interesting, but not worth the headache of working with her.",
                    "51": "Not being taught again since Kate is leaving the university. She's pretty bad at responding to messages",
                    "52": "Unfortunately Professor Compton is leaving Northwestern after this quarter; this course was her brainchild and it is clear from her lectures, thoughtful grading policy, and out–of–class student engagement how passionate she is about generative methods. Each week we would work on a provided assignment template on Glitch (a site–hosting provider) and dive into topics such as machine learning, particle systems, animations, painting apps, and more. There were no exams and no final project; instead, Professor Compton encouraged the class to self–organize several (optional, but for extra credit) \"large model study sessions\" where students would lead other students through 15–20 minute tutorials. The state of this course after the professor's departure seems unclear, but I would encourage taking it if you enjoyed courses like 376/377",
                    "53": "disorganized and all of our communication was on discord which made it difficult to find things. HOWEVER IT WAS fun things that I wouldn't learn in another class",
                    "54": "The course just had a lot of tedious work once a week",
                    "55": "Languages and tools learned in the course were all very interesting and easy to pick up.",
                    "56": "This course was a lot more work than expected. There was a lot of work to do for each weekly homework and I felt like there was little guidance when it came to approaching them.",
                    "57": "Assignments take MUCH LONGER than you think they will!!",
                    "58": "Cool course making cool things, but was a little disorganized",
                    "59": "Great class thank you Dr. Kate!",
                    "60": "Pretty cool projects if you spent a lot of time on them.",
                    "61": "Really easy for people who can code and know some js. Gets really difficult in the second half of the quarter if you have little to no coding experience. It's more of a time commitment than high difficulty.",
                    "62": "I don't really recommend this course. I think a lot of kids take it for an easy A, which is reasonable. Prof. Compton was extremely unorganized and it felt like she put very little effort into the class. She just kept emphasizing the importance of creating relationships and learning from your classmates so you can mooch off them later in life. Overall, I wasn't a big fan.",
                    "63": "Would recommend this course as an elective. Material was interesting and gave you a lot of opportunities to be creative",
                    "64": "Cool class. Took more time than I expected for assignments but came out w/ some interesting art. Really relaxed grading system and lots of opportunities to get the grade you want.",
                    "65": "This course was not good.",
                    "66": "This class is mostly self taught and figure it out yourself which is not a problem as long as you take time to understand her homework example code.",
                    "67": "L class L professor",
                    "68": "DO NOT take this class. The materials are all over the place. Each week's hw and topic is so different. Some homework is interesting, but most are just drawing stuff... There are plenty of other choices for electives so if you do not want to waste your time, take other classes.",
                    "69": "Kate Compton is so sweet and passionate about the subject. She is very dedicated to teaching the course. Sucks that I am not very interested in this subject, but it was still fine and pretty easy with some annoying aspects about the aspects. If you're interested in this subject, you will probably enjoy this course. Plenty of chances for extra credit; easy A.",
                    "70": "Lectures were a little disorganized, and the homeworks were really time–consuming for no apparent reason. Don't get me wrong –– I love that I can make art from code, and I'm willing to put in the effort to get creative, but we oftentimes had to make multiple (several!!!) of each piece of art we created. It  was just a lot.<br><br>Professor Compton was also really overwhelmed this quarter. There were multiple times where a student would ask a question or make a comment, and she would respond with a lot of frustration. Many times, her instructions for assignment turn–in were really unclear. There were multiple times where students have had to ask for their grades to be corrected after she published grades, and due to the overwhelming amount of students in the class, she would become really frustrated, and her messages to us also reflected this. I understand that it's difficult being a professor that teaches two large classes, but it felt very unprofessional how she would pin the blame on the students who misunderstood her instructions. I've never before been shown so many of a professor's negative emotions. Additionally, because this class is graded quite differently than most other classes, one student once asked if the Canvas grade is reflective of their actual grade. Professor Compton's response essentially said, \"no idea,  just add up all your points\". It just felt as if she did not want to be teaching, and she treated students' questions as attacks towards her hard work. I wanted to like her, and I wanted to like this class, but it just felt like whatever passion and interest she had for teaching is literally gone.",
                    "71": "This class was unfortunately not as interesting as I hoped it would be – partly because Professor Compton was not a particularly good lecturer. This class was at 8am, and I found it really difficult to get myself to go to class because I knew that I wouldn't be learning anything. I got much more out of the lectures upon rewatching them as I was completing my assignments (because most of the lectures were primarily live coding). However, I can tell that she did really care about the students, and worked hard to make this class an enjoyable experience.",
                    "72": "Kate made this class really enjoyable and easy, not sure if this class will continue with another professor once Kate leaves, but the concepts are not too difficult",
                    "73": "The class was fine, weekly assignments and more assignments that were just effort based so you'll get out what you put in.",
                    "74": "The course was one of the most enjoyable computer science courses I've taken. The freedom to create and implement concepts allowed me to learn far more than if the assignments and projects were linear in nature.",
                    "75": "Prof. Compton's grading method was very flexible. At times, her demos were a bit hard to follow, but the example code she posted in the homeworks helped a lot with the assignments.",
                    "76": "This is the last year with Prof. Compton here, who provides quite alot of her own experience in creative applications of cs<br>also, class was project based. no exam.<br>unfortunately, this class wont be offered after this quarter",
                    "77": "Although I wasn't interested in art and a good amount of the course content, I appreciate that we had flexibility on the assignments to make what we wanted and that the course was extremely generous in terms of getting points. I also really enjoyed the large model study sessions! It was really cool attending short sessions from other students to learn a lot of different ML concepts!",
                    "78": "Fun course. Assignments are not difficult, but some of them take a while so I would not wait until the last minute to start. Lectures are also good, a mix of live coding with some slides on occasion. Grading system was a bit strange, but I would not worry too much about grades in this class overall. Professor is great, but is leaving Northwestern after this quarter",
                    "79": "Kate is going to Legoland so anyone who is looking to take this course will have to take it with another instructor. It wasn't that bad but I didn't find the concepts that interesting. However I think the best thing I found was designing websites using vue. It is so much easier than just plain old js. So, hey, I guess I did learn one thing.",
                    "80": "If you want to take a class on making interactive media, take CS 376: Game Development and CS 377: Game Dev Studio, or RTVF 376.<br>If you want to take a class on Generative AI, go take CS 496: Generative Deep Models.<br>If you want to take a class on cutting edge generative grammar, take CS 397: Seminar in Statistical Language Modeling or CS 497: Deep Learning for NLP.<br>If you want to take an art class, enroll in ART 210, 220, or 240.<br>If you want to learn web development, you should take CS 394: Agile Software Development or maybe CS 396: Full Stack.<br>If you want to take a class on machine learning, take CS 349 and CS 449: Deep Learning.",
                    "81": "This course is definitely a busy work elective for a good grade. The assignments are pretty interesting, except if you want to do something really cool, you'd have to invest a lot of time, and you actually only have a week to complete each one. The nice thing about this course is that at least for this quarter, there are a total of 114 points you can get, and you need 94 to get an A. Also, the class times are not office hours – attendance is somewhat mandatory (you need to attend half the classes for some points)",
                    "82": "It was fine. The class content is super easy, but very disorganized. Also, the grading system is really frustrating. Doing homework only gets you an 80, you basically have to go to these meeting where someone else in the class presents. These aren't always at convenient times though so it was frustrating.",
                    "83": "This class is super chill, the bar is intentionally set pretty low on all the assignments but if you want to put in more effort and make cool stuff you definitely can. A lot of people just take this class as an easy A, but it is also genuinely super fun and a chance to make more artistic/creative portfolio pieces",
                    "84": "Overall, it was pretty easy. Just stay on top of lectures and understand the starter code well, and use that as a base to do well. Learned quite a bit of JavaScript and Vue skills which I will be taking with me in the future.",
                    "85": "I took this for my CS Technical Elective, any Kate Compton course is considered to be an \"easy A\". That being said, what you get out of this class depends on how much time you're willing to put into it. It's super interesting (personally), especially for those interested in more front–end, artsy CS projects, but it can also just be an easy class you work on a few hours a week and not get that much out of",
                    "86": "I really did not enjoy this class and found it to be pretty tedious and took longer on assignments than I was expecting. I think Kate revamped the course from last year as there were a lot more requirements that we had to fulfill. I do like classes that allow us to get a certain amount of points for our grade, so appreciated that Kate gave us options for getting the grade we wanted. Overall, you get what you put into this class.",
                    "87": "compton was passive aggressive and not super great (as usual). class was not super engaging and assignmnents were quite tedious",
                    "88": "It is a reasonable course and you will get an A if you put in the work.",
                    "89": "Don't take this course unless your life depends on it––but the course might be different with a different instructor.",
                    "90": "Great course",
                    "91": "Very interesting frontend stuff and you build some cool projects",
                    "92": "This class is not nearly as easy as it was described in last year's CTEC's. I spent so much time on these projects. Maybe it's because I cared too much, but still, they are not as simple as everyone else described",
                    "93": "The course comes with a packed set of readings and knowledge. Assignments can get tricky by mid–term. However, it is fun and interesting to work on them if generative art is your thing.",
                    "94": "I want to recommend this course, but I'll be honest in saying it was one of my least favorite courses I've taken to date. I had a stressful quarter in general (so take this review with a grain of salt), but the things we did in class never felt like skills I would take with me outside of this class.",
                    "95": "A lot of emphasis on P5.js",
                    "96": "Overall a very fun course! The only thing was that classes were early in the morning. The assignments are interesting and require you to be creative."
                },
                "school_demographics": {
                    "Weinberg": 84,
                    "McCormick": 79,
                    "Medill": 0,
                    "Comm": 2,
                    "SESP": 0,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 29,
                    "Juniors": 71,
                    "Seniors": 62
                }
            }
        },
        "COMP_SCI 329-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.45,
                    "student_count": 22
                },
                "student_opinions": {
                    "0": "I liked the course. Your experience will definitely depend on your group. Material was interesting and building a design prototype was cool. I wish there weren't as many readings assigned every week. Found myself just skimming and not absorbing any info on the last few readings for a week because I'm just trying to get thru them. Maybe narrow it down to like 2 readings per week.",
                    "1": "The course is very manageable so long as your group also stays on top of things and get things done on time. I never felt as if the material was too difficult and the class was enjoyable.",
                    "2": "Very good course for learning Human–Centered design. The class is based around interviews, whether it be for research or for iterating on one's design. You have to find a problem through user interviews and aim to create a solution that you build on iteratively every week. 9/10 would recommend",
                    "3": "This class is an easy A if you complete all the work and come to class. It isn't intellectually taxing either. Basically just a quarter–long group project where each week is its own sprint. There are also some reading reflections to do each week as well, which often felt like busy work, but some of them did offer some interesting insights into HCI that I hadn't considered before. I would certainly recommend this class if you're looking for a lighter/simpler workload to balance with a harder class, or if you're genuinely interested in HCI and prototyping.",
                    "4": "Super easy class, you won't learn much but you get to develop a project that can be pretty interesting. There are weekly readings and a worksheet to fill out which can be pretty annoying but you'll probably get an A",
                    "5": "This was a pretty solid course, but I'd say 95% of it was the project itself. I would enjoyed some more in–class activities or side projects along the way. The design sprint started to get pretty repetitive by the end.",
                    "6": "The hands–on approach of a team designing a software product together is very helpful in deeply understanding the fundamentals of how a team should operate when it comes to working with software designs. Class time to work also gives us more freedom to allocate more time to other things outside of class while encouraging high–efficiency work during work sessions.<br><br>While filling out the forms and required documents every week is quite laborious, the overall experience was not too much work but you get a lot out of it. Coming into this class with some notion of your product can greatly help you getting a better resulting design.",
                    "7": "Easy A, not much work, get to use Figma",
                    "8": "Overall, I recommend this class if you're interested in pursuing HCI or UI/UX work in the future. Professor Jacobs and TA Evey had so much knowledge to share, and they were responsive to class needs. The structure of the class is lecture on Mondays, and studio meeting time on Wednesdays. Readings were due every week before Monday, and you were expected to meet with your group for 1–2 hours in your own time. Like any studio course, this class is very group dependent so the quality of what you develop with vary greatly depending on your team. At first, the teamwork was awkward and the worksheets were tedious, but they get better as you progress and get used to the groove of the weekly sprints. Most of the value from this class will come from the last few weeks, because that is where you synthesize all the material and gain a better understanding of your targeted group. I will admit that I didn't find the readings or lecture very engaging at first: the readings were busywork and the lecture + activities involved repetitive \"fill in the blank\" exercises. But as I started interviewing for design roles, I found out that the readings actually provide a lot of relevant context, and the worksheets help you internalize the framework utilized in user–centered design. Overall, I am happy with the outcome of this course because of the self directed nature. That being said, you should only take this class if you're actually interested in design research. There is no coding involved, just prototyping, so your work will revolve around user research and synthesis for most of the quarter. If you're more interested in coding, I would recommend sticking to a full stack development course.",
                    "9": "prototyping, interviweing people, exploring problems that scope beyond the classroom",
                    "10": "It does feel pretty DTC, for better or for worse. Do note that there is no programming involved. Lot of interviewing and filling out templates.",
                    "11": "Would recommend this class.  Very project based class.  You start working on your project around week 2 with weekly readings and weekly design sprints (doc with updates on your project).  By the end of the class you have your own prototype on (probably) Figma based on your own idea and interviewing.  Fun to create your own app idea and to see everyone's by the end.  The class is really what you make it.  Professor Jacobs is a great instructor."
                },
                "school_demographics": {
                    "Weinberg": 10,
                    "McCormick": 10,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 2,
                    "Seniors": 16
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.65,
                    "student_count": 26
                },
                "student_opinions": {
                    "0": "No code CS class. You get to learn about how start–ups come up with ideas. Groups are random. If you have a good group that is passionate you can learn and do a lot. If you are the one carrying the group, it might not be fun.<br><br>You get to learn about the entire design process:<br>Needfinding (interview user groups and finding a problem)<br>Design Process (come up with a solution to that problem)<br>User Testing (make a super low fidelity prototype to test with your users)<br>Interface and Systems Model (come up with very specific interface and system design, basically front–end and back–end but you don't need to build it with code)<br><br>You have to do a final presentation on your learning process at the end of the quarter. Your grade depends on self–evaluations.",
                    "1": "loved this class! its pretty chill in terms of workload, but you def need to spend some time actually thinking about your designs and working with your group outside of class. haoqi really pushes everyone to think like a designer and centers the course around design sensibilities (empathy, humility, etc). so there's a pretty big emphasis on reflection and self–guided learning. grading was mostly based on a self–evaluation at the end of the course, and assignments consisted of weekly readings, weekly project templates (i think max was like 20 ppt slides to fill out), prototyping/testing results, and one final presentation. honestly i think how much fun you have with the class probably depends on the team you're assigned, especially because of  much time you'll spend together (every class, weekly meetings outside of class, etc) overall really good time and definitely grew as a designer! would highly rec this class to everyone!<br><br>also shoutout to TA evey! super encouraging and super helpful, provided really constructive feedback and loved her overall vibes.",
                    "2": "This class is entirely group work.  The groups are assigned, and we have to complete a quarter–long project with them. There is no Canvas page, so everything is done in a large shared Google Drive folder. It can feel tedious sometimes because there are so many project templates. The grade is determined at the end of the quarter after a self–evaluation, so I can’t tell if it is an easy A.",
                    "3": "Honestly, I appreciated truly learning and thinking about the design process, but I will say that the work was really tedious, and it was hard to keep track of everything on the Google Drive. Despite that, I really enjoyed Haoqi and Evey, since they really care about the subject matter and wanted to provide us with a different type of class from the one we are used to.",
                    "4": "This class seemed pretty straightforward at first, but the repetitiveness of the templates, readings and lecture material actually made it a little difficult and tiring. I did feel at a time when the repetitiveness caused me to wonder whether I was learning anything at all, and it was a little stressful at times when the professors kept demanding more.",
                    "5": "I like what the final outcome of the course is, I feel like rather it could be a little less fast–paced, but then the quarter system may not permit that. There were aspects such as: interviewing the users for the prototype, and really getting into the \"why\" the user is struggling that I would've loved to have more time with I thought of this countless times during the quarter. But after completing the quarter I understand that this can be done at each iteration during the course",
                    "6": "Good course on learning the design process. Professor was passionate about the subject and helped a lot to learn. Some of the class was too arbitrary but general concept was a great experience.",
                    "7": "Great class. You learn about the design process by actually working on a quarter–long project. The studio environment is great, and both Haoqi and Evey are awesome instructors.",
                    "8": "Professor Haoqi was a pain to work with. He was unwilling to listen to students when they gave arguments for design work. Kept tearing our project apart and arguing with us, even though we were doing the work and following the process outlined in class. Kept harking about how people weren't showing up for his class and making a fuss over students not being honest in self reflections. If the professor is so untrusting of students, then I don't understand why the grading structure is based on self assessments and attendance. Grading is super subjective. You won't know the grade you get until the end of the quarter. If the professor likes you, you'll get an A no matter the quality of your work. Otherwise, they can arbitrarily assign any grade. The design iterations happened too fast. There was just not enough time to do user interviews, revise templates, and revise prototype all within 5 days. Obviously, the quality suffered because of this. The majority of the designs presented at the end of the quarter were just dumb and never going to be used in real life.",
                    "9": "This class is pretty good, highly group–dependent, and still requires a good amount of work.",
                    "10": "Good class if you get a good group.",
                    "11": "This course was a great opportunity to finally look at computer science from a different perspective.",
                    "12": "34",
                    "13": "In HCI Studio, you're put into a random group and have to design a project with them for the entire quarter. My group was fine, but I know others who didn't have as good of an experience with their teammates. Make sure you choose an interesting project to work on, otherwise, you won't be as invested in the class. <br><br>This class is disorganized. There's no Canvas page, and the class materials are in a Google Drive. A lot of the folders are redundant, so sometimes it's hard to find what you need. We use Slack for communications. <br><br>Attendance required. If you need to miss class, you can say so in Slack and why, but don't do it too often or it becomes very obvious you're just cutting. <br><br>The work in this class is mind–numbing. In every class and discussion, you have to fill out these spreadsheets about your project with your group. The questions are very repetitive, so it becomes a chore to do them after the first few weeks. They're supposed to help us with our project, but I didn't see it that way. You also have to do weekly readings. These don't have a set deadline, but make sure you finish them all before presentation week. Haoqi decided to screw us over and count the readings done during and after presentation week as missing, so they impacted people's grades negatively. He also never said he was going to do this. You're also supposed to spend a lot of time outside of class to work on your group's project, so your enjoyment of this part will highly depend on your group. <br><br>This class doesn't have a set grading syllabus. Instead, we have to fill out two self–assessments in Google Sheets: one in the middle of the quarter, and one at the end. You can write whatever you want for the midterm assessment, but make sure you take the final assessment seriously as that'll be the one that impacts your grade. Don't do funny stuff like change cell formulas or give yourself an A before you finish the questions, Haoqi and Evey check edit history and will mark it against you in the final grade. Also, be honest. Don't say stuff that's obviously not true, such as you always go to class when you actually don't, because Haoqi and Evey generally know how each individual person is doing in the class. <br><br>This class was a lot of busy work and aside from my group, I didn't really enjoy it. But it does give you stuff to talk about during behavioral interviews.",
                    "14": "Great class, and you honestly learn a lot if you put in the effort. You get out of this class what you put into it. The work is totally manageable."
                },
                "school_demographics": {
                    "Weinberg": 9,
                    "McCormick": 16,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 4,
                    "Juniors": 9,
                    "Seniors": 11
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.17,
                    "student_count": 18
                },
                "student_opinions": {
                    "0": "This class is very much a how much you put in is what you will get out — you can request group members but i went mostly random and really liked my group so i got lucky .  class attendance is mandatory with one excused absence and the rest eats into your participation grade but it’s not too strict.",
                    "1": "good team dynamics will make this class enjoyable for the duration it spans",
                    "2": "Definitely more work than some previous CTECs led me to believe, but not that bad in retrospect. Lots of filling out the same tables week after week, but class does do a good job introducing the HCI design process. Less of a focus on producing a deliverable than demonstrating that you went through the process, including all the roadblocks you faced.",
                    "3": "This class probably isn't super useful unless you are going in the start–up route. It's a lot of writing and feels repetitive but gives you a good idea of the design process.",
                    "4": "This class is very hands on and you are self directing sprints each week within your team. The class is one large project where you get to pick a problem to focus on. Each week is a sprint where you are interviewing and testing with actual users that you have to find. The class does get really repetitive towards the end and the amount of writing and filling out templates feels excessive at times. I would recommend this class if you want to learn more about the design process and want a non coding based class.",
                    "5": "Some of the readings were helpful but a lot of the templates we had to fill out every week felt repetitive. I feel like this class is really what you make out of it—the learning you get depends on how much work you put in and how excited you are about the project. You can definitely get away not learning much doing the bare minimum and still get a good grad.e",
                    "6": "This course is project–based and I do think you have the opportunity to make a very interesting project out of it. I do think the class design is riddled with busy work that does not help with the learning whatsoever (filling out many, repetitive Google Docs). For me personally, I want to develop and complete a well–designed project, but so much of the course, including all the class time, is dedicated to answering repetitive questions instead of progressing on the projects themselves. The questions being asked also feel so general that many times they feel entirely irrelevant to my project. I also don’t think enough guidance is given on developing the projects.",
                    "7": "I liked the structure of the course. For the homework, you are given all the readings and are told which ones to complete each day. I chose to complete all of the readings within the first week and that was well accepted. Besides that, the overall design project is well guided and the templates help explain what information you should be observing each week. My only gripe was that there were around 9 teams and only 1 TA so it was hard to communicate with the staff during class time when we were discussing design ideas. Besides that, just make sure your team is on track and this class should be relatively easy. Basically no coding as well.",
                    "8": "The course format needs another look to better engage students — class time and out of class time on this course is almost entirely dedicated to filling out tables, most of which repeat themselves multiple times throughout the course. I didn’t feel as if it was a very interactive or engaging way to work with my peers or my instructors.",
                    "9": "If you even a little bit don't like group projects, don't take this class. It's just one, super long group project. It's a lot of busy work and the end of the quarter feels very rushed in getting to the final project. This course was fine for a requirement, but I wouldn't recommend this course.",
                    "10": "Can be repetitive. Time consuming. You can learn but class feels messy",
                    "11": "Despite being a CS course, this class is focused on the design process rather than actually implementing something. You're doing no coding at all. For McCormick students, think about this as DTC+. Expect to put in sizable effort every week getting in contact with other people to conduct in–person interviews, and to fill out weekly notes. The professor is very kind and offers good flexibility and advice for your project though, which has made this course a lot less stressful.",
                    "12": "Do not take this class. Take CS 330 especially with the new rule that you can only take one or the other. I highly regret taking this as a 5th class. Don’t even bother to look at past CTECS, they changed the structure of this class and it is extremely writing heavy. The tasks that are assigned each week are nearly impossible to execute on a high scale level which leads to a lot of frustration. Between the weekly reading reflections and insane amount of tables we had to fill out with our team, I felt like it was a course that was more concerned with if you said the right things that the teaching staff wanted to hear versus actually designing how your team wanted to execute their ideas. Due to this, my team and I just learned to write what would make the professors happy to hear. The professor was nice but the TA was very negative at times and disguised it as “feedback” or constructive criticism but most of it was just rude. Oh yeah, and to get an A you need a 95% which is insane considering how unnecessarily picky they are with taking away points. We get graded on an individual and team level. My team gave me a 10/10 during the first week for our team grading and the professor took points away on my TEAM grading. She wasn’t even at our team meeting and my team and I literally picked my project to work on for the quarter but I was the only one to get points taken away? I’m on time, I participate and I never missed a class or team meeting. The class grading was made on a lot of assumptions and I often felt overlooked by the TA. I’m currently sitting at a 97% after doing everything perfect with my team and fighting to get my points back. This class is not chill and not something you can give little effort to. Expect meetings with your team outside of class multiple times a week. We were just told we have an end of quarter reflection that we should expect to spend 3 hours writing that’s due the Sunday before finals week. Don’t take this class."
                },
                "school_demographics": {
                    "Weinberg": 9,
                    "McCormick": 9,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 10,
                    "Seniors": 5
                }
            }
        },
        "COMP_SCI 330-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.81,
                    "student_count": 140
                },
                "student_opinions": {
                    "0": "Very easy, free 4.0 GPA",
                    "1": "teach me how to evaluate applications",
                    "2": "The class didn't cover any HTML CSS JS and focused on HCI concepts. Grading is very chill but I wish we went more in depth regarding Figma and designing accessible components.",
                    "3": "If you're interested in actually learning about HCI, this will probably be a very interesting and engaging course. If you're not into UI/UX at all, and are just looking for an easy class, this class will probably do, but I'd pick other classes first.",
                    "4": "This is one of the easiest courses I've taken at this school. It's an easy A project class, so if that's what you're after, absolutely take this class. I will admit my biases here: I have a bit of an aversion towards \"design\" and \"problem–finding\" based studies, and I also didn't attend 70% of lectures, so take what I say here with that in mind. Basically the whole class is finding some interface you don't like and designing an update for it. You'll get feedback on it, then update it, rinse and repeat four or so times with a few other little assignments sprinkled in here and there, most of them take about an hour at the absolute max. Absolutely zero coding involved, mostly just drawing diagrams on a piece of paper.  Highly recommend taking this class with a friend, as you need to get feedback from the same person each week and there are a good few partner based labs in class, so you and your partner can just give each other feedback and save yourselves some time and effort.",
                    "5": "Good class. You learn about HCI which was something I didn't consider beforehand when developing.",
                    "6": "Very easy figma project, but video clips are tedious",
                    "7": "Great class!! Prof is awesome and so chill. def take it",
                    "8": "This will be the easiest class you take at Northwestern, not NU CS, Northwestern period. Take it. My first day, the prof said \"we care more about your mental health than grades\", which is insane to hear a professor say, let alone a CS professor say that. Do the homeworks on time. You don't need to do the reading, you'll get an A. They don't grade too harsh, and the design stuff is pretty interesting.",
                    "9": "I found the group labs to be a bit disorganized as it tended to be difficult to figure out who is in whose group and which groups needed to work with each other. Other than that, I appreciated that the class was a low stress class.",
                    "10": "Really easy class. Readings (and lectures) are lowkey optional. Labs are chill. The assignments become more time consuming as the quarter progresses, but can be as easy or as difficult as you choose to make it. It gives you good experience with Figma, and also touches on important topics. I do wish I had paid more attention in lectures to get more out of the class, but Kay speaks a bit too monotonously and there's really no incentive to do so. The grading is also super chill – no exams. Highly recommend for satisfying a breadth requirement!",
                    "11": "This was a great class. No complaints. The weekly assignments were easy to complete, each took about 3–5 hours, and were graded generously. No exams. Professor Kay was a great instructor and lecturer, and all of the TAs were very engaged in the course – moreso than most classes I've taken, which I appreciated. The labs (every other class) were also unique, interesting, and fun.",
                    "12": "They should add some CSS/HTML work into the course to help students who don’t have any experience. For a McCormick student, this just felt like a worse version of DTC with digital prototypes.",
                    "13": "I really liked this class. Matthew was a great instructor that provided relevant material to provide an introduction to the design process. I really liked the quarter long process of creating our own design and reiterating on it until we covered all our bases. Easy to get an A as well!",
                    "14": "Easy like everyone says it is. The class was apparently changed from previous years to be less HTML/CSS heavy.  You don’t really need to go to class o lecture days, but you do need to be there for the lab days",
                    "15": "great course, not overly difficult but you learn some important things. Honestly at times it was easy/not–demanding to the point of it being so easy to just forget about the class for  a bit, but worth it overall still",
                    "16": "The highlight of the class in my opinion was learning about and working with Figma on the later assignments.",
                    "17": "Feels a lot like DTC, but you are creating a virtual prototype instead of a physical one. Good for UI/UX!",
                    "18": "This course will teach you nothing. Attendance is basically mandatory because the grade is largely in class assignments, but honestly i skipped half the classes anyway and just guessed at what was taught, and did fine. The assignments have more in common with high school graphic design classes than college computer science. If you want an easy credit, take this, if you want to learn literally anything at all (and i mean that without exaggeration) take a different course",
                    "19": "best cs course i've ever taken at northwestern. non–coding and super interesting, and we were given very reasonable amounts of time to work on things. matt kay is a g and the TAs were great too",
                    "20": "Pretty good class, not my favorite CS class ever but it was definitely an important and good one. We learned a lot about design and definitely opened up the ways that I think about design and the work that goes into building an interface. Weekly assignments were fine but were stressful when I forgot about them. Make sure you allocated a few hours for the assignments and you will be solid. I would definitely recommend this class.",
                    "21": "If you want a low–effort course in the midst of recruiting season, this is the one for you. If you want a good course where you learn useful information – scroll away. The lectures and assignments themselves are fine, but all of the assignments and labs are the same thing over and over, there's no point in doing the same thing 5 times over. Then there are the TAs, the ones who grade your assignments – provide no feedback, and pretend to be useful. This is not a highly intensive class but it sure is useless. Tbh should not be counted as a computer science class.",
                    "22": "Great class! Professor is very passionate about subject and course staff is very helpful and cares about students. You work on one project for the whole quarter but you are designing (working w wireframes, user evaluations) and so you're not doing any coding and the workload is very manageable. I thought the labs were fun and interesting for the most part and really enjoyed taking this class, it's a good break from other CS classes and gets you to think in a different way",
                    "23": "Reasonable course good for if you want to learn more about design.",
                    "24": "This class presented a lot of novel and interesting material in a very relaxed way! I believe this is the first time Professor Kay has taught this course,  and I feel he did a very good job of actually focusing it on HCI fundamentals, We learned about the design and evaluation process, and how to use psychology in visual design. The material is not difficult at all, with discussions and weekly assignments being the core of the course. The weekly assignments, as long as you start early, will not be hard, and doing them on time/with effort will help later in the course as the material builds on itself.",
                    "25": "This course is basically DTC without the paper and groups. Overall, I like the experience of designing a prototype and iterating on it, but I wish there was a coding aspect of the course as well (the end design was just a figma prototype). I liked the assignments and in class labs, and it is a very easy A.",
                    "26": "Very much a class of 'you get out what you put in'. unfortunately I put in barely anything and am not proud of it. That said, you could very easily cheese the class.",
                    "27": "Easy A, but honestly not worth the time. The only thing I learned was how to make a figma. Maybe they structure it like this for all the non–cs majors doing the hci certificate, but they could have made it more technical, it felt like the lecture material could have been condensed to half the time and the second half could have been dedicated to the technical side of hci. at times it felt like a humanities class. Professor and the TAs were super nice tho.",
                    "28": "Very easy class! You learn the very basics of design. For those interested in UI/UX with experience, it may be a tiny bit of a letdown. Labs felt kind of repetitive and unnecessary, but class was fun.",
                    "29": "Nice course",
                    "30": "You will learn full–cycle of hci design and iterations.",
                    "31": "Professor Kay and the TAs were very nice and I enjoyed the freedom in the class and assignments, but I definitely didn't enjoy the experimental approach centering more around design principles than coding. I already took CS 329, so I was dismayed that I'd essentially be repeating a class and wasting my time. I generally just feel like the design–oriented classes need to be left for smaller class sizes (like 329) because during all my time at Northwestern (from DTC Discussion Sections to here), I've never seen a professor be able to pull off a design class with a large class size (and I don't think it's worth it to keep on trying).",
                    "32": "This class is a great chill class to take if you are taking a couple other tough CS classes. I liked the way Prof. Kay laid it out this year, with many of the assignments being part of longer term project that involves interacting with a user and creating and refining a design. It led to the first few weeks being quite easy, as well as a few later on, and then some 60–70% of the way through the quarter being quite busy (especially making a new prototype and interviewing your user again for one assignment and creating the original Figma prototype)",
                    "33": "in–person labs, paper prototyping, building off of multiple iterations for the final assignment.",
                    "34": "No coding, only Figma. Easy course. Graded on following the instructions of the assignment, not the actual design of your prototype.",
                    "35": "Course taught about the design process, and didn't teach any programming. Good HCI class",
                    "36": "Interesting class. Gives you an interesting perspective on UI and design. Lots of prototyping which can sometimes be a little boring but also you spend a lot of time working on one project throughout the quarter so it is nice to see your final vision take shape. No exams.",
                    "37": "This was a really interesting and low intensity class, great environment to learn about many different concepts.",
                    "38": "Like most people, I took this class for an easy elective towards my major. If you take this class, don't expect to learn all that much. Class is split half lecture and half in–person labs. Labs are graded for participation. Professor Kay seems experienced in this field, however I wish he would have been more active in class. It seemed that half the time, he just let the TAs take control of the class. It would have been more interesting to explore HCI specific issues in depth, rather than just glossing over the basics. Labs were mostly a waste of time – my partner and I would finish each lab in half the time (ignoring the TAs time parameters) and leave early. Overall, this course really needs to be re–worked significantly if the CS department wishes to deliver any substantial content and make it more than just a pointless filler course for CS majors and minors.",
                    "39": "My main focus when taking this course was to get an introduction of how to build the best prototypes and application for the users in question. This course definitely helped in that aspect, and it helped me gear the building of my prototypes towards how to ease the usability towards the user.",
                    "40": "I thought it was a good intro to design principles, made me wanna take another course in the HCI path. Matt has some interesting labs to get you thinking about the topics as well. TAs are also fantastic",
                    "41": "Learned to use Figma",
                    "42": "This class was super chill, I recommend it both as a lighter class to take but also for the content that it provides. I will say that much of it is super similar to what you go through and learn in DTC, so if you've done DTC then this class should be no problem for you (and if you haven't done DTC, it should still be a simple class, just a bit more learning). We do not do any coding at all in this class, and only during the last few weeks of class do we actually do any digital work (using Figma to design interfaces), so expect to do a lot of paper/pencil work and making videos to show off your work for the assignments. Professor Kay is super great as a lecturer, I really enjoyed having him and I recommend him to anyone. Every week there was a homework assignment, an in–class lab (on Thursday) and an in–class discussion post (on Tuesday), no midterms, finals, or \"final projects\" (although the last homework assignment is basically a final project, it just wasn't graded as such for us). Highly recommend for the interfaces req.",
                    "43": "Good class, learn interesting topics that are important in CS that you wouldn't learn elsewhere. Fun and easy A",
                    "44": "Loved taking the class with Matthew Kay!!",
                    "45": "Overall, CS 330 is a great course. Though the course is fairly easy and does not require much outside–of–class work, it does expose you to some important concepts related to interface design, and overall teaches you how to design interfaces that are functional, aesthetic, and accessible for many. I would say that for 330, focus more on going to lectures and learning the concepts that Professor Kay talks about, as they will be super helpful for Computer Science majors and eventually will play a big role if you enter the industry.",
                    "46": "I love love love this class, super interesting and engaging topics, and great professor. Take it if you can, I can't recommend it enough!! The homework assignments are super manageable and final project is something you work on piece by piece throughout the quarter :)",
                    "47": "Super easy class but it was still really interesting to learn about everything that goes into designing something well and all the considerations to be taken. You can pass really easy but to really take something away from the class you do need to pay attention. Very valuable information",
                    "48": "Good course with a lot of information on HCI",
                    "49": "This is a very nice course that introduces the basics of HCI. There is no coding in the course, and the final project is to create a design with Figma.",
                    "50": "Great class!",
                    "51": "It's an easy CS course. It should be a little bit harder so students take it seriously. If you are interested in design, don't let yourself disengage with the content; you can really learn if you go to lectures, and truly participant in labs. It's just easy not to, as you can still get an A. Prof and TAs are super nice and they are clearly enthusiastic about design.",
                    "52": "The course is an easy going and enjoyable one. Although, you may not realize, but by the end of the quarter, you would have grasped a lot of important HCI concepts. The format of the class in fun and interesting. Working on a single project for the entire quarter gives us the chance to make a resume worth project. The lab sessions are interactive and arranged in a pretty cool format.",
                    "53": "Pretty easy class. Learned a little bit of figma and some design principles.",
                    "54": "This class was pretty enjoyable and very low stress! The class had very minimal work outside of class and no exams. The second part of the class was mostly focused on building out a Figma prototype based on a user's needs (you pick the user,  can be a friend or anyone). This class had no coding assignments which was different than other professors who have taught this course. The class is structured so that Tuesdays are lectures on some aspect of design and Thursdays are in person 'labs' which were basically just small group activities. If you are in McCormick, I found that a lot of the design principles discussed were heavily stressed in DTC and felt like review (eg need finding, ideation, etc). I recommend taking this class if you are looking for a lighter CS class to balance out harder classes.",
                    "55": "TAKE THIS COURSE!! Taught me so much about HCI and user–centered research without any of the stress, pressure, and endless hours of homework that you usually have to go through in order to learn. I have no idea how the teaching team did it.",
                    "56": "I didn't find the class particularly helpful, but it was reasonably paced and not very difficult. Honestly couldn't tell you if I learned anything useful, but I'm leaning \"eh\". Grading is split between Tuesday in–class discussion posts (completion), Thursday in–class labs (completion), and assignments. Basically all of the assignments are prototyping –– first on paper, then on Figma –– some kind of software solution to a problem that someone you pick (probably a classmate) has; most have a video component where you record yourself talking about and/or someone trying out your prototype. The most annoying thing in the entire class was how worthless some of the labs were (e.g. making us do \"inverse ideation bingo\" for a full hour and twenty minutes), but otherwise the class was pretty fine. Each category of grade had the lowest dropped, and they were weighted as follows: <br><br>Assignments – 70%<br>Labs – 20%<br>Discussion Posts – 10%",
                    "57": "easy A",
                    "58": "Super chill but informative, I enjoyed this course a lot!",
                    "59": "The two things I wanted to get out of this class were 1) an easy A 2) some web design principles. I learned absolutely nothing about web design but at least I got the easy A.",
                    "60": "Matthew kay is really only focused on how much you're able to learn and develop over the course of the class...because of this, the environment is very open to mistakes and learning",
                    "61": "This course was a good introduction to useful tools like Figma and design concepts. However, it was a bit repetitive and the lack of coding made some exercises seem redundant. Assignments and grading were all very fairly graded and quite easy to complete.",
                    "62": "Everyone should take an HCI course at some point, and this one is a pretty solid contender. Both Matt and the TAs were really engaged and tried out a lot of fun exercises with us. Most of the quarter is spent tackling one user problem and developing a prototype over the following weeks.",
                    "63": "I'm. not interested in HCI at all, but it was a super easy class. Never read the textbook or paid attention once and still got an A",
                    "64": "This class is extremely easy and you don't learn anything. You just do assignments which are essentially busywork. The assignments get more and more annoying as you have to edit videos to submit and design a prototype on Figma which is interactive. Great class though, if you need a 300 level CS class and you don't have 214 or 213 yet (me)",
                    "65": "Not that much coding but really helped me understand a lot of agile development processes that I have never delved into until taking this course.",
                    "66": "Incredibly easy: no tests, no coding (which is surprising for a CS class). Show up to class and do the homework on time.",
                    "67": "The structure of the class really depends on the professor teaching. For Professor Kay's class, there is zero programming involved. It would have been nice to learn some HTML, Java Script, and CSS in a class focused on user interfaces. <br><br>If you are looking for an easy A, take this class. Easiest A in my life as grading is basically all completion based.",
                    "68": "chill class, silly and fun activities in class that tie into course content. kinda awkward learning hci from a lecture perspective, did not feel like a cs class at all (very segal design–like). a lot of focus on design/research methodology and concerns, not really that much on implementation. no coding involved at all. fun class and super chill assignments, and i love prof matthew, but didn't rllly learn that much",
                    "69": "this class will be a lot more interesting if this is a smaller class size.",
                    "70": "Easy class, but you learn a lot. Good class for everyone to take, even if you are not planning to go into HCI.<br><br>No exams. Just homework assignments. Prof. Kay is very knowledgable about the material. There are \"labs\" every Thursday and they try to make them fun.",
                    "71": "I can't recommend this course to anyone genuinely interested in computer science. The only thing of value I learned in this class was how to use Figma, but that was only taught in a single lecture and we were expected to self–teach everything else we needed to know to use it for projects/assignments. There is absolutely 0 content related to actual programming or anything applicable in the real world.",
                    "72": "Course was super easy, but having to make a recording for each of the assignments ended up being very tedious. Easy A",
                    "73": "This was a different 330 course than what was usually taught. We did no coding which is how it was used to be and focused more on just designs. We made mockups both paper then digital. The assignments can be somewhat time consuming if left to the last minute.",
                    "74": "good course. would recommend.",
                    "75": "The course is about creating your own interface according to the design challenge or user need you to identify. No coding. Only paper prototyping and digital prototyping with Figma. The contents are very engaging and the labs are fun. The professor and the TAs definitely put lots of effort into designing the labs.",
                    "76": "Great course. Dr. Kay made it enjoyable and you get a product at the end of the class you can be proud of. You learn Figma which was nice. The content in lecture was very applicable to the labs and assignments so I felt like everything I learned was reinforced. The structure of the course (makeups, submissions) was also very easy to figure out, low stress, and flexible. Grades are mostly completion based and you put in as much effort as you want. Labs are also very engaging and you get to actually talk to people in your class."
                },
                "school_demographics": {
                    "Weinberg": 59,
                    "McCormick": 58,
                    "Medill": 1,
                    "Comm": 6,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 8,
                    "Juniors": 67,
                    "Seniors": 44
                }
            }
        },
        "COMP_SCI 333-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.17,
                    "student_count": 30
                },
                "student_opinions": {
                    "0": "Overall, I did enjoy taking this class because I'm interesting in the programming side of data visualization so I appreciated that there was one in the CS department. The weekly quizzes are a little tougher than expected but not difficult so you will need to study for them. Attendance is required, and the format is flipped classroom so you're expected to do the readings so you can do the in–class activities. Professor Hullman is very knowledgable about this topic area and I found her lectures pretty engaging because she would often connect it back to real world examples. I also appreciated her flexibility to attend to class needs by allowing us to resubmit for extra points, or regrading the quizzes. The three main assignments will take you 8+ hours (20+ for the last one) so be sure to prepare well for those–– you learn the most from doing it yourself. I will say that there are discrepancies in grading depending on your TA, but you can always communicate to address those concerns. In all, this was not a hard class but the larger assignments are time consuming. I recommend taking this class with someone you know can work well together.",
                    "1": "This class is pretty solid at teaching you the fundamentals of effective data visualization, but I would recommend that you come into this class with a solid fundamental understanding of statistics and intro–level data science to get the most out of this class. I have taken neither stats nor any data science–y course, and I feel like such courses would have much better prepared me for this class since a lot of info viz draws from data science, statistics, etc. A lot of this class focuses on formal research done in the 20th century, which can also be somewhat–hard to get through. You also do your homeworks in Tableau and D3.js, and there is little to no teaching done on these technologies (and the teaching that is offered isn't super comprehensive in my opinion), so do be prepared to learn these technologies if you aren't familiar with them. Professor Hullman is super talented and knowledgeable with this class' topics and is always ready to help you out if you have questions, so I do fully recommend taking the class with her. We had weekly in–class quizzes (which were basically \"you know it or you don't\") and then three projects spread throughout the quarter (first using tool of your choice or Tableau, second using Tableau, third in D3.js). This class is flipped so you are expected to watch lectures online before coming to class. Note sets are provided for each lecture (which are generally useful and almost always appear on the quizzes).",
                    "2": "I think this course has some really great content, but the organization of class needs a bit of work. The class follows a flipped structure, with weekly comprehension quizzes at the start of the class and a focus on discussion during class time. Of course, what really happens is nobody actually watches those lectures, or is confused by the content, so there isn't actually that much discussion in class. In my opinion, this class should have more interactive aspects. We had a few labs, and I thought those were helpful for learning D3 and Javascript, so there should be more of those. I think placing people into small groups to discuss would also make people more comfortable at discussion. This class is only graded on three aspects: 3 homework assignments, participation, and weekly quizzes. The assignments had a natural progression in difficulty, although I wish there was a bit more support for learning D3/Javascript/HTML for the final assignment. Professor Hullman is highly knowledgeable in this field and is clearly passionate about this topic – it would be interesting to hear more about her past research work.",
                    "3": "This class was a great class to take for people who are trying to not do all that much coding. You won't do any apart from the final project, that was a lot of work as someone who doesn't really code at all.",
                    "4": "The weekly quizzes were short but a little tedious. However, I think they were necessary to take away from this course as much as possible. Learning how to do an exploratory data analysis and building my own interactive visualization was rewarding and I feel like they could be useful in various fields including machine learning. Using d3 for the final project wasn't too easy but it was a good skill to gain along with Tableau.",
                    "5": "Overall, this class was not really what I expected (not necessarily in a bad way). We learned a lot about how humans perceive things and how to choose visualizations that were appropriate in different situations. I think that spending more time learning Tableau and D3 in class would make assignments a bit less daunting. I also think that allowing handwritten notes for quizzes would be cool, because it would encourage people to take notes instead of requiring us to memorize and then forget.",
                    "6": "Was a good class, learned a lot, definitely got me interested in the subject. Grading is tough, but the assignments aren't so time consuming. Overall I liked the class a lot, definitely one of the better interfaces options.",
                    "7": "This is not a good class at all. I absolutely cannot recommend this to anyone. The class is so disorganized and the teachers and teacher assistants are not helpful at all. There are weekly quizzes for the class. Even when studying and paying attention in lectures and watching the videos, I can't do well on it. The class average is a 2.2/3 on these quizzes and there's nothing we can do about it. At this point, I don't even watch the lectures and my grade stays the same. The TA's are incredibly unhelpful. The first assignment was to do a data analysis through tableau. We had absolutely no instructions on how to use Tableau, and when I asked the TAs for help they simply said they didn't know Tableau either and couldn't help me. I also didn't have any experience or instructions on how to build an appropriate graph, and when I asked the TAs for help they spoke so cryptically and it seemed like they were enjoying the power trip that I was at the mercy of their help. They literally laughed in my face when I didn't know which graph to use. I would approach the TAs with questions on how to make my graph better, and they will nitpick at small things that are literally impossible to change in Tableau. I would even ask them how to make the change and they would just say they don't know how to use Tableau so I should just figure it out. The professor even suggested photoshop if we can't figure Tableau out, but I've never used that!",
                    "8": "Learned useful and relevant topics but the class was very disorganized. There are only three assignments but you are not given any clear direction or guidance throughout the course to complete the assignments. You are left to figure out all the software by yourself and the professor/TAs assume you have extensive stats knowledge before entering the class. There are also no office hours and can only arrange a time to meet through email. It is a flipped classroom",
                    "9": "This is a great course for data visualization. You learn a lot of real work skills to go along with strong fundamental knowledge of data visualization",
                    "10": "As someone who was previously only interested in programming and software engineering, this course made me more interested in working with data visualization both by using software like Tableau and writing code.",
                    "11": "The concepts are really easy to learn, but the quizzes are just there to take away points. Lectures are boring since its just overexplaining how to make things look good. Working with D3 and actually creating the visualizations were fun. If it were not for the poor grading, unnecessary quizzes, and dull lectures, this class would be worth taking.",
                    "12": "I took this class thinking it would be easy, but the weekly quizzes were hard and the projects were so tedious. Don't take this class unless you want to actually put effort into it",
                    "13": "I would recommend taking this class. It does teach fundamental skills that a CS students needs to have about information visualizations;  knowing which questions to answer about the data and choosing the right representations to do that. There is a bit of a steep learning curve with D3 but you can find language documentations and demos easily on the internet so.",
                    "14": "Wouldn't recommend this course very highly. I took it because I wanted to learn D3/interactive visualization tools but the new curriculum with this professor was more of a \"theory of visualization\" course which I didn't like very much. Felt like I learned a lot that was unnecessary and sort of an overcomplication of quite simple material. There were readings before each class and video lectures that often covered the same things that were covered in person. There were also mini quizzes every week. Mini quizzes and assignments were often graded quite harshly without much of a clear reason. I know it has been more D3 focused in the past with other professors and that has gotten better reviews, and it seems like the new curriculum was specific to this prof. Just be aware of who's teaching it and how before deciding to take it.",
                    "15": "I was excited to take this course and maybe I set my expectations too high because it fell flat for me. I don't feel as if my info vis significantly improved, I just learned the right terminology to describe info vis. Lectures were a bit dry and I was not a fan of flipped classroom. I would recommended making the class move faster and go deeper, even if that means fewer smaller assignments rather than three large ones. All of this being said, probably would take it again.",
                    "16": "This class was great! Grade is 65% assignments, in class participation and assignments are 14%, the only downside would be the quizzes which are 21%, after watching flipped lectures before class these were quick 10–20 minute tests taken during lectures that were sometimes difficult but usually not too bad. Overall really enjoyed learning about data visualization in this class",
                    "17": "Pretty good class. Professor is very nice and prepares nice lectures. TAs are great too. Interesting and fair class."
                },
                "school_demographics": {
                    "Weinberg": 12,
                    "McCormick": 13,
                    "Medill": 1,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 10,
                    "Seniors": 15
                }
            }
        },
        "COMP_SCI 335-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 3.63,
                    "student_count": 19
                },
                "student_opinions": {
                    "0": "nothing",
                    "1": "Pretty good class. Haven't taken 336 but I feel like this is a better alternative. Work isn't bad at all, only one homework a week which is a single problem, probably took like 4 hours each. You can work in groups of three too. Async lectures can be annoying but not a big deal. Jinshuo also gave two alternatives to taking the final, one a math creative writing assignment and the other a coding assignment which was nice. Jinshuo's cool too, decent professor and funny guy as well.",
                    "2": "I really enjoyed complexity theory",
                    "3": "This reaction is definitely focused mostly on this iteration of 335.<br><br>This class was a train wreck. It was a flipped classroom with video lectures taught by professors at other schools followed by lectures where the professor would mostly ramble for an hour and a half. Lectures were a complete waste of time and I genuinely believe that the only reason anyone at all bothered to show up is because attendance was required and graded. The professor it seemed didn't really know what he was talking about and was incredibly hard to follow and listen to.<br><br>Maybe the most obvious example of how much of a mess this class was was the final/final project. The professor randomly decided one day that instead of taking the final, you could \"write a sci–fi story.\" There were barely any instructions and no rubric at all for how this would be graded. Then, the professor also decided that maybe you could do a project instead measuring memory complexity. It was obvious the professor was just deciding things on the spot and didn't have an organized plan at all.",
                    "4": "Well, obviously, Jinshuo is not a very outgoing guy. <br>The form of the course is interesting, and it could leave us more time to discuss in class; however, the video offered is not so good. <br>Why do we not just use MIT or Havard or something else video? <br>Their professor could offer a better experience.<br>The video offered is not well prepared, and many professors in the videos are too genius; in other words, they are not focusing on teaching, so many of us have trouble getting them.<br>It is not a designed course; however, you can get curved, so have a try, maybe?",
                    "5": "I took this class for that one CS requirement. Both 335 and 336 are incredibly uninteresting to me; however, I would definitely recommend taking 335 with Jinshuo. He's a great professor. I like that he isn't afraid to say that he doesn't know when he gets asked a difficult question. That isn't to say he doesn't know a ton about the topics we covered, because he does. I also like that he is a very flexible person. He decided to allow us to write a story about the topics we were covering instead of taking the final when he made a joke and someone asked if that was really an option. <br><br>I would definitely recommend taking this class with partners; it made it so much more bearable for me.",
                    "6": "TLDR: it'll suck lol. Good luck! Fall 2023, w/ Jinshuo Dong: Video quizzes are worth 18%, Final Exam: 25%, In–Class Exercises (just show up to class): 18%, Weekly Assignments (PSETs that will not be fun/were not fun for me): 39%. Get a friend who likes proofs/got an A in/liked CS212, be in a group with them, and have them help you through it. Take 336 if you can. This class sucked for me, I hate proofs, I didn't like this class, but I got through it, so you can too.",
                    "7": "Jinshuo is honestly the goat. I think he does a decent enough job at communicating ideas during his lecture and he is pretty good at meeting students where they are. When it came to final, I really appreciate that he provided so many options for how to complete it since I think it gave different students with different strengths appropriate ways to demonstrate their understanding of the course content.",
                    "8": "This course was the perfect theory course for me : not too challenging but still challenging and mentally stimulating. In the first weeks i was dubious of flipped format but jinshuo was great",
                    "9": "I wish the teacher taught more in class. He was kind of lazy. Every lecture he just referred us to some YouTube videos to watch.",
                    "10": "This was a good course. The workload was very manageable and I feel that I learned a lot. Jinshuo is very nice as well.",
                    "11": "The lecturer didn't do a good job for the course. Instead of organizing the structure of knowledge coherently in the course, we were just asked to watch some videos before the class. <br><br>He tried to do some review or summary about what the videos talked about, but the slides contained too many confusing stuff without explanation. And the lecturer didn't seem to prepare well for the course since he might forget about the content of slides or couldn't answer course–related questions.<br><br>In conclusion, the topic of computational theory itself is fascinating; but the course is very disappointing.",
                    "12": "It's a \"flipped classroom\" course and attendance is still required for classtime. I don't understand this formula for a class – it just does not work and it always ends up with the class period turning into a half–baked review of what we watched in the videos each week. And the class of course devolved into no one actually watching the videos and everyone relying on the in–class review.  The professor even admitted on several occasions that it is okay if people didn't watch the videos – isn't watching the videos before the entire point of flipped classroom? The professor would also try to keep the class engaged by asking questions, but whenever someone would answer, he would often follow up with a difficult to answer or even nonsense followup question. This led to no one participating after a few weeks since no one wanted to get hit with that. Also, the professor struggled a bit with answering questions from the class, sometimes even pretty basic ones. As far as the content goes, I actually really enjoyed it – people who enjoy puzzle–solving will like this class. But I wish it was taught in a proper classroom setting – flipped classroom is just not a good strategy."
                },
                "school_demographics": {
                    "Weinberg": 5,
                    "McCormick": 6,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 3,
                    "Seniors": 8
                }
            }
        },
        "COMP_SCI 336-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.88,
                    "student_count": 51
                },
                "student_opinions": {
                    "0": "Dutta is a good professor that seems interested in the material that he teaches. He is approachable and willing to answer any question about the material as he wants to make sure that you have a good understanding. <br><br>You learn about Greedy Algorithm and Dynamic Programming in the course, which are essential in coding interviews.",
                    "1": "I really enjoyed this course with the professor. It was hard but extremely useful information and not too hard. The homeworks got increasingly harder but were still completely manageable. The first midterm was also really easy but the second one was really hard.",
                    "2": "Honestly not as bad as I thought. Covered: greedy algorithms, dynamic programing, NP–hard, max–flow, some other stuff. Assignments were generally ½ coding ½ proof. Lectures could get confusing for sure––not easy subject material. But assignments were helpful in learning.",
                    "3": "It was tough.",
                    "4": "I have mixed feelings about this course. The first midterm was extremely easy (like 90% class average) and the assignments were not too bad. I did not find the lectures to connect that well with the homeworks, but those were not too hard on average. The second half of the class on dynamic programming was pretty confusing at some moments, with the homeworks asking you to build 3d dp arrays and such which we had not seen in class. The final however was brutal and 10x harder than the midterm. I believe the class average was around a 60% for that exam. The professor curved the class however. I think this is probably the best professor to take CS 336 with since it seems less demanding than with over professors. However, watch out for the sudden increase in difficulty at the end of the class.",
                    "5": "hard class. go to all the lectures. you can do well in this class but it takes time and effort.",
                    "6": "I think the professor was pretty good, although there were some topics that just required me to sit with the textbook for an hour or two before I understood the reasoning.",
                    "7": "I think the first part of this class was pretty chill, and the midterm was relatively fine. The homeworks are not bad if you pay attention in class, but there are a lot of proofs. The second part of the class was definitely harder in the material and felt more rushed. The final was very difficult too.",
                    "8": "Difficult class with important concepts — in general, the homework was really challenging and office hours were inconsistent. The algorithms we learned are important and similar to LeetCode practice, but the organization of the class felt a bit scattered. The midterm was very manageable but the the final took it up a notch, so the rigor of the class really fluctuated throughout the quarter. Overall, take it because it's important, but be prepared to learn on your own and watch lots of YouTube.",
                    "9": "Class was not too difficult. Homework needed a decent amount of time for the proof parts, but relatively easy. Exam may be hard though.",
                    "10": "This course does a really nice job of introducing you to common algorithm designs. You will cover a wide range of well–known algorithms, certain patterns to look for, time complexities, how to write your own algorithms/proofs, and other useful mathematical tools. The first half of the class focuses on greedy algorithms, while the second half focuses of dynamic programming. There are a few topics sprinkled in between, but if you want to take anything away from the class, I would highly recommend getting a good grasp of greedy algorithms and dynamic programming. Professor Dutta does a nice job of lecturing abstract topics, and he is one of the most patient professors I have had so far. He has no problem answering the same question five or six times. One piece of advice is to attend all of the discussion sections, they have great practice for material you will see on the exams. There were six total homework assignments with a few coding problems and proofs, and one midterm + final.<br><br>In summary, I recommend the class. Professor Dutta is great, you learn a lot about how to spot useful patterns, and the grading is fair with not too much time commitment outside the class.",
                    "11": "Super challenging, super rewarding",
                    "12": "The professor explains the concept pretty well!",
                    "13": "Weekly homework, 1 midterm, and 1 final. Some homework problems were easy, some were pretty difficult. The midterm was much easier than the homeworks in my opinion. A lot of the content in this class can be challenging, but I still found it easier than 212. Office hours are pretty limited and get packed closer to the deadlines, so it was often difficult to get the help I needed.",
                    "14": "This class is hard but its a requirement. the midterm was really easy and final was very hard. It goes over important topics like greedy algorithms and dynamic programming. Go to office hours.",
                    "15": "Lectures were alright but not great – goes off topic quite often and sometimes it's hard to follow. First exam was very easy for some reason with a single multiple choice question that was worth like 1/6th of the exam worth 30% of the class (so that one question was like 5% of our entire grade).",
                    "16": "There was a lack of support for exam preparation, and the lecture slides were all taken from another professor and it sometimes seemed like Mr. Dutta was just reading off the slides, and the way in which material was explained was sometimes not comprehensible.",
                    "17": "I wish there were recordings for this course just because the content itself is very difficult to grasp that I need to rewatch content to actually get it. I hope the gradings for each assignment was faster so we know how to improve it. I also wish there were MORE optional examples in class / supplementary materials on how to prove stuff / problems similar to the homework to give us practice .",
                    "18": "Two exams, 6 HWs – 50% weight divided amongst the two exams and 50% weight divided amongst the 6 HWs; topics learned are greedy, divide and conquer, dynamic programming, network flow, and P NP.  Useful for technical interview prep, though I found the final exam to be a bit difficult.",
                    "19": "Nice course. Lectures were very confusing and material is not intuitive. Homeworks are challenging but interesting.<br>Final exam was super hard while midterm more chill. This is indeed a hard class that will take more than lecture time to study for.",
                    "20": "This is a great class to take to prep for technical interviews. You cover a bunch of important techniques that help you figure out ways to think to solve really challenging problems with efficient code, like Greedy and DP. Lectures are very abstract, but also cover a lot of examples about problems you might see in the future. Homework assignments were either proofs or coding – the coding ones felt useful, the proofs ones less so. This was our professor's first time teaching, so it might be different in the future, but he struggled a bit to answer students questions and cover material efficiently. The class is definitely interesting conceptually, though lectures aren't that engaging. Exams were very easy – pretty much writing out an answer to a  popular leetcode problem for 90% of it.",
                    "21": "Prof Dutta was amazing! His lectures were super clear, and he always took time during and after class to answer any questions to make sure everyone understood the material before moving on. There's a huge focus on dynamic programming in the latter half of the class, which I found helpful. Generally just super relevant for SWE recruiting too.",
                    "22": "It delved a lot into dynamic programming and greedy algorithms, both of which are pretty important problem solving methods to have in our toolboxes.",
                    "23": "The course in itself is hard. Algorithms is a very broad and challenging topic. Professors can only do so much to help a student really grasp the idea behind a proof/algorithm. This prof was really good at explaining things and you could tell he tried his best to make sure we understood.",
                    "24": "Class sessions are just the professor talking through a problem statement and designing an algorithm to solve it, with very frequent questions that allow you to actively engage the material. While not strictly necessary, it definitely hurts not to understand the algorithms that are taught. I can't say much about the difficulty of the tests since the professor is new; the first midterm was a little too easy with the final reaching a more reasonable difficulty level. Tests involve a couple of conceptual questions and then designing/explaining an algorithm, but no formal proofs are required; kind of like homework questions.",
                    "25": "the homeworks were challenging and take time but I learned a lot in terms of how to code. Also prof was a good lecturer for this course because he usually explained it fairly well. would recommend taking it with him.",
                    "26": "I was terrified of taking this class before taking it because I did not like CS212, but it ended up being way more manageable than I expected. Most of the homeworks have a coding question with unlimited submissions until you pass all of the test cases.",
                    "27": "This is a great class. The algorithms you learn are really interesting and super applicable to job interviews.",
                    "28": "Take this class with Abhro.",
                    "29": "Prof Dhutta really took his time explaining each concept and patiently answered everyone's questions. He was also very cognizant of student needs, and adjusted the course according to them. Take it with him, he's great!!"
                },
                "school_demographics": {
                    "Weinberg": 25,
                    "McCormick": 19,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 3,
                    "Juniors": 22,
                    "Seniors": 21
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 3.57,
                    "student_count": 86
                },
                "student_opinions": {
                    "0": "horrendous grading on all assignments",
                    "1": "The lectures can quickly get confusing, I think because the professors don't spend a lot of time explaining things. The grading was also overly harsh and deceptive in my opinion. They say they give partial credit, but what they mean by that is if a problem is broken into three parts, they will give you credit for one of the parts if you get it perfectly correct. They don't give any credit if you write the correct value for all but one aspect of a part (hope that explanation makes sense). Given this is a university class and the point is for us to learn, not a competition, I don't think it should be this way. The homework assignments were fairly hard too, and instead of the 6 homework assignments they apparently gave to people I know who took this class in earlier years, we got 8 homework assignments (though the last one was a quiz – but one where you receive the questions beforehand). <br><br>The midterm and final exams combine to 60% of your total grade, and they are graded harshly in the aforementioned way, so keep that in mind and study accordingly. <br><br>As a side note: as a senior who pushed this class off until Winter quarter of my senior year, I don't recommend doing that. Take it during an earlier year. Taking a hard class during your senior year is not fun, and I already have a job and know dynamic programming (the main thing in this class that you get asked in interviews), so the usefulness of the class isn't as salient. I would say take it either winter or spring sophomore year (I don't recommend Fall because hard classes while internship hunting is never a good idea, but definitely do it before junior year internship hunting)",
                    "2": "Overall, the course wasn't good. Most of the time, students were the ones helping each other, with little to no help from instructors, especially on piazza. Questions asked in class were answered by re–reading content from the slides, which was not helpful at all. If I came into this class with little knowledge on DP, I would have been completely lost. Only 1D DP was taught, but homework questions went up to 3D, which left most students living in office hours.",
                    "3": "Absurdly unorganized course. Important and there really isnt another option but to take it.",
                    "4": "Do yourself a favor and avoid taking this section.<br><br>Pros:<br>–––––––<br>C++<br>Borderline tears of joy after passing all test cases after 20 hours<br>Konstantin drawing examples out<br><br>Cons:<br>––––––––<br>Poor lecturing ability from Avdiukhin<br>Repeat responses to questions<br>All–or–nothing grading<br>Slides ridden with errors<br>Slides expect you to be a mathematician<br>All–or–nothing grading + Proofs<br>Huge time commitment on homeworks just for it to be worth almost nothing (~2–3% for each hw)<br>Mental anguish<br>All or nothing grading + a final worth 35%<br>Lack of instructor engagement on piazza (common to see  unanswered questions)<br>Piazza ran by student posts hoping to scrape participation points<br>Slides never posted before lectures or posted consistently<br>Recordings occasionally missing audio<br>Lack of cohesion between TAs and Instructors<br>Somehow managed to be 90% of the workload during a 5 course quarter<br>Prof in next class questioning why people coming from the 336 lecture looks like they had the worst week of their lives<br>Mental anguish<br><br>TLDR<br>Took the class expecting target, got walmart",
                    "5": "This is hands down the worst class I have taken at Northwestern. This is the first class I've taken where it feels like the professors (there were 2!) were actively TRYING not to explain anything. Their attitude was that this material was pretty simple and that we should either figure it ourselves or sink. To some extent all CS classes are like this, but it shouldn't be the case. This class dialed that up to 1000. Office hours felt like the hunger games, where we had to rush to put our name on the board first or the TAs would never get to us due to overcrowding. I was told straight to my face at office hours by the TA that he wouldn't help me beyond the vaguest of generalities. When I asked about code he and another TA said that they didn't know C++. Only one of the 6 or so TAs actually helped anyone. When there are dozens of students waiting in a one hour session, why some of the TAs decided to spend upwards of 15 min with one person rather than helping everyone by writing helpful pointers on the board or even just speeding up is beyond me. <br><br>The professor's slides were clearly created in about 10 minutes at 2 am. One time, prof sent out an announcement at 4 am saying that he \"barely had time for that.” That being writing an answer key to homework. This demonstrates an utter lack of care for his primary job to such a degree that I feel like it should have consequences. Compounding this utter lack of care for his job and his students was the immense language barrier. I could barely understand what the professor was saying in class and often had to rewatch the lecture videos dozens of times to understand even the basics of a topic because there was such little effort put into explaining it. I’m not just complaining because of the language barrier, there was a TA who also had a language issue but because he actually put in effort into explaining things to us, that effort shone through. Because ultimately this course should be about math and coding. <br><br>While the course is advertised as a proof based math class, this could not be further from the truth. I have taken many 300 level math courses (I’m CS and Math) and in this class, they have an utter disregard for defining things in a way that is unacceptable in any serious math course. Professor would randomly introduce terms in the middle of his slides without defining them and use different terms interchangeably. A perfect example of this is “function” vs “problem.” In context, we were talking about functions that take problems and output the solution to the problem. To use this interchangeably with the problem itself is incredibly baffling and confusing. While there was a textbook which was a little better, not everything we covered was in the textbook so this utter disregard for mathematical convention made the lectures utterly incomprehensible. I would even go so far as to say that they were nonsense. The only way you would understand this content from the lectures alone is if you had already studied algorithms. Something which is not true for me as a newcomer to computer science, but was definitely true for a lot of people who took this class. The professor showed an utter lack of care for anyone who did not have the CS background of a senior at MIT. <br><br>Grading wise, 40% was homework, 25% was a midterm, and 35% was the final. Homeworks and exams were graded extremely harshly. I had 10 points taken off for a single wrong word. The only advice I can give to do well in this class is pray to god. In all seriousness, try to study ahead with other resources such as a book, Leetcode, MIT/CMU slides, etc. Find a helpful TA early on while the class is still manageable and go as early as possible. Do not expect the professor to help on Piazza or at office hours. If you’re CS there’s no getting around this class, so buckle up for the worst quarter of your life!",
                    "6": "This class was intense, especially as each weekly homework had both proof and coding aspects. Was extremely difficult and time consuming but I feel like I learned a lot and tbh I made friends through the struggle so if you need more friends take this course i guess",
                    "7": "This course is very well run. There are 2 homework assignments due every week, which is 1 proof and 1 coding section. There is 1 midterm, and 1 final. If you are solid in C++ and have good understanding of Leetcode – esque content, you should do very well in this class. Overall would recommend for McCormick/Weinberg CS students who are taking it to fulfill a requirement.",
                    "8": "The class is not easy,  and you just have to get it over with. The class is also proof heavy but try to take it with this professor as it means you will have a coding assignment in addition to your proof homework. The last few problem sets were very time consuming as well and required nuanced approaches that weren't necessarily covered in class, but still manageable. Sometimes the PM's and professor were very strict with partial credit on hw's and exams so make sure you are studying thoroughly. I think the class could definitely have been taught more clearly as I remember I felt lost at least once a class. And go to lecture, only about 30% of students go, but sometimes they will tell you or give important hw tips during class.",
                    "9": "This class sucked. I get its useful for interviews, but I’d rather learn/practice this stuff myself. Konstantin is a decent professor who is willing to help, but the rest of the course staff was mediocre. In general, many important questions always went unanswered   It was nearly impossible to get a 100 on any of the written homework, they always found ways to take off points. If you asked on piazza why you got points off/regrade request, either they wouldn’t answer, or they might take MORE points off.  Even if you think you understand the homework 100%, go to office hours to get it checked.  Also, most homework solutions were not released, and the practice final exam was only 2 questions (which only covered 1 of 3 big topics on the final).",
                    "10": "Make sure to go to office hours because it can provide a lot of guidance on the homework assignments. The class had some difficult concepts, but the homework assignments are relevant for the exams. The exams are worth a lot, so prepare a lot for those. I learned a lot of concepts through this class and think it helped a lot with writing algorithms and understanding them.",
                    "11": "Really bad course. Dmitri is not a great lecturer. He is not able to explain concepts in a easily digestible manner and offers basically zero help on office hours. Grading is incredibly subjective. The TAs and professors are very quick to give out zeros if one aspect of your solution is incorrect. Piazza is basically a foreign concept to the professors at the rate they respond to questions on there. Possibly one of the worst courses taught at this university by one of the worst professors at this university. Konstantin is okay but not much better.",
                    "12": "When i say the course this quarter was life draining, I mean it. I spent over 10 hours each week for the homework. It was if the students' mental healths did not matter. After the midterm, homeworks became really hard. It's also very annoying how exams were worth 60% when I spent the ENTIRE week just trying to get my homework done. While I did learn, what cost was it at? My whole week was spent doing these homeworks and 30 kids would be at each OH because they could not figure the hw out. Oh my goodness especially the code for either hw5 or 6 was horrible. No one could figure that out. This class drained my mental health and I spent my whole week makig my homeworks perfect only for my grade to be lowered by 60% exams. If anything,  homeworks should be 60% and exams 40% considering how long people spent.<br><br>This class took away my life this quarter. Instructors added more than what should be, and partial credit was very stingy on exams, which sucked. It seemed as if instructors didn't care about students succeeding, just weeding out the best. If you can, please take it with Stull. I can't begin to keep going on about how the changes made this quarter‎ REALLY took the life from me.",
                    "13": "For your sake, please do NOT take this course with either Avdiukhin or Makarychev. The class was taught by both, meaning that the pace of lecture was very inconsistent. It was also incredibly difficult to follow the professors during lecture because of how much they assumed the students knew, and the lecture slides weren't nearly comprehensive enough to actually help us learn (the textbook was however). I also found the homework to be extremely poorly graded because of the TAs/PMs – they took off points for the most random and inconsistent things. And I also heard some classmates talk about getting wildly different grades for homework even though they had similar answers. Another thing that made this class extremely bad was that the PMs didn't get the homework solutions, so they were basically just guessing when helping students. Overall, terrible class.",
                    "14": "I learned a lot in this course. You will come out of this course having a strong foundation in greedy and dynamic programming algorithms. The homework problems (1 part proof, 1 part programming in C++) really help you develop an intuition for writing algorithms.<br><br>The only negative is that sometimes during lectures, the way algorithms were introduced and framed was not always very clear.",
                    "15": "This is the hardest CS class I've taken so far (I took 212 with Evert and 213 with Hardevalles).",
                    "16": "SUMMARY<br>Interesting course content that gives you a much deeper understanding of DP and Greedy algorithms. However, the class can be very disorganized with lectures slides and Piazza support is non–existent. Take this with Makarychev if you can, but you may not get that chance because Avdiukhin will likely be taking over for future classes.<br><br>PROS<br>– Makarychev is a good lecturer! He explains challenging proofs decently well and is clearly very knowledgable in the field. He's the main CS theory person at NU so he's the best person to take any algorithms class with.<br>– Class concepts are very interesting! Especially if you like thinking about algorithms and proofs.<br>– You gain a much deeper understanding of dynamic programming and Greedy algorithms. If you only do Leetcode, you probably wouldn't understand conceptually why these algorithms work until you're forced to write out proofs and recurrence relations for them (like in this class).<br><br>CONS<br>– Avdiukhin is not as good of a lecturer. He could be more confident and frequently doubts his own explanations. Sometimes he doesn't speak very clearly so it's not clear what he is trying to say. That being said, this is his first quarter teaching this class (or any class I believe) so he should get better.<br>– Avdiukhin makes some impossible af problems. We frequently have 3D DP problems and there was one problem which no one could really solve unless they went to office hours (I spent about 10 hours on it).<br>– If you're taking this class with Avdiukhin, make sure you learn at least simple 1D DP beforehand, because otherwise you will struggle. DP is sometimes which takes a bit of time to wrap your head around, so best to do that wrapping before the class.<br>– Support on Piazza was nearly non–existent. Questions would go answered for many days, even important admin–related questions. Instructors and PMs rarely answered questions.<br>– Lecture slides and recordings were uploaded inconsistently. Also, old versions of lecture slides are sometimes uploaded. Make sure you come to class so you get all the content!",
                    "17": "Firstly, the lectures were really good. There are some not so intuitive concepts and I think the lectures really helped me to understand them. However, I have a lot of gripes with this class. One frustrating thing is that the proof homeworks are graded by PMs/TAs and the grading ranged widely. Most of the time, the grading was tough, but fair. However, more than once, the PM who graded my homework was unnecessarily harsh. This didn't matter much at the beginning of the class because the homeworks were pretty easy, but after the drop deadline, the homeworks got significantly harder. On that note, the office hours sessions were not great. If you went in to ask about homeworks, assuming that the PM/TA/Prof got to you before the session was over, they would mostly just restate the problem and then say \"I can't give anymore hints.\" <br>The class could also feel pretty disorganized. For the midterm, they gave out a practice midterm, but they didn't give out the answer key until the night before the midterm. Piazza was pretty unhelpful. Most of the time, the only answers you would get were from other students if you got an answer at all. Maybe I am just not good at the material in class, but the class seemed way harder than it was described on the CTECS.",
                    "18": "You're getting what you expect here with this class, its just algorithms part 2 pretty much. A little challenging sometimes but manageable for sure.",
                    "19": "This class was extremely time consuming and the class gets significantly harder after the first midterm/greedy algorithms. Topics were not taught very well in lecture in my opinion, causing me to spend hours reading the textbook and watching videos. Additionally, the programming assignments later on in the quarter became significantly hard and required hours upon hours in order to solve.",
                    "20": "Very hard course. The professors were very strict about their grading and this could be very detrimental to your course grade",
                    "21": "This class definitely taught me a lot, contrary to what many people told me coming in. I got better at thinking about problems algorithmically and identifying what strategy I should use, which means the instructors did a good job. That said, attendance decreased so much over the quarter the professors used us as guinea pigs for how they should implement mandatory attendance next quarter.",
                    "22": "This course definitely had some useful information, and I would recommend taking it before doing job apps. Learning about greedy and dynamic programming algos was super useful for technical assessments. Unfortunately, the grading made the course quite stressful – each of the homeworks took a really long time (the coding part was great, I enjoyed those, but the written proofs were a lot of work) – and the final being worth 35% of the grade was quite stressful. I enjoyed the course overall.",
                    "23": "such an unnecessarily difficult class –– discussion sections were often more confusing than helpful, piazza posts were mostly met with short/terse responses, exams were absolutely nothing like the practice material provided. the only way to do well enough to stay afloat in this class is to basically live in office hours, and even then the first couple of weeks will be really difficult as you try to figure out which peer mentors will actually help you. for a class that practically half of all cs students have to take, it's incredible how at every step the instructors' goal never feels like they want students to succeed. since this quarter was taught by two professors who alternated lectures, the style widely varied between classes, and nothing ever felt consistent. i would tell you to take a different class for the theory requirement but chances are if you're reading this you don't have any choice",
                    "24": "Not an easy class, but I did learn a lot.  Office hours are very helpful.<br><br>Structure is 1 assignment per week (usually 1 problem is a proof and the other is a programming assignment).  Midterm and final.",
                    "25": "I had higher expectations of the course's quality tbf. Very poorly done. Both professors were careless in terms of logistics: they didn't upload slides timely and some recordings didn't have sound (!).  While I am convinced that professors are very knowledgeable, the goal of being a professor is to share this knowledge. They were quiet most of the Office Hours providing virtually NO guidance AT ALL. Overusing the term \"this is trivial\" does not facilitate the comprehension of the material by students. Overall, very underwhelming experience: boring 80–minute no–breaks lectures and lack of approachability made this class insufferable. <br><br>Also, the grading is, well, all–or–nothing for the algorithmic part, of course, I am not surprised. The policy of no collaboration was completely unnecessary given how much people learn and grow by helping each other. This class, if continued by those professors, must really work on their communication skills a ton",
                    "26": "A pretty difficult class. Prepare to spend lots of time.",
                    "27": "Lol. This class is getting harder and harder every time it is taught, so rip to future students.  I wish they wouldn't try to beat us down with difficulty so that we can actually devote a lot of our energy to actually understanding the content and exploring our curiosities regarding the topics. However, Konstantin was a great professor and spoke very clearly and coherently, and you could tell he wanted to make sure students were understanding the concepts well and were engaged. Dmitrii was new and would teach half of the lectures in the quarter and tbh it was really difficult to follow along with most of his lectures. He spoke very fast and skipped over very important details that are nice to go over for students who have never studied algorithms. Though, he did start improving towards the end. All of the PMs this quarter were amazing tho and wanted to help us succeed from this treacherous quarter of algorithms.",
                    "28": "It is a tough course that all CS majors have to take. Really recommend going to OH each week to get help from peer mentors and start the homeworks early. 1 midterm, 1 final, and weekly homework assignments. This section with this professor has coding assignments in C+ and proofs for homeworks while others may only have just proofs for homework assignments.",
                    "29": "I really enjoyed the content and the grade policy was fair.",
                    "30": "Overall, this is a pretty difficult course, with the second half material much more difficult than the first. The homeworks take a long time, so be sure to get started early.",
                    "31": "Lectures were given by Dmitrii and Konstantin, where they basically switched off so each prof did every other lecture. Both of their lectures are hard to follow, but Dmitrii's lectures are VERY hard, sometimes impossible, to follow. I think most of the class is completely lost for most of lecture. This is the single drawback of the class. All the content you are learning is in lectures, and these aren't great lectures. <br><br>Homework is reasonable. There is one homework each week with 2 parts: one written assignment, and one coding assignment. The written assignment requires you to  come up with an algorithm to solve some problem, and then prove that the algorithm works. The coding assignment is just like a leetcode question, but you have to use C++. The assignments are not busywork and genuinely do help you get better at understanding algorithms. I will say that if you haven't encountered DP before, the DP homeworks will be VERY hard for you. I was comfortable with 1D and 2D DP going in, and still had a lot of trouble with the DP homeworks in this class. <br><br>This class does have a strong support system of PMs and TAs. Lots of office hours, and PMs are very helpful.<br><br>Grading is alright. If you pass all the  tests cases for the coding assignments you get full credit. For the written assignments, your writeup needs to be (1) correct, and (2) very very very clearly explained. It is hard to explain things clearly when the algorithms get more complicated. Also, I think TAs/PMs don't get very much time to grade each writeup, so sometimes they might make mistakes. There were a couple occasions that I got points deducted due to misunderstandings with what I wrote, but I was able to get these grades corrected by reaching out on piazza.",
                    "32": "Very difficult class. Some concepts are abstract and aren't explained in great detail so be sure to find resources outside of class to fill in the gaps. Start the HW assignments early. They are difficult and sometimes not related to lectures.",
                    "33": "Exams are better than I thought. Homework problems were challenging tho, and some times PMs get confused and tell us different things. Professors are not very helpful on Piazza.",
                    "34": "This course is really challenging and comes with a significant workload. The weekly assignments with algorithm problems and proof questions are not easy, and there are also midterm and final exams to complete. I think this course is much less helpful for job interview preparation, especially for algorithm interviews, than I expected. If you're taking this course for job preparation, I suggest practicing on LeetCode instead.",
                    "35": "Do not take this with Dimitrii. This class was the most stressful class ever. There was NO partial credit in grading homeworks and exams. There was one HW that was so hard that it took 30 hours. The midterm was so hard that even Konstantin admitted that it was too much (it was made by Dimitrii).  Konstantin is a better lecturer but overall so much of my learning took place over youtube. I feel like I haven’t been in a CS class that had exams be weighted so much of the final grade. The midterm was worth 290 points?? Like that’s insane. Most people I knew dropped the class after the midterm. I wanted to too, but the only reason I didn’t was because I didn’t want to take the course with Dimitrii next quarter. I had to request regrades on my homework 4/8 times because they either gave no points or didn’t fully read it so they missed details and took off points.  Definitely take the course with a professor that does both coding and written homework. It was so sad because this class is SO PIVOTAL to a CS degree, but I felt like I was fighting for my life instead of being cared about.",
                    "36": "This is a hard class but you have a lot of time to internalize the material.",
                    "37": "The course was overall a really disorganized experience, I really enjoyed the topics taught and found them to be very interesting but the instructors didn't seem too interested in teaching. Recording occasionally don't have sound, which makes it really hard to look back to review, slides are not always posted either. Piazza posts were seldom the only way to contact teachers and I don't think the professors gave enough practice material  to properly prepare us for what was on the exam. Pertaining to the midterm specifically, the answer keys were given the one day before the exam with the practice exam itself being posted not much earlier, not only was the answer key posted extremely late but the answer key was also missing a page. After taking the midterm, I found that the structure of the midterm was completely different  from that of the practice exam and only later that I knew the practice exams were taken from past classes and the instructors didn't prepare one.  The lack of announcements and communication from the instructors really gave me the impression that they didn't want to teach the class. However, with all that being said, I really liked the materials and found them to be beneficial for industry/interview type questions. Homework was 40%, midterm 25%, final 35%.",
                    "38": "The professors were great, however, when you asked something on piazza, things wouldn't be answered. It also seemed like little effort was being put into uploading the slides and the slides themselves.",
                    "39": "Lots to say about this class!<br><br>Tl;dr: Prof. Makarychev is great, it's a shame that he won't teach this class again. Avdiukhin is not a good lecturer and will be making attendence mandatory with graded in–class quizzes. You absolutely should go to class but I don't think the quizzes are a good idea. Homeworks are coding and algorithm design, not \"proofs.\" Anyone who says this class is \"212 on steroids\" is massively misrepresenting the class. Algorithms are cool and fun and useful for getting a job, which is the complete antithesis of 212. <br><br>Professors:<br>This class was taught by Prof. Makarychev and postdoc fellow Dmitrii Avdiukhin. They each lectured for about half the lectures, roughly alternating. I have heard rumors that Prof. Makarychev was training Avdiukhin to take over this course and teach it in his place, and that's why they were teaching it together this quarter. If true, this is a shame. As someone who attended every lecture (probably 20% of the class attended live), the days where Prof. Makarychev lectured were extremely helpful, interesting, and fun. I left some of those lectures feeling like I might want to explore upper–division algorithms classes and get into competitive programming. He has fantastic slides, he explains things very clearly, and he asks the class questions of appropriate difficultly and helps the class find an answer together in a way that is very engaging. <br>On the other hand, Avdiukhin was by far, the worst lecturer I've ever had for a CS class. He uses Prof. Makaychev's slides but his explanations are all over the place. To understand his lectures, I always have to go back and watch the recordings. I frequently lost interest in his lectures very quickly, despite being on some of the more interesting topics in the class. He also frequently asks questions to the class that don't make sense and waits for far too long when no one knows the answers. At the end of the quarter he experimented with in–class quizzes. They were not graded but he said that in future quarters they will be graded, so attendance will be effectively mandatory. I've seen in–class quizzes work very well before (in 214), but they need to be done right. We had long answer quizzes that were graded by PMs in 214 that got us to think critically about what we were learning. Avdiukhin's quizzes were extremely rushed and asked questions about a topic that we had just received a bad explanation for in 3 minutes. I am confident that these quizzes will improve at least somewhat next quarter, but I'm not sure they're a good idea.<br><br>Content/Assignments:<br>On a different note, most of the content for this class is super cool. Greedy algorithms are easy and a really good trick to know for job interviews. As other CTECs surely say, the class is split into two halves: Greedy and Dynamic Programming. The majority of the weekly homeworks have one coding question and one algorithm design question. For the Greedy half of the class, the coding assignments are easy, and the algorithm design assignments are more difficult, because they require you to also prove your algorithm. In the Dynamic Programming half of the class, I actually found the coding assignments more difficult, because for the DP algorithm design assignments, you don't need to write formal proofs, just design the correct algorithm and explain why it is correct in non–formal terms. The DP coding assignments can be hard. I thought the midterm was quite easy compared to the homeworks. I don't mean to sound cocky but I was baffled by the low average, that might be because most people do not come to class. Haven't taken the final yet but I assume it will be similar difficulty to the midterm based on the practice exams that have been released.<br><br>I spent an egregious amount of time on CS212 so I was really not looking forward to this class, because I heard it has proofs. This is a terrible misrepresentation. The content is way more interesting, and I have written 3 formal proofs all quarter. I wrote ~35 in CS212. Written algorithm design questions are not proofs, they are way more fun.",
                    "40": "The class is challenging, definitely go to office hours. You'll learn a lot, though.",
                    "41": "It's a well taught course about algorithms. Some of the proofs may be somewhat abstract and difficult to grasp, and sometimes the accent of the instructors may cause some difficulty understanding the lecture, but overall was a very well taught course.",
                    "42": "I liked the material of the course, and the teaching was adequate.",
                    "43": "Lots of work",
                    "44": "40% homework<br>25% midterm<br>35% final exam<br><br>do not flop the midterm, the course is gonna get harder afterwards...<br>also, later homework assignments are gonna get harder cause of dynamic programming",
                    "45": "Absolutely brutal course. First half of the class focuses on greedy, last half focuses on DP. The final week–ish of the course is all about complexity and super hard to wrap your head around. Would really recommend giving yourself a good cushion going into the final as the midterm is WAY easier than the final. Would also recommend watching the MIT lectures on DP. Unfortunately lectures are really dry and unengaging and the slides are often confusing. When I went back and rewatched them to study for the final they made more sense but only after I had done a significant amount of review. There is such a discrepancy between grading styles of different PMs which I found completely unfair – my grades on HWs would range from 55 to 100 depending on who graded. A lot of the PMs are unwilling to give points back too. Office hours are a must; go to one of the PMs who addresses it like a class rather than individual help. However it seems that PMs are given poor resources from the professors so they are often unable to fully help you. Rubrics are not provided for the HWs to either the students or the PMs which I personally think is ridiculous. It's very hard to do well in this class; I can only hope it's curved. The only good thing about this class is it's helpful for interview prep so if you can take it sophomore year, you should, and grade turnaround time is super fast. Other than that it was a grind. Also would recommend taking with professors who give programming assignments with the proofs as if you pass all the test cases, you'll get a 100 on that half of the HW (Dimitrii did).",
                    "46": "I mean, good course. Wasn't too challenging. Seems more of a dynamic programming course than anything. Would have liked to see more diverse assignments (rather than just DP and greedy proofs).<br><br>Grading on the homeworks was weird. PMs were very inconsistent.",
                    "47": "I think this class is definitely a must–take, as it teaches you really important topics for interviews, with greedy algorithms and dynamic programming being the two major ones. The dynamic programming homeworks definitely took a jump in difficulty, but if you go to office hours, they're not impossible.  Highly recommend, as I genuinely feel more confident tackling problems involving the topics we saw in class.",
                    "48": "The grading in this course is really harsh uff. That being said you learn a lot about algorithms, but the homeworks, especially the proofs, are insane. Also, please get a head start on the coding homeworks because they start to ramp up later on –– chatGPT won't help you haha. Also, I found the lectures to be pretty dry but the instructors are honestly all very nice and willing to help you if you need it. Not my favorite course, but I think it is worth taking because algs is so important.",
                    "49": "I was really excited to take this class. I love programming and solving problems and thought this class would teach me so much, especially with helping me on with leetcodes. However, I thought this course was near impossible. The teachers and TAs set you up for failure. They are so picky with grading and go out of there way to deduct all points even if most of the work/ideas is right. If you were thinking about taking this class just to learn and become smarter, I would highly advise against it.",
                    "50": "I liked how this class was taught. It’s all in C++ and there are 2 homework questions each week. The proofs were tough but not too bad. Office hours are a must. The exams weren’t terrible and largely based off the homeworks in my opinion. This class teaches you a lot, mostly about dynamic programming. It’s pretty fun, and I think it’s easier than 212 since the homeworks solve actual problems.",
                    "51": "This class requires all your energy. Even when you put all your work into it, the uneven grading system makes it very difficult to succeed.",
                    "52": "This has to be the worst possible rendition of this class. Both professors are extremely bad at lecturing, Dmitrii being especially horrible – every class he taught I had to treat as a write–off that I had to learn myself from YouTube because he could not explain properly. For a class as important as this, the quality of teaching was appalling. The homework was so challenging, so frequent, and could only be solved if you went to office hours and figured out what the PMs and TAs wanted to see since they graded each homework extremely harshly. It was also just horribly organized – the instructors were not responsive at all over Piazza and email, so good luck with regrade requests or general queries. Students had to beg for slides to be uploaded again and again on Piazza and most questions went unanswered. The exams were fair in comparison to the homework. Honestly, I would recommend taking this class with anyone else. Worst class I’ve taken here at Northwestern, not because of the difficulty of the content, but because of the quality of lecturing and the level of organization. The instructors seemed as if they could not care less about this class.",
                    "53": "This was brutal. Homework consisted of a programming question and a greedy/dynamic programming proof each week and each generally took 5+ hours for me to complete. I thought Konstantin was a good professor but really struggled when Dimitri was teaching. Also, sometimes he would be struggling hard to explain an answer to a question that Konstantin would take over to answer it. Algorithms and proofs are very difficult to understand in the first place, but I especially did not understand when Dimitri was talking. Ultimately, I feel like I mostly learned through YouTube videos (MIT courseware is amazing like I forgot that people could teach hard concepts in a digestible, understandable way and there are other great videos on dynamic programming and greedy algorithms since its super common). Greedy algorithms (the first half of the class) was much much easier than dynamic programming. You should try your best to do very well on the midterm or else its going to be very stressful studying for the final. Dynamic programming is very difficult and I did not figure out a way to solidly figure it out as its not as simple as greedy (sort the inputs and do something on it) and each question feels so different. Dimitri is trying to introduce in–class canvas quizzes that count for a grade, best of luck if that actually occurs... You should really just wait for someone else to teach the class. I really bonded with my classmates over how difficult this was which was the highlight of the class.",
                    "54": "Lectures could be improved, and mostly just professors reading off slides.  Sometimes when they do problems by hand, it's on the blackboard instead of the screen, which is out of view of the recording frame to watch on canvas...",
                    "55": "It was actually a pretty good class. The concepts were certainly challenging, but they were really interesting. I recommend you to take this course as early as possible as it may help with technical skills for recruiting (DP, Greedy, etc)",
                    "56": "I learned a lot, definitely, but some of the HWs were way too hard. Some reassessment needs to be done on the difficulty level of the HWs. Also, I found that the PMs were very inconsistent in their grading –– some people would give 100 while others would give 50 for the same response.  Your grade just depended on your luck for who was assigned to grade your proof that week.",
                    "57": "This course is overly difficult. Expect to spend your time in office hours – put them in your schedule as if they were another class you HAVE to attend. The complexity of the HW problems make it a lot harder to keep track of the content taught every week. The content is a lot simpler during the first few weeks until after the first midterm. When you get into dynamic programming, that's when the difficulty of the class exponentially increases. You have to both prove dynamic programming problems and solve them through code, they're each different problems each week so you have to deal with 2 different problems each week.  Try your best to not use late tokens during the first half of the class because they're much more useful during the second half. There are 8 HW problems, all weeks except midterm week. Make sure to do well during the midterm to give yourself some sort of safety bet for the final. Lastly, some content in the class was not tested on for use (divide and conquer) so take note of that.",
                    "58": "This is definitely a difficult class, and it gets considerably harder during the second half of the course.",
                    "59": "I like the balance between theory and practice. Every week there is one coding problem and one written problem.",
                    "60": "This course was made extra hard this quarter. The professors would not upload slides before lecture, which made it super hard to keep up with the course material.",
                    "61": "I had a harder time in 336 than I did in 212 and would not recommend taking it alongside other heavy CS courses. The course primarily focuses on greedy/dynamic programming algorithms and briefly covers flow networks and complexity classes at the end. I found the provided proofs for some specific algorithms to be disorganized and a bit hand–wavey; it would have been nice to have more rigorous examples of well–written proofs for the proof portions of the homeworks, which expect rigor and meticulousness and are graded with a dearth of feedback on how to improve. To this end, I recommend attending office hours to discuss the correct solutions and potential grading mistakes. Doing well on the homeworks (proofs and programming) is essential to cushion the high exam weights on the overall grade (60% this quarter). I did not find the recommended textbook helpful, but definitely attend the discussions, watch the recorded lectures, and make sure you understand all the definitions and proofs covered during the lectures to perform well on the exams.",
                    "62": "horrendous grading on all assignments",
                    "63": "The lectures can quickly get confusing, I think because the professors don't spend a lot of time explaining things. The grading was also overly harsh and deceptive in my opinion. They say they give partial credit, but what they mean by that is if a problem is broken into three parts, they will give you credit for one of the parts if you get it perfectly correct. They don't give any credit if you write the correct value for all but one aspect of a part (hope that explanation makes sense). Given this is a university class and the point is for us to learn, not a competition, I don't think it should be this way. The homework assignments were fairly hard too, and instead of the 6 homework assignments they apparently gave to people I know who took this class in earlier years, we got 8 homework assignments (though the last one was a quiz – but one where you receive the questions beforehand). <br><br>The midterm and final exams combine to 60% of your total grade, and they are graded harshly in the aforementioned way, so keep that in mind and study accordingly. <br><br>As a side note: as a senior who pushed this class off until Winter quarter of my senior year, I don't recommend doing that. Take it during an earlier year. Taking a hard class during your senior year is not fun, and I already have a job and know dynamic programming (the main thing in this class that you get asked in interviews), so the usefulness of the class isn't as salient. I would say take it either winter or spring sophomore year (I don't recommend Fall because hard classes while internship hunting is never a good idea, but definitely do it before junior year internship hunting)",
                    "64": "Overall, the course wasn't good. Most of the time, students were the ones helping each other, with little to no help from instructors, especially on piazza. Questions asked in class were answered by re–reading content from the slides, which was not helpful at all. If I came into this class with little knowledge on DP, I would have been completely lost. Only 1D DP was taught, but homework questions went up to 3D, which left most students living in office hours.",
                    "65": "Absurdly unorganized course. Important and there really isnt another option but to take it.",
                    "66": "This is hands down the worst class I have taken at Northwestern. This is the first class I've taken where it feels like the professors (there were 2!) were actively TRYING not to explain anything. Their attitude was that this material was pretty simple and that we should either figure it ourselves or sink. To some extent all CS classes are like this, but it shouldn't be the case. This class dialed that up to 1000. Office hours felt like the hunger games, where we had to rush to put our name on the board first or the TAs would never get to us due to overcrowding. I was told straight to my face at office hours by the TA that he wouldn't help me beyond the vaguest of generalities. When I asked about code he and another TA said that they didn't know C++. Only one of the 6 or so TAs actually helped anyone. When there are dozens of students waiting in a one hour session, why some of the TAs decided to spend upwards of 15 min with one person rather than helping everyone by writing helpful pointers on the board or even just speeding up is beyond me. <br><br>The professor's slides were clearly created in about 10 minutes at 2 am. One time, prof sent out an announcement at 4 am saying that he \"barely had time for that.” That being writing an answer key to homework. This demonstrates an utter lack of care for his primary job to such a degree that I feel like it should have consequences. Compounding this utter lack of care for his job and his students was the immense language barrier. I could barely understand what the professor was saying in class and often had to rewatch the lecture videos dozens of times to understand even the basics of a topic because there was such little effort put into explaining it. I’m not just complaining because of the language barrier, there was a TA who also had a language issue but because he actually put in effort into explaining things to us, that effort shone through. Because ultimately this course should be about math and coding. <br><br>While the course is advertised as a proof based math class, this could not be further from the truth. I have taken many 300 level math courses (I’m CS and Math) and in this class, they have an utter disregard for defining things in a way that is unacceptable in any serious math course. Professor would randomly introduce terms in the middle of his slides without defining them and use different terms interchangeably. A perfect example of this is “function” vs “problem.” In context, we were talking about functions that take problems and output the solution to the problem. To use this interchangeably with the problem itself is incredibly baffling and confusing. While there was a textbook which was a little better, not everything we covered was in the textbook so this utter disregard for mathematical convention made the lectures utterly incomprehensible. I would even go so far as to say that they were nonsense. The only way you would understand this content from the lectures alone is if you had already studied algorithms. Something which is not true for me as a newcomer to computer science, but was definitely true for a lot of people who took this class. The professor showed an utter lack of care for anyone who did not have the CS background of a senior at MIT. <br><br>Grading wise, 40% was homework, 25% was a midterm, and 35% was the final. Homeworks and exams were graded extremely harshly. I had 10 points taken off for a single wrong word. The only advice I can give to do well in this class is pray to god. In all seriousness, try to study ahead with other resources such as a book, Leetcode, MIT/CMU slides, etc. Find a helpful TA early on while the class is still manageable and go as early as possible. Do not expect the professor to help on Piazza or at office hours. If you’re CS there’s no getting around this class, so buckle up for the worst quarter of your life!",
                    "67": "This class was intense, especially as each weekly homework had both proof and coding aspects. Was extremely difficult and time consuming but I feel like I learned a lot and tbh I made friends through the struggle so if you need more friends take this course i guess",
                    "68": "This course is very well run. There are 2 homework assignments due every week, which is 1 proof and 1 coding section. There is 1 midterm, and 1 final. If you are solid in C++ and have good understanding of Leetcode – esque content, you should do very well in this class. Overall would recommend for McCormick/Weinberg CS students who are taking it to fulfill a requirement.",
                    "69": "Do yourself a favor and avoid taking this section.<br><br>Pros:<br>–––––––<br>C++<br>Borderline tears of joy after passing all test cases after 20 hours<br>Konstantin drawing examples out<br><br>Cons:<br>––––––––<br>Poor lecturing ability from Avdiukhin<br>Repeat responses to questions<br>All–or–nothing grading<br>Slides ridden with errors<br>Slides expect you to be a mathematician<br>All–or–nothing grading + Proofs<br>Huge time commitment on homeworks just for it to be worth almost nothing (~2–3% for each hw)<br>Mental anguish<br>All or nothing grading + a final worth 35%<br>Lack of instructor engagement on piazza (common to see  unanswered questions)<br>Piazza ran by student posts hoping to scrape participation points<br>Slides never posted before lectures or posted consistently<br>Recordings occasionally missing audio<br>Lack of cohesion between TAs and Instructors<br>Somehow managed to be 90% of the workload during a 5 course quarter<br>Prof in next class questioning why people coming from the 336 lecture looks like they had the worst week of their lives<br>Mental anguish<br><br>TLDR<br>Took the class expecting target, got walmart",
                    "70": "The class is not easy,  and you just have to get it over with. The class is also proof heavy but try to take it with this professor as it means you will have a coding assignment in addition to your proof homework. The last few problem sets were very time consuming as well and required nuanced approaches that weren't necessarily covered in class, but still manageable. Sometimes the PM's and professor were very strict with partial credit on hw's and exams so make sure you are studying thoroughly. I think the class could definitely have been taught more clearly as I remember I felt lost at least once a class. And go to lecture, only about 30% of students go, but sometimes they will tell you or give important hw tips during class.",
                    "71": "This class sucked. I get its useful for interviews, but I’d rather learn/practice this stuff myself. Konstantin is a decent professor who is willing to help, but the rest of the course staff was mediocre. In general, many important questions always went unanswered   It was nearly impossible to get a 100 on any of the written homework, they always found ways to take off points. If you asked on piazza why you got points off/regrade request, either they wouldn’t answer, or they might take MORE points off.  Even if you think you understand the homework 100%, go to office hours to get it checked.  Also, most homework solutions were not released, and the practice final exam was only 2 questions (which only covered 1 of 3 big topics on the final).",
                    "72": "Make sure to go to office hours because it can provide a lot of guidance on the homework assignments. The class had some difficult concepts, but the homework assignments are relevant for the exams. The exams are worth a lot, so prepare a lot for those. I learned a lot of concepts through this class and think it helped a lot with writing algorithms and understanding them.",
                    "73": "Really bad course. Dmitri is not a great lecturer. He is not able to explain concepts in a easily digestible manner and offers basically zero help on office hours. Grading is incredibly subjective. The TAs and professors are very quick to give out zeros if one aspect of your solution is incorrect. Piazza is basically a foreign concept to the professors at the rate they respond to questions on there. Possibly one of the worst courses taught at this university by one of the worst professors at this university. Konstantin is okay but not much better.",
                    "74": "When i say the course this quarter was life draining, I mean it. I spent over 10 hours each week for the homework. It was if the students' mental healths did not matter. After the midterm, homeworks became really hard. It's also very annoying how exams were worth 60% when I spent the ENTIRE week just trying to get my homework done. While I did learn, what cost was it at? My whole week was spent doing these homeworks and 30 kids would be at each OH because they could not figure the hw out. Oh my goodness especially the code for either hw5 or 6 was horrible. No one could figure that out. This class drained my mental health and I spent my whole week makig my homeworks perfect only for my grade to be lowered by 60% exams. If anything,  homeworks should be 60% and exams 40% considering how long people spent.<br><br>This class took away my life this quarter. Instructors added more than what should be, and partial credit was very stingy on exams, which sucked. It seemed as if instructors didn't care about students succeeding, just weeding out the best. If you can, please take it with Stull. I can't begin to keep going on about how the changes made this quarter‎ REALLY took the life from me.",
                    "75": "For your sake, please do NOT take this course with either Avdiukhin or Makarychev. The class was taught by both, meaning that the pace of lecture was very inconsistent. It was also incredibly difficult to follow the professors during lecture because of how much they assumed the students knew, and the lecture slides weren't nearly comprehensive enough to actually help us learn (the textbook was however). I also found the homework to be extremely poorly graded because of the TAs/PMs – they took off points for the most random and inconsistent things. And I also heard some classmates talk about getting wildly different grades for homework even though they had similar answers. Another thing that made this class extremely bad was that the PMs didn't get the homework solutions, so they were basically just guessing when helping students. Overall, terrible class.",
                    "76": "I learned a lot in this course. You will come out of this course having a strong foundation in greedy and dynamic programming algorithms. The homework problems (1 part proof, 1 part programming in C++) really help you develop an intuition for writing algorithms.<br><br>The only negative is that sometimes during lectures, the way algorithms were introduced and framed was not always very clear.",
                    "77": "This is the hardest CS class I've taken so far (I took 212 with Evert and 213 with Hardevalles).",
                    "78": "SUMMARY<br>Interesting course content that gives you a much deeper understanding of DP and Greedy algorithms. However, the class can be very disorganized with lectures slides and Piazza support is non–existent. Take this with Makarychev if you can, but you may not get that chance because Avdiukhin will likely be taking over for future classes.<br><br>PROS<br>– Makarychev is a good lecturer! He explains challenging proofs decently well and is clearly very knowledgable in the field. He's the main CS theory person at NU so he's the best person to take any algorithms class with.<br>– Class concepts are very interesting! Especially if you like thinking about algorithms and proofs.<br>– You gain a much deeper understanding of dynamic programming and Greedy algorithms. If you only do Leetcode, you probably wouldn't understand conceptually why these algorithms work until you're forced to write out proofs and recurrence relations for them (like in this class).<br><br>CONS<br>– Avdiukhin is not as good of a lecturer. He could be more confident and frequently doubts his own explanations. Sometimes he doesn't speak very clearly so it's not clear what he is trying to say. That being said, this is his first quarter teaching this class (or any class I believe) so he should get better.<br>– Avdiukhin makes some impossible af problems. We frequently have 3D DP problems and there was one problem which no one could really solve unless they went to office hours (I spent about 10 hours on it).<br>– If you're taking this class with Avdiukhin, make sure you learn at least simple 1D DP beforehand, because otherwise you will struggle. DP is sometimes which takes a bit of time to wrap your head around, so best to do that wrapping before the class.<br>– Support on Piazza was nearly non–existent. Questions would go answered for many days, even important admin–related questions. Instructors and PMs rarely answered questions.<br>– Lecture slides and recordings were uploaded inconsistently. Also, old versions of lecture slides are sometimes uploaded. Make sure you come to class so you get all the content!",
                    "79": "You're getting what you expect here with this class, its just algorithms part 2 pretty much. A little challenging sometimes but manageable for sure.",
                    "80": "Firstly, the lectures were really good. There are some not so intuitive concepts and I think the lectures really helped me to understand them. However, I have a lot of gripes with this class. One frustrating thing is that the proof homeworks are graded by PMs/TAs and the grading ranged widely. Most of the time, the grading was tough, but fair. However, more than once, the PM who graded my homework was unnecessarily harsh. This didn't matter much at the beginning of the class because the homeworks were pretty easy, but after the drop deadline, the homeworks got significantly harder. On that note, the office hours sessions were not great. If you went in to ask about homeworks, assuming that the PM/TA/Prof got to you before the session was over, they would mostly just restate the problem and then say \"I can't give anymore hints.\" <br>The class could also feel pretty disorganized. For the midterm, they gave out a practice midterm, but they didn't give out the answer key until the night before the midterm. Piazza was pretty unhelpful. Most of the time, the only answers you would get were from other students if you got an answer at all. Maybe I am just not good at the material in class, but the class seemed way harder than it was described on the CTECS.",
                    "81": "This class was extremely time consuming and the class gets significantly harder after the first midterm/greedy algorithms. Topics were not taught very well in lecture in my opinion, causing me to spend hours reading the textbook and watching videos. Additionally, the programming assignments later on in the quarter became significantly hard and required hours upon hours in order to solve.",
                    "82": "Very hard course. The professors were very strict about their grading and this could be very detrimental to your course grade",
                    "83": "This class definitely taught me a lot, contrary to what many people told me coming in. I got better at thinking about problems algorithmically and identifying what strategy I should use, which means the instructors did a good job. That said, attendance decreased so much over the quarter the professors used us as guinea pigs for how they should implement mandatory attendance next quarter.",
                    "84": "This course definitely had some useful information, and I would recommend taking it before doing job apps. Learning about greedy and dynamic programming algos was super useful for technical assessments. Unfortunately, the grading made the course quite stressful – each of the homeworks took a really long time (the coding part was great, I enjoyed those, but the written proofs were a lot of work) – and the final being worth 35% of the grade was quite stressful. I enjoyed the course overall.",
                    "85": "such an unnecessarily difficult class –– discussion sections were often more confusing than helpful, piazza posts were mostly met with short/terse responses, exams were absolutely nothing like the practice material provided. the only way to do well enough to stay afloat in this class is to basically live in office hours, and even then the first couple of weeks will be really difficult as you try to figure out which peer mentors will actually help you. for a class that practically half of all cs students have to take, it's incredible how at every step the instructors' goal never feels like they want students to succeed. since this quarter was taught by two professors who alternated lectures, the style widely varied between classes, and nothing ever felt consistent. i would tell you to take a different class for the theory requirement but chances are if you're reading this you don't have any choice",
                    "86": "Not an easy class, but I did learn a lot.  Office hours are very helpful.<br><br>Structure is 1 assignment per week (usually 1 problem is a proof and the other is a programming assignment).  Midterm and final.",
                    "87": "A pretty difficult class. Prepare to spend lots of time.",
                    "88": "I had higher expectations of the course's quality tbf. Very poorly done. Both professors were careless in terms of logistics: they didn't upload slides timely and some recordings didn't have sound (!).  While I am convinced that professors are very knowledgeable, the goal of being a professor is to share this knowledge. They were quiet most of the Office Hours providing virtually NO guidance AT ALL. Overusing the term \"this is trivial\" does not facilitate the comprehension of the material by students. Overall, very underwhelming experience: boring 80–minute no–breaks lectures and lack of approachability made this class insufferable. <br><br>Also, the grading is, well, all–or–nothing for the algorithmic part, of course, I am not surprised. The policy of no collaboration was completely unnecessary given how much people learn and grow by helping each other. This class, if continued by those professors, must really work on their communication skills a ton",
                    "89": "Lol. This class is getting harder and harder every time it is taught, so rip to future students.  I wish they wouldn't try to beat us down with difficulty so that we can actually devote a lot of our energy to actually understanding the content and exploring our curiosities regarding the topics. However, Konstantin was a great professor and spoke very clearly and coherently, and you could tell he wanted to make sure students were understanding the concepts well and were engaged. Dmitrii was new and would teach half of the lectures in the quarter and tbh it was really difficult to follow along with most of his lectures. He spoke very fast and skipped over very important details that are nice to go over for students who have never studied algorithms. Though, he did start improving towards the end. All of the PMs this quarter were amazing tho and wanted to help us succeed from this treacherous quarter of algorithms.",
                    "90": "It is a tough course that all CS majors have to take. Really recommend going to OH each week to get help from peer mentors and start the homeworks early. 1 midterm, 1 final, and weekly homework assignments. This section with this professor has coding assignments in C+ and proofs for homeworks while others may only have just proofs for homework assignments.",
                    "91": "I really enjoyed the content and the grade policy was fair.",
                    "92": "Overall, this is a pretty difficult course, with the second half material much more difficult than the first. The homeworks take a long time, so be sure to get started early.",
                    "93": "Lectures were given by Dmitrii and Konstantin, where they basically switched off so each prof did every other lecture. Both of their lectures are hard to follow, but Dmitrii's lectures are VERY hard, sometimes impossible, to follow. I think most of the class is completely lost for most of lecture. This is the single drawback of the class. All the content you are learning is in lectures, and these aren't great lectures. <br><br>Homework is reasonable. There is one homework each week with 2 parts: one written assignment, and one coding assignment. The written assignment requires you to  come up with an algorithm to solve some problem, and then prove that the algorithm works. The coding assignment is just like a leetcode question, but you have to use C++. The assignments are not busywork and genuinely do help you get better at understanding algorithms. I will say that if you haven't encountered DP before, the DP homeworks will be VERY hard for you. I was comfortable with 1D and 2D DP going in, and still had a lot of trouble with the DP homeworks in this class. <br><br>This class does have a strong support system of PMs and TAs. Lots of office hours, and PMs are very helpful.<br><br>Grading is alright. If you pass all the  tests cases for the coding assignments you get full credit. For the written assignments, your writeup needs to be (1) correct, and (2) very very very clearly explained. It is hard to explain things clearly when the algorithms get more complicated. Also, I think TAs/PMs don't get very much time to grade each writeup, so sometimes they might make mistakes. There were a couple occasions that I got points deducted due to misunderstandings with what I wrote, but I was able to get these grades corrected by reaching out on piazza.",
                    "94": "Very difficult class. Some concepts are abstract and aren't explained in great detail so be sure to find resources outside of class to fill in the gaps. Start the HW assignments early. They are difficult and sometimes not related to lectures.",
                    "95": "Exams are better than I thought. Homework problems were challenging tho, and some times PMs get confused and tell us different things. Professors are not very helpful on Piazza.",
                    "96": "This course is really challenging and comes with a significant workload. The weekly assignments with algorithm problems and proof questions are not easy, and there are also midterm and final exams to complete. I think this course is much less helpful for job interview preparation, especially for algorithm interviews, than I expected. If you're taking this course for job preparation, I suggest practicing on LeetCode instead.",
                    "97": "Do not take this with Dimitrii. This class was the most stressful class ever. There was NO partial credit in grading homeworks and exams. There was one HW that was so hard that it took 30 hours. The midterm was so hard that even Konstantin admitted that it was too much (it was made by Dimitrii).  Konstantin is a better lecturer but overall so much of my learning took place over youtube. I feel like I haven’t been in a CS class that had exams be weighted so much of the final grade. The midterm was worth 290 points?? Like that’s insane. Most people I knew dropped the class after the midterm. I wanted to too, but the only reason I didn’t was because I didn’t want to take the course with Dimitrii next quarter. I had to request regrades on my homework 4/8 times because they either gave no points or didn’t fully read it so they missed details and took off points.  Definitely take the course with a professor that does both coding and written homework. It was so sad because this class is SO PIVOTAL to a CS degree, but I felt like I was fighting for my life instead of being cared about.",
                    "98": "This is a hard class but you have a lot of time to internalize the material.",
                    "99": "The professors were great, however, when you asked something on piazza, things wouldn't be answered. It also seemed like little effort was being put into uploading the slides and the slides themselves.",
                    "100": "Lots to say about this class!<br><br>Tl;dr: Prof. Makarychev is great, it's a shame that he won't teach this class again. Avdiukhin is not a good lecturer and will be making attendence mandatory with graded in–class quizzes. You absolutely should go to class but I don't think the quizzes are a good idea. Homeworks are coding and algorithm design, not \"proofs.\" Anyone who says this class is \"212 on steroids\" is massively misrepresenting the class. Algorithms are cool and fun and useful for getting a job, which is the complete antithesis of 212. <br><br>Professors:<br>This class was taught by Prof. Makarychev and postdoc fellow Dmitrii Avdiukhin. They each lectured for about half the lectures, roughly alternating. I have heard rumors that Prof. Makarychev was training Avdiukhin to take over this course and teach it in his place, and that's why they were teaching it together this quarter. If true, this is a shame. As someone who attended every lecture (probably 20% of the class attended live), the days where Prof. Makarychev lectured were extremely helpful, interesting, and fun. I left some of those lectures feeling like I might want to explore upper–division algorithms classes and get into competitive programming. He has fantastic slides, he explains things very clearly, and he asks the class questions of appropriate difficultly and helps the class find an answer together in a way that is very engaging. <br>On the other hand, Avdiukhin was by far, the worst lecturer I've ever had for a CS class. He uses Prof. Makaychev's slides but his explanations are all over the place. To understand his lectures, I always have to go back and watch the recordings. I frequently lost interest in his lectures very quickly, despite being on some of the more interesting topics in the class. He also frequently asks questions to the class that don't make sense and waits for far too long when no one knows the answers. At the end of the quarter he experimented with in–class quizzes. They were not graded but he said that in future quarters they will be graded, so attendance will be effectively mandatory. I've seen in–class quizzes work very well before (in 214), but they need to be done right. We had long answer quizzes that were graded by PMs in 214 that got us to think critically about what we were learning. Avdiukhin's quizzes were extremely rushed and asked questions about a topic that we had just received a bad explanation for in 3 minutes. I am confident that these quizzes will improve at least somewhat next quarter, but I'm not sure they're a good idea.<br><br>Content/Assignments:<br>On a different note, most of the content for this class is super cool. Greedy algorithms are easy and a really good trick to know for job interviews. As other CTECs surely say, the class is split into two halves: Greedy and Dynamic Programming. The majority of the weekly homeworks have one coding question and one algorithm design question. For the Greedy half of the class, the coding assignments are easy, and the algorithm design assignments are more difficult, because they require you to also prove your algorithm. In the Dynamic Programming half of the class, I actually found the coding assignments more difficult, because for the DP algorithm design assignments, you don't need to write formal proofs, just design the correct algorithm and explain why it is correct in non–formal terms. The DP coding assignments can be hard. I thought the midterm was quite easy compared to the homeworks. I don't mean to sound cocky but I was baffled by the low average, that might be because most people do not come to class. Haven't taken the final yet but I assume it will be similar difficulty to the midterm based on the practice exams that have been released.<br><br>I spent an egregious amount of time on CS212 so I was really not looking forward to this class, because I heard it has proofs. This is a terrible misrepresentation. The content is way more interesting, and I have written 3 formal proofs all quarter. I wrote ~35 in CS212. Written algorithm design questions are not proofs, they are way more fun.",
                    "101": "The class is challenging, definitely go to office hours. You'll learn a lot, though.",
                    "102": "It's a well taught course about algorithms. Some of the proofs may be somewhat abstract and difficult to grasp, and sometimes the accent of the instructors may cause some difficulty understanding the lecture, but overall was a very well taught course.",
                    "103": "I liked the material of the course, and the teaching was adequate.",
                    "104": "Lots of work",
                    "105": "40% homework<br>25% midterm<br>35% final exam<br><br>do not flop the midterm, the course is gonna get harder afterwards...<br>also, later homework assignments are gonna get harder cause of dynamic programming",
                    "106": "Absolutely brutal course. First half of the class focuses on greedy, last half focuses on DP. The final week–ish of the course is all about complexity and super hard to wrap your head around. Would really recommend giving yourself a good cushion going into the final as the midterm is WAY easier than the final. Would also recommend watching the MIT lectures on DP. Unfortunately lectures are really dry and unengaging and the slides are often confusing. When I went back and rewatched them to study for the final they made more sense but only after I had done a significant amount of review. There is such a discrepancy between grading styles of different PMs which I found completely unfair – my grades on HWs would range from 55 to 100 depending on who graded. A lot of the PMs are unwilling to give points back too. Office hours are a must; go to one of the PMs who addresses it like a class rather than individual help. However it seems that PMs are given poor resources from the professors so they are often unable to fully help you. Rubrics are not provided for the HWs to either the students or the PMs which I personally think is ridiculous. It's very hard to do well in this class; I can only hope it's curved. The only good thing about this class is it's helpful for interview prep so if you can take it sophomore year, you should, and grade turnaround time is super fast. Other than that it was a grind. Also would recommend taking with professors who give programming assignments with the proofs as if you pass all the test cases, you'll get a 100 on that half of the HW (Dimitrii did).",
                    "107": "I mean, good course. Wasn't too challenging. Seems more of a dynamic programming course than anything. Would have liked to see more diverse assignments (rather than just DP and greedy proofs).<br><br>Grading on the homeworks was weird. PMs were very inconsistent.",
                    "108": "I think this class is definitely a must–take, as it teaches you really important topics for interviews, with greedy algorithms and dynamic programming being the two major ones. The dynamic programming homeworks definitely took a jump in difficulty, but if you go to office hours, they're not impossible.  Highly recommend, as I genuinely feel more confident tackling problems involving the topics we saw in class.",
                    "109": "The grading in this course is really harsh uff. That being said you learn a lot about algorithms, but the homeworks, especially the proofs, are insane. Also, please get a head start on the coding homeworks because they start to ramp up later on –– chatGPT won't help you haha. Also, I found the lectures to be pretty dry but the instructors are honestly all very nice and willing to help you if you need it. Not my favorite course, but I think it is worth taking because algs is so important.",
                    "110": "I was really excited to take this class. I love programming and solving problems and thought this class would teach me so much, especially with helping me on with leetcodes. However, I thought this course was near impossible. The teachers and TAs set you up for failure. They are so picky with grading and go out of there way to deduct all points even if most of the work/ideas is right. If you were thinking about taking this class just to learn and become smarter, I would highly advise against it.",
                    "111": "I liked how this class was taught. It’s all in C++ and there are 2 homework questions each week. The proofs were tough but not too bad. Office hours are a must. The exams weren’t terrible and largely based off the homeworks in my opinion. This class teaches you a lot, mostly about dynamic programming. It’s pretty fun, and I think it’s easier than 212 since the homeworks solve actual problems.",
                    "112": "This class requires all your energy. Even when you put all your work into it, the uneven grading system makes it very difficult to succeed.",
                    "113": "This has to be the worst possible rendition of this class. Both professors are extremely bad at lecturing, Dmitrii being especially horrible – every class he taught I had to treat as a write–off that I had to learn myself from YouTube because he could not explain properly. For a class as important as this, the quality of teaching was appalling. The homework was so challenging, so frequent, and could only be solved if you went to office hours and figured out what the PMs and TAs wanted to see since they graded each homework extremely harshly. It was also just horribly organized – the instructors were not responsive at all over Piazza and email, so good luck with regrade requests or general queries. Students had to beg for slides to be uploaded again and again on Piazza and most questions went unanswered. The exams were fair in comparison to the homework. Honestly, I would recommend taking this class with anyone else. Worst class I’ve taken here at Northwestern, not because of the difficulty of the content, but because of the quality of lecturing and the level of organization. The instructors seemed as if they could not care less about this class.",
                    "114": "This was brutal. Homework consisted of a programming question and a greedy/dynamic programming proof each week and each generally took 5+ hours for me to complete. I thought Konstantin was a good professor but really struggled when Dimitri was teaching. Also, sometimes he would be struggling hard to explain an answer to a question that Konstantin would take over to answer it. Algorithms and proofs are very difficult to understand in the first place, but I especially did not understand when Dimitri was talking. Ultimately, I feel like I mostly learned through YouTube videos (MIT courseware is amazing like I forgot that people could teach hard concepts in a digestible, understandable way and there are other great videos on dynamic programming and greedy algorithms since its super common). Greedy algorithms (the first half of the class) was much much easier than dynamic programming. You should try your best to do very well on the midterm or else its going to be very stressful studying for the final. Dynamic programming is very difficult and I did not figure out a way to solidly figure it out as its not as simple as greedy (sort the inputs and do something on it) and each question feels so different. Dimitri is trying to introduce in–class canvas quizzes that count for a grade, best of luck if that actually occurs... You should really just wait for someone else to teach the class. I really bonded with my classmates over how difficult this was which was the highlight of the class.",
                    "115": "Lectures could be improved, and mostly just professors reading off slides.  Sometimes when they do problems by hand, it's on the blackboard instead of the screen, which is out of view of the recording frame to watch on canvas...",
                    "116": "It was actually a pretty good class. The concepts were certainly challenging, but they were really interesting. I recommend you to take this course as early as possible as it may help with technical skills for recruiting (DP, Greedy, etc)",
                    "117": "I learned a lot, definitely, but some of the HWs were way too hard. Some reassessment needs to be done on the difficulty level of the HWs. Also, I found that the PMs were very inconsistent in their grading –– some people would give 100 while others would give 50 for the same response.  Your grade just depended on your luck for who was assigned to grade your proof that week.",
                    "118": "This course is overly difficult. Expect to spend your time in office hours – put them in your schedule as if they were another class you HAVE to attend. The complexity of the HW problems make it a lot harder to keep track of the content taught every week. The content is a lot simpler during the first few weeks until after the first midterm. When you get into dynamic programming, that's when the difficulty of the class exponentially increases. You have to both prove dynamic programming problems and solve them through code, they're each different problems each week so you have to deal with 2 different problems each week.  Try your best to not use late tokens during the first half of the class because they're much more useful during the second half. There are 8 HW problems, all weeks except midterm week. Make sure to do well during the midterm to give yourself some sort of safety bet for the final. Lastly, some content in the class was not tested on for use (divide and conquer) so take note of that.",
                    "119": "This is definitely a difficult class, and it gets considerably harder during the second half of the course.",
                    "120": "I like the balance between theory and practice. Every week there is one coding problem and one written problem.",
                    "121": "This course was made extra hard this quarter. The professors would not upload slides before lecture, which made it super hard to keep up with the course material.",
                    "122": "The course was overall a really disorganized experience, I really enjoyed the topics taught and found them to be very interesting but the instructors didn't seem too interested in teaching. Recording occasionally don't have sound, which makes it really hard to look back to review, slides are not always posted either. Piazza posts were seldom the only way to contact teachers and I don't think the professors gave enough practice material  to properly prepare us for what was on the exam. Pertaining to the midterm specifically, the answer keys were given the one day before the exam with the practice exam itself being posted not much earlier, not only was the answer key posted extremely late but the answer key was also missing a page. After taking the midterm, I found that the structure of the midterm was completely different  from that of the practice exam and only later that I knew the practice exams were taken from past classes and the instructors didn't prepare one.  The lack of announcements and communication from the instructors really gave me the impression that they didn't want to teach the class. However, with all that being said, I really liked the materials and found them to be beneficial for industry/interview type questions. Homework was 40%, midterm 25%, final 35%.",
                    "123": "I had a harder time in 336 than I did in 212 and would not recommend taking it alongside other heavy CS courses. The course primarily focuses on greedy/dynamic programming algorithms and briefly covers flow networks and complexity classes at the end. I found the provided proofs for some specific algorithms to be disorganized and a bit hand–wavey; it would have been nice to have more rigorous examples of well–written proofs for the proof portions of the homeworks, which expect rigor and meticulousness and are graded with a dearth of feedback on how to improve. To this end, I recommend attending office hours to discuss the correct solutions and potential grading mistakes. Doing well on the homeworks (proofs and programming) is essential to cushion the high exam weights on the overall grade (60% this quarter). I did not find the recommended textbook helpful, but definitely attend the discussions, watch the recorded lectures, and make sure you understand all the definitions and proofs covered during the lectures to perform well on the exams."
                },
                "school_demographics": {
                    "Weinberg": 46,
                    "McCormick": 35,
                    "Medill": 1,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 13,
                    "Juniors": 51,
                    "Seniors": 16
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 3.55,
                    "student_count": 91
                },
                "student_opinions": {
                    "0": "people will definitely be haters in the ctecs and while i see where they are coming from I think that dmitrii is doing his best. yes his lecturing is confusing but the homeworks felt fair based on what was presented on in class. the grading on them is also fair, although I think that very much depends on the person grading, because apparently some students got many many points taken off for small errors. the exams are also very fair and are much easier than the practice exams he gives",
                    "1": "This is a pretty tough class, but you will learn a lot. As long as you attend lectures and put a lot of time/effort into hw and studying, you will do fine.",
                    "2": "A pretty bad time to be honest. Do not take this class unless there is a significant change in instruction.",
                    "3": "I stopped going to lecture after a few weeks. I think the slides aren't organized very well. There is generally some over arching topic like \"divide and conquer\" for the slide deck, then the deck is just a strung together collection of problems or specific algorithms related to that topic. I think the most effective way to learn with the way this course is set up is to just follow the topics from canvas and use the textbook / other online resources to get the instruction in a way that helps you best. I found the MIT YouTube videos are great for this. It's pretty hard to follow along in lecture, and the way Dmitri teaches tends to feel more like he's hosting a review session for people that already kind of know the material as opposed to introducing and teaching new topics to a class. Some positives: he is pretty understanding as a teacher. There is a lot of flexibility with due dates to accommodate busy schedules / random events that may cause you to submit something late. He's also made some adjustments with due dates based on large–scale confusion and other things.",
                    "4": "Tough course that 100% could be taught and handled better. The prof is hard to understand in lectures so I found myself better off watching the recordings and rewinding parts. The coding assignments were reasonable, but the proofs had variance in grading that seemed to be up to the grader's discretion. <br><br>Office hours were a mess towards the end of the quarter. PMs would reschedule their OHs with minimal warning, cancel them entirely, or sometimes just not show up. The prof addressed this eventually but it was still a headache to work through. Overall my hardest course of the quarter, probably top 3 hardest throughout my time here.",
                    "5": "learned different concepts",
                    "6": "Dmitrii is a very knowledgable professor, he knows a ton about this topic, however, the structure of the course is very odd. The beginning was greedy algorithms which were very intuitive, and then dynamic programming which is a bit less trivial but not very conceptually difficult. Then, it felt like the course just went into random topics that were unrelated and made no sense. The homework is not trivially, and they grade fairly harshly, and it's much more mathematical than coding. There are proofs and leetcode–like questions each week. The exams are more similar to the proof–like questions, and coding knowledge doesn't help at all. However, I thoroughly enjoyed this course and I think Dmitrii is a very good professor.",
                    "7": "The instructor is a pretty poor lecturer – he cannot convey ideas in a structured and orderly manner at all. In class, its incredibly hard to pay attention and absorb anything, and watching the lectures back takes like three hours, as you have to rewind a lot to understand things. That being said, I could see the course being rather interesting if it was more orderly. I certainly learned a lot when doing the homeworks, going to office hours, and watching Youtube videos about the content, which all made it pretty interesting and a lot easier to understand.",
                    "8": "Very useful course, I think all CS majors should be required to take it as the topics discussed are fundamental and pervasive in the field. As for this specific course, the lecture style was not ideal in my opinion. Dmitri had certain lectures he tied back to interview questions which I think is great, however the lectures introducing the theory and topics were often hard to follow. I suggest using the textbook as an aid to supplement your learning. The homework assignments on the other hand were perfect— I felt that they were adequately challenging and really helped reinforce the topic that we were learning.",
                    "9": "The course content is actually great but it can be really difficult to understand the professor. Combined with sometimes harsh grading on written homeworks and long c++ assignments, it is a bit of work but a good class.",
                    "10": "Feels scattered with only certain things like dynamic programming being worth learning. Just leave complexity theory to its own class, I'm never gonna use that again in my life.",
                    "11": "The first half of the class (before the first midterm) went well. Dmitrii taught greedy and DP well and I came out of the class with a strong grasp of those topics. After that, the class went down hill. The content became extremely vague and almost felt forced. We were jumping around topics left and right and had guest lectures where the lecturer was just told to \"teach something\" to the class (or at least it felt like that). Given that this was Dmitrii's first time teaching a class by himself, I think he did a great job. There were a lot of times when students would ask questions and the professor wouldn't understand them and just kinda continue with the lecture. Whether it was nerves or something else, that was a consistently frustrating part of the class. Around weeks 8–9, we had a literal TA meltdown where there were probably 15+ rescheduled/canceled office hours during the week with one of the more challenging HWs of the quarter. Of course, this isn't on the professor, and kudos to him because he handled it well (e.g. extension, emergency OHs, etc.) but it was frustrating. Coming from someone who took this class because of a genuine interest in algorithms and not just job interview prep, I think it's not bad. I think the class will be better going forward once some of the quirks are ironed out.",
                    "12": "Avdiukhin is a decent lecturer, but I wish he drew or wrote out more complicated concepts rather than relying mostly on slides. This was especially so during divide and conquer. The homeworks are fine, and they get harder in the second half of the course. The exams are not too bad. Will definitely take an advanced algorithms class after this one.",
                    "13": "Honestly a super interesting class that was definitely worth taking. I'm also someone who is very interested in CS theory, so keep that in mind, but I found the class super enjoyable. I did find the DP unit to be significantly easier than the greedy unit (in particular, the written homeworks were easier, since the part I found more difficult about greedy algorithms was proving their correctness, which we did not have to do for DP). The randomized algorithms part was fairly disorganized because it was the first time the professor included that topic, so that was not super pleasant because no one (including the PMs) really knew what they were doing on that homework. Overall though, it was an interesting class and super useful! Prof. Avdiukhin was also a good lecturer and really knew what he was talking about.",
                    "14": "This course is basically required for the major so I'm not going to try to convince you to take it or not take it. However, I would suggest that you take it as early as you can. As someone who delayed it to take more systems classes and other things that were more interesting to me, I regret not taking this sophomore year. The class is really good at forcing you to actually write efficient code and provides you with new, better ways to approach interview–like questions.<br><br>Dmitrii is also a great lecturer who clearly totally understands the material. I'd recommend taking this class with him.",
                    "15": "Get started on the homeworks early and go to office hours. You will need it.",
                    "16": "This class was ok, it wasn't as bad as people say in my opinion. Dmitrii was a decent lecturer and the pace of the course was pretty reasonable, except for homework 7, where the material was not well taught before the homework. You'll spend a decent amount of time on the weekly homeworks (one proof and one coding assignment), but there is a flexible late policy. The material can be pretty interesting, I enjoyed learning different ways to solve algorithms and doing the homeworks for the most part (sometimes they were super annoying), but sometimes lectures are pretty dry. Overall, I thought it was an okay course, especially if the other classes you're taking are on the chill side.",
                    "17": "The homework is very challenging. The second half of the course is difficult.",
                    "18": "Tough class, lectures aren't great but homeworks are super helpful for learning material",
                    "19": "This is easily one of the worst classes I have taken at Northwestern. The lectures were very hard to follow and the slides were not of much help either. Any time I went to office hours, everyone seemed lost and I usually left more confused than when I entered. As such, I found myself learning nearly the entirety of the course through various lectures on YouTube(huge thanks MIT and Abdul). Much of the homework was unreasonably difficult, and grading criteria was never clearly defined before a homework, which could lead to significant deductions. If anyone is wondering why Northwestern CS doesn't have the best rep, taking a look at this class would be a great place to start.",
                    "20": "Professor Avdiukhin isn't great at lecturing, and he will mislead you when you ask for him to help you understand the homework. As a CS major, I kind of had to take the class, and I wanted to take the class earlier because I had talked to theory researchers who told me to take this class before being able to do theory research. If you can, try taking it with someone else.",
                    "21": "Definitely the worst CS class that I have taken here at Northwestern. Ultimately, this is a shame because the material is actually quite interesting, and could potentially be useful. But at the end of the day, this class was genuinely the most disorganized class that I have ever taken. The lectures were hard to follow, the PM's didn't often know what was going on, and often office hours were cancelled with little notice, or sometimes no notice at all.  There were multiple weeks where I would go to office hours, waiting for long periods of time for the PM to show up, only for the PM not be able to help because they didn't know the material, which was very frustrating. There was obvious miscommunication between the professor and our TA's, as the TA would assume we knew about certain topics when we had not covered them yet. Another example of miscommunication was during midterm week, when the assigned discussion sections were supposed to be review sessions, but only one of them was, while the other simply reviewed a homework problem. This was quite difficult to work around, especially as these differences in discussion sections were not advertised. In the class's defense, the material is very challenging, regardless of how it is presented. It's just frustrating that on top of the class being challenging, getting help was even harder. Simply put, if you don't need to take this class, don't.",
                    "22": "This class essentially covered three topics: greedy algos, dp, and P/NP. Yes, you can probably learn all of the material in a weekend, but the stretched out pace allows for a very in–depth discussion of all of them. I came into the class with competitive programming experience and already knew greedy/dp pretty well, but the class allowed me to learn how to formally justify the correctness of these algos! Weekly homeworks, usually one proof question and one leetcode–style programming question, were the bulk of the work–––so workload was on the lighter side. <br><br>In terms of teaching, Dmitrii was a wonderful professor who was always willing to answer questions and make sure students didn't fall behind. Lots of students who were unwilling to learn slowed down the lectures at the start, but once they dropped the class moved at a very enjoyable pace. He does have a bit of an accent, but it never hindered my ability to understand what he said in class.",
                    "23": "The topics are very interesting, but the organization of class and lectures made it really hard to follow along. Often times, important concepts wouldn't be explained super well and/or buried in the slides. Still a fairly decent course and I never thought that it was a waste of my time. I appreciated our algorithms being implemented both theoretically and practically. Save your late passes for the last problems if you can.",
                    "24": "This is probably the toughest CS course I have taken here at Northwestern, however, it did not have to be this way. PM's and TA's obviously did not communicate well with the professor, and there were numerous times where either office hours were either canceled at the last minute, or the PM's just didn't show up. Additionally, there were points where PM's did not even know the information needed to help students. This is the professor's first time teaching this course alone, so I will give some leeway there, but I think this class could have benefited greatly from an opening lecture that details how the class is structured, and what the goals and expectations are of students. The subject itself is actually very interesting, but just know that if you take this course in its current state, you will need to spend a lot of time outside of class – going to office hourse, reading the textbook, watching youtube videos – to actually contextualize and internalize lecture subjects.",
                    "25": "This class was tough but not nearly as hard as I imagined. Most of the homeworks were fairly straightforward and the two exams were very fair. Most people did not attend lectures. I like Dmitri as a prof and would recommend this class",
                    "26": "One day, those people will pay the penalty for what they have done. Please prepare the lecture professor, lectures are different from presentations...",
                    "27": "As a grad student who studied algorithm design 7 years ago, I took this course to refresh my knowledge of foundational topics. <br><br>Lecture: Great slides, very interactive (and there are extra points for contribution, although it needs to be a substantial amount). Course Material is great, and the instructor clearly spent a lot of time organizing it. Canvas is extremely organized, and it is very easy to find the right resources. He also provides additional materials to support the assignments and practice exams.<br><br>Every week has an assignment (total 8), each with a proof–based and a programming–based assignment. The assignments are honestly painful; they are great for learning, and you need to follow the class closely to be able to do them. Piazza is constantly buzzing. However, the time commitment on assignments is HUGE; you do not want to take it along with other heavy courses. <br><br>A midterms and a final. VERY VERY VERY TOUGH. There will be a quiz and proof/design questions. You need to know EVERYTHING. Sometimes the questions felt a bit out of the syllabus, but this could be my personal opinion (I am personally not great at recalling geometric formulas off hand) <br><br>The instructor is definitely strict around the deliverables but responsive and will accommodate justified situations.<br><br>Overall, it's an awesome course, and I can confidently say whatever I learned will stay with me for a long time; just be prepared to give it your all if you don't want your GPA to suffer.",
                    "28": "Pay attention during lecture or it’s easy to get lost. The lectures always inform what you need to do for the programming assignment. Start early so you can go to office hours. I found the assignments to be very satisfying and focused.",
                    "29": "This class is mid.",
                    "30": "Take it with the other prof.",
                    "31": "Class covered very important concepts that helps with tech recruiting",
                    "32": "Most people who take this class will probably take it to fulfill the Theory requirement for the Computer Science major, and for the people who are considering taking it with Prof. Avdiukhin, you should know a couple of things:<br><br>1. You'll likely need to use other materials outside of the classwork and even the recommended textbooks if you want to understand the material, as lectures can be difficult to understand and slides are often confusing, being worded weirdly and omitting information.<br>2. Prof. Avdiukhin sometimes changes the syllabus and coursework during the quarter, adding assignments not mentioned on the schedule and changing the content of the final exam. While it is allowed, it's something you should probably know if you're a heavy planner like me.<br>3. While I don't expect it to be an issue moving forward (especially since it was a common complaint), office hours, while frequent, get moved around A LOT. Checking Piazza I counted around 18 different posts regarding office hours being moved to Zoom, rescheduled, or occurring late, with a lot more happening at around the end of the quarter. Admittedly there are enough sessions that it might not be an issue (and of course often external issues happen and sometimes the PM can't make it, which I completely understand), but it made it difficult for me to schedule time to go, as Office hours would often move into times where I had to do something else. There were several times when I needed help on an assignment before the deadline office hours would be postponed to after the deadline, and it's not like I was working on assignments last minute.<br>4. While the late penalty is certainly less harsh than other CS classes (only a 5% deduction on the max grade for each day late, capping at 3 days [which is the latest most assignments can be submitted]), the grading is MUCH harsher. Admittedly the whole point of the class is to teach you how to write efficient code, but if you don't write the correct algorithm for the program the BEST you can do is 20%. The grade isn't being reduced by 20%, but your grade on the assignment will be at most 20%, which is (at least in my opinion) ridiculous.<br><br>If you don't need to take this class and are interested in algorithmic design beyond CS214, I recommend learning outside the Northwestern curriculum. This class is not worth the hassle if you don't need it to graduate.",
                    "33": "Hard class but better than theory. Dmitrii was pretty good at explaining things, but the class does move pretty fast so it's a little screwed regardless. Office hours are your friend.",
                    "34": "More often than not, it was pretty difficult to understand what was happening in the class. Going to office hours is pretty much a must. Otherwise, pretty interesting material if you like algortihms.",
                    "35": "The lectures are not the most detailed, and Dimitri's accent makes it hard to follow what he says. The homework assignments are all very difficult, but moreso because it was not very related to what was being taught in class, besides just being the same concept. I had to learn how to write a proof basically on my own, and there were not many resources besides going to OH, which didn't really help at the end, as I still lost points for assignments. The exams are hard but fair, assuming you already learned the content outside of class. If I had absolutely no idea what any of the concepts were, and if the exams were not curved, I would have done even worse on the exams. Of course the course content is helpful to a degree, as you learn how to answer algorithms questions, yet I still feel unprepared after leaving the class, even though I put as many hours as I did into trying to understand the lectures and feel prepared for the exams.",
                    "36": "Big advantage to people with lots of background in math, as the majority of the class is proof–based algos. There's a lot of inequity in the amount that people actually learn in the prereqs to the class, and Dmitri definitely did the best he could with dealing with that.",
                    "37": "This class is hard, no way around it. You have to take it (unless you're going to do CS 335), so it is what it is in that sense. Nonetheless, the class is very doable if you (a) start each homework very early (and I really mean very early, as you may need a lot of OH help) and (b) go to office hours consistently. You'll want to be consistently reviewing the slides, too, as 80 minute lectures of dense algorithms content is very tough to focus intently on (you're human, trust me you're going to zone out at times during these lectures).",
                    "38": "This course is really tough but extremely necessary. The algorithms learned are very very useful and I’m glad I took this class even if it was incredibly difficult.",
                    "39": "This class is very challenging, but also very rewarding if you put in the requisite amount of work. The weekly homeworks comprise a significant amount of the difficulty in this class; they will thoroughly test your understanding of the material covered in the class, while also keeping your programming skills sharp. Very useful if you want to gain more skills for LeetCode style problems, but beyond that this class also introduces a lot of the fundamental problems in complexity theory that are absolutely crucial in computer science, if you are interested in that subject. Professor Avdiukhin is incredibly knowledgeable about the subject; pay attention to his lectures and follow up with any questions in office hours and you will have a very rewarding experience in this class.",
                    "40": "Class was alright. The exam and homework weren't too hard, but help outside of class wasn't the best.",
                    "41": "This course is very difficult already just content–wise, but it also was not very well taught. The slides and lectures were very confusing no matter how much time you spent going over them, and the homework had very little guidance through either office hours or lecture material. Overall I think this is a very important topic and class to take, but the implementation and the teaching of this course could be improved so so much.",
                    "42": "Learned a lot in this course but was taught very poorly. Professor creates new questions for homework that  none of the staff are familiar with. You must go to office hours or you will not do well in this class. Professor is nice but fails to explain concepts properly in lecture and isn't very helpful in his office hours.",
                    "43": "This class was disorganized, and the course staff (including the professor) were not great at communicating/explaining the ideas covered in lecture. There was one week in particular where the PMs were so confused by the material that they were not able to offer any help on the homework. I really wish I could have enjoyed it more, but quite often I found myself completely eschewing the class materials and turning to random YouTube videos instead (which proved to be more helpful/informative)",
                    "44": "Generally a pretty challenging course. The contents are very important and useful though, but I wouldn't recommend to take with this professor... I don't think he explains things clearly enough also he has an accent so I have to read the subtitles on the recording of the lectures instead of actually going to the class. Good class to prepare for interviews, but the teaching itself wasn't great.",
                    "45": "This class is interesting and likable. Dmitrii was an abysmal lecturer, however, and it is nigh impossible to understand class concepts simply from class. I had to spend time reviewing the slides over and over until I finally got it in time for assignments. Office hours were hit or miss, but some TA/PM's were great and incredibly helpful. Truthfully, this class is just hard, and small issues in it are exacerbated by this fact. If you put your time in and go to office hours, you'll do alright on the homeworks, which are 90% of your time spent in this class. The concepts he teaches are important, but the slides also have other topics listed that only serve to confuse and don't really strongly relate to the central topic. To his credit, Dmitrii seemed to genuinely want to help students in office hours, and not everyone can be a great lecturer. The organization was terrific, and the late policy was nice. When there were issues with TA/PM office hours, a fair extension was provided.<br><br>This class is essentially required, but I didn't hate Dmitrii; I did end up essentially teaching myself everything, however.",
                    "46": "Very interesting material, not very easy to get help. homeworks are quite difficult",
                    "47": "This class was HARD. Each week's homework has two parts: the written algorithmic homework (similar ideas to 212 and 214), and the programming assignment. Programming is usually not too difficult once you get the problem conceptually, but the written part was always very time consuming, especially when it has to all be typed into LaTeX. Dmitri is a good lecturer, though, and I think he works at a good pace, although there were pretty often typos in his slides and exams.",
                    "48": "Avoid taking with Dmitrii if you can, his lectures can be hard to follow. He also added brand new content and assignments to the course and threw the PM's under the bus when they didn't know all of it.  The homeworks aren't as long as 212 (just one proof or written question and one C++ coding question), but they can still take awhile and grading is harsh.  For example, on a programming assignment you can pass 96% of the test cases and receive a 50%. Overall, the material itself is interesting and useful, but the way the class is taught makes it hard to enjoy.",
                    "49": "Challenging course, but you learn a lot. The grading is 50% homework (half programming, half algorithmic), 20% midterm, and 30% final. There is weekly homework for both programming and algorithmic assignments. The programming is 100% as long as you pass all the Gradescope tests. The algorithmic assignments are challenging and have a similar vibe to 212 because there are proofs, pseudocode, and/or explanations. Midterm and final are non–cumulative and have a similar format with 4 questions. The midterm had an average score of 339.9/400. Prof curves the exams a little, and the final grade cutoffs are lower (&gt;90 is an A). You can also get up to 5% of extra credit by participating; the professor sends out a form at the end of the quarter and he will give you credit if he recognizes you.",
                    "50": "Oh, the slides in this class? They’re straight–up terrible. You might vibe with them during the lecture, nodding and thinking you've got it all figured out. But the moment you try to revisit them at home to study? Big yikes! The slides are so badly bad. It’s hard to tell if you’re struggling because of your own learning curve or because the slides are just that baffling. I wish I could upload them here and let you see for yourself—judge how marvelously terrible they are!<br><br>And then there is the homework—oh, the homework! Two comes twice a week and the TAs grade it like it's the final draft of a paper, not algorithm design. Miss a comma? Lose 10 points. Wrong tense? Say goodbye to another 15. It's like they think we’re in a grammar class instead of a computer science course. If you're considering taking this class, brace yourself—unless they change their teaching style, you're in for a long quarter of struggle. If you never felt dumb I bet you would this time.  I wish you luck!",
                    "51": "It was ok. Not a very well–designed class and not taught super well.",
                    "52": "This is an interesting course on algorithms and probably extremely helpful for Leetcode problems. The lectures can be hard to follow, but I think the slides are pretty helpful. There was a bit of a mess–up with office hour cancellations towards the end, which had me kind of annoyed, but Dmitri seemed interested in making changes to prevent it in the future. I don't think the course was horrible, but it wasn't uncommon to visit office hours without getting a question answered.",
                    "53": "Overall, I was disappointed with how this course was taught. The slides should be adapted by the professor instead of using it directly from the previous professor. There were many mistakes in the slides which made it frustrating to study with. TAs were generally helpful although I do feel like Sayak (head TA) was not the most prepared sometimes. Assignments were part coding part proofs/algo design. One thing to note is that your grade on your coding portion does not reflect your actual grade. If you don't get 100, your grade will be dependent on your run time instead of how many test cases you passed so don't trust Grade Scope.",
                    "54": "I'm certain, beyond a doubt, that there are traffic lights if given a chance, that could convey this course's information better than Dmitri did.",
                    "55": "This class is demonic.<br><br>Dimitrii is a nice guy, but it's impossible to pay attention to him during lectures. It's a combination of his accent and him just being quiet. I don't know. I gave up on going to lecture and just watched all the lectures later. <br><br>Look for alternative lectures by MIT or CMU because those lecturers are goated.<br><br>The homeworks are hard. It's 1 proof question and 1 coding question every week. The coding questions aren't too bad and you can figure them out until you get to dynamic programming. The proofs are the worst. The amount of time I spent trying to figure out a problem by drawing on whiteboards was insane. Just build a study group with some cracked people and hope you can learn together.<br><br>2 exams, the midterm this quarter wasn't so bad (on Greedy and Divide and Conquer). Taking final after writing this, but the DP practice tests look terrible, and designing an algorithm for DP is just really hard. Just practice a lot.",
                    "56": "easiest cs course if you have math background. went in with no algorithms knowledge. only hard part is the tedious nature of the proofs on greedy, which goes away in the second half",
                    "57": "Overall, the material was interesting, and it covered a lot of ground. It was definitely challenging, but the TAs were usually helpful with homework."
                },
                "school_demographics": {
                    "Weinberg": 38,
                    "McCormick": 53,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 3,
                    "Sophomores": 47,
                    "Juniors": 31,
                    "Seniors": 5
                }
            }
        },
        "COMP_SCI 337-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 3.5,
                    "student_count": 18
                },
                "student_opinions": {
                    "0": "We need a more clearly and helpful Power point of after class study.",
                    "1": "Very disorganized. I feel like we spent so much time going over basics and random tangents (usually interesting ones, but still) that we didn't really get to dive deeper into NLP. Projects had essentially nothing to do with the lecture and we were kind of the left to the wolves. Chris (the TA) was very helpful and definitely appreciative of all the work he put in.",
                    "2": "I was excited to explore this area after taking ML and DL. However, this course is more tailored towards conversational NLP (rule based) rather than AI/ML based. The projects were nice, but overall the class was not well managed and would often get diverted to random topics like music, physics etc. making it super hard to keep focus, which in turn resulted in me being super distracted in class. The assignments were very vague, but thankfully the TA was extremely good and supported the class through out. Without Chris (TA) this class would have been really difficult to follow",
                    "3": "Course goes over the high–level implementation of NLP but it is up to you and your (small) team to work on figuring out exact implementation. There was supposed to be 3 projects but the last 2 got merged together since due dates kept getting pushed back due to sheer amount of students who couldn't figure out how to get functional code. Unless you want to teach yourself NLP techniques for 11 weeks, or already have advanced experience with it, I wouldn't recommend this course. The professor rambled on a bunch, and is highly influential in the field but seemed disinterested in making sure his students were getting a grasp of the methods we studied. The single TA we had to do a lot of the heavy lifting for the course and was great in communication and understanding, especially with the workload he got. Anyway, there is no set grading scale/syllabus. You will probably have teammates that don't do much, and the final is not talked about until the last week of school, and the professor will tell you just to read the slides because he doesn't record any of his lectures.",
                    "4": "Interesting course. The projects were pretty difficult and disconnected from the lecture material though.",
                    "5": "It's a lot of stuff but it doesn't teach you how to do it in code",
                    "6": "The professor goes on many tangents and doesn't teach content that is relevant to solving the homeworks.",
                    "7": "Lectures were disorganized and often irrelevant to the course/lecture topic. Assignment/project expectations and guidelines were often unclear up until a couple days before submission deadlines.",
                    "8": "The lectures were interesting but sometimes off topic. We had no idea what was going to be on the final. The projects take a long time.",
                    "9": "interesting course, larry is funny but lectures and assignments are a bit odd"
                },
                "school_demographics": {
                    "Weinberg": 3,
                    "McCormick": 11,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 2,
                    "Juniors": 0,
                    "Seniors": 6
                }
            }
        },
        "COMP_SCI 338-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.04,
                    "student_count": 23
                },
                "student_opinions": {
                    "0": "Decent course to get yourself to work on a project that involves some new tech but thats about it",
                    "1": "You definitely get out of this class whatever you're willing to put in. I didn't know anyone else, but my group was ready and willing to do a good and reasonable amount of work. At the beginning of the quarter, everyone submits a project proposal. A few people get selected to share their idea with the class as a potential project, and Kristian includes a few more of his own ideas (some of which might have a client who you work for/with); everyone picks their group (most of which were 4–6 people) based on that list. The attendance requirement was annoying, as most classes were unstructured, and Kristian was absent more than anyone else lol. Additionally, most grades didn't get put on Canvas, so you're a bit in the dark –– but based on feedback from the final day of class, I think Kristian was generally pleased with people's work (and I probably hopefully wouldn't expect low grades for most anyone). Overall, I'd recommend this class as a good way to do some practical programming, which can be absent from many CS classes.",
                    "2": "Interesting course, at first I was really thrown off by it and was ready to drop but stuck with it to work on project with group for the whole quarter and am really glad I stayed. Kris's methods at first spooked me, but he really came around and I think prepared us well in his own way. Overall great experience in this class and recommend to others, even if they are initially unsure!",
                    "3": "Do your own project",
                    "4": "Group project–based class where you are assigned and/or can choose which project you want to work on related to generative AI. Gives you a lot of freedom for what software and how to spread out your time to create the project.",
                    "5": "Take this course if and only if you already know how to do the project that this term will be about (for our term it was to make a bot with the OpenAI GPT API) because you will not be taught how to do it at all and will just be expected to figure it out.",
                    "6": "This course is mainly working on a project with a group; there are not really any traditional lectures. My project involved working with a client company, so it ended up feeling like an internship with some additional guidance/mentoring provided as a result of the course. Overall, if you select a good group and project topic, this is a fun course. The amount of work you do is really up to you, but I would recommend doing the best you can; in this course, you really get back what you put in!",
                    "7": "Just another CS group project class. It's better than the others in terms of not having weekly busy work. Overall, very easy and not too much time required outside of class (depending on how much effort your group wants to put in). However, Prof. Hammond is just...not very nice. Also, if he's addressing the class or giving a group feedback, he'll go on random side tangents and ramble on and on. Be prepared that it's not user–centered design, it's Hammond–centered design. <br><br>tldr: Easy group project class but annoying Prof.",
                    "8": "This class really depends on your groupmates and how you work with them, because guidance and instruction from Hammond is minimal at best. He shows up to class 50% of the time (yet makes attendance mandatory for students) and will often tell you about an assignment or demo the night before you're expected to turn it in/present. That being said, the workload isn't too bad, and if you figure out a good schedule with your group, you'll be able to stay on top of your project and make something pretty cool.",
                    "9": "I'm not exaggerating when I say to Professor wasn't in class half the time. Usually, I wouldn't mind this, but attendance was mandatory. So, instead, we would sit in class 'working' with our groups for 80 minutes. Sometimes the professor would show up halfway through class, and spend 45 minutes critiquing each team over multiple days. If that wasn't enough, some people didn't show up to class (I don't blame them) and the course staff got frustrated and proceeded to mark everyone absent despite the professor himself being absent. It wasn't all bad though. There's little work outside of class, and my team was nice and was the only reason I didn't hate the class. It was nice to have a supportive team and a cool project, and overall I'm glad I took it. Just be prepared to not learn much. But if you're looking for an easier CS class at NU, that'll do.",
                    "10": "I would not recommend taking this course with Hammond. He often insults student's work in a way that doesn't feel constructive, is not super consistent with his feedback across teams, can get angry and passive aggressive, and overall, I felt pretty uneasy anytime he was in class. The structure of class is that you show up and work with your team, so there was not anything that he really taught formally. Sometimes, we had less than 24 hour notice for certain assignments and the TA was unaware of assignment details or when they were due. You spend all of your time with the team you work with, so you should hope to get a good team. Overall, I am proud of my team's work and you will have something to put on your resume at the end of the class, which is nice.",
                    "11": "Very team and project dependent class. Make sure you have project ideas and teammates in mind when taking the course for the best experience",
                    "12": "Very open ended course.  It is project oriented, so the quality of the course depends on how good your group is. Hammond is an okay prof. He is unclear in what he expects from you most times and has a tendency to rant. Grading is completely ambiguous, I honestly have no idea what my grade might be. The work difficulty is going to depend on how difficult your project is and if your teammates know what they are doing.",
                    "13": "If you are interested in building a project, this is the course for you. Professor also allows students to pitch their ideas at the start of course which is fantastic.",
                    "14": "Acceptable CS class if you can't find anything better to take. I had a good group / project topic and we all put in a lot of effort to learn what we needed outside of class, but I've heard this is not the case for many groups/projects in this class. Also the prof doesn't really teach anything and sometimes doesn't even show up, so your experience will vary entirely based on group / project topic.",
                    "15": "Do. Not. Take. This. Course. With. Hammond. He was quite rude and very disrespectful to students and their work. I've taken plenty of classes where professors effectively and constructively criticize work to aid in learning, which I really appreciate, but this class was not one of them. Hammond can be quite inconsistent in what he says, so you never really know what you're supposed to be doing. At the same time, hopefully you somehow know exactly what he means or else he'll get mad and start talking about how much he hates certain aspects of your work. Again, I'm all for constructive criticism, because I do believe that's how you grow as a student and as a developer. I've taken plenty of project–based classes where the instructor provides both positive and negative feedback and truly forces their students to challenge themselves, but Hammond doesn't seem to know how to do that properly.<br><br>In terms of structure, the class revolves around group–based project work where you choose a project idea and build it throughout the course. In theory, doing something like this sounds fun. In the end, that part of the class was definitely enjoyable. I really liked my team, so working with them was a really great experience. You can certainly leave the class with a new project that you can be proud of, and the development process can be pretty fun, too. From this class directly, however, you learn absolutely nothing. There were a couple of random assignments at the start of the quarter that you would not know about until essentially the night before it was due. For the rest of the quarter, there was mid–quarter live demo, late–quarter video demo, and a final presentation.<br><br>Attendance is required, and Hammond made a big deal in the first week emphasizing how important it is that we show up in this type of class. I totally agree that showing up for your demos and the demos of others is very important for everyone. However, other than the couple of demos we had spread out over the quarter, class time is spent doing nothing other than occasionally getting the repetitive and inconsistent feedback from the professor. When we're not doing that, class time is, I guess, just work time? This is work that could be done on our own time, since class isn't really long enough to make significant progress on the project, so I'm not exactly sure what the point of attendance was. Hammond never really made it clear what he wants us to do during class, just that we have to be there. Honestly, I think I was in class more than he was—there were days where he would just not be there and the TA would run the class instead. Hammond wouldn't be very efficient or responsive in providing details on assignments. The TA would often be more lost than we were about assignment details—the only notable thing he really did was take attendance. He was certainly a lot nicer than Hammond though, so I do appreciate that, but the bar is very low in that regard.<br><br>Overall, I ended up not completely hating this class purely because of my great team and my enjoyment for working on software projects in a group like this. However, I cannot recommend this class because of the course structure and the professor."
                },
                "school_demographics": {
                    "Weinberg": 11,
                    "McCormick": 12,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 9,
                    "Seniors": 14
                }
            }
        },
        "COMP_SCI 339-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.37,
                    "student_count": 19
                },
                "student_opinions": {
                    "0": "Seems hard but not that hard to do well on as long as work is put into it.",
                    "1": "Hard. take elec eng 346 instead if u need the credit",
                    "2": "The course went a lot more in depth regarding databases than I initially expected, going far deeper than just learning SQL and diving into what goes on to retrieve data from a query.",
                    "3": "I would describe this as a pretty bad class. The lectures were pretty boring and there was a lot of \"dead air\". I feel a bit bad for saying this but the professors handwriting is distractingly bad and the diagrams she sees were messy and confusing. The homeworks were more or less straightforward, but the labs tended to be quite confusing and took a lot of time. Overall, I found the class to be difficult and uninteresting.",
                    "4": "I think this course is good, but you have to learn most of the material by yourself after class.",
                    "5": "Decent coding practice but otherwise quite difficult compared to the majority of the CS curriculum",
                    "6": "This class is fine, but I wouldn't really recommend taking it unless you're really interested in database design and management. I was thinking I would get more useable SQL experience, and after the labs were pretty frustrating to do, I really regret not taking 310 over this, as they were in the same timeslot.  However, as someone pretty interested in Systems–y stuff, a lot of the later content was pretty interesting to me.<br><br>The fact that this class is in Java, but there's absolutely no Java instruction is pretty frustrating. I don't think very many other classes use Java at NU, so it feels kind of pointless. Debugging will be very frustrating, and setting up an IDE and Github will also be awful.",
                    "7": "This class is a hard course but I enjoyed learning the material. The labs were VERY time consuming so dont start late. Prof was nice and helpful especially during office hours. She provides extra credit for participating in class which is awesome for the final grade."
                },
                "school_demographics": {
                    "Weinberg": 5,
                    "McCormick": 11,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 4,
                    "Seniors": 7
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.03,
                    "student_count": 38
                },
                "student_opinions": {
                    "0": "Taking this class (or maybe every system class) is like taking a part–time job...If you have to take a system course, this course might be easier than the other ones. But if it is not a requirement, DON'T TAKE IT. If you are determined to take DBMS, I think taking it with Andrew might be a better choice (I dropped the other one last year). This course uses the course materials from CMU intro to DBMS course. The project is also adopted from CMU. The PMs are really clueless about what's going on in the coding projects. So they are only able to tell you what's going on in the project solution rather than helping you to debug your code. It really takes a ton of time to work on the projects. Start early!!!!",
                    "1": "Crotty is a really nice professor. He was really understanding about situations going on campus, and was genuinely concerned about students' grades. Exams were tough, projects were tougher. There's very little information in project write ups to go off of, so expect to either spend a lot of time searching through the codebase for functions that should be used or go to office hours to get a lot of help with where to start.",
                    "2": "SUMMARY<br>Take the CMU version of the course (with Crotty) if you want a challenge and you want to work on actual projects. If you have more than 15 hours weekly to dedicate to this course, you'll learn a lot. If you don't have that much time, it may be hell to do well in exams and complete the projects.<br><br>PROS<br>– The CMU C++ version of this course has better course material and projects than the Java version of this class. The Bustub pedagogical database is actually somewhat representative of a production DBMS.<br>– The difficulty of exams and projects will challenge you to actually learn all the content<br>– Andrew Crotty is a decent lecturer. He explains concepts well, even if he is not very engaging.<br><br>CONS<br>– Expect to spend a lot of time (&gt;20 hours per project) trying to understand the large Bustub codebase and debugging strange concurrency bugs<br>– Exams can be pretty difficult. First exam average was 58% and Crotty needed to give both an extra credit project and a curve at the end of the class to push grades up to a reasonable average<br>– A lot of content was cut out of this class from when it was taught at CMU because we have a shorter term and probably because they wanted to make the course a bit easier. A lot of interesting concepts like distributed DBMSes were skipped completely.<br>– Gradescope autograder was often hard to work with because it would fail you automatically if the format of your code differed from the Google C++ style guide, and the autograder would time out and not return any output if a deadlock caused you to exceed the 10 minute limit. Also, local tests do not run properly on non–Linux platforms—tests would pass when they shouldn't, leading to uncaught bugs.",
                    "3": "Lecture slides, again despite covering an extremely large amount of content at a high pace, were very very well made and organized, and were a great resource to study from. Prof. Crotty's teaching is straightforward and easy to comprehend. Projects, though they also could feel overwhelming in scale, were very topical, had extremely well–made and well–documented source code, and were fulfilling to complete.  The course has made me feel like a stronger programmer more than most do. Project instructions / resources provided could be more comprehensive – I often felt fairly lost in the earlier stages of each of these, especially given that there is a vast codebase to sort through and digest.",
                    "4": "The projects were super, super difficult. Definitely the most challenging projects I've had in any CS class here.",
                    "5": "While the lectures/ exams felt reasonable (content was interesting too and manageable), the projects were extremely difficult to manage. This class easily will have 20+ hours of work between lectures/ studying for exams and projects. You learn a lot in the course, and the exams test you fairly. However, the workload will be rigorous due to the projects.",
                    "6": "The content is very interesting imo. However, the course structure is not great. The lectures are suuuuper boring, and it's really easy to fall behind. Especially since the projects build on each other.",
                    "7": "Being taught in cpp was great and the content was in depth",
                    "8": "Professor Crotty's lecture are well–organized and engaging. I think you can definitely learn a lot from this class especially if you are interested in database. However, be prepared to spend a HUGE amount of time writing/debugging the projects.<br><br>The grading scale for this class is as follows:<br>3 Exams –– 60%<br>4 projects –– 40% [for project 2–4, each depend on the correctness of your implementation for previous part and no solutions will be given]",
                    "9": "Do NOT take this course. One of my biggest mistakes as a student at Northwestern. Probably one of the hardest courses I took, and the instruction was extremely poor. I honestly stopped going to lecture after the third week or so because the lectures were not helping me learn at all. First off, the lecture slides are extremely unclear and are structured in ways that are hard for students to follow. Also, the amount of work you have to put into this class is ridiculous. There are 4 projects that each take a minimum of 20 hours combined. The TAs cannot really help you with your projects  since it is so complex that they don't even seem to understand it 100%. BTW you can't move on to the next project unless you get a 100 percent on the autograder for all of the previous projects. So you basically have to be perfect on every project and you have to continuously debug and work on it until it is, even if you're satisfied with the score the autograder gave you. In addition to that, there are 3 exams throughout the quarter. These exams are designed in a way that if you get 1 or 2 questions wrong, you will automatically be at about 80–90 percent. You have to be basically be perfect in order to get a score above a 90. There are so many more things I would like to comment about the course, but in summary, DON'T TAKE THIS CLASS.",
                    "10": "DO NOT TAKE THIS CLASS. I love systems, I really do, and this is not the first systems class I have taken at NU, but this class is just a burden. The exams are far harder than they need to be considering the sheet amount of content that we already need to know. The projects take upwards of 30 hours each because they are in C++ and have tons of hidden gradescope tests that provided zero feedback besides \"womp womp you're wrong\". Exam averages were very low, and the high of the first exam was 80%. This class is built to actively make you do poorly even if you know the course content well. Prof seems very nonchalant about assigning boat loads of work. This is pretty much a ripped off semester version of the CMU database course that gets crunched into a singular quarter.",
                    "11": "Hardest class at Northwestern hands down, in all 30 classes I've taken as almost a rising senior now it's actually insane how big the jump was. DO NOT TAKE IT WITH PROF CROTTY",
                    "12": "Well....this is indeed a systems class. Conceptually pretty straightforward and lectures are quite easy to follow. Exams are well...exams. You'll do fine if you study. Projects (really bi–weekly homework) ask you to implement a specific feature into a database system codebase. Very time–consuming projects (4 total) especially the first one since it's your first time working with that codebase and C++ and you have to fiddle around the codebase. Subsequent projects get easier with experience, but there's still that difficulty and mystery for searching around the codebase to find what you really need! It becomes more of a C++ and codebase project rather than really focusing on DB systems.",
                    "13": "This is a great course, I'd recommend it to anyone studying computer science. It feels like a \"real\" upper level course so be prepared to spend a lot of time working through a large codebase as well as a lot of time learning concepts for the three exams spanning the quarter. That being said, I feel like I learned a lot and got a lot better as a computer science student. Additionally, the class is extremely well run, albeit office hours can be a little full at times, the structure and pacing of the course is great and the level of instruction is also great!",
                    "14": "Course content – interesting, challenging, although not too relevant to what I am interested in I still enjoyed it. Liked the bits of history regarding research papers sprinkled throughout.<br>Professor – lectures were pretty good although you definitely have to rewatch some parts of the lecture because complicated concepts get covered pretty fast. Professor himself is pretty chill.<br>Projects – absolute time sinks (proj 3 and 4 taking 40+hours although ymmv because I assume they would be easier if you've taken OS which I haven't) and OHs will be crammed so don't expect to get that much time for help (I do believe most TAs weren't the most familiar with the projects too). Piazza response time is okay (only had 1 or 2 active TAs though) but the class had some very helpful student responses. I would like to note that the professor did inform everyone that they should be familiar with C++ before starting this course. Project documentation could be improved.<br>Grading/Exams: 3 exams were all pretty hard. I wouldn't say they were unreasonable but it's just so easy to mess up and some of them do require a very solid understanding of the topic (which again is hard to do unless you rewatch the lectures, review the slides, read the course notes). Professor was very nice and gave us a flat 8% boost for grades and offered 5% extra credit on top of that so 13% in total.<br><br>IMO this class is definitely worth taking. Personally I have never been challenged by a CS class this much, but I feel like it was worth.",
                    "15": "This class made me realize that i want to major in chemistry. At this institution.",
                    "16": "Unless you are a systems savante, I would avoid this course. It was so hard. SO hard. I am a senior who has never received a grade below B+ in any other computer science class, and I was legitimately concerned about my ability to pass this class. Unfortunately, when I took this course, we were the first batch of students at Northwestern to do the specific project that we did, so the TAs/PMs (due to no fault of their own) weren't really able to help us debug our code effectively, since they hadn't done the project themselves. The midterms are entirely multiple choice, which sounds nice, but it isn't. Average on the first midterm was 58%, but was curved up significantly. <br><br>Professor Crotty is the one saving grace of this course, which made it slightly less painful. He's knowledgable and generally understanding. He curves tough midterms/assignments, extends deadlines, and makes himself available to help students. That being said, I don't think there is a single person, alive or dead, that could make me enjoy this class.",
                    "17": "Following this course, I now feel that I have a solid understanding of the components that make up a standard DBMS and can now more effectively use these tools.",
                    "18": "As a senior, no class has ever been as frustrating as this class. I want to try to be fair on my review so let me first say the good things about this class: <br><br>– The topic is very interesting specially if you are into databases or data in general and want to learn how things work at a low level. <br>– Slides are awesome and professor Crotty really know his topics and was always willing to answer questions in lecture. <br>– There are CMU lectures in the topics which is great when you want to hear someone else go over the slides (I find it helpful to listen to different people explain the same concepts sometimes) <br>– The class uses an autograder which gives you automatic feedback. It is nice to know your score right away. <br><br>Now what I did not like and why I regret having taken this class: <br>– Grading: 60% of the grade comes from 3 exams and 40% from project (4 projects, 10% each). I hate tests, particularly when they are so heavily weighted. Still, I would have just accepted that that is how it is sometimes if it weren't for my next points.<br>– Exams: The exams are multiple choice and there is no partial credit. The exams were the kind that is designed to trick you and this was shown in having 55% as the median for exam 1. I studied so much for these exams, watched lectures several times, took notes, and yet I could not do well. Maybe this is just on me and fine, but in all my other CS that had exams I performed well with much less preparation so I don't know what to say... <br>– Projects: I am not exaggerating when I say that other than P1, I spent 20h+ in each one of the projects. I feel we were thrown into doing these projects without proper background. Sure the class goes over theory, but it was not nearly enough to complete the assignments. These projects really made me question whether I should be a CS major and I had more than one breakdown over them. I understand sometimes assignments are just hard and I think I would not be so annoyed about that if it were not because they are weighted so little compared to exams. If your projects are going to take that long, at least provide proper support and an accurate grade weight to reflect them. <br>–Project structure: Projects P2, P3, P4 build on top of each other. Did you have a small bug on P2? Sorry, good luck figuring it out or you will not be able to move on (they do not release solutions). <br>– OH: It did not matter the day or time, whenever I went to OH there were already 10+ waiting to get help so if you were lucky you would get 10min of assistance which is nothing given the difficulty of the projects. Not only that, several of the PMs did not have to do these assignments in the previous iteration of the course so they would just don't know how to help (I have to admit that the PMs did get better after P2 in how helpful they were, but time you got in OH just kept getting worse). <br>–Pace: Towards the end of the quarter, we had Exam 3 and P4 deadline separated by 4 days only (really 3 days). Extra credit was due two days after. I know someone might say \"oh but you had time before to work on the project.\" No, I did not. Since the exams are so tricky and weighted so much I decided I should first invest all my time on it and then get started on P4. Also, I was barely getting out of P3.  And yes, extra credits is a \"added bonus\" and the class does not even have to offer it. I disagree. I think at this point it was needed given that people were worried about their grades so much. As I am filling this, I have P4 due in 3 days, and then 2 days for Extra Credit (I will likely not get much sleep during the next 5 days). <br>–OH gain: I have been a PM so I am confused on why there were such few OH for this class. I think every PM only had 2h per week. Just whyyy???<br><br>Pretty disappointed in this class. After the first week I was like \"this is so cool, databases are pretty interesting.\" And, to be honest, they are! but now I am too scared to ever take a db class again after the format and grading of this class.",
                    "19": "Professor Crotty teaches quite well, and the course content is well organized. The projects are very challenging and requires lots of time and energy.",
                    "20": "One of the most time–consuming classes I've ever taken. But, through working with a large code–base and learning important concepts in C++, I've become a better programmer. My advice is: take this class if you have plenty of time in your schedule! The exams were pretty chill though.",
                    "21": "The course did allow me to learn more about databases (maybe a little too much on the technical details and not enough on how to use a system like that). Most difficult cs class I've ever took at Northwestern. Project 2 3 4 all require at least 25 hours of work each. The debugging process can be torturing and mind breaking. The projects are to implement the database management system components mentioned only at higher level in class and it  very much require one's own effort to do the projects. Can bring notes to exam, but exams are still quite difficult.",
                    "22": "N/A",
                    "23": "Crotty is an amazing professor. Very chill guy and super flexible throughout the quarter on administrative stuff. Really enjoyed the projects –– they were more like traditional SWE coding projects than school projects which I enjoyed. Tough exams but they only pushed me more to really learn the material, so honestly a net positive. This is my favorite CS class I've taken so far (maybe tied with compilers with Simone)"
                },
                "school_demographics": {
                    "Weinberg": 18,
                    "McCormick": 14,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 5,
                    "Juniors": 19,
                    "Seniors": 6
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 3.71,
                    "student_count": 34
                },
                "student_opinions": {
                    "0": "This is a very challenging course: the material covers many of the fundamentals in designing a basic database. Writing SQL queries is covered, but not the focus of this class; you will learn about different kinds of hashing, B+ trees, relational algebra, etc., so be prepared to put in the time to learn a bunch of more high level concepts. The labs especially are challenging, so you should always be prepared to start them as soon as possible. Professor Rogers is very nice and willing to help; her office hours are an extremely beneficial way of reviewing concepts you don't understand in class and getting help if you are stuck on any of the assignments.",
                    "1": "Let me be clear, this course is all of the inner workings of a database (memory story, query optimization, etc) NOT how most will interact with databases on a daily basis.<br><br>Jenny, I am sorry but the lectures are very dry and hard to follow at points. You clearly know the material incredibly deeply but there may be a disconnect translating that to people learning it for the first time. For the first time ever, I recommend adding videos that should be watched before lecture, that LIMIT the technical background and are specifically for intuition. Joins, for example, only made sense to me when I saw a video drawing analogies with playing cards. Just a thought.",
                    "2": "The course provides fundamental knowledge regarding how to build a dbms which is  very interesting",
                    "3": "In my opinion this class is invaluable for any CS major. Knowing basic SQL and understanding how databases work at a high level are helpful for almost any project that requires storing data at scale; databases are ubiquitous. Unfortunately, I did find the lectures dry at times and believe that Professor Rogers can improve in the way she instructs and walks through examples. For example, there is a lot of down time when she writes down what she says verbatim on her tablet which could be better spent walking through more examples or clarifying lecture concepts. I do want to give credit where credit is due; Professor Rogers has improved the course compared to past quarters in terms of the exam structure and assignment/lab scheduling.",
                    "4": "I was a little worried based on past CTECs, but everything was organized, graded fairly, and Jennie was enthusiastic about answering questions in class. There were some points I had trouble understanding concepts during lecture, but I was able to watch CMU lectures online when that happened. I would say this is a good course and Jennie is good to take this with.",
                    "5": "The lectures were pretty hard to follow, and textbook had clearer elaborations on the topics.",
                    "6": "This class is pretty easy to get an A in but aside from that, I wasn't a big fan of it. I wish the labs would require decision–making and architectural decisions rather than just implementing a few functions basically line by line from the slides.",
                    "7": "The course taught databases but the material covered was very difficult to follow due to either a lack of precise definitions or just poor examples.",
                    "8": "Professor Rogers is super nice.<br><br>The first lab was great; it taught me SQL. The other labs were tediously debugging a Java project, so it is good to hear that those assignments will be replaced. <br><br>The format of the lectures is largely the professor slowly writing on the board, which is not very engaging.<br><br>I found a few of the concepts interesting, but fewer of them than in other classes. <br><br>Professor Rogers brings a dog to class, which makes the class much more fun.",
                    "9": "As long you as come in with the understanding that this class focuses on the internals of a DBMS and not SQL, this class really isn't that bad to what previous CTECs have said about it.  Also, Jennie brings her dog Teddy to every class, which is great. <br><br>Jennie isn't the best lecturer I've ever had, but you can tell that she tries, which for me , is all that matters. I recommend the CMU lectures and Berkley CS186 lectures if you do need supplemental material to lectures. For a systems class, the labs for this class are not very consuming and are pretty straightforward compared to others I have taken. The exams are pretty easy if you understand the psets.  Honestly, probably the easiest systems class you can take.",
                    "10": "this class can be a lot of work—basically every other week there's a lab due, then a few days later there's a pset due. The labs can take a lot of time to debug and the tests aren't super easy to understand so spending a lot of time on them and going to office hours is a bit of a must. and it's hard to balance doing the labs with the psets, so the best bet is just going to office hours to try and understand the pset concepts and have PMs/TAs explain what they're looking for as solutions. <br><br>as for prof Rogers, i'm not sure why the other CTECs seem to rate Rogers so poorly. she's a really wonderful and sweet person and its very clear that she cares a lot about teaching and making sure students are supported and understand the content. she goes out of her way to help students by staying late after class (intelliJ setup issues, clarifying concepts), answers piazza posts in a fairly timely manner, shares panopto recordings from previous years when the audio for lectures cut out, and has no hesitation during office hours to review examples that were explained in lecture but you might not have grasped.",
                    "11": "This class teaches you about the structure of a database and how they work.  The first two weeks are spent on SQL and the rest is spent on the behind the scenes of a database.  It was cool at times and Professor Rogers is very knowledgable but other times it was slightly boring.  The labs are very interesting and they allow you to help implement parts of a database management system.  The workload wasn't horrible and there are plenty of office hours to get help.  The exams were fair.",
                    "12": "Overall, this course was pretty good. Professor Rogers is very nice, but sometimes the lectures can be confusing since her handwriting isn't the best. The labs aren't too bad, and the exams are very similar to the pset's. Professor Rogers also gives out a lot of partial credit on the exams, so that's a bonus.",
                    "13": "Prof Rogers was lovely. She is so nice and understanding. The material is hard and definitely did not understand a bunch on the final exam LOL. but the grading is very very forgiving and if you're on top of labs and psets your grade will be just fine. go to lecture (its not always super cohesive but that's tough to do in subjects this technically complex), go to office hours and def get a lab partner if you can. that helps A LOT. would not recommend doing them alone.",
                    "14": "This course was really hard (at least for me). Prof. Rogers is incredibly intelligent and super helpful, and you should definitely lean on her for help, because truthfully the lectures don't fully cut it. I think I went to office hours for every single assignment. The topic is just incredibly complex, and it often felt like we were trying to fit far too much information in at once in a way that inevitably ended up leaving some gaps. This feels like more of a failure of the course than of the teaching, but it also occasionally felt like Prof Rogers' expertise in the subject made it harder for her to know exactly how to explain certain things to the class. I think perhaps there should be a necessary pre–requisite that allows everyone to really start on the same page.",
                    "15": "I feel like this entire class is being taught from someone else's lecture notes. Especially for the 3 lectures on cost, I didn't feel like I understood the underlying ideas even after spending lecture time + 4 hours studying + a homework on it. There was no formula sheet, or worked through examples which severely limited my understanding. In addition, the answers to the homeworks are not posted, but instead you get feedback on certain areas that you missed out on. If it had not been for TAs helping me out in OH, I would have no understanding as to why I got wrong what I got wrong and why I got answers right that I guessed on.<br><br>Lab 3 (B+ trees) took me and my partner 45 hours combined because the codebase does not follow any of the clean code principles (one function has 9 INPUTS!!!!) and we had one or two small errors in the code that would only present themselves on the biggest tests possible, making it nearly impossible to tell where we went wrong.<br><br>In order to make up for these shortcomings, the professor gives out a lot of partial credit on questions. I'm not necessarily complaining, but this makes the class much more stressful.",
                    "16": "I think that this class focused on important topics throughout and I enjoyed the material.",
                    "17": "If you pay attention in class, then the problem sets are really easy. Especially pay attention when going through an example. The labs are quite challenging, sometimes even at the conceptual level, so make time for yourself to get help.",
                    "18": "Hard class but the format made it possible to get a good grade. 4 problem sets, 4 labs, and 2 tests",
                    "19": "The curriculum itself felt very disorganized. In databases there are so many different ways to something, and this course goes over them all. While this is a good thing, it wasn't really made clear how these concepts related to each other, such as whether they built off each other or were competing alternatives, which made understanding the whole course content a little difficult. The professor also seemed to be disorganized with her notes, seemingly reciting things off the top of her head for planned lecture content, which lacked rigor and sometimes had to be corrected after the lecture.",
                    "20": "This is a hard class. Jenny is a very nice person, but her lecture at times felt disorganized and hard to understand. I'd prefer to have all information in the slides instead of her handwriting the most important parts, because it's hard to read the handwriting and takes time away from class. The labs are reasonable but take a lot of time, so start early. The psets are okay but the lab with the psets means there's always something due for this class."
                },
                "school_demographics": {
                    "Weinberg": 14,
                    "McCormick": 20,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 12,
                    "Juniors": 17,
                    "Seniors": 3
                }
            }
        },
        "COMP_SCI 340-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.04,
                    "student_count": 50
                },
                "student_opinions": {
                    "0": "I thought this course was really interesting. I highly recommend taking it with Esteban, he is good lecture and very nice and understanding.  The projects are really time consuming, and since there are so few PMs for the class, if you get stuck you can't always get the help you need. Start them as early as possible and make sure you have a good partner. The exams are very easy and are both open notes and book. The extra credit project is also pretty easy (especially compared to the other projects) and its 22% bonus on your grade, so if you do it you're pretty much guaranteed an A.",
                    "1": "Solid course that covers important concepts that every CS student should know. <br>– HWs were slightly annoying sometimes, but not awful. <br>– Projects were straightforward and enjoyable<br>– Midterm was easy (includes Multiple Choice.) <br>– Extra credit allows you to get a total of 122% so you can skip the final if you want.  So, you never really have to worry about your grade which is nice<br><br>My only complaint is that the course content is sometimes mundane. TCP, routers, SSL, etc. are not the most interesting concepts in the world, but they're pretty important so it's still worth taking this class.",
                    "2": "Prof is great! He somehow made a hard class very interesting, and learned a lot. <br><br>You'll spend time – but I promise you it will be time well spent!",
                    "3": "I think this is the easiest systems class mostly because there are so many easy points in this class",
                    "4": "Learned a lot. Important subjects as a CS major. Grading is good,  projects might be challenging. SHOULD TAKE THIS CLASS!",
                    "5": "I personally found it pretty interesting to see the mechanisms behind the internet, even though it seems like magic at first glance.  I'd recommend taking this class if at all possible. The concepts learned here are pretty important",
                    "6": "Great class. I learned a lot. Heavy course load as projects can get difficult. Start them early. Short answer homeworks were useful to check understanding. Professor Carisimo is a very kind and understanding person. One of the best professors I've had at NU. TAs were also incredibly helpful.",
                    "7": "This course seemed really hard, but in the end it turned out to be pretty doable. The projects were a bit tough, so definitely make sure to set aside lots of time to work on those with your partner. Also, make sure to at least try the extra credit! It’s super worth it. <br>I found the content really interesting, and Professor Carisimo is a very engaging lecturer. I enjoyed his teaching style and how he explained the history behind how the networking practices common now came to be. <br>Overall, I thought this course was pretty great!",
                    "8": "Good class. Professor Carisimo is a great professor!",
                    "9": "Definitely have to start early on projects. Professor is nice and offers 22% extra credit and also extra credit on the midterm (which is open note). However, class lectures are not recorded and the TAs can be very slow to respond on Piazza.",
                    "10": "Good stuff to know. If you want a guaranteed A, take it with Carisimo. His tests aren't bad and there's a lot of extra credit, so anyone who wants an A badly enough is almost guaranteed to get it.",
                    "11": "Pros<br>– Incredibly useful course, probably the most useful 300–level CS class you can take apart from Operating Systems. Understanding the networking stack is essential to most software engineering roles, since everything touches the internet in some way.<br>– Carisimo generally does a good job lecturing, and I felt somewhat engaged during lectures. That being said, some explanations could be a bit unclear, but watching Tarzia's lectures fixes any misunderstandings.<br>– Projects are awesome and very relevant. Not only do you learn a ton from them, they also become good resume projects (especially the TCP clone project and network scanner project). Yes they're time sinks (my partner and I spent about 20 hours on each project), but the learning makes them worth the struggle.<br>– Because of the extra credit project worth 22%, it is very possible to get an A in the class even if you totally bomb the exams. Make sure you do the projects properly and write thorough tests so you can secure a good score on them, and getting a good grade should be straightforward.<br><br>Cons<br>– Carisimo doesn't always understand students' questions or give a relevant answer, which was sometimes frustrating.<br>– Some content was cut out from a previous iteration of the class under Steve Tarzia. While this was probably inevitable considering that Tarzia recorded his lectures online (so he didn't answer any student questions and could cover more content), I do wish it could have been covered somehow.<br>– That being said, Tarzia's online lectures are an incredible resource, especially when reviewing concepts you don't understand or missed. Also, Tarzia tends to explain concepts more clearly than Carisimo.",
                    "12": "Good class, interesting content. Assignments can be challenging, but there is a lot of extra credit, which is nice. Overall, learned a lot!",
                    "13": "This class is a lot of work, but it is really easy to get an A if you do it. There's an extra credit project that everyone should do (adds 22% to your final grade) which gives a lot of wiggle room. Homeworks are long and tedious, open note/book exams. Carisimo also was a great lecturer and makes the content very easily understood. Content is definitely helpful if you're getting into Network engineering.",
                    "14": "Esteban is great! Take this class if he's teaching it and you're remotely interested in computer networks. His passionate for networks and teaching could be felt every day of this 9:30 class, which was honestly impressive. He was also very understanding of students, and would tone it down when we were clearly tired lol. The assignments definitely aren't easy either. The homework/project schedule led to some weeks being very, very hectic when combined with other classes. The assignments are spaced pretty easily within the class itself, except when we had a lab due the night before the first midterm.<br><br>The labs are in Python, and this is not a coding class at all, so expect to learn about sockets and other networking related libraries for yourself. You'll also definitely want to know regex or get a partner who does :)<br><br>At the end of the day, though, you'll do amazing in the class if you put in the effort, because the final optional project is bonus worth up to 22% of the total grade. I had over 100% going into the final lol",
                    "15": "It was really interesting learning how the Internet works, although the labs do take quite a bit of time.",
                    "16": "Course is interesting but classes were not very well organized.",
                    "17": "Very interesting course – would reccomend",
                    "18": "This was probably my favorite CS class I've taken at this school so far.  I think it uses the perfect amount of each concept you learn in all prior classes, and it definitely feels applicable, intuitive, and real–world. Highly recommend taking it with whoever you can. <br><br>The workload is pretty tough. The homeworks go pretty smoothly, but the projects take a decent amount of time and are hard to debug. Professor Carisimo is a pretty generous grader, but sometimes there are unexplained discrepancies in how the autograders work that make you lose a few points here and there.",
                    "19": "This class is definitely a must take. Aside from being super helpful if you want to go into low–level or backend development, its just cool to learn about how the internet works. Your grade consists of homeworks, projects, participation, and exams. You have 4 homeworks spread out throughout the quarter. The first few homeworks are very annoying because they consist of multiple parts where some of those parts are full–blown mini–labs (called Wireshark labs). The Wireshark labs are basically busy work and are meant to kinda just show you that you can see the stuff we talk about in class happen in real life. The rest of the homeworks are pretty good conceptual questions that you can solve with lecture slides + google. The projects are surprisingly non–trivial. The first one just exposes you to http requests and the http protocol. The second one is building a simplistic version of TCP. The third one is implementing routing algorithms. The fourth one is completely optional (and gives more extra credit than the final exam is worth) and is using various tools to fetch website information. Projects can be a bit tricky sometimes, but its in Python (for whatever reason). For whatever reason, I feel like this class tries too hard to be like a discussion–based class. Lectures are not recorded and participation is a factor in your grade. Thankfully there are old 340 lectures on Panopto and you essentially grade yourself on participation. I can personally attest that you can do very well in the class from watching the old lectures, but it'd be nice if they recorded lectures throughout the quarter.",
                    "20": "Difficult but very interesting course. Very solid overview of real–world networking at several levels, and introduction to useful networking libraries and tools. Textbook is very helpful for both theoretical and practical assignments, unlike some CS courses. Programming assignments are not discussed at all in lecture so be prepared to spend some time on them getting familiar with the problems and libraries if you haven's seen them before. Professor Carisimo was excellent––good lecturer, clear answers to follow–up questions.",
                    "21": "This class does a great job of teaching networking fundamentals for computer scientists/programmers. You go through the 5 OSI networking layers and learn about them, what they look like in the real world, etc. There were 3 HW projects for us (and one optional project for extra credit), 4 written/typed homeworks, a midterm and a final (open book, open note, no electronics). I really recommend this class not only for the systems req but also just in general, it does a job to help you understand how the Internet works and how computers interact in networks. Professor Carisimo is great as a lecturer, I never thought they were boring (as far as lectures go) and he is always looking to answer questions and make sure that everyone understands what he's teaching. He also designs the assignments and exams in a way that they're really just looking to make sure you understand the content and not trying to trick you or anything. All coding is done with Python.",
                    "22": "I really appreciated the organization of the class and how it presented the information.",
                    "23": "A difficult but rewarding course that CS majors should take. You learn about how the internet/wifi works, how computers communicate, the protocols that allow this, and the technological advancements that have gotten us to where we are today and where they are going in the future. Networking is at the foundation of all computer applications today, and understanding these concepts will greatly strengthen your knowledge of the tech industry and your approach as a coder. The class have 4 labs, 4 homeworks, a midterm, and a final. The workload for this class really varies, some weeks its busy, other weeks its fine. The labs take a lot of time, but you can do it with a partner. Lectures are not recorded but and old prof for the class (Steve Tarzia) has the lectures recorded on YouTube.",
                    "24": "Getting an A in this class is not difficult, just a lot of work. The labs can be very time consuming but sometimes they were interesting. If you put the time in to all of the labs, your grade will take care of itself. The lectures were very okay and the slides were alright. I felt that most of the course was very rushed and that we could have spent more time on just about any part of the course. But since most of your grade comes from projects and homework, you can get by without understand everything super well.",
                    "25": "Great course. every swe should take this course. Exams are not that bad. Time consuming but easy–A",
                    "26": "Take this course before you graduate. Projects are very doable and an A is very manageable. Professor Carisimo is a good lecturer. Auto grader is questionable."
                },
                "school_demographics": {
                    "Weinberg": 10,
                    "McCormick": 37,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 5,
                    "Juniors": 24,
                    "Seniors": 13
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.88,
                    "student_count": 73
                },
                "student_opinions": {
                    "0": "Take this class seriously it will help you learn",
                    "1": "homework and going to class will be fine in terms of doing good on midterms, projects are hard but they aren't really tested on midterms.",
                    "2": "This class was not the best. Never finishing lectures, barely making it halfway, constant delays on homeworks, and projects had horrible instructions. The prof is incredibly kind and fun but thats about it. I don't think he ever set up his OH or ever answered a piazza question. Other note, lectures are not recorded but not like it's worth going to class anyways. <br><br>The class has 4 homeworks (20%), the first including Wireshark labs, 3 projects (50%), a midterm (10%), a final (15%), and an optional project for an additional 22%. The last 5% was a free participation grade. You don't even need to show up for this but you can get even more extra points if you actually do participate. <br><br>The homeworks are long and tedious, the projects are cool but the writeups suck, but the midterm was actually quite easy. <br><br>I got by just watching Steve Tarzia's lectures on YouTube and reading the textbook. If you can study on your own this class has A LOT of awesome, cool material. Again, just look up Tarzia on YouTube and watch his lectures instead. I enjoyed the textbook and would recommend as well.",
                    "3": "I loved the professor, he was awesome. He made lectures super fun and engaging. The projects take a ton a ton a ton a ton a ton of time to complete though. There is ample extra credit though so you get an A if you do the work, but the work is upwards of 15 hours a week and the grade on projects from the autograder are often much lower than what you expect given the tests you pass on your own.",
                    "4": "I found it really interesting, the textbook is super helpful but doesn't cover everything so you will need to have lecture notes as well for the exams. The homeworks aren't bad but the projects do take a big chunk of time, so get started early.",
                    "5": "Mountains of extra credit and the content is cool. Watch Tarzia's lectures from COVID if you want a smoother ride.",
                    "6": "class was stimulating and well structered, I learned a lot personally",
                    "7": "Learned many important things in this class. Really appreciated the extra–credit opportunities too!",
                    "8": "Kuzmanovic is a pretty good lecturuer. He tends to go off on tangents though.<br><br>My main complaint is that the homeworks felt completely unrelated to the class material. First of all they were all in python (which is usually fine, but when you're trying to use C–like structures its quite difficult). And they just felt like busy work a lot.<br><br>Overall a easy class. There's a 22% EC project too that's not difficult. I would take it again.",
                    "9": "Very useful class that teaches us about the whole internet architecture. While the knowledge you learn from this class may not directly apply to what you do, I believe that it is very useful to know how the internet works. Projects can be tough but if you have a good partner, then it is managable. TAs are very understanding as well!",
                    "10": "A part of me wishes that we didn't have the final optional project that could boost our grade 22%, since it kind of makes it so that no one in the class needs to take the final exam to get a VERY comfortable A in the class. But on the other hand, grading was very lenient so I won't complain.",
                    "11": "I absolutely loved this class! I would highly highly recommend. It is pretty easy to get an A (the projects are very time consuming but there are only three and they are doable if you don't leave them to that last day) and then there is 22% extra credit. I learned so much about the Internet and I feel like it really rounded out my cs knowledge. I also loved professor! He always went out of his way to make sure that he connected with all of us and he seemed truly so invested in our success. Probably my favorite CS class I have taken here at Northwestern.",
                    "12": "This class is a lot of work (homework’s projects and exams). Lots of extra credit though.",
                    "13": "The class was really interesting and the professor clearly cared about what he was teaching and was passionate about it. He gave pretty generous extra credit so even if you didnt do great on the exams you could end with an A.",
                    "14": "This is a very important class that teaches fundamentally important content. The professor isn't the best but Steve Tarzia has great supplemental lecture videos on Youtube. Overall, a must take class that is time–consuming but worth it.",
                    "15": "This class is harder than other CS classes, but I'd say it's the easiest of the Systems requirements. There is a whole extra credit project, so it's easy to make up your grade. There's also extra credit on the exam, and exams are open book, so not that hard. Get a good project partner, and solo homeworks are anyway pretty doable. Good class and interesting too! Take this out of the systems classes.",
                    "16": "Well this was the most work I've done for a class. I think it was definitely one of the most practical and interesting CS courses I've taken, it is just in a league of its own in terms of workload. It's not the hardest class conceptually, the course staff just demands a lot from you in the hws and exams. Also, the projects are some of the most open ended CS projects I've done. They each take tens of hours to complete and have very vague requirements. Students or PMs are not given test cases so it is up in the air whether your complex solution to the prompt is correct or not. Only take if you are willing to put in part–time job level hours, otherwise steer clear.",
                    "17": "This course is very useful if you know nothing about networking. The homework are boring busy work but the projects are very interesting and really help you understand what's going on under the hood. The assignments are hard, but the grading is easy. Exams have extra  credit available and there's an entire extra credit project that counts for +20% of your grade. Kuzmanovic goes on too many tangents during lectures but he's a fun lecturer. Overall, I highly recommend this course.",
                    "18": "Overall, this course goes through a lot of material, and the homeworks and projects can take a while. However, they are very useful and helped me learn a lot about networking.",
                    "19": "Put all your time into the projects because it turns out the Internet is complicated and implementing the Internet is really hard",
                    "20": "This class was a lot of work. Each project takes a while and there was only about 1 OH a day. The class material is pretty interesting though so I do recommend taking it. There's a midterm and final, which were both open note so they were fine.",
                    "21": "Lowkey a tough class but the extra credit in 340 is great",
                    "22": "A lot of material to cover but there's also a lot of extra credit. Kuzmanovic is funny and good and teaching but I recommend supplementing with Tarzia's lectures on YouTube.",
                    "23": "Prof is funny as hell. This course is basically journeys down the networking stack starting with the most abstract layer. You learn the basics of all the common protocols at each level of the stack, with a small segment at the end talking about how security is handled. The content is really interesting and not hard to understand if you're good with abstractions. The projects don't take an unreasonable amount of time and the homework assignments are only slightly annoying (they get better). Depending on how they grade it in the future, it might also be a free class because of an extra credit project whose credit gets directly added to your final grade.",
                    "24": "Some of the projects are tricky, but there's a ton of extra credit so it's easy to get a good grade. Prof. Kuzmanovic is hilarious and gives engaging lectures.",
                    "25": "Professor Kuzmanovitch is one of the best professors I've ever had at Northwestern. Not only is he more than qualified to teach about networking, but he also makes the class super entertaining. He wants to see students succeed. The homeworks are not too hard and the projects can take some time but are not conceptually complicated. The exams are very fair. He gives a 22% extra credit project thats very reasonable, so it is very hard to get anything but an A in this course. Exams are worth 10% and 15% each. The content is incredible and will make you a better software engineer.<br><br>TAKE IT!!!!",
                    "26": "I came into this course expecting it to be pretty boring, and had very little specific interest in networking, but was surprised to find the subject incredibly interesting. The projects were all actually quite fun, programming exclusively in python took the edge off a bit and made everything less dense. All of the projects were the perfect combination of open–ended, allowing you to mostly develop your own solutions, but also specific in their instruction to the point where you were never left confused as to how to begin your approach. the difficulty of the projects lied in effective implementation rather than broad algorithm development, and I find that really fun. the homeworks were pretty consistently quite boring, but surprisingly cemented the class info in my head better than I anticipated, and they got me to actually read the textbook, which was written really well.",
                    "27": "This course had a relatively easy grading scheme but still had some challenging assignments that made you really understand how things worked.",
                    "28": "This was a great class, and a must–take for any CS major. It's a little bit more work than other classes, but the projects are very doable, and with the 4th project extra credit, it's not difficult to get an A in this course.",
                    "29": "The projects help me to understand many concepts and protocols.",
                    "30": "340 is a good class and covers some great material. That being said, the workload is on the trivial side and I personally found the speed of instruction a little bit lacking.",
                    "31": "Fun class overall. Homeworks are a bit heavy, but projects are fun and the grade is easy. Exams are open non–electronic materials, and realistically don't matter much, as the optional Project 4 is an additional 22% on top of 100% of your grade. Important class, and I can see myself using the material, but maybe a bit unserious.",
                    "32": "The exams aren't super unreasonable, they're open note and open book, but you should study a decent amount since grading can be a bit specific at times. There's 4 homeworks, 3 projects, and an extra credit project. WORK ON THE PROJECTS AHEAD OF TIME, they seem a lot more unassuming then they actually are so make sure you're giving yourself enough time to work on them.",
                    "33": "Imo this class was worse than it could've been. It's a super useful and interesting topic, but lectures felt a little unorganized and the projects were prone to time–consuming (like, very time–consuming), headache–inducing bugs. PMs also aren't super helpful with some of the Piazza responses, but then again, I never private–posted so maybe they'd be more specific in those cases. There's generous amounts of credit though so the final grade shouldn't be a huge concern. Professor Kuzmanovic was hilarious though and super knowledgeable on the topic; I imagine he'd be pretty fun to work with closely as like a PhD student.",
                    "34": "Networking is an extremely interesting topic, and I really enjoyed learning about it learning how the internet works. The projects are very time consuming, however it is very easy to get an A in the class if you put in the work as there is a lot of extra credit. The 4th project was optional extra credit that could increase you grade by 22%, so many kids had well over a 100% in the class. <br><br>The Professor is pretty uninvolved in the course as the TAs pretty much run everything outside of lecture as the professor doesn't have office hours and is never on Piazza . This course was previously taught by Steve Tarzia and all the lecture slides, homeworks, and projects are reused from when he taught it. Additionally, we were like 1–2 weeks behind on material, so all the projects and homeworks kept getting pushed back. <br><br>Overall, I really enjoyed this course but I recommend taking it with the other professor if you have a choice.",
                    "35": "This course is very interesting, and will teach you some very important fundamentals about how computer networking and the Internet in general works. The lectures can be very dense, but the professor does a good job of breaking down the course content into an easily digestible manner. The projects can be tough, but they are also very interesting once you understand what's going on. I would highly recommend this course if you are at all interested in learning more about how the Internet works.",
                    "36": "This is an awesome class with an incredibly engaging and knowledgeable professor. Lectures were super entertaining and also informative; personally would recommend at least skimming textbook chapter before lecture to have a better idea of what's going on. Projects are really hard–definitely utilize office hours with the TAs for the first two; you're also not given a grading script so you basically submit (with the exception of project 3) without having any idea how you'll actually do–but it's super easy to get an A in the class. There are 3 required projects and one extra credit project worth 22% of your grade. The midterm and final are 10% and 15%, respectively, and the extra credit project is really easy, so if you do really poorly on an exam or project or HWs, you will still be fine. HWs are long and tedious but definitely help you understand the content. Can't recommend this class enough, great course for the systems requirement.",
                    "37": "Professor K is really good at making the class energetic, but it does deviate the class' focus in a lot of instances when jokes are made. The labs are definitely lengthy and I would recommend starting early on them for sure, but they definitely make you learn a lot about how TCP, server &amp; client, and routing works.",
                    "38": "Homeworks are good, and get easier over time, mostly because there's a lot of Wireshark in the beginning. Start on the projects early, and you should be fine. Highly recommend the extra credit project.",
                    "39": "I think this course is probably the easiest A in NU's CS curriculum: the class is out of 122% and it actually ends up being more than that due to even more extra credit being available. I think over 50% of the class could've got a 0% on the final and still had an A . That being said, I still learned a lot in this course and it definitely takes you from the highest level of the networking stack to the lowest level very in–depth.  Kuzmanovic is a good lecturer and a very funny, engaging professor.",
                    "40": "The projects and homework for this class are pretty time–consuming, so plan ahead for these to make sure you do well.",
                    "41": "I would suggest you take this course if for grades or for requirements, but DO NOT TAKE this course if you expect good learning experience.",
                    "42": "Class was weirdly organized, almost every assignment got its deadline pushed back. I also felt as though the homework wasn't helpful.<br>The projects are very tedious but also the most interesting part of the class, and I learned a lot from them. They are short in terms of code length but also very hard to implement. <br>The professor was very funny."
                },
                "school_demographics": {
                    "Weinberg": 22,
                    "McCormick": 39,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 2,
                    "Sophomores": 19,
                    "Juniors": 27,
                    "Seniors": 10
                }
            }
        },
        "COMP_SCI 341-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.85,
                    "student_count": 61
                },
                "student_opinions": {
                    "0": "Great course!",
                    "1": "The professor can be very annoying during class and kind of babies his students. Class is very easy, but if you want to actually learn about network analysis, don't take this class. Very basic level class – all code is given to you, simply analyzing graphs is the only work on the weekly labs.",
                    "2": "My dreamTeam allowed me to complete the project, but it did not create a dream team, so do not rely solely on that to create a good experience.",
                    "3": "the 3–hour lectures suck. The content is pretty interesting and Contractor is a great professor and lecturer. Though the attendance is pretty strict, lots of cold calling, you HAVE to sit through the 3–hour class most times and can't be late.",
                    "4": "Highly highly recommend taking this class! Nosh is probably one of the best professors on this campus and he makes the content super engaging. The coursework itself is not too demanding, but it definitely provides a new way to approach things. The class was long, but it's definitely worth taking!",
                    "5": "This course is very interesting and engaging at face value. I think I would have enjoyed the content more had the course been structured and taught in a different way. <br><br>The three hour lectures were difficult to maintain interest in the course throughout the week. I would have preferred two 1.5 hour courses. <br><br>Similarly, the Professor Contractor would often pace around the classroom in an effort to check that students had their name cards visible and take notes on what each student had displayed on their computer screen and engagement with the class.  As someone who has a hard time focusing for large periods of time, this discouraged me from utilizing resources that would've let me actively listen to class (i.e. playing 2048 to stimulate my brain every once in awhile, helping me focus on the lecture).  <br><br>I understand the need to ensure students are actively paying attention, but these lecturing methods of student engagement negatively impacted my experience. <br><br>i however, did really enjoy the pollev interactions in the class and would hope future versions of this class integrated them more.",
                    "6": "I learned about the ways to go about performing social network analysis on different types of networks in society.",
                    "7": "Did not like the class much. The content was not what I expected it to be. From a CS perspective do not really recommend taking",
                    "8": "Good class. Labs are interesting and final project is also very cool. Only bad thing is the fact that lectures are once a week and last for 3h... brutal",
                    "9": "I think the course was interactive and I enjoyed it. The class is really long since it's 3 hours though. The labs weren't bad and the TAs are great and really helpful.",
                    "10": "Contractor is very accomplished and intelligent, which left me a bit disappointed with the class. Maybe it's because I'm from a more technical background, but I felt that the interdisciplinary nature of the class sacrificed too many of the details that would have made it more interesting, making the 3 hour classes feel long. I left with many insights about social networks but I felt like the class would have benefitted from, instead of taking a broader and shallower view, focusing on a smaller component and diving deeper. However, the approach as it was was likely more practical and seeing the cutting–edge of the field was worthwhile.",
                    "11": "Just a really strange course. There isn't much motivation to learn the material as it is never really tested. The main assignments are the labs which tend to make little sense especially if you don't know R. You don't technically have to write any code but you do have to copy paste it around. Most of it boils down to looking at p values and coefficients and making conclusions about hypothesis. Prof is great but 3hr is a long time. Honestly my biggest gripe is the labs which just cover an enormous amount of content without much critical thinking. Not to mention a final project where you kind of do have to write code? But it has to be in R, kind of?",
                    "12": "This class was a great class. The work is very light, and you don't even need to know how to code in R. There was one three hour lecture per week, but they didn't even feel three hours long. The professor was really enthusiastic and the class activities were very engaging. The TAs also made themselves available if you needed help.",
                    "13": "One of (if not the best) the best classes I’ve taken at NU. If you can’t get in at first get on the waitlist. Nosh is the best professor I’ve had yet, and the material is truly so interesting. The DS/coding part is what you make of it, most of the coding isn’t too difficult/is provided for you, so you can really dive into understanding the theories behind the labs and classes.",
                    "14": "Learned a lot about social networking that I could see in my life as well, 5 labs that are pretty easy and a final group project throughout the quarter and weekly readings that take less than 30 mins.",
                    "15": "The professor is a big name in the field, and lecturing is very good even amongst people at this level. This class teaches you the frontier of SNA modeling and techniques by focusing more on the philosophy and motivation of these things. However, because there are no formal statistics &amp; CS prerequisites and the class lets you get away easily with most assignments without requiring you to actually understand it, working with teammates who don't pay attention to class content can be a PAIN in the ass.",
                    "16": "this class prepared me for my future fake email job",
                    "17": "I think this is a great course to take if you are interested. Though the description may indicate tedious work and hours spent modeling with code, it was the opposite. The labs which make up the bulk of coding in this class already have the necessary code provided and understanding and interpreting the results is most of the work.  The professors and TAs also did a great job of engaging the class with activities and real–life discussions. The only downside is the three hour length but there is plenty of breaks and take it with a couple of students you know",
                    "18": "Professor Contractor is an excellent instructor and storyteller who makes the 3–hour class so engaging. Although the content sometimes be very technical for comm student like me, but he is always able to make it interesting and meaningful through the real–life examples and in–class activities. The class significantly transforms the way I think about and approach the communication among people or in any kind of organizations. It makes me realize the importance and potential of social network analysis.",
                    "19": "Noshir is good at gauging students' feedback and keeping everyone engaged. However, I really think this class would be much better off being split into two lectures a week. 3 hours of continuous lectures will put anybody to sleep (I myself fallen asleep several times).  There were 5 assignments, all of which you were already provided the R code, and you mostly had to run the code and interpret the output. No exam. Final project is pretty open–ended and group–work.",
                    "20": "Interesting class, readings were a bit dense but Contractor was good at clarifying big picture ideas. Main thing is that although you use R, you don't have to code in R, which makes the final social network analysis project a bit difficult if you don't already have at least one person decent specifically at R. Also, for the final project, you have plenty of time, so it really just depends on getting good teammates who communicate. Otherwise, grading is pretty clear.",
                    "21": "This class is kinda strange. You don't actually have to learn anything. They give you all the code for the labs (they are quite still annoying though). The in–class polling questions are graded for completion, not accuracy. Lectures are interesting enough and you can basically do whatever you want on your computer during them –– basically study hall. Professor Contractor was nice at the beginning of the quarter, but was in some kind of bad mood by the end of the quarter and would call out students in front of the whole class for arriving a couple minutes late or for having their name plates displayed incorrectly – it was very uncomfortable.",
                    "22": "I thought this course was really interesting and it wasn't too hard. Always appreciate a project based class. 3 hour lectures are brutal though no matter what",
                    "23": "This course is among the most interesting and enjoyable courses that I've taken here and will teach you a good amount on how social network theory permeates our world. Prof. Contractor is extremely kind and eager to show us how our decisions are motivated by social networks. He has more than enough experience to back up his lectures. The labs are simple and were not much trouble as long as you start them on time, and for those unfamiliar with R it's not too big of a learning curve. As long as you attend lectures, understanding these concepts even with the math is not hard.",
                    "24": "Interesting content. Networks are everywhere!",
                    "25": "This class is incredibly interesting and they do their best to keep a 3 hour lecture very entertaining. However, the professor can pick on certain people and has a lot of rules around attendance/ being late to class. The material is very interesting though and you can tell Contractor is truly an expert on the subject",
                    "26": "Pretty chill class for CS Majors. Nothing too hard and you can put your final project on your resume which is always a plus.",
                    "27": "Decent class. not much coding for CS.",
                    "28": "The course topic is interesting and the professor really cares about feedback, which I think is great. Lectures can feel really long but the activities often help with this.",
                    "29": "Prof. Contractor is a very engaging and passionate professor. He knows so much about the topic and designed many very interesting and engaging activities in class (with the wonderful TAs!!!!) Very fun class.",
                    "30": "Overall, this course was great. I will intern at Meta this summer and took this course because I wanted to learn more about social networks applied to social media. Unfortunately, we didn't see anything related to social media, but I still learned a lot of useful concepts that can be applied more broadly!<br><br>Prof. Contractor is also very bright and I loved to interact with him. Somehow, he can engage students in a large lecture room – he even memorized all our names. However, the 3–hour time block seemed too long at times, and I found myself leaving class exhausted.",
                    "31": "Nosh is probably the most impressive professor I've had at Northwestern. Workload was fair and I thought the class was very interesting because of the instruction. I'd definitely recommend taking this for either the DS or MS.",
                    "32": "I loved the course. The TAs were very helpful, given that not a lot of people are familiar with statistics and everything, the course did a good job in including students from every domain and cater to their interests. The classes were very engaging and I never knew when the 3 hours went by.",
                    "33": "I enjoyed working on the final project. The degree of flexibility offered (with the entrepreneurial track) was great! Our team coded an app which allowed us to demonstrate our knowledge in a creative way.",
                    "34": "This class honestly has a lot of work. Labs and the final project are VERY time–consuming. Start early. Professor Contractor is awesome though!"
                },
                "school_demographics": {
                    "Weinberg": 16,
                    "McCormick": 33,
                    "Medill": 1,
                    "Comm": 9,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 2,
                    "Sophomores": 19,
                    "Juniors": 33,
                    "Seniors": 4
                }
            }
        },
        "COMP_SCI 343-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 5.18,
                    "student_count": 65
                },
                "student_opinions": {
                    "0": "Tougher than other cs courses but still enjoyable. Lectures are somewhat disconnected from labs but both are good.",
                    "1": "This class was fun but harder than I was expecting. If you don't have a group for the projects you will have to work pretty hard but will do well on the tests.",
                    "2": "Branden is a great professor and lecturer which made me more interested in the concepts taught in class. Labs can be difficult and time–consuming. Exams are hard but fair if you consistently go to lectures.",
                    "3": "The labs could be fairly challenging, but were a great opportunity to put the concepts learned through lectures into practice. The lectures were informative and easy to understand, with plenty of opportunities to ask questions.",
                    "4": "5 homeworks, 2 exams. One GOAT professor. One of the best classes I've taken at NU, even if PC lab and paging lab were really hard and annoying to debug. I loved all of the topics, and Branden is the goat. There's really nothing else to say. It's essential for bridging the CS/CE gap.",
                    "5": "The lectures are super interesting. I didn't really enjoy 213 (took with Brandon) but I loved 343. You don't need to read assembly, but instead actually learn about how an OS operates. I won't lie, the labs are hard. the first two are fine, but Driver and Paging labs are super confusing and take a long time. My one complaint about the class is how vague the instructions are, and oftentimes completing the labs isn't very straightforward. Make sure to take this with people you work well with, because you'll be spending a lot of time with them.",
                    "6": "working with C in this class was extremely challenging. I felt like 213 didn't prepare me very well to debug some of the issues that came up in labs. and I also felt like the labs got much harder as the quarter progressed. to the point where for the last lab (paging lab), it felt like at least 4 hours needed to be invested outside of lecture to understand the concepts we were implementing in the lab before we could really even write any code. this, combined with how large the codebase was (understanding helpers available to us, how they should be used), and finally debugging our implementations (that multiple PMs told us were logically coherent and couldn't spot the bug, so they suggested we rewrite the code) made each step required to complete the labs feel like it should have taken 1–2 days of dedicated self–study + camping office hours in order to make any progress. <br><br>at the end of the quarter, it was basically impossible to juggle this work for my team with the work from 3 other CS classes so we ended up just not finishing the last 2 assignments...<br><br>i think the topics and practice you get with C are really valuable though for understanding how computer systems work better (esp as a SWE, and in seeing concepts like concurrency repeat in other CS classes), but I'd only take this class if you have a lot of time you can commit, and have a strong team. and i'd even go so far as to say that it's worth taking even if you know you're probably going to get a B just because of how foundational this knowledge is for being a better computer scientist in general—I'm honestly a bit shocked that this class isn't required for CS majors.",
                    "7": "Lectures are interesting but sometimes hard to understand the material. The slides are wordy and hard to determine what is important versus not. It was very hard to concentrate on the lecture if I didn't understand something. The labs reinforced the material well. <br><br>Paging lab was a beast to debug (please start it early). Other than driver lab (not as bad as paging lab), the rest is doable since there's one lab every 2 weeks. Get a good group and just put in the hours together, not separately. Make sure to think critically and read the instructions. Piazza is your friend since it's hard to debug these things sometimes.",
                    "8": "Difficult class, but Branden's a great prof",
                    "9": "Awesome course that I would recommend to all CS students. Branden's very passionate about the course content which makes his lectures very engaging. The labs were not terribly difficult. I found PC lab to be the easiest and the paging lab to be the hardest. For driver lab and paging lab we had to implement things on top of the Nautilus kernel. This made me learn how to work with a large codebase which I think is a very good skill to have. I took this right after taking CS 213 and I think it was a good decision. From this course you learn a lot about the abstractions that are implemented pretty much everywhere in CS (concurrency, caching, etc.) which is why I think you should take this course.",
                    "10": "Its a solid course. Branden is a great professor.<br><br>It feels a bit too easy almost. There's a decent amount of overlap/review of 213. And lectures feel a bit slow.<br>I think that more could be taught if some of the overlap was removed. Still learned a lot thought, very interesting class.",
                    "11": "A difficult but classic CS course, would highly recommend taking it with Branden.",
                    "12": "Labs were pretty reasonable in terms of difficulty and time. However,  the exams were on the harder side (especially the second one). Overall, really glad I took this class with Professor Ghena—he's a great lecturer and made the course content and class more interesting",
                    "13": "This course was pretty good, I would say it's important to learn how operating systems function for future reference. You will complete 4 labs (+1 starter lab), and most are not too bad. The last lab is difficult, so plan accordingly, and make sure you have a group to work with as it makes debugging much easier. Professor Ghena was a great professor, his lectures were interesting and his teaching style keeps makes class welcoming. The midterm was kind of brutal, it was a real time crunch with the amount of work each question needed so the average was low –– make sure to work quickly and pay attention to how many points each question is worth. <br><br>Overall, would recommend the class, but prepare for exams and the final lab.",
                    "14": "Awesome class, Ghena is amazing as always. Homework is 4 (2–3 person) group projects, and that's it.  You are given previous years' exams, and the 2 (noncumulative) exams are very accurate reflections of those. Projects felt challenging but not brain numbing hard – the first two were especially chill, the other two were a little more painful debugging. The class walks you through everything about OS's – you'll learn about how applications are scheduled to maximize efficiency of different systems running multiple programs at once, a lot about concurrency, how virtual memory works, how VMs work, how devices connect to computers, and a whole ton of cool security things as well. Awesome systems course, really feels like it touches on things useful in or at least relevant to a bunch of other classes. Learned a lot, I feel like I understand and appreciate how computers really work a ton more after taking this course, rather than just being like \"I mean they're the thing I code on.\"",
                    "15": "Very good course, gives a great overview of a ton of operating systems concepts. Branden's lectures are great, and cover a ton of material very clearly. Projects do take a decent amount of time to fully understand and do properly, but do cover pretty cool concepts. Projects and 2 exams do create a decent amount of work too, but feels worth it.",
                    "16": "This class is difficult so take it with Branden Ghena. Amazing man, very good teacher. The class is manageable with another CS course that doesn't have a heavy work load. Always start the assignments when you get them, it'll be easier in the long run as everyone crams in OH the week its due.",
                    "17": "The GOAT Branden Ghena",
                    "18": "This course is not that difficult! Don't be afraid to take it. The projects are reasonable and will not kill anyone as long as you start early. The lectures are clear and useful.",
                    "19": "The class is really easy, but that's not really Branden's fault. It's good for what it is – an intro to operating systems class. If you come into this expecting the same level of OS rigor you'd see at other schools, you really will not find it, but it's good in spite of that. If you like systems this class will take like 2 hours a week.",
                    "20": "CS 343 with Branden is amazing. This course was very difficult for me content wise, but if you've come very recently from having taken CS213, a good number of concepts will be quite familiar (paging for example). The main chunk of one's grade in this course was labs which was nice since they could be done in groups. The labs are often long and require at least a weeks time (ideally 2 weeks which is what Branden provides), with the driver and paging labs being the most tedious. This course also does two midterm exams with no final, with the exams varying in difficulty (this iteration of 343 had particularly challenging exams). Overall this was a great course with lots of challenging aspects, but gave me an overall greater understanding and appreciation for all the things modern operating systems do and handle behind the scenes.",
                    "21": "A great and useful system class. The contents are honestly pretty hard, but it's Ghena whose teaching it so it helps A LOT. Exams are pretty hard, labs take a long time to finish, especially the last lab. But Ghena explains stuff very clearly and he actually cares about students, so definitely take this class with Ghena, he will make your life much better.",
                    "22": "I’ll start off saying this was a great class to learn about operating systems, and Prof. is an awesome teacher, but I found that the grading system was really tough and maybe not super reflective on my understanding of the content. Both midterms felt artificially difficult, maybe because concepts are fairly easy, so there were some variations introduced to the problems that we never learned in class or labs and weren’t asked to prepare for and people lost out on a lot of points there. Tests are also harder than any practice midterms you will see (unless ours are included as future prep material) and have more content outside of the curriculum. The average for the second midterm was a 68%, and the people who take this class aren’t slackers (thankfully prof bumped up everyone’s midterm 2 grade by 10 points).<br><br>The labs are fine if you go to office hours early or are adept at debugging from a large codebase (1000+ lines) on your own, and are okay with hidden test cases (I know of at least one quarter of the course where test cases were all given). Just a heads up that lab 3 and 4 were the hardest coding assignments I’ve had before and they took me 20+ hours each, but it’s really excellent learning and practice if you focus/dive into it. If you want an A you will have to prepare for everything possible on the midterms – I lost 9 points on the first midterm because I forgot to write down a niche scheduler that we talked about in class for a couple minutes (RMS). Definitely a doable class, but you will really have to grind for the difference between an A and a B.",
                    "23": "I feel like this is a must–take for any CS major. It just covers such basic topics on how your computer works that you kind of just need to know in order to succeed as a programmer. That being said, the course itself is great also. The grades are just 4 labs + midterm + final. The lab writeups are super dense and long it's important to get started early, but having late days definitely is helpful.  This class is also super engaging with Brandon, and he makes sure to slow down and answer questions if anyone's confused. Would recommend this course for sure.",
                    "24": "I took this class because I was told it was very useful information to know. We still have yet to see if it will end up mattering on the job but as someone who isn't really a big systems guy I found the class pretty boring. I would not recommend unless you have an interest in systems. You can learn some of the main topics like concurrency from other systems classes, maybe not as in depth but enough to get you similarly familiarized at the practical level in my opinion.",
                    "25": "Do not try to take this class alone! Great class though",
                    "26": "This class is hard. For the most part, it's just an average hard Branden class, harder than 213 for sure though. But it felt fair until the last lab. Paging lab feels unfair. They tell you very little and you have to figure out the majority of it yourself. Office hours were super crowded the whole week it was due, too. There are two exams as well, which were a bit tricky. You need a systems requirement and this isn't the worst option but you'll probably have a tough time. You can have a group for the labs, so definitely take the class with a friend if you can.",
                    "27": "this is one my favorite classes I have taken at NU, Prof Ghena is a great professor and is very organized, that said this class is by no means easy, the labs take quite a bit of time and you learn a lot (go to OH for help and preferably take this class with a friend who you can be productive with as that will go a long way in succeeding in getting a good grade on the labs). The exams were NOT easy at all but don't let them deter you from taking the class, you have to do well on them for an A/A– but that was pretty much out of the question after the first midterm L). Challenging class none theless, very much a deep dive and extension into 213 topics and Operating Systems.",
                    "28": "This course is a pretty standard CS class, lectures are pretty solid and labs are engaging. The only downside is the handwritten C code on exams, but otherwise moderate difficulty, low to moderate time commitment, interesting class.",
                    "29": "Very similar structure to 213, basically like 213 part 2. Labs were challenging but doable. The hardest part about the labs was understanding the context of the nautilus kernel.  First exam was pretty straightforward, second exam covered twice the amount of material as the first exam so it took a lot of studying. I studied pretty hard for both exams and it paid off so I would say that the exams are challenging but fair. I definitely needed to go to office hours a couple of times, and piazza was extremely helpful.",
                    "30": "There's a lot of course material so it does get kind of overwhelming. Projects were pretty good, OH helped a lot.",
                    "31": "Great class, but labs take a lot of time, so meet with your groups in office hours regularly.",
                    "32": "This class is extremely difficult. I would not take it during a quarter where you are taking another difficult CS course. That being said, the class is super interesting. Professor Ghena is an absolutely fantastic lecturer and you will learn a lot!",
                    "33": "This class was good. There are 5 labs, which are not too bad if you start early and go to office hours (which there are a lot of). There are two midterms. The first midterm was fine but the second midterm was terrible. Overall, information was pretty interesting.",
                    "34": "A must–take. Great with Ghena as always",
                    "35": "Great class, definitely recommend for all CS majors, learned a ton that I think will be useful to know working on any lower level programs in the future. Also I finally understand concurrency/how to write parallel code so that's a plus",
                    "36": "Definitely take OS with Branden. He does a good job of explaining the large amount of material that gets covered in this course. Labs vary widely in difficulty.  The first two (Scheduling and PC) are pretty quick and straightforward, but the last two take a very long time (Driver and Paging) and need to be started as early as possible. The exams this quarter were particularly hard,  the average for the first was 73% and the second was 68% (he gave everyone an extra 10 points to bring it up to 78%), and he doesn't curve so its definitely important to do well on the labs to help boost your grade. All in all pretty difficult class, but you learn a lot of useful things about OS and I think its a pretty important class to take as a CS major.",
                    "37": "Branden is arguably the best CS professor at NU. I wouldn't say the class is hard, but the labs can take a while. If you budget time with your group well, they aren't bad. The midterm was mostly conceptual, so if you knew the content it was pretty easy.",
                    "38": "Great, but challenging class. It's a high level overview of several important aspects of operating systems, and goes deeper into a few topics on the homeworks. An essential class for a CS major IMO and Braden is a fantastic prof for it. He is extremely knowledgeable on the subject and is great at explaining things.<br><br>The entire class is 4 coding assignments and 2 exams. The coding assignments ramp up over the quarter, and the last one is VERY difficult, so start early. These assignments are adding a few lines of code / a few functions to a large, preexisting, and complex codebase. The beef of the homework is figuring out wtf is going on in the existing code instead of writing a bunch of your own code. I think this is actually great and builds really important skills. Just start early so you're not losing your mind on deadline day.<br>The exams are like braden's 213 –– one cheat sheet front&amp;back. I think they were mostly fair, but the second exam did deviate substantially from the practice he gave.",
                    "39": "Great, clearly communicated lectures. Interesting material– good amount of overlap with other systems topics if you've taken other systems classes. Labs get pretty challenging later in the quarter, but being able to partner up helps. Try not to get behind in the lecture material, it makes the homework harder and exams are a significant chunk of the grade.",
                    "40": "Branden is a great lecturer. I love how he gives little breaks throughout his lecture (maybe every 20–30 min?). Labs are hard, but I expected them to be."
                },
                "school_demographics": {
                    "Weinberg": 28,
                    "McCormick": 33,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 3,
                    "Juniors": 41,
                    "Seniors": 14
                }
            }
        },
        "COMP_SCI 345-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.17,
                    "student_count": 47
                },
                "student_opinions": {
                    "0": "4 time consuming projects in Go, make sure you get a good group &amp; start early, you should be ok. there are weekly quizzes (8 total, only top 4 will count for 20% of your grade, 2 short answer questions, open–note in class &amp; online). Take home final (have 3 hours to complete, short answers –– similar to quizzes). The ta's office hours/recitation sessions were super helpful",
                    "1": "This class is pretty not great. Distributed systems is an awesome topic and you will learn some, but the class is not really structured in a way to help you learn. The labs are ok, but have random configuration issues due to not having been touched in the last 5 years. Lecture is pretty hard to follow because 340, 343, and maybe even CE361 are assumed prereqs but are not actual prereqs. Slides are incomplete without lecture, which I guess is fine but not ideal. Quizzes for HW grade were so bad that they had to drop half of them. Overall a very disappointing course.",
                    "2": "Good",
                    "3": "maybe i’m just not that into systems, but this class was butt hard and the weekly readings could be a real pain to get through sometimes. it started off pretty good (+ i had an absolutely goated team for projects) but by like week 6 i kinda lost that will haha<br><br>4 projects (45%), 1 and 2 are two separate topics, and 4 builds on top of 3. 8 open book mini quizzes after lectures (20%). in class participation (15%), but i think like 5 people participated consistently out of the entire class so ?? and 1 take home final (20%) that’s open book.<br><br>honestly i’m pretty sure i only survived because my team actually carried hard lol, so def try to get your friends to take this with you or find some good teammates week 1. i will say fabian is pretty accommodating and cares about helping his students, so you’ll definitely feel supported in this class, but the content itself can be kinda hard esp if you haven’t taking other systems like networking",
                    "4": "This was a very useful course with weekly quizzes and 4 difficult group projects. The TAs do their best giving weekly recitations, but besides that, there is close to zero support in this course: no office hours,  no PMs,  Piazza questions don't get answered, etc. Fortunately the projects are group work, but your experience will vary greatly depending on how competent your group mates are. I highly recommend putting off taking this course until AFTER you've taken 343 OS. Quizzes/exams are free response. Fabian isn't a harsh grader, but looks for very specific things in responses. Overall, I thought this was a very cool class, but more challenging than most systems classes.",
                    "5": "I cannot stress enough how much you should not take this class if you don't need to. It was mostly fine but projects required a ton of time.",
                    "6": "As someone without a lot of experience in upper level systems classes this class was for sure extremely difficult. Even if there aren't that many pre–reqs for the course, I felt as though a background in networking or OS is esssential in order to fully understand the majority of the course.  <br><br>The projects ramp up in difficulty so you should ideally have a solid group to work with otherwise the projects came feel impossible to complete since the bugs can be so minor. Likewise. since there arent any PMs for the course there was a very limited amount of OH so if you got stuck, you were mostly on your own.",
                    "7": "I liked that the class did not have exams. I am a very bad test taker. I appreciated the time we had to work through the projects and the help from the TAs (thank you Caleb and Rashna!) was invaluable. Professor Fabian is really nice and understanding, but of course more so if you put effort in the class/coursework.",
                    "8": "content is very difficult but professor try really hard to help",
                    "9": "Very disappointed in this course. Fabian is a terrible lecturer and even if you go to every lecture, you will feel confused. The projects aren’t too bad and you learn a lot from them (3 and 4 much harder). Fabian makes you read a research paper for each class and then does an open note pop quiz on a topic, which aren’t too bad to get through. The exam was not too hard either. Overall this class was disappointing because of the terrible organization and lecturing, and I wish I got to learn more.",
                    "10": "The lectures felt fast paced and a little presentation heavy. A paper for almost every lecture and a mini quiz almost every week. All projects are team–based. The take–home exam is pretty flexible.",
                    "11": "advanced than what we need to know and thus unnecessarily difficult to understand. Like Ghena, he should make homework assignments to reinforce our learning. Not assign papers. Then when people share that they don't understand the academic paper they've had 2 days to read, his conclusion is that he should make half of the systems' department classes prerequisite... Never answers Piazza either. <br><br>Very strange also to have a participation grade be 15% of the total grade. He expects us to talk to him and ask questions, but its a 90 person lecture.. Plus, whenever people asked questions, he would start speeding through the slides and say that we don't have enough time.",
                    "12": "This is a relatively good course. Bustamante is pretty lenient while still giving pretty informative advice. 4 projects, 8 quizzes (half the quizzes were dropped, all open note). Readings weren't too terrible.",
                    "13": "Prof. Bustamante treats students with respect and is always on top of his game. There is a course website with all of the readings and a schedule of topics for the quarter that you can look at from the start. Projects were difficult but he was understanding and moved deadlines for when students were particularly struggling. You also learn how to read “scientific” or “research” papers (for lack of a better word) written by authors of Distributed Systems implementations in use at large companies.",
                    "14": "I feel like I learned more than I was expecting. Quite interesting class. You get a lot out of it if you do the readings.<br><br>Lectures sometimes did feel like just repetition of the readings though.  But they were overall quite interesting.<br><br>Both 340 and 343 definitely need to be pre–requisites for this class. Its very difficult to understand the material here without having taken those classes.<br>Taking CE 452 also helps since distributed consistency models are very similar to memory consistency models.",
                    "15": "This class mainly focuses on learning some distributed systems topics through case studies. Each lecture covers a research paper that introduces a distributed system. There are 4 projects in this course. The first 2 are very easy. The last 2 are a little bit more difficult. This class is poorly run and doesn't have enough staff so don't expect help from the instructors",
                    "16": "It's a good class where you could learn all the distribute system stuff in great depth. Super useful if you want to pursue a career in backend, cloud, data, etc.",
                    "17": "The course itself is wonderful. You cover lots of different implementations and ideas about distributed systems that are important to know about if you ever work in modern technology. It's very beneficial if you have networking and OS background, otherwise he often brings up lots of concepts to do with these topics that are a little difficult to comprehend if you don't. There are 4 projects that ramp up in difficult, random quizzes in class over the readings (open notes), and a take–home final.<br><br>But, Fabian is a very smart guy but it's really difficult to understand him with how fast he talks. He also doesn't record the lectures so it's impossible to go back and figure out what he said. His slides often have typos and only include a bare outline for him to talk over so reading the slides aren't very helpful either.",
                    "18": "Really difficult class, 4 projects which each require at least 20 hours of group work. Weekly quiz which need preparation. A paper for each class that you need to read to fully understand the material. Also one of the few CS classes that have an actual final.",
                    "19": "The content covered in this class is very important for many computer science majors. While the level of instruction varied, it is entirely possible to keep up by just looking at the slides. The largest time commitment in this class are the projects, of which there are 4 of. The first two are relatively straightforward. The third and fourth are the most difficult, with the fourth being much harder than the third, at least to debug. Most of the issues come from not being super familiar with golang's syntax.",
                    "20": "A must take, although it feels like a jumbled mess of OS + Networking + Scalable",
                    "21": "Lecture was a little bit hard to follow due to the sheer amount of content, though I did feel like a learned a lot, especially through the projects (written in Go), which involved a lot of concurrency and implementing papers from class. Project 4 was especially challenging but very doable if you START. EARLY. There was one CTEC which almost made me drop the class because it made the class sound very scary, but I didn't and I'm so thankful for not. It's really manageable if you stay on top of everything and find a good team. The mini–quizzes are once a week (usually Thursdays, very seldomly Tuesdays) and are super do–able since they're open book/Internet. Lastly, the final exam was like one giant mini–quiz based on the formatting/type of questions asked.",
                    "22": "Lectures are frankly incoherent, but you'll learn a lot by doing the projects and readings.",
                    "23": "This course is very interesting; it's good for system design interviews. Projects are very hard, especially Projects 3 and 4. The course is centered around a lot of paper reading regarding distributed systems. There are 4 projects, MapReduce, Chandy–Lamport, Raft leader–election, and Raft log–consensus, each all based on the readings done throughout the quarter. There were mini–quizzes each week this quarter also based on the readings. One 3 hr take–home final exam that was fair, but hard. As long as you stay on top of the readings and pay attention during lectures, you should be able to do well in the class. It also helps a lot to have taken systems before taking this class, especially for the projects. <br><br>In summary, hard class, but very interesting; 7/10 would recommend."
                },
                "school_demographics": {
                    "Weinberg": 13,
                    "McCormick": 27,
                    "Medill": 0,
                    "Comm": 2,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 6,
                    "Juniors": 26,
                    "Seniors": 7
                }
            }
        },
        "COMP_SCI 347-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.86,
                    "student_count": 14
                },
                "student_opinions": {
                    "0": "While not in pre–requisites, you really have to know KRR for the first part of the course, and I felt a lack of support in this realm. Rest of the course is about state–of–the–art approaches to conversation.",
                    "1": "The project was the most fun part, coming up with idea and to have iterations and discussions.",
                    "2": "Overall, this course is not bad. No exam, some writings and a final project. Beware it's not about chatbot you know like ChatGPT. It's social bot. And social bot is hard to understand since it's written with lisp. But this class does not cover too many social bot stuff. Only 1 project will let you read social bot. The final project is kind of vague. Most people choose to do RAG than social bot. It's an easy A class but you better good at LLM or take it with friends who know LLM.",
                    "3": "It's great to be able to spend so much time on a course project. You learn a lot more.",
                    "4": "Great class, not a lot of work but if you do the readings and go to class you learn a lot about how to think of conversation and how it applies to designing systems."
                },
                "school_demographics": {
                    "Weinberg": 1,
                    "McCormick": 8,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 2,
                    "Juniors": 2,
                    "Seniors": 0
                }
            }
        },
        "COMP_SCI 348-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.65,
                    "student_count": 93
                },
                "student_opinions": {
                    "0": "This class was so chill and can definitely be taken as a elective or fifth class. All you need to do was to get the homework code working and you're guaranteed an A. Some issues with this class is that Alam would just gloss through many concepts without allowing students to take in the material. Also handling situations and responding to students take forever.",
                    "1": "absurdly unorganized. nothing was graded until well after the drop deadline. little to no communication regarding course logistics on campuswire.",
                    "2": "Very chill course. 6 coding assignments, most of which are very manageable. A few more difficult ones. Exams are open book open note open internet",
                    "3": "I feel like if you have lecture recordings and people don't attend class, it means that people learn in different ways. If you DON'T post your lecture recordings and people STILL don't attend class, your class just isn't worth attending. <br>Otherwise, very easy class. Lectures aren't very good since he just reads the slides so you can just look at the slides. The take–home exams are really easy. I guess this was a pretty good intro to AI and nothing beyond that.",
                    "4": "DO NOT TAKE THIS CLASS WITH HIM. its so bad i learned nothing. the lectures were so boring and not well put together.",
                    "5": "Good class",
                    "6": "This class is a bit of a joke. Homeworks have a some to do with what you learned in class, but it should be enough to just Google/Wikipedia the concepts. While the instruction is good and the instructor is passionate about the material, there's no point going to lecture unless you're also genuinely curious about the material. For this quarter at least, tests were open–internet (including chatgpt etc).",
                    "7": "I liked this course overall but just wish it was more organized. Prof. Alam does a great job of introducing you to a lot of different topics within AI, and I always found lectures where he inserted a bit more of his opinion on big AI topics to be super interesting because I loved the insight he was able to give into the highly debated parts of the field. Though topics could be challenging and take a bit of time to sink in, whenever we did an assignment on a topic, I found that I would eventually come out of it feeling like I understand a lot more about how it works. Whenever Prof. Alam made his own slides, I thought they did a great job of breaking down the topic and taking you step by step. However, towards the second half of the quarter, Prof. Alam started used compilations of other professors' slides, and the lectures became a lot harder to follow. It could have just been that we were intentionally skimming the topics for exposure to them rather than diving deep into any single one, but I felt like I started more consistently coming out of lecture confused rather than elucidated around this time. On the grading end, we did not get our first homework grade back until week 9. Regardless, I still think this is a good course to take if you're interested in learning more about AI and big ideas within the field. Despite some of the disorganization of the course, I still really like Prof. Alam and think he's a fun professor that brings in interesting perspectives into his lectures. Furthermore, being allowed to use ChatGPT helped clarify course concepts a lot, so the time dedication to this class was reasonable.",
                    "8": "TLDR: Take this class for an easy A for AI breadth, or as a prerequisite for NLP/other AI classes, otherwise pick a different AI class if you want to learn, like 349.<br><br>The course doesn't go in–depth enough to force you to actually learn all the concepts. You dip shallowly into each topic. Lectures get boring very quickly unless you are super interested in the topics. Half of the class uses slides from 349 and just speed runs through them with basic introductions. Lectures are recorded but only available to you under special circumstances. You don't have to go to lectures at all and the homework assignments are very easy. The slides are all posted. There is 1 midterm and 1 final, both are extremely easy Ctrl + F in lecture slides.<br><br>You can definitely learn more in this class if you put in the time to actually learn what is mentioned in class, but the homework assignments don't help with challenging you intellectually.",
                    "9": "The most important aspects were the assignments",
                    "10": "The course content was interesting and assignments were relevant, but slides, lectures, and pacing often seemed a little all over the place. Deadlines and HW release dates were often moved around drastically without much prior heads up.",
                    "11": "this was a solid class to brush up on Python<br><br>recommend taking this as a 5th class for that reason alone",
                    "12": "Great course. Alam is a great prof and makes lectures fun to listen to. Moves at a bit of a slow pace, but it's a nice change of pace from the hard CS classes",
                    "13": "Pretty easy class, not too much work and with open access to internet for midterms and homework the class isn't stressful at all",
                    "14": "This is a highly recommended course with moderate difficulty, very friendly exams, and very practical homework",
                    "15": "A great course to take at Northwestern. Prof. Mohammed is passionate about the subject, and seems to put a lot of effort into the homework assignments. The exams are also take–home and at a very reasonable level – it was overall a fairly low stress class.",
                    "16": "Good class for a general overview of many topics that could excite you within the field of AI without requiring you know all the details about them. Very flexible and though assignments were very difficult to test and could be stressful, there weren't too many of them and that made the course manageable. Overall alright course and not a bad option for AI breadth",
                    "17": "This class is a pretty good intro class, but I'm not really sure how relevant the content is to real–world applications of artificial intelligence.",
                    "18": "348 with Alam is a good course for the AI Breadth. I am personally pretty interested in AI/ML, so for me this wasn't the best class. I thought the lectures on symbolic AI and AI history at the beginning of the course were fantastic, but the ML stuff is just not super great. Lots of slides were adapted/taken from 349. The assignments on Search, Minimax, and Naive Bayes were good. KRR assignment was not helpful for learning. Bayes Nets was alright. Biggest issue for this course was providing timely and high–quality starter code. Minimax assignment starter code was filled with bugs, and I have no idea what is going on with the Neural Nets assignment. At the end of the day, I would still take this class again, because Alam is a very interesting AI guy and he is a good person to give an introduction to the field.",
                    "19": "Great class. The professor is very kind. Homework is fair. Exams are easy and open–book.",
                    "20": "eh course imo. With Alam it's VERY easy.  Which I guess is a positive. But the problem for me was: the course was easy + alam was a poor lecturer = i didn't feel at all motivated to go to class. midterm + exam is online and take home. weekly assignments.",
                    "21": "super chill class, assignments were very doable and prof mohammed allows (even encourages) you to use chat gpt. lectures were a bit disorganized and it felt like he didnt really know what he was talking about either sometimes––but you. can really tell he's passionate about ai and cares abouts students leaving the class having learned something. work consists of 6 coding assignments and 2 midterms (that were open book, take home –– super super chill). prof mohammed is super super nice and was super responsive to students! (his canvas announcements were also aways so friendly! love him)",
                    "22": "This isn't a very serious class. I would suggest taking it if you have no interest in learning very much but want to get a CS class out of the way. It had been about two months before we received a single grade from the class, despite there being an auto grader for assignments and a canvas quiz that was effectively instantly graded (with results hidden). Most of the assignments are stupidly easy but are impossible to debug because of how weird / faulty the codebase is.",
                    "23": "Nice course. Glad that most of the emphasis was on homework assignments and not on exams, which were open books and pretty easy, just testing whether you're up to speed with key concepts. I liked this style of the class because exam–taking is an utterly useless skill the moment you graduate college—actually doing cs projects/assginments is not, so I'm glad this was modeled in the class and wish more classes were run like this.",
                    "24": "This course was great for introducing people to the wide world of AI, in terms of not only the different types but also discussing different controversies within AI and the history of and current events surrounding it. Prof. Alam is a nice teacher, and he certainly knows what he's teaching. <br><br>HOWEVER, while the exams were alright the homeworks were a MESS. If you wanted to go to office hours, chances are that unless you were one of the first five people on the Zoom meeting you weren't getting your questions answered, and even if you were there was still a chance that the TAs or PMs would still not know, with many of my office hours having the PM say something along the lines of \"I haven't done this homework,\" and being unsure of what I'm doing wrong. <br><br>On top of that, the homework instructions were unnecessarily filled with fluff, and some of the Homeworks just didn't work with certain operating systems or software. As an example, a lot of people who were programming using a Windows machine had several errors (around 4 to 5) that were so widespread a class–wide announcement had to be made about it, with the code that was provided having several errors in it irrespective of OS. In another homework, the specific IDE I was using was producing an error, and I'm still unsure why that was the case.",
                    "25": "Good class. The professor is very passionate about AI.",
                    "26": "This course was pretty moderate in difficulty. Homeworks weren't too difficult but sometimes hard to set up and get working.",
                    "27": "Great overview of a lot of concepts related to AI, takes a lot of self–motivation",
                    "28": "I was very excited to take this course, but I did not like how it was organized. Things were not very well–structured. I would recommend taking this course but may be with another professor.",
                    "29": "not particularly – assignments were quite tedious and were moreso \"understand the codebase\" versus actually applying what had been learned – alam requires attendance but doesn't publish lectures bar special circumstances which was quite frustrating, and more generally does not feel like the content is widely applicable – 349 was much more useful",
                    "30": "The course is easy, and that is both good and bad. It is nice for the sake of your time and stress because the assignments are pretty easy and the midterm and final are also relatively easy. If you are really interested in AI, however, and truly want to learn, then this course may not be the best for you unless you can stay accountable for going to lecture and paying attention. Nothing else really keeps you accountable for learning the material through and through, so what you get out of the course is what you put in.",
                    "31": "This was exactly what I needed for a chill, CS elective as my fifth class this quarter. The workload was quite light (as long as you stayed on top of it!)m exams were open–note and extremely easy,  and you didn't really need to attend lectures for the homework as all information was in the slides. I would have been frustrated with some of the disorganization (some slides not covered in class, unclear what exactly we're expected to know, prof going on fascinating but sometimes irrelevant and long tangents) if I was actually really interested in AI and wanted to be prepared for higher level courses, but for me this was a good, shallow introduction.",
                    "32": "AI is the most important technology of the 21st century. You need to know some things about how it works, and Professor Alam's class gives you the foundation and the hands–on experience to understand how AIs work and what they can do.",
                    "33": "This class was great, some very interesting ideas and fun projects. Although, some of the concepts in the projects can get a little tough.",
                    "34": "Prof. Alam was super excited at the beginning of the course but by week 5 he was gased. He's a hardworking and passionate teacher who's extremely understanding and made the course worthwhile to take. I highly recommend this course if you're looking for something easy.",
                    "35": "really chill course overall. 2 exams: 1 midterm and 1 final; most of your grade is dependent on the 6 assignments. prof alam and tochukwu are super nice and willing to help, but it's really hard to get a hold of them. the pms in the course really helped carry for any homework issues, but i would have liked to see more timely communication from the tas and prof when the pms don't know the answer. the lack of communication was the one thing that really hurt the experience in this class since it was frustrating to email and not hear back for weeks after the assignment's due date had passed. it was also irritating (although funny) when you received a very obviously chatgpt–ed response that didn't answer your question. otherwise, the class was really interesting and insightful.",
                    "36": "This course is not bad workload wise. There were 5 assignments and people only really ran into a lot of issues with one of them (but Alam gave everyone who asked an extension that lasted as long as needed) – so the professor is kinda the GOAT.  The midterm and final are open note and chatgpt, so also slight. Definitely reccomend",
                    "37": "Alam is a good lecturer and I felt the homeworks were very fair. I learned a lot about AI as I had never studied it before and felt like it was a great intro course, but doesn't dive deeper into topics.",
                    "38": "Good course",
                    "39": "Easy breadth class, but I didn’t learn a ton. If you put in the time and interest, I’m sure that there is a lot to gain, but I personally did not gain much. Grading was very late and some assignments were a little buggy, making this course a bit frustrating at times. However, a relatively easy course when all is said and done",
                    "40": "I was looking forward to this course but from the start it seemed disorganized. There were 6 assignments with no late days which forced you to start on them early. content of the class was interesting tho and recommend it",
                    "41": "Professor did a good job with the \"AI\" aspect of the course (frist half), but the second half where he lectures about machine learning was a total disaster.",
                    "42": "Very manageable course. Good introduction to AI. Take as a fifth.",
                    "43": "Pretty easy class. There is a lot to take away but it is up to you how much you want to learn in this class. Homeworks are assigned much after the concepts that are meant to be applied to them are taught",
                    "44": "Solid course. Prof. Alam is an enthusiastic instructor. Class does not require a lot of work. Only homeworks and take home midterm/final.",
                    "45": "The content in this course was great, and I am really happy to have learned more of the basics of AI. The homework could be difficult at times, but it was rewarding when you finally got it. I really liked how the exams were easy as well, making it focus more of your knowledge in using the concepts we learned about in this class. I just think that the professor went through some of the ML topics too quickly, and he kept on going through the material quickly because no one who really understood it wanted to say something. Also, there were a few organizational issues along the way, like having to wait the majority of the quarter to get the grades in for assignments (which was a little scary since we had zero feedback about our academic progress through the course) and having bugs in the starter code for at least two homeworks. It took a while to assign the last homework, but I'm glad it was made easy and he was understanding of the short notice in which it was assigned.",
                    "46": "didn't particularly enjoy this class",
                    "47": "The lectures in this class were very interesting and the homework assignments corresponded well. They are not generally too difficult but some may take some time. The midterm and final were multiple choice and open note, open internet, etc. You are allowed to use ChatGPT for both the exams and and the homework assignments. The only negative part of the class was that assignments and grades were very slow to be released and the schedule changed a bunch over the quarter because of this.",
                    "48": "This is a probably a lighter load CS class, if you are looking for one. If you're a cog sci student taking this class it might be a bit challenging, especially if you don't have at least a moderate coding background",
                    "49": "This course was very easy. We can use AI for the midterms and assignments. However, I feel like it sometimes defeats the purpose of the class, so it is harder to stay motivated in reality.",
                    "50": "If you can program python and have taken either stats or cs 212 for bayes theorem you'll make it through this class without any problem. I didn't exactly enjoy the class but I can't complain really.",
                    "51": "Was not a fan of this class. It's an intro class and really felt like that since we only touched on algorithms in a very surface level way. The homework was not it. There were a TON of issues with the source code/set–up (which was very frustrating because a lot of people would spend so long on the HW on something that was not their fault). Professor Alam was generous about the extensions though which I greatly appreciated.",
                    "52": "Take this class! It's an easy A, and prof Alam is also super sweet and a good teacher. You don't have to go to every class (even though the recordings are not available on canvas), but the material is interesting and its a good class to take if you want to get into AI.",
                    "53": "Homeworks were manageable and probably helped in my understanding the most."
                },
                "school_demographics": {
                    "Weinberg": 37,
                    "McCormick": 40,
                    "Medill": 0,
                    "Comm": 3,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 28,
                    "Juniors": 35,
                    "Seniors": 17
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.72,
                    "student_count": 162
                },
                "student_opinions": {
                    "0": "This class is great, definitely take it with Professor Alam! The course consists of an online midterm and final (which are not too bad at all) and 6 weekly homework assignments. The assignments are not too hard or long and are more interesting to implement than anything. This is with out a doubt a 300 level comp sci course you should take an Northwestern.",
                    "1": "Overall a pretty light class and a good introduction to AI and concepts surrounding it.",
                    "2": "Not a bad class to take with two really time–consuming classes in the same quarter, especially with Alam. Homeworks are interesting enough and take only a few hours a week. My advice if you're interested in AI, is to put more effort than required into the class though, as it is pretty laid back (take home exams, few homeworks).",
                    "3": "I thought the class was very disorganized and homeworks were often full of bugs. The lectures were also not super helpful or engaging.",
                    "4": "348 with mohammed is very chill",
                    "5": "Easy course, but engaging material. Definitely recommend taking. Lectures can drag at times, but that is no fault of the instructor, there are just certain concepts in the curriculum that are a little dry. Highly recommend for engaging but low effort CS class.",
                    "6": "This class was very easy because the assignments are tricky but you can use chatGPT. Otherwise lectures didn’t make much sense and I feel like I didn’t learn anything.",
                    "7": "Mid course. Homeworks were OK. Felt very disorganized, lots of mistakes when releasing homeworks/mistakes with the homeworks/mistakes everywhere in general",
                    "8": "This was a solid course, not too difficult. I personally really liked Alam, but I know some people didn't like how he could sometimes go on tangents. He did seem somewhat underprepared at times, but ultimately, I think Alam is a good professor. Don't expect to go into too much detail, it's a very broad overview of AI",
                    "9": "The course was easy enough. The lectures weren't that helpful aside for the open note midterm/final exam. The homeworks were easy enough. The class wasn't as organized in properly distributing the assignments.",
                    "10": "pretty easy class. Mohammed is super nice, but the lectures are not engaging",
                    "11": "Mohammed taught this class in a very interesting way by encouraging the usage of AI in the class for homeworks.  I think this is a very progressive way of teaching as AI will become heavily encorporated when writing programs in the future.  I would say this does let you become extremely lazy with homeworks, as if you really don't want to learn the material you can just use AI to do the homework and get full points.   So because of that, this class (atleast the way he taught it), is what you make of it.  The final and midterm are open note, take home, open AI, so those were easy as well.  If you truly don't want to learn anything and just get an A in the class, you can do that.  Though, if you want to learn and actually enhance your AI knowledge, you can do that as well.<br><br>^other profs may teach it very differently.",
                    "12": "This course can help you learn many things, while you do not have to spend a lot of time on it.",
                    "13": "it is very good",
                    "14": "Love the content of the class. I would honestly say the assignments are too easy. I wish they were a bit more challenging so that I would learn more...",
                    "15": "Repetitive material from CS 349 with dry and hard to understand lecture. Super slow at releasing grades.",
                    "16": "if you spend time to do the work and really understand how the assignment works you will get something out of the class assuming you have no previous knowledge about AI.",
                    "17": "This course offers a very high level introduction to how Artificial Intelligence works. The projects involve some hands–on coding, but they are primarily there to get you to understand the fundamentals of how various artificial intelligence constructs work. If you are looking to get a basic introduction into the field of AI and are interested in doing some coding, then I would recommend this course to you.",
                    "18": "Fun and informing class. Professor is awesome. Easy, straightforward homeworks and two online exams. Good and chill course.",
                    "19": "Easy A and good class to take if you're looking for an easy elective. Exams are take home, open note/book/internet/chat gpt, assignment code can be entirely from chat gpt, and attendance is not mandatory. However, the instruction is horrible. We didn't receive any grades besides from the first homework until the last week of the quarter, and we were not told how passing test cases extended to the actual grade on the assignment. The 6th and final HW was assigned a week late and was due 3 days after it was assigned. Furthermore, code setup for the 6th assignment was extremely difficult due to differing laptops and poor compatibility between software/imports/assignment requirements, and students had limited time in one of the busiest weeks of the quarter to figure it out. The professor was pretty unhelpful and just attached a link to a conversation he'd had with chat gpt for help...Lectures (the few I went to) were so boring and disengaging and off topic and at the end of the quarter slides were just taken from other courses. I would recommend taking this course because it's easy, but not if you want to learn a lot.",
                    "20": "The course is fairly easy and does not require much time commitment outside of class. Interesting topics and a good introductory class.",
                    "21": "Overall great class. The assignments were actually quite interesting and I learnt quite a lot about AI that I never thought I would have.",
                    "22": "This class is a really good one as an introduction to AI. It does not just cover a bunch of ML algorithms, Instead, it starts to discuss what is AI, KRR, and then some classical ML solutions. HW are due weekly and they are not that difficult. You can always find a good TA/PM to ask questions.",
                    "23": "very slow no recordings unless you had a doctor's note or such",
                    "24": "This is really an intro class, which makes the information really boring if you already know part of it. Truly, all the information are on the slides and I have not taken notes in the class a single lecture. I do enjoy the professors' tangents about AI ethics and what it means to be intelligent, perhaps more than what the class actually teaches. Overall, definitely not a hard class to get an A in, and you get out of it what you put in. My friend quite literally did not pay attention to a single class and still got an A. I enjoyed the lectures, but I wish they focus a little less on the lecturing side and talked more about the surrounding rhetoric.",
                    "25": "Easy A. I'm pretty sure most people didn't go to class but the homework and exams are all open chatgpt, open notes, open internet. there were 6 homeworks that are all pretty much on the internet or can be coded with chat. The midterm and final were almost word for word based on the class slides. There are no class recordings.",
                    "26": "Overall, I definitely enjoyed this course. The tow midterms were made to ensure you were going to lecture and understanding the materials, and didn't have curveballs. The weekly homework assignments connected to class material and definitely felt doable. I would recommend this for a CS elective class.",
                    "27": "This class was an administrative mess. You are actually disincentivized from starting your homework early, because if you do, chances are it will be extremely difficult to complete because the assignment itself is broken in one way or another. Almost all assignments had issues with the starter code. What baffles me is that, for some of these issues, Alam says he knows about these issues from previous quarters! Mans has taught this class so many times, knows there are issues with the homeworks, and doesn't fix them??????<br>Content/learning wise, this class is designed to be more of a shallow overview of the entire field of AI, which encompasses a LOT of different things. You won't learn any single topic in depth, but instead the goal is to expose you to bunch of kinda related concepts. To that end the class does accomplish its goal. <br>It's a very easy A. Little time commitment.",
                    "28": "This was a pretty chill course and didn't require too much time. My only complaint is how long the grading took. We didn't receive our grades for the previous homeworks done earlier in the quarter until around the 9th week. He was also late posting the final homework and that was a bit stressful given it was leading up into finals week. I also didn't appreciate how I would make posts on campuswire asking for help, and it would go completely unanswered.",
                    "29": "Very interesting class where we went over the theories of AI and it was take home midterms and final and assignments were very fair",
                    "30": "The course provided a high level overview of the AI/ML landscape, giving us the resources to take a structured approach to learning about the field in the future.",
                    "31": "Mohammed allows you to use ChatGPT on all the assignments and exams (and it can very easily do almost all of them), so what you get out of the class completely depends on you. If you want a very easy A, you can take this class but you might not learn anything about AI. However, if you want to learn about AI and put in the effort, Mohamed is a great lecturer.",
                    "32": "allowed to use chat gpt.",
                    "33": "This class is pretty easy. I got a 100 on every assignment and the midterm and final. If you take it with Alam, the exams are questions taken straight from the slides, and they are open–note, open–internet, open–chatgpt, everything. As for the content, I really enjoyed the second half of the class, where we learned more about modern ML and how LLMs like ChatGPT work. Alam is a great professor and he is so passionate about AI, but he can drone on and on for a while sometimes. If you need an easy 300 level CS course, this one is the one.",
                    "34": "Prof Alam structures his class to be pretty laid back which is really nice. Every assignment was not crazy difficult, yet still a bit challenging to nail down conceptually. However, I never spent more than 5 hours on an assignment, so I would say the homeworks were still very manageable if you paid attention in lecture. He also makes his exams open note and very simple. Like, no prior studying needed. You just need to have the slides open, and the answer will always be pretty much directly quoted on the slides. Prof Alam also went into some interesting discussions related to our lectures, so I felt like I learned a lot of good technical skills but also expanded my perspective a bit more.",
                    "35": "I felt like I got a high level introduction to AI",
                    "36": "348 with Mohammed was such a fun course! Mohammed is a very passionate professor and loves the subject material at hand. While the lectures could sometimes be a bit \"dry\" (reading off lecture slides), a lot of the fun came from the homework assignments which weren't too difficult but provided enough challenge to encourage learning. He also loves going on tangents during lecture but I honestly think they were quite interesting as a lot of his tangents help inform the content he will discuss later on in the lecture/corse. Overall a very fun course with an excellent instructor!",
                    "37": "I think the most important aspect of this class was learning how to make our own AI models.",
                    "38": "The course was good and I learned a lot, but I felt as though we were thrown into the water when it came to assignments. I found myself lost on a lot of assignments unless I got help from someone who already knew what they were doing.",
                    "39": "Provided a good introduction to artificial intelligence concepts. I do wish some topics were covered in greater detail though.",
                    "40": "great class, the work is very manageable and the lectures are pretty interesting",
                    "41": "The class was interesting but the structure was not the best. The lectures were recorded but not posted so even if you were interested in watching or rewatching any of them you could not. The class allowed the use of chat–gpt which made sense, but without it the homeworks delved deep in topics that weren't covered (pseudocode or otherwise) in class. Overall, it was decently interesting, and the professor was okay (Alam). The class is an easy A.",
                    "42": "This class serves as a good introduction to Artificial Intelligence. The work is very manageable and the professor has a lot of knowledge on this subject that he's willing to share.",
                    "43": "I liked this course. It was interesting and I found it to be a helpful overall intro class to AI.",
                    "44": "Very easy class. The midterm and final are both very easy, and only covers what was covered on the slides. The activities were also very easy to do,  and lined up well with what we learned in lecture.",
                    "45": "Professor Alam is a very generous and lenient person, but his assignments also almost always had some bugs or setup problems. I feel that I would've learned a lot more if I wasn't spending time being frustrated with these difficulties.",
                    "46": "This class was reasonable level of difficulty for a CS class — challenging but not impossible. Office hours were always helpful but not always necessary for some of the homeworks, there were some tricky bugs that I found hard to fix alone so OH was beneficial. Prof. Alam was very responsive over email and was a good lecturer.",
                    "47": "This course is the easiest class I've taken at Northwestern. Guaranteed A. The assignments and take home exams are open notes and open chat gpt. Super easy to complete, no need to study for exams.  You won't learn much if you don't actively try to. You can cruise by just doing the assignments and never attending class. Grading would take a while and class was a bit disorganized at first but overall great course if you want an easy AI requirement.",
                    "48": "This class is pretty chill, we had six week–long programming assignments along with a midterm and final. Prof. Alam is a great professor and person, he really tries to teach things in an understandable yet still interesting manner, his lectures are organized and don't expect you to learn everything yourself (which, in my experience, some other 300–level CS courses do). I liked this class a lot, I'd recommend it to anyone doing CS.",
                    "49": "This class was okay. It's not hard to get an A, but Alam's teaching style didn't work well for me (he rambles a lot and imo isn't very good at using metaphors to break topics down into more digestible parts). I didn't really have any probability background coming into this class, and it plays a huge role in understanding the topics that we learned about. Ended up not going to class for the second half of the quarter and just read the slides and watched YouTube videos about the topics.",
                    "50": "Alam is a great lecturer. Pretty easy class overall. Homework assignments take some time to finish but if you go to lectures they shouldn't be too hard to complete. Midterm and final exam were open–note and very easy.",
                    "51": "348 is the textbook \"easy\" 300–level CS course, at least at the moment. Both exams were take–home open–note and each homework was rather short. If you want to learn a lot about AI/ML, take 349. If you want a decent high–level understanding of the field and don't want to spend a lot of hours on it, take 348.",
                    "52": "I loved this course – I learned a lot about AI and the exams were not stressful, which also made the class a lot more about learning which I liked a lot.",
                    "53": "The homeworks can be hard, but are okay when you go to office hours. The exams are super easy.",
                    "54": "Very easy class. Professor and PMs are lenient, and every external material you can think of is able to be used on every portion of the class. You learn as much as you put in, but you don’t need to do much",
                    "55": "This course has unnecessarily difficult homework coding problems, whose concepts are not taught with the level of depth required to do them without help from office hours.",
                    "56": "Interesting and low work load. Prof Alam is a charming and engaging professor. If you have experience in Python, the homeworks are pretty easy. The midterm and final were both open note and internet. Even then, you don't even really need to google anything because every question comes directly from the lectures/slides. <br>The one problem was that this class was kind of disorganized. We still haven't gotten a lot of grades from homeworks early in the quarter. I think it is worth noting though that if you pass all the supplied tests on the homework, you get full credit, so I'm not super stressed about the grades.",
                    "57": "fairly easy course, homeworks can be a little challenging at times but office hours help well with it. Open–everything canvas exams makes them very easy.<br>it's an ok introduction to AI but don't expect to walk out of the course having gotten anywhere near a deep understanding of AI and machine learning",
                    "58": "Fair class. Assignment are not super hard. No recordings.",
                    "59": "Mohammed is really nice guy but sometimes I feel that he can be more prepared for his lectures. Sometimes he gets stumped by the students when they ask questions but usually he is helpful.",
                    "60": "This class is an easy distro for CS electives but you don't really learn AI through this course.",
                    "61": "This class isn't exactly hard, but it's harder than it should be. Instructions for the assignments were often unclear, with professors and TAs posting clarifications just a couple days before the assignment is due. Each week you get an assignment where you implement some algorithm or model, not too many lines of code. Each took me maybe 4 hours, but it varies. Midterm and Final were free points. You can literally ask chatgpt for the answers (says so in the syllabus). If you're deciding between this and Machine Learning, this class is easier and less work, but ML I found to be overall a more interesting and engaging class.",
                    "62": "It is a good course. Prof. Alam really has some thought provoking insights of AI and is easy to talk to and discuss concepts with. Homeworks were fun and challenging at times, especially getting all test cases right. However sufficient time and resources (many office hours) were available throughout.",
                    "63": "This class is an easy A as the midterm/exams were open–note/internet with all the answers being on the lecture slides.  From a learning perspective, this class was okay. The class provided a high level overview of different topics in AI without going deep into any. I definitely recommend taking 349 over this class instead if you are interesting in ML and its applications. <br><br>The homeworks were easy, yet incredibly frustrating. For like every homework, there was either something wrong with the source code given to us or the instructions for some of the were incredibly underspecified. The professor really needs to do a better job of testing the homeworks for bugs before releasing them to the class.",
                    "64": "This class was a pretty easy A. Midterm and final were online, take–home open internet multiple choice – instant 100’s. Hw wasn’t too hard, never went to lecture",
                    "65": "It s a very well–rounded course that gives you a good intro to what AI is and the workings behinds some of the most popular algorithms. The exams are very easy and you can definitely get 100% easily. The homeworks are not too difficult, so it is also suitable for beginning students who may not have a lot of coding background.",
                    "66": "This class is an easy A, but I feel like I did not learn too much. Homeworks are not too hard and midterm/final is open note, so it is easy to do well.",
                    "67": "Professor Mohammed is an incredible professor! The class goes over broad concepts in AI with weekly homework assignments following ideas discussed in class. The two online exams were very forgiving and made midterm season more manageable. Would highly recommend if you need to balance out some heavier CS courses.",
                    "68": "Super easy chill CS class w/ Alam, who is a super understanding &amp; nice prof, you can use ChatGPT on everything (including exams) &amp; all the exams are open–note anyways. Take this for your AI Breadth course",
                    "69": "The class was pretty straightforward and Alam was very understanding with any problems that came up. Not too time consuming and office hours were always available to check homework with. Tests are mainly knowledge checks",
                    "70": "This is the easiest CS course I've taken here. The weekly homeworks take an hour or two, especially if you go to office hours. The tests are open everything, online, and are basically questions straight from the slides. If you want an easy course, go for it. If you want to learn something, look elsewhere. I truly think I could get the same grade on all the assignments/assessments without going to any classes.",
                    "71": "This was a highly enjoyable course overall. Mohammed is a great lecturer and really strives to make the content digestible and engaging. Unfortunately, the assignments for the most part felt a little too straightforward, and did not fully encourage full understanding of the topic at hand. If you want to learn there are opportunities for you to do so, but the low rigor of the course and low stakes exam do not very much inspire engagement when you are dealing with other harder classes. That said this class was a great introduction to a variety of AI topics and I would recommend it as a lighter and fun 4th class.",
                    "72": "HW assignments are pretty short (6 in python) and then 2 midterms are SO easy – open notes &amp; remote and all info is on the slides",
                    "73": "Amazing professor, definitely take AI with prof Alum",
                    "74": "Easy class but Muhammad is an extremely dry lecturer. He's a great professor but not the best at teaching. There are 6 homeworks which account for 70% of your grade. The midterm and final are worth 10 and 20 points respectively. Exams are open book, open internet, open ChatGPT so it's preeety hard to fail. IMO the best class for the AI requirement.",
                    "75": "Really flexible course, can do as a 5th class! Really great points structure for grades."
                },
                "school_demographics": {
                    "Weinberg": 80,
                    "McCormick": 57,
                    "Medill": 2,
                    "Comm": 2,
                    "SESP": 0,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 67,
                    "Juniors": 55,
                    "Seniors": 17
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 3.87,
                    "student_count": 54
                },
                "student_opinions": {
                    "0": "This class really missed the mark, in my opinion. A non–insignificant amount of the class is devoted to search algorithms that I thought were part of the 214 curriculum. The lectures tended to be really rambly. Larry is a very smart professor but it's sometimes hard to follow along. Assignments looked like they were from a different class altogether and were really just implementing pseudocode from the slides into Python. I wouldn't mind too much if the class was easy the entire way through, but the final has an odd difficulty ramp that doesn't match any of the homeworks or the midterm, especially when we were told \"just look over the slides and you'll be fine.\"",
                    "1": "Lectures were not stimulating, you don't really have to go to them. They aren't recorded either, so do at your own risk. There's no textbook they really go by and no Piazza to ask questions so you're basically on your own this entire course. Larry's funny and his tangents are very interesting, but when it comes time for exams nothing's funny anymore. You have no practice exams and no idea of the format. It's a lot of open ended and you just writing everything you know on the paper. The final exam was basically an essay exam for how much writing there was, and no one even got above a 90%. The average was low 70s and there was no curve. Good luck. Labs are 50% and real easy so you have minimal padding.",
                    "2": "Pretty easy class, gives a good introduction to some AI concepts.",
                    "3": "Birnbaum is a great professor. There were only a few homework assignments and they were all doable with the help of the PMs. The midterm and final are both closed book which is tough for a CS class but i felt the midterm was much easier than the final. Apparently in other years the tests have been open book so I'd recommend taking this course with one of those professors.",
                    "4": "Larry is an interesting professor. He gets pretty off topic for a bit during class, and the tangent is only sometimes relevant to the actual material. He does explain topics very well, but is a bit disorganized and hard to get in contact with. If you have any questions, your best bet is a TA. Course in general isn't too difficult or time consuming, but definitely study for the exams.",
                    "5": "Take this course with Birnbaum if you want to learn about the Romanian Jews and the Grand Rebbe Joel Teitelbaum.<br>This along with other historical fun facts and personal anecdotes will consume a healthy sum of the lecture time. <br>To be fair, his lectures are never boring, and I enjoy attending class when I'm feeling a bit down.<br>As for the course itself? A fair bit of work at times but nothing too crazy.",
                    "6": "Professor Larry keeps his lectures chill and interesting, it's not intense at all. He's also very understanding with grades, so I really was there to just learn.",
                    "7": "oh BROTHER. Please don't take this with Birnbaum. We only had four HWs and the midterm was relatively chill, but no organization or piazza is really frustrating when you're trying to plan a quarter.",
                    "8": "If you want a easy course take this class but Larry is super disorganized and will often go on long tangents (super funny but not relevant).",
                    "9": "I thought that this course was quite easy–– and it's even easier taking it with Mohammed Alam (I believe the class has open notes, open GPT for projects AND exams). I would recommend taking it with Birnbaum if you actually want to learn, however, there are several interesting topics you learn in this class that set up a good foundation for machine learning. It's definitely not a hard class overall (i.e. first midterm average being around 86, I believe) and you should take it if you are looking for an easy A as a 300's level course.",
                    "10": "i was condtantly worried about my grade because of how unorganized it was",
                    "11": "I enjoyed this class! Larry is a fun professor to have and he's good at keeping your focus for the whole class. The content was not difficult and the exams were fair.  Also there are homeworks which basically implement the algorithms we go over in class. Overall, I liked this class a lot.",
                    "12": "If you have the chance, I would recommend taking this class with the other teacher (aka not Prof Birnbaum). He covers the material well enough, but the assignments are SO outdated and it's clear he doesn't look at them before assigning, cause there were problems within the code itself. It felt like we were going slow, cause he took over half of class every day to go on tangents, but that meant there wasn't as much to learn for the midterm/final, so there's that.",
                    "13": "I liked how many of the programming assignments are not too difficult nor confusing, and easily taught you the basics of AI. I wish Prof. Birnaum had spent more time talking about machine learning and less on logic since much of that topic is highly abstract and difficult to properly understand.",
                    "14": "PPT and assignments are often delayed. Exam is in person, closed book, and it's hard! I don't know about other teachers but I would take more leetcode than taking this class.",
                    "15": "Course covered basic principles of AI that were somewhat interesting. Didn't go too in depth.",
                    "16": "This course is terrible. From the beginning it was highly disorganized and it was clear that very little effort was being put in to the course on the part of the professor., just from reading the syllabus, which had very little on it. Particularly, up until the final days of the course, we didn't know the grading percentages (weights for HW, midterm, final). The lectures, which consisted mostly of the professor's tangents about unrelated topics, did not help at all for the homework coding projects. If I had not gone to a single lecture, it would not have made any difference in figuring out the homework.  The lectures don't even have the saving grace of being helpful for the exams. My performance on the exams was solely based on prior knowledge of math and ML from other classes I took. The lectures were sloppily put together with low quality slides. Some topics he never even bothered to write the algorithm on the slide, relying instead on a terribly constructed animation which I could barely read because everything was on top of each other. Something I found especially concerning was the professor's attitude. Generally, as long as the professor is effective at teaching, I will refrain from commenting on attitude, but in this case his attitude was detrimental to students. The first homework assignment was hard, it seemed deliberately designed to consume all of your time. Like in theory it was just implementing BFS and DFS but it required a very particular order that was super tough to get. In office hours throughout the quarter, the TAs refused to help. I don't know if this is a directive from the professor, the department, or just incompetence on their part. A TA once googled something in front of me when I asked a question and another time one of them recommended that I put print statements in my code, which is perhaps the most vague and useless advice I have ever received. Everyone puts print statements in their code. I was at office hours expecting some help beyond that. Maybe it was wrong of me to expect help at office hours. I don't know. I just know that I got none. This brings me back to the professor's attitude. As a result of this assignment, many people dropped the class. The following day, the professor said \"I got an email today informing me that many people dropped the class, which is sad but I think this assignment is quite easy and the next ones will be much harder.\" And he kept saying this, essentially taunting us about how hard he was going to make the class after the next few homeworks, not spending a second to reflect that maybe he needed to change something that wasn't working for so many students. That something being his lack of instruction. This \"weed out\" mentality is extremely detrimental to deep learning and the institution as a whole. My advice to people for CS courses is: don't take this class. Take CS 349 instead for the AI requirement. You will learn nothing in this course.ﬁ It's not perfect but it's a lot better overall.",
                    "17": "Not a bad class, the assignments aren't too hard. The midterm was absolutely wack and made no sense but I got a good grade on it. The TA's are not helpful. <br><br>Probably the easiest AI breadth course ur gonna be able to find, so just take it bro.",
                    "18": "This course is a disaster. Total trainwreck.<br><br>Exams are scheduled 2 days in advance, grade percentages constantly change, homework gets released a week late at times. Its just organizational chaos.<br><br>The lecture content is boring at best, there's very little, if any ML here (very briefly introduces KNN, Kmeans and trees). Most of the lectures are a plain waste of time. If you genuinely want to learn something useful, look elsewhere.<br><br>Then there is the issue of the course staff: I don't think anyone fully knew the material. TAs would not be able to help you despite looking at your code for hours (which by the way, turned out to be their fault because the instruction set left out important details). The homework is easy normally, but if you get unlucky and make an assumption because the instructions are vague and nobody really knows what's going on, you're in for a long week.<br><br>Professor Birnbaum is a very pleasant person, but you absolutely do not want him as your professor. He's extremely disorganized, and frequently goes on tangents so irrelevant you can see the class watch him in disbelief. His slides are unnecessarily long and often involves said useless tangents as well. The exams are (befittingly) pretty bad also, because the course staff cannot ask good questions. You simply cannot ask \"what is surprising about [an algorithm]\" on an exam, instructions are vague, confusing. 0/10 would never take again, probably has a bid for one of the worst classes at NU.",
                    "19": "Was a pretty good course. He is a decent prof. Explains topics pretty well and the hws aren’t too bad. The tests are very long and different from other compsci classes with lots of writing.",
                    "20": "This course is disastrously managed and devoid of academic rigor,  falling far below the standards that should be expected at Northwestern. The instructor’s evident disengagement and the chaotic course structure require urgent university intervention to salvage its credibility.",
                    "21": "Larry Birnbaum is an excellent teacher and clearly knew his stuff about AI. The class materials themselves were not too challenging, and assignments did not take too much effort in and of themselves.<br><br>95% of the difficulty of this class comes from its organization. Birnbaum, as good of a teacher as he was, did not know how to organize a class in the slightest. The syllabus was posted with no assignment/test weighting, with a simple \"may be modified later\" in their place. Lo and behold, the grade weights were posted AFTER the last day of class, thus being entirely unhelpful. Even more unhelpful was the fact that class participation was a factor, something that was never mentioned in class or any assignment at all. I hunted through slides to find it, realizing it was essentially a footnote on a posted slide. While there was technically a slide with this information, the fact that I had to look through the entire canvas page to find this information is not great, making class participation function essentially as a grade deficit unless you naturally participate in class.<br><br>Speaking of not posting anything, midterm and final dates and times were posted only a week in advance. He did offer an early final time for people who had to leave early, which was helpful, but when it would be was hinted at a week before and posted a single day in advance.<br><br>As of my writing this, an assignment done three weeks ago has not been graded, let alone the most recent one, despite the fact that he clearly uses an autograder (as mentioned in multiple assignment descriptions). Assignments themselves were simple in idea but bizarre in execution, requiring you to use specific versions of Python and his own methods in your algorithms exactly the way he wanted. I spent a lot of time puzzling over the fact that my algorithms worked on real data but not in his specific test cases. It was abundantly clear that he copied assignments from the previous instructor, a concept that I'm not unhappy with, but he would try to modify the details and test cases in ways that made it harder to understand what he wanted than to actually program it. <br><br>The midterm should have been easy based on the topics. But Birnbaum released no practice test, no test format, no list or even idea of topics, and as such it was hard to anticipate what was coming. It seemed that the TA's didn't really understand it either – I went to office hours to ask a TA how to prepare for the test, and watched him look up \"how to prepare for introduction to AI test\" on google. I wish I was joking. As of writing this, I have not taken the final. But there is a similar lack of material on how to prepare that is reminiscent of the midterm.<br><br>The nail in the coffin is that Birnbaum himself holds no office hours. There is no way to get in touch with him posted on the canvas. Talking to him after class is fine because he's friendly enough, but once again he doesn't really give any good information about the class other than the materials.<br><br>In summary, the class itself should have been enjoyable, but it was a massive headache because of the most abysmal organization I have seen since going to college. While all of the information you need is technically provided to you, you often have to hunt for it amidst confusing assignment parameters and unhelpful TA's. If the class had been moderately difficult, I would have failed. I had to book my flight at the end of finals week because I had no idea when the final would be, I had to spend hours thinking about how to prepare for an incredibly easy midterm topics–wise, and I will end up losing 5% off my grade anyway because he didn't bother to post integral class information anywhere other than a small bit of text in the files. DO NOT TAKE THIS CLASS unless you are prepared to flounder around, not knowing anything at all about how you're doing in the class, until the end when he decides to finally post the relevant information that should have been made abundantly clear on the first day of class.",
                    "22": "Don't take this class with Larry. It was extremely unstructured, there was no piazza, no campuswire, and very little communication about important information. The syllabus didn't have any TA email addresses nor did it have the grading breakdown of how much the exams were worth. Overall the material in the class was super theoretical and that made the tests really hard and long",
                    "23": "Very interesting content –– the professor is a little disorganized/sometimes goes on long tangents during class but he definitely cares about his students and the assignments/exams were pretty manageable. Overall would definitely recommend for a lighter–workload CS elective.",
                    "24": "Larry’s great, but can’t say I learned too much that was lasting. 2 exams and 4 hws.",
                    "25": "Didn't really learn anything. Professor doesn't put in any effort into this class.",
                    "26": "Prof Birnbaum is clearly very educated and passionate about the concepts in this class, so lectures were definitely interesting, but he is also very disorganized. Prof frequently goes off–topic during class, which means that we only had to do 4/5 of the homework assignments since we didn't cover all the material. Part of HW 3 was extra credit as well because he didn't get to go over the material. Also, everything was TBD (syllabus was vague, late policy was unknown, etc.) because the class was so disorganized. Prof would frequently say that he would release the HW assignment on one day but then not actually release it until 3–5 days later (even a week later in one case). The classes are not recorded, there is no Piazza, and Canvas announcements are infrequent, so you really have to go to class to know what to expect (but he does post lecture slides even though they are posted late). The disorganization was annoying, but I genuinely still enjoyed the class because Prof Birnbaum is an interesting guy and he clearly enjoys talking to us. The grading structure was 50% homework projects, 15% midterm, 30% final, and 5% class participation. The midterm and final were both closed–note, handwritten, and in–person, and they involved a lot of writing of explanations of terms (no coding). The median for the midterm was 89%, and the median for the final is 74%. I don't know what to expect for the class participation part of the class because (again) the class is very disorganized, so the grading breakdown wasn't officially announced until week 10 (although it was mentioned in class).",
                    "27": "This class was extremely low time–commitment in terms of work, but it was nowhere near the easy A I thought it would be. I found the exams to be quite difficult and some of the homeworks a bit annoying to work through, especially because one of them didn't run correctly on Windows. Larry's lectures are always entertaining, even if he does go off on tangents sometimes.",
                    "28": "The professor went on many tangents that were either loosely related or completely unrelated. I can tell that the course content was well thought out by other professors, but we were pretty behind on the planned content because of all of the tangents and overexplained examples/concepts. I brought someone not in the class into lecture and they fell asleep almost immediately. To be fair, some of the tangents were entertaining.<br>Homework assignments were pretty simple (just implementing algorithms we learned in class), and they were assigned biweekly (until we fell really behind). I think it's pretty easy to do well in this class. Overall, I would recommend this course, but not with this professor.",
                    "29": "Instructor does a great job and is very enthusiastic about his job. Only issue is that he rambles quite a bit, so it takes a while to get to the actual information being learned",
                    "30": "Professor Birnbaum's instruction was not the best. Whenever he was off on some tangent, most of the class was super engaged, but when he was actually explaining course content, it was the information was rushed and hard to retain.  Lectures sometimes barely touched on knowledge we needed to finish assignments.",
                    "31": "Provide you basic knowledge for machine learning. Good course to take before CS349.",
                    "32": "Birnbaum is a genius. Don't listen to the other CTECs about undocumented assignments, parts of lectures not being about the material, etc. Those are all true, but the POINT of taking this with Birnbaum is the tangents on tech and science history he goes on. The man knows Argentinian literature, very neat proofs for the irrationality of sqrt(2) and the uncomputability of certain functions, the history and motivation of the periodic table, the history of Yugoslavia, and the history of Evanston. He's met Peter Norvig. <br><br>You'll survive the assignments just fine; many people taking this class had very little coding experience and did well. The office hours are helpful. Birnbaum reduced the number of homeworks from 5 to 4. He gave a really easy midterm (the median was almost 95%). He chopped a large part off of homework 3, turning it into an extra credit assignment. And he was super accommodating with early finals for people who had to leave early.<br><br>The course material is, frankly, not super useful, though. The class covers minimax with alpha–beta pruning, A* and heuristic search, logic and machine learning. Minimax and A* are useful algorithms for interviews. ML is obviously extremely useful. Logic turned out to be a real drag, though, and is a totally useless topic for everyone. Birnbaum says he'll probably reduce the logic coverage in future classes, though, specifically because it's dry.",
                    "33": "Do not take this course with Prof. Birnbaum if at all possible. The class is a total circus, and you won't come out of it feeling like you learned anything valuable. He spends so much class time on his rants about random topics from the sun tracker on a globe to the beef between Balkan countries to some random proof about the area of a circle that he doesn't get to all of the actual content that he should be covering. Everything was disorganized the entire quarter. He didn't decide on the grading scheme until halfway through the quarter, then proceeded to change it later anyways. He also said in the syllabus (which is still incomplete at the end of the quarter) that the final would be in class, but informed us a week before that it would be during finals week and that the syllabus just isn't accurate and we shouldn't pay attention to it. I could write a long essay about how bad this professor is, but I think these examples are sufficient. On the flip side, the assignments aren't hard and the exams are reasonable. Avoid him at all costs.",
                    "34": "this course is super easy but will still provide a good intro to the subject. professor birnbaum is very charismatic and entertaining to listen to, but also wildly disorganized. he will post assignments a full week late or with bugs that don't get explained until 18 hours before the submission deadline. However, the course demands very very little, so it would be kind of unrealistic to pretend any of those were really big issues.",
                    "35": "The coursework is not difficult, but the course is fairly disorganized. There are biweekly projects that don’t take too long, a midterm, and a final. The midterm was worded a little poorly, but pretty easy.",
                    "36": "The class was interesting and not very time consuming, just lacked structure and was disorganized."
                },
                "school_demographics": {
                    "Weinberg": 30,
                    "McCormick": 22,
                    "Medill": 1,
                    "Comm": 0,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 7,
                    "Sophomores": 30,
                    "Juniors": 13,
                    "Seniors": 1
                }
            }
        },
        "COMP_SCI 349-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.27,
                    "student_count": 45
                },
                "student_opinions": {
                    "0": "Pros:<br>– Overall, a good class which prioritizes learning and has very reasonable grading policies.<br>– Demeter clearly cares a lot about his students and prioritizes their learning. He is very flexible with deadlines, often pushing them back if he feels like people cannot complete things on time. I think this took off a lot of the pressure to get good grades, which allowed me to explore ideas and methods that interested me. Demeter is also very approachable and patient, so I always feel comfortable asking him questions.<br>– Demeter changed the format of the class to have a final project, which is a great way to work on a significant independent project that looks good on a resume and allows you to learn whatever you're interested in.<br>– Homework projects were more complicated than they initially seem, but grading is pretty lenient and you generally get close to full credit if you have a decent implementation.<br>– This class also covers a wide breadth of methods in ML, so it provides great exposure to the field. Also, there is a decent amount of math, which I personally think is important in ML to actually understand what is going on.<br>Cons<br>– Sometimes instructions on homeworks were vague or unclear. But that also means you get leeway to decide how you want to implement things, and the lax grading policy allows for that too.<br>– Demeter can be a bit monotonous or low energy when lecturing, which may not be helpful when you're feeling tired or unengaged. However, he explains things very methodically and you get a lot out of lectures if you pay attention in class. Also, don't plan on skipping lectures because Demeter doesn't do a good job of recoding them, but that is easily fixed by just showing up to class.",
                    "1": "Learned to write basic machine learning models like random forest, KNN, and feedforward neural networks.",
                    "2": "This is a great class. It was nothing like previous years CTECS said it would be. The homeworks required a strong understanding of the material, but were definitely doable. Demeter is a great teacher and truly cared about us learning the material.",
                    "3": "Great class, Prof. Demeter has admitted that he is also a procrastinator so he doesn't blame or get upset with students for requesting extensions throughout the quarter. Most of the learning comes from manually building the models yourself, which is very nice as it gives great resume padding projects to throw on there.",
                    "4": "Good course for an introduction to machine learning. Homework, final project, and final are all manageable and there are good resources to do well on all of them.",
                    "5": "If you have no prior ML knowledge, you will most–likely–than–not cry over the homework assignments and feel extremely lost for the first 2/3 of the class wondering if you are just stupid. Homework instructions are close to none and most likely than not will have some errors that require piazza posts to fix up. MAKE SURE TO HAVE A GOOD TEAM if you are doing group homework. Demeter is nice but he forgets to talk in a linear matter sometimes and jumps from topic to topic when asked a question. He will sometimes spend ten minutes briefly introducing a topic from later in the quarter in response to a question and then come back to the current topic, making you feel more lost than ever. At the end of the quarter, everything pieces itself together somehow, but you will most likely feel confused for a while. In conclusion, HAVE SOMEONE YOU KNOW WHO KNOWS ML TO CARRY YOU BEFORE YOU FINALLY UNDERSTAND THE MATERIAL.",
                    "6": "Prof. David organized the class in a very comfortable format. The focus was not on assignments or projects, it was mostly on learning and understanding the concepts. The assignments were fun to solve and a benchmark of how well we have understood the concepts. Since the projects were highly flexible, we could experiment different models and work at our own pace.",
                    "7": "I don't know if this is a problem with Demeter, or the class itself, but as an undergrad non–major I didn't feel prepared with the toolset I needed to take for this class. I had to learn a lot more about testing code and taking large files and testing those which was not really covered in the prequisets. Also kind of hard towards the end as the work starts to pile at the end of the quarter while there's barely anything to do in the beginning.",
                    "8": "This is a great intro course to ML that touches on a lot of concepts in the perfect amount of detail. David taught the concepts pretty well and was very nice in terms of workload and grading. We only had 3 programming assignments, one exam, and a project which made this a low stress class that actually teaches useful information.",
                    "9": "I think the final project of this course help me learn a lot.",
                    "10": "3 group homework, a final group project, and a final exam. Grading is not bad and getting an A is very doable.",
                    "11": "Great class.",
                    "12": "I liked that neural nets were covered heavily, but you were also exposed to other ML techniques.",
                    "13": "This course is good in the sense that the class teaches some fundamental knowledge of machine learning and the homework is consistent with the class, letting us to implement algorithms learned in class.",
                    "14": "This was an interesting class. Prof Demeter is super nice and gives extensions on literally everything. There were just 3 homework that you do with a group that took like 5 hours each. Honestly, the class was so easy that it became tough to motivate – I stopped going to lecture after week 4 and still got an easy A",
                    "15": "Great class honestly, after taking it even though I learned that I don't really enjoy Machine Learning that much the class taught me a lot of good concepts and was structured nicely. The professor was awesome as he really understood the stress students go through as was very thoughtful (extended deadlines when needed, not assigning too much homework, making really reasonable exams). Good subject, structured well, pretty difficult assignments, final exam is fairly easy, awesome professor who cares about his students. Good class.",
                    "16": "This course gave a solid comprehensive overview of important ML concepts and models",
                    "17": "I really appreciated how this course focused on the fundamental concepts behind the subject matter in lectures, then challenged us to implement what we learned as assignments.",
                    "18": "David is a great guy and it is clear that he cares for his students and their understanding of Machine Learning. While his lectures can be a bit dry and have a bit too much emphasis on formula derivation, he takes you through a general overview of the most common ML methods which are then put into practice with 3 homework assignments,  a final project, and a final exam. The homework assignments can be a bit tricky, but the final was a simple multiple–choice exam that was very doable.",
                    "19": "Everything was a group project–3 homeworks, with one group, and a final project, with another, consisting of a presentation, preliminary results, and a project proposal. Wasn't a big fan of the group work, as if you got a bad group it was kind of over. Also a final exam involving some calculations/formulas you learned in class. Overall OK. Although I didn't really enjoy lecture, Demeter is a good prof who genuinely cares for his students, and was very flexible when it came to deadlines, which was very helpful.",
                    "20": "35% (3 homeworks, pair or threes), 50% project (teams), 15% Canvas Final<br><br>David Demeter is such a great and cool professor to have a class taught by. A lot of the learning is self directed through the homework and projects. He is a very lenient grader, focusing on learning, and regularly hands out extra credit and extending homework deadlines. The open–ended project and the willingess to meet with the students to discuss the project is something I personally liked. <br><br>A bit of work for an A but the amount of extra credit makes it much more doable.",
                    "21": "Professor Demeter is very in–depth. He explains things in such a way that they make sense to me right away. Going in–depth and showing the matrix multiplications inside the neural network was very helpful.",
                    "22": "This course ate the boots house down. Very well structured and well–paced. Every lecture was a new topic, different but not completely unrelated.  Although there is a lot to learn in ML, this class taught me the fundamentals and what else there is out there to learn.",
                    "23": "3 homeworks, 1 final project, and 1 final exam. Each homework takes fairly long, so be prepared to spend some time on each. The neural networks homework was great as it gave us some exposure to Pytorch and the final project gives us some exposure to with something we're interested in. Final exam isn't weighted as heavy. David is a great professor and really accommodates to students' needs, if we're struggling on something or not and our final project ideas",
                    "24": "course was very good at explaining underlying concepts of machine learning both quantitatively and qualitatively, definitely recommend if you're looking for a course that explains machine learning while being lower stakes than some other courses!",
                    "25": "A pretty solid class. David is really forgiving with deadlines so none of the work was too stressful, and a lot of it was also pretty enjoyable. Lectures aren't really that engaging, and most of the material in lectures is kinda hard wrap your head around. A lot of the homework is trying to figure out what the professor actually meant during lecture.",
                    "26": "This felt like a fairly speedy exposure to ML models, with more emphasis on making you aware of their existence and contexts where you may want to use one over the other. That's about 40% of the class. The other 60% is hours poured into training some of them. I've come out of the class feeling like I have tangible experience building ML models. Demeter is an amazing and very chill guy.",
                    "27": "I really loved this course! Although some lectures would be a bit dull, Prof Demeter is definitely the kindest and most understanding professor I had here. The workload was very manageable and the Final Exam was fair (the practice exam was super helpful). We were also able to work on homework in groups of three which was much appreciated.<br><br>Overall, I had a great experience in this course and definitely recommend that you take it with Demeter!"
                },
                "school_demographics": {
                    "Weinberg": 15,
                    "McCormick": 18,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 3,
                    "Juniors": 17,
                    "Seniors": 10
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 5.09,
                    "student_count": 243
                },
                "student_opinions": {
                    "0": "This course is just amazing. Professor Zach is such a caring teacher and just knows how to teach material in a way you can digest. Also the assignments he assigns are not just some easy implementations or easy FRQ explanations. It gets you to think without making the course impossible.  Optimized for learning. Grading is also very fair and kind.",
                    "1": "If you have a relatively light quarter with other classes I would recommend taking this class then. The material is interesting, but the homework assignments are tough to get through. They're tedious and you really can't rush them right before they're due. Zach is a great teacher, and he really cares about teaching the course and how he can improve it in any way. Grades are determined on a point system, with plenty of extra credit so there's no real stress as long as you take the time and effort to do the work.",
                    "2": "The homework assignments were really good but extremely time–consuming if you don't go to office hours early and start early. Take the class with Wood–Doughty if possible, he cares a lot and gives a lot of support to the students.",
                    "3": "Honestly like this class was much much easier than I would have guessed it would be – HW4 was tough (esp if you haven't taken stats in a while) but otherwise the hws were very straightforward imo w/ very helpful sudo code. I will say using a debugger effectively made this class probably 75% easier than it would have been otherwise but overall I feel like I learned a ton without a massive amount of strife– probably my favorite programming based CS class so far!",
                    "4": "I really enjoyed this class. I learned tons about machine learning and got significantly more comfortable using git.",
                    "5": "This is an exceptional CS class, courtesy of Professor Zach. Zach invests a lot of time and effort into helping students learn. The way the homeworks are structured is fair, and there are lots of opportunities to learn and do well in 349. Piazza and Office Hours are highly responsive, and there is a massive support network setup by the TAs, PMs, and Zach himself. Not the easiest course, as you will have to spend quite a bit of time on the coding/free response for the bi weekly projects, but you will learn a lot and receive a ton of help in the process. 10/10!",
                    "6": "I really enjoyed doing the assignments. They had no busywork and each part was well designed to help me remember a concept or understand it deeply. The only issue I had is we skipped over the math a little too much.",
                    "7": "I think the focus of some of the earlier homeworks is not very helpful. The base algorithms for decision trees and kNN are very simple, so I can understand its an easy option for a homework assignment. However, I think it’s expected that any student satisfying the prerequisites for the course could easily implement those. I think a more useful approach to working with DT or kNN is learning to use current industry standard implementations like Scikit–learn. Their algorithms have more hyperparameters that are important to understand for practical application. I have reservations that the average student would feel they could aptly use practical implementations of DT, kNN or even neural networks based on the homework implementations.",
                    "8": "It's tough to design a machine learning course for students with different backgrounds and levels of experience in the subject. I think this course did a good job with that challenge. <br><br>You learn about how a variety of ML algorithms work, including: <br>* supervised ML: decision trees, linear regression (OLS and regularized),  K–nearest neighbors, and neural networks<br>* unsupervised learning: K–means clustering, Gaussian mixture models, and Naive Bayes<br>* reinforcement learning: multi–armed bandits and Q–learning<br>(of course, the syllabus/topics covered might change from quarter to quarter)<br><br>This year, they also introduced a heavy focus on ML ethics and interpretability, which I enjoyed. I think it's important to combine technical skills with thinking about the implications of how ML is used in the real world.<br><br>Overall, you will succeed in this class with a combination of programming skills and math/statistics intuition. You can make it work with one or the other, but the material will come much easier for you if you have some of both of these skills.<br><br>Grading structure: it's sort of a contract grading system, where there are more points available than you need for an A. The bulk of the points are from 5 HW assignments, each of which features a coding portion and a written free–response portion. There are extra points sprinkled throughout for things like completing regular course feedback surveys and participating on Piazza.",
                    "9": "This course is more challenging than what I expected. This is a great course for students who are insterested in learning different machine learning models and evolution and design ideas behind them.",
                    "10": "good class structure, low stress. good indicator to tell if you like machine learning or not",
                    "11": "Professor is awesome, he will answer almost every question very fast, and each homework was downloaded and uploaded to Github Classroom",
                    "12": "This course was great – it wasn't easy, but if you put in the work you can totally get an A. There are 5 assignments that are comprised of both coding and free response questions, which I appreciated as someone who likes to write in addition to coding. The course also integrated lots of questions of ethics this quarter, which made it more interesting and practical. Zach is a great teacher who really explains the concepts well. Again, the assignments can be tedious at times but if you understand what you're doing, you'll learn a lot.",
                    "13": "I really disliked that we skipped mathematical details which made concepts much more confusing to me.  Overall, one of the worst courses I have taken. Definitely better just to take ML on Coursera.",
                    "14": "Focusing on algorithmic concepts is important to me.",
                    "15": "The projects are the main component and the only one that matters for this course. They take a while but are not necessarily hard. If you put in the effort, you will learn a lot through lectures as well.",
                    "16": "This class is the go–to class to learn AI and even with 348 being available, I think this is the class to come from if you want to dip your toes into it. It does take quite a while per assignment, but the class is chalk full of safety nets to make sure you can focus on the learning. It is on a biweekly assignment schedule, which means you have a ton of time for each assignment, which you should definitely make use of, because if you try to finish each assignment in one or two days, you can expect to run out of time. Luckily there is a generous late day policy in case you didn't have the time budget. There are office hours all the time, so you never have to really worry about deadlines, since they are pretty much always there to help. If I were to summarize the workload, it would be that the assignments are designed to give you real experience and insight into the concepts and not be a one–off application of them, which is why office hours, and this course is so effective at teaching them.<br><br>Zach is built for this class, and I can say nothing but good things about him, definitely one of my top professors at Northwestern CS.",
                    "17": "Prof. Wood–Doughty is a great lecturer, but the coding assignments are way too long and come with way too many short answer questions.",
                    "18": "This course was great. Zach is a great professor and wants everyone to understand the material. no exams, just 5 homeworks. the code wasn't usually terrible but start early and the FRQ can take a while but is super helpful with understanding the material.",
                    "19": "Professor had a great course structure, the Homeworks are so well paced and structured. I loved building up in the homework and then what I learned in one component had to be applied to the component that followed. The TAs are extraordinary, they are so helpful and will sit with you until your query is resolved. The course is split into multiple–point sections and I like that. I have never wanted to skip any lecture that prof has delivered irrespective of what the situation is. His classes are extremely engaging and I would love to take more classes Professor Doughty will take in the coming quarters.",
                    "20": "Great course. Homework assignments are fair and are reflective of the lectures, which are all available online. Piazza and office hours are good resources. Hard to do bad in this class unless you put off work.",
                    "21": "Zach is a fantastic instructor, definitely take this class with him. He has made terrific refinements to the ML assignments and I deeply appreciated the Ethics and Fairness considerations when creating ML models. However, I would have preferred to not have it be such a prominent portion of the FRQs.",
                    "22": "The course is set up in a manner that is perhaps the most flexible and accommodating to people with all possible needs. Homework submission and grading are done in a highly efficient way that allows almost immediate feedback from the autograder.",
                    "23": "Zach does an incredible job of explaining the complicated topics in a very clear way.  The way the homeworks are organized is incredible and so easy to follow.",
                    "24": "The class does a good job of giving a gentle introduction to machine learning concepts without getting stuck too deep in the math. Zach's lectures are very easy to follow and are relevant to the homeworks. There's not too much pressure in the class since your entire grade is based on homeworks, and there are a lot of chances to get extra points.<br><br>Getting help for the homeworks can be very hit or miss. Piazza is probably the fastest but only really effective for simple questions. Office hours can be a hit or miss. Have had office hours where I queued for an hour just to not get help in the end.",
                    "25": "This was an ok course overall. The course consisted entirely of 5 HW assignments with a coding part and free response questions. The workload was pretty high. The coding part alone took a few days to finish and then you can expect to spend another day or two on the free response questions, which were super long and somewhat unenlightening. The FRQs felt a lot like busy work. There was also a big clash between lecture and the HW (which is what matters for your grade). Like in lecture there was a lot of theory, but only a little bit of it applied to the homework. The homework I did mostly through trial and error and sometimes office hours. I felt like we weren't actually learning how ML classifiers work and more just barely scratching the surface by implementing things we don't understand. One assignment essentially boiled down to copying a formula into code, which sounds easy but it was insanely complicated because the math was way too advanced for me. That and numerical errors on the computer. I felt like studying machine learning required a lot of mathematical background which I don't have (even as a math major) and this class just tries its best by throwing us all in and hoping we absorb something. My advice to people taking this class would be to not ignore the math prerequisites. Make sure you know Linear Algebra and Probability. Also, start homework ASAP and go to office hours. Also don't expect lectures to help beyond one or two slides.",
                    "26": "dzvds",
                    "27": "Fantastic class about Machine Learning. Zach is a great professor. He cares a lot about the students understanding content, lectures are great, takes student feedback, very organized, has great slides, has a ton of knowledge, and ties in course topics to real world implications. The course has 5 homeworks and tons of extra credit. No exams. As the professor said, grades are not a concern in the class, he is more focused on students learning the information.",
                    "28": "Good contents",
                    "29": "Take this with Zach, he's super understanding and a great professor.",
                    "30": "it provide a clear whole picture of ML, the content is useful",
                    "31": "All projects, no exams!<br>But do note that the projects can take quite a bit of time, so be sure to allocate time for that.",
                    "32": "If you want to learn how to use ML on cool projects / apply it to real life, I would not recommend the course. It gets gritty in the details of math and stats and focuses more on building models from scratch. In most projects you just import a library. That being said understanding how these models work is important and useful, but I think the class would be more useful if class was spent learning the theory and the homeworks focused more on applications without worrying about theory.",
                    "33": "This course covers a good breadth of basic machine learning concepts. Zach teaches the course very well. The concepts are explained clearly during lecture, the homeworks are clear and help guide you along the right path, and there is plenty of help via piazza or office hours if you need it. I really enjoyed this class.",
                    "34": "The guide for each homework is clear and sometimes may help.",
                    "35": "This is a TIME–CONSUMING class, but easy to get an A if you don't have a busy quarter. <br><br>There are 5 HWs, each worth around 20 points each, but there are many extra credit points you can earn by doing surveys, being active in Piazza, or just getting the HW setup which takes like 2 minutes. In total with the extra credit, there are 121 possible points, and you only need 92.5 for an A. You can basically skip an entire HW and still get an A (I skipped HW 4 which is historically the hardest one). <br><br>Although this class has no exams or projects, each HW is very extensive, and easily took me about 15–25 hours to complete each one. They are due every 2 weeks so if you leave it to the last minute, you'll be doing a lot of work for a few days. There are a lot of office hours and PMs are very helpful so make sure to go to them if you're ever confused. Every HW has a coding section and a free–response question. Both sections can take a few hours to complete, the code can be relatively short line–wise compared to other classes, but it can be difficult and lengthy time–wise to understand the logic behind it, especially if you haven't used numpy before. The free–response questions can also take some time to formulate a good response, and many times relate back to topics only mentioned in lecture and nowhere in the code. <br><br>There are 4 late days you can use throughout the quarter, but once you run out, you have to turn them in on time or you will receive no credit at all. This class takes up a lot of time so I recommend to pair it with easier classes. I also recommend to start early and go to office hours when assignments are dropped, since office hours closer to deadlines can be VERY full.  Zach is a great prof and lectures are pretty interesting, wish I went to more of them. <br><br>Overall, I would recommend this class if you are really interested in ML or are cracked in CS since there are some people that consistently did the HWs in less than 10 hours. I believe 348 is easier and less time–consuming (with the right prof), and might be a better choice for the AI breadth. However, taking ML with Zach is honestly a great choice, you learn a lot through the assignments, and lecture can be very informative. Just be aware of the time–commitment, if you're a procrastinator like me, you will have some rough nights. Good luck!",
                    "36": "The structure of the course is quite nice. For the assignments, I enjoy the coding part and how the test scripts and auto–grader are setup. It is very convenient to test my code and get graded quickly without having to wait for a designated deadline like many other courses. However, I find the free response questions part quite unenjoyable, maybe because I'm not particularly interested in many aspects that were asked in those questions. Therefore, in my opinion, the portion of coding grade should be increased, and free response question decreased.",
                    "37": "The content is hard but fairly interesting.",
                    "38": "Probably the best run and taught CS class here. Zach is a great prof and the material is pretty interesting. Very doable to get an A in this class if you stay on top of the assignments and go to OH as needed. That being said, this is definitely not an easy class. Spent a lot of time each week debugging code, but hey that's CS for you. At least this class has full transparency over grading. Also cause it's a big class there's a ton of OHs.",
                    "39": "Good class for understanding the basics of ML, but definitely not too involved.",
                    "40": "Fair class, if you put the work in, you'll get a lot out of it, but some of the assignments are quite large time sinks.",
                    "41": "Liked the layout of the course",
                    "42": "Good course. Covers a lot of ML topics and the homeworks help you to understand them even more. 5 homeworks and no exams.",
                    "43": "The professor did a very good job at introducing a wide range of ML techniques. It struck a good balance between breadth and depth, which is challenging to do. I do not a CS background, so I spent more time on the hw than average, but it was still manageable and enjoyable.",
                    "44": "The first and fourth homework’s were a bit challenging, but it’s not that hard to get an A as long as you just get the assignments done on time that you have two weeks to do. No exams with Zach either.",
                    "45": "Model building and model explanation.",
                    "46": "This class is good to learn about ML but definitely a good amount of work. The lectures can be confusing or fast at times, but watching the recordings definitely helps. There were no tests and  5 homeworks (split between coding and free response questions). The homeworks definitely took a lot of time and searching through resources to figure out how to do them, but I definitely learned a lot through them. The grading scale is very relaxed with ~120 possible points including a lot of extra credit opportunities. you need 93 points for an A, so there is definite wiggle room that makes it less stressful.",
                    "47": "The content in this class is difficult, especially towards the latter half of the quarter; however, Zach is a really good professor. The way he presents the content and especially the way he structures the class allows you to understand the content enough to at least be able to implement it in your assignments. There are also no exams in this class you are evaluated on your homework assignments.",
                    "48": "I think it's a good coding practice",
                    "49": "This is one of my favorite courses Ive taken at NU. The assignments are hard, but I think Ive learned more from this class than 348, 338, and many 396s combined.",
                    "50": "Fun elective course to take. Assignments and free response questions help you learn a lot. Many extra credit points give you the chance to skip an assignment or a part of one. Good time.",
                    "51": "Good class. Great lectutes. Medo",
                    "52": "This class was a nice exploration into machine learning, albeit with a significant workload. We were given two weeks on the homework assignments, which could take very long (15–25 hours). Although I found it interesting,  the free–response questions often prioritized ethical considerations of ML too much over theoretical or practical application. I think in future iterations of the course, there needs to be less ethics related questions (although don't completely remove it) and more theoretical and practical questions. Despite the challenging workload, the grading was fair and you will almost certainty get an A if you finish 4.5/5 homeworks. For those seeking a more practical machine learning experience, IEMS 304 might be a preferable alternative. Nonetheless, Professor Wood Doughty managed to deliver a comprehensive and rewarding course.",
                    "53": "This class was a very beneficial class for those wanting to get more expertise in the areas of machine learning.",
                    "54": "Good",
                    "55": "this is a very project based class, which I personally enjoy because there is less stress finals week. However, you must start the homeworks a few days before minimum, they are pretty complex",
                    "56": "great class with Zach. lectures can be fast and difficult to grasp all the details of, esp for someone without much stats background, but there are loads of office hours (3+ on every weekday, and on weekends) to support you.",
                    "57": "The class was pretty cool, although the HWs could get a bit frustrating at times.",
                    "58": "The lecture is excellent, and the professor responds to Piazza questions so quickly. You won't feel much pressure about grades, but you'll gain a lot of interesting knowledge, such as ethical issues in artificial intelligence.",
                    "59": "A fine course, I really like how this class was structured but just wish the homeworks were a little more well explained at times.",
                    "60": "Intro to ML and its mathematical formula derivation",
                    "61": "The lectures contained material that I thought was very relevant to machine learning discourse and we were able to practice them through our weekly homework to reinforce them. If you're interested in learning about real ML techniques, this class is perfect. I really liked the discussion of neural networks and classifiers, and learning about optimizing the decisions made when constructing our algorithms, for example. The grading is also easy, only being based on weekly homework, which with enough prep time are not hard at all.",
                    "62": "This is a basic course about machine learning, covering topics including decision tree, KNN, regression, multi–layer perceptron (DNN), CNN, generative model (GAN), un/semi–supervised learning (K–means, EM, naive bayes), reinforcement learning (multi–armed bandit, Q learning), and ethics consideration (such as fairness and fairness metrics). Each two weeks there was one homework containing some coding tasks and some free–response questions. The instruction of the lecturer was easy to follow. The difficulty of coding was mild. The free–response was somewhat challenging I think. It was not difficult to earn a high score since there were many bonus points.",
                    "63": "long labs",
                    "64": "I've never liked AI/ML and am just glad this class didn't make me hate it any worse. It's pretty easy conceptually and the grading scheme is forgiving.",
                    "65": "This class is only based on 5 assignments and a ton of participation credit. It mentions in the syllabus the exact breakdown, but it's to the point that you don't even have to finish HW5 to get an A in the course. The lectures are very math–heavy  (as machine learning has to be), but since there's no exams it's not too stressful if you don't follow the lectures. Zach is very nice and knows a lot about this subject, so take his class if you can. All lectures are posted on panapto so you can either go to class or watch the lectures afterward which was nice for my schedule.",
                    "66": "Good class, not too difficult, easy to get an A",
                    "67": "Love Prof Wood. 5 HW assignments with lots of extra points. Great lecturer and genuinely peaked. my interest in ML. HIGHLY RECOMMEND.",
                    "68": "everything in this class",
                    "69": "The coding part is very interesting and the instruction is very detailed.",
                    "70": "This class is a great introduction to Machine Learning! Would definitely recommend taking it with Zach because he is a great professor and is very considerate of his students' needs. I came into this class with very little experience with stats, however, it was not much of a problem as stats was only involved in Homework 4. Zach gives you many opportunities to succeed in this class as there are 121 possible points and you only need 92.5 points to receive an A. Some homework assignments are hard, however, everything is doable with Office Hours and Piazza. The 1st homework assignment is definitely the hardest, but the rest of them end up being much easier (except Homework 4). My one complaint would be that the material is very math–heavy so sometimes the lectures can be difficult to follow. But regardless, you can still do very well in this class even if you do not understand every detail of every formula.",
                    "71": "Great course to introduce the essentials of machine learning and get accustomed to numpy. Zach's lectures are quite good, they do lean heavily on examples though. Work is fair, nice to have late days so that deadlines are more lax. Be prepared for both coding and plenty of free–response (analytical) questions.",
                    "72": "We covered (in–depth) a lot of topics that I had wanted to cover beforehand which I liked.",
                    "73": "Very interesting topics. Hws are organized.",
                    "74": "Awesome class. Very structured and flexible. Grading is generous. Topics are super cool but can get extremely technical/mathy in terms of implementation (lots of linear algebra and matrix ops). Make sure you review vectorization to avoid loops",
                    "75": "I think the structure of this course lends itself to learning very well, although I think Zach can be a bit too casual with explaining concepts sometimes. Nonetheless, you will learn a lot about how popular machine learning algorithms work, and will have a solid framework to learn more about ML if you take this class.",
                    "76": "My experience was very good",
                    "77": "Amazing class. Zach is a great lecturer and the material is very interesting. The assignments are great (challenging enough but we are set up to do well thanks to the lectures and OH). The written responses are a little bit annoying (specially because they got to be too much towards the end of the quarter); however, I understand that they are needed to make sure we are actually learning from lectures and not simply coding something up. I was looking forward to take this class for so long and it met my expectations. Also loved that the grading is based on HMW, I find I learn better and without stress that way.",
                    "78": "Pretty well–structured class, it's clear that the teaching staff cares about their students and the grading policy is really nice. I also think this is a really important class for CS majors to take since they cover a lot of basic machine learning algorithms.",
                    "79": "Well–designed course, homework is a little tough, but zach will help u in the piazza and this course encouraged you to contribute to Piazza.<br>There is no denying that u can get enough guide during whole quarter.<br>And I found it is totally doable to skip one homework :)",
                    "80": "This course is interesting because it combines a somewhat math–heavy lecture style with a more practical coding approach in the homework. Homework sometimes felt like just converting a math formula to code at times.",
                    "81": "IT was really helpful",
                    "82": "I wanted to focus on the CS and the applications of ML along with the concepts!",
                    "83": "A good class and an easy A for anyone who comfortable with math and programming.",
                    "84": "Very good course",
                    "85": "Well structured course; if you put in effort to this class, you will learn a lot.",
                    "86": "Best organized class I have ever taken at Northwestern. Even if you are not interested in machine learning, if you are a CS major I would highly recommend taking this course. It's not easy but it's not crazy hard, and the support on Piazza and in office hours is top tier. The main reason why I would advocate for taking this course is transparency. From grading to assignment instructions to office hour feedback, everything in this course felt clear and transparent. The class is structured 100% toward maximizing student learning. Some classes feel like they are designed with the purpose of assessing how well you know certain content, which distracts from the actual learning of that content. This course is the opposite. The assignments are a perfect balance of taking knowledge from class and learning by coding and working through the test–cases. If the CS department needs a model for a class, this is it.",
                    "87": "I think this course serves as a really good fundamental. You definitely won't become an ML god after this, but you'll have a solid grasp on the basics. The course isn't too hard but if you like it, take more. Its a great taster course.",
                    "88": "This course is interesting and easy.",
                    "89": "Very broad and high level, covers a lot of topics",
                    "90": "This is a very challenging and time consuming course, but it has a fair degree of leniency in grading policy. The course was rewarding for me intellectualy and I would recommend it, but make sure you have enough time in your schedule for the lengthy homeworks.",
                    "91": "Honestly, one of the best classes I took at Northwestern. This class is very good at teaching you the fundamental principles of Machine Learning: Supervised Learning (classification, regression), Neural Network principles (little bit of deep learning), and Reinforcement Learning. Definitely take this class with Zach since he is very good at explaining the concepts and goes at a nice pace to make sure people understand well. The homework assignments (total of 5) are pretty reflective of concepts covered in class. Overall, this class helped me become heavily invested and interested in ML and cause me to keep learning about ML, especially with Deep Learning side of things.",
                    "92": "The class is relatively organized in terms of projects. There are a lot of free response questions that get me think of ethical concerns in this filed.",
                    "93": "It was fun coding in Python.",
                    "94": "Great class and great professor! Would recommend taking this class! There's no tests and there are recordings.",
                    "95": "great class. can be time consuming at times so start hw early. Zach is a great professor, probably one of the best",
                    "96": "I think the course is well run and well structured and the homeworks were a good  balance of interesting and challenging. My only comment would be that sometimes the tests in the homeworks aren't function specific so you may have to do some digging to find a bug in your code. Luckily the teachers are very quick to respond on piazza.",
                    "97": "This is a good class. Prof is really good. There's lots of stats in this so beware",
                    "98": "This was honestly a pretty good course. I feel like if you want to understand all of the different math/formulas that go into Machine Learning, then this is the class for you. Zach is a very understanding and accommodating professor and I believe that while homework assignments are generally long since you have to complete both a coding portion and writing portion that can be both be their own grind, you do come out of this class learning a lot. I will say though that if you are more so interested in learning about how to use Machine Learning to solve real world problems, then this might not be the class for you since a lot of what this class revolves around is building ML models from scratch but this is for sure a good starting point and stepping stone for more advanced classes in ML that Northwestern has to offer.",
                    "99": "Definitely a solid class, whether or not you're interested in pursuing ML. I'm not sure how much of the information I'll retain (burnout is crazy), but building up so many things from scratch (exclusively numpy) in the homework assignments really forces you to understand –– at least partially –– how everything works. Very reasonable courseload imo: each assignment is worth roughly 20 points (some/most for programming, the rest from FRQs), with another 20 available from participation (Piazza) and filling out course surveys; they average 8–15 hours for most people, so if you're better at taking advantage of the two–week–long periods in which you can do an assignment than I am, you'll be solid. Also, 92.5/121 points gets you an A, which is nice. Overall, a super doable course. Would recommend. My main gripe is that FRQs could be obnoxious sometimes, but again, it was generally easy enough to get help with them (even when I was procrastinating like crazy). You also get four late–day credits (can use up to two per assignment), which gives you more flexibility.",
                    "100": "Wood–Doughty is great! Lectures aren't super interesting but this is a good class. It is very well structured.<br><br>Most of the grade was 5 assignments, each of which we had two weeks to complete, which was more than enough time. For each assignment, half was coding and half was FRQs. The rest of the grade was just course surveys.",
                    "101": "Great course where you build fundamental ML classifiers from scratch rather than using any Scikit functions. Zach WD is great and wants to make sure everybody does well and is cool with his style of teaching.",
                    "102": "Zach is a great and engaging professor! The hardest part about the class is the homework, but if you start them when they're assigned it is not as hard!  Conceptually it can be difficult, but there are many resources to help you. The late days and point–based system give you some leeway, and all the office hours are also incredibly helpful.",
                    "103": "Nice class; put effort into assignments early/asap, makes the class more manageable and enjoyable.",
                    "104": "Great intro to machine learning class. I have taken some adjacent classes so this class was not challenging but it was quite interesting. The pace of the class can be a little bit slow but considering it is 300 level course, I think it is reasonable",
                    "105": "I think this is a great course, especially taught by Zach. The homework isn't too bad if you go to lecture, and the way the course is structured is very forgiving if you do really poorly on an assignment. Be careful if you skip lectures that it doesn't get on top of you.",
                    "106": "good",
                    "107": "Overall a great class！The coding parts give me a lot of chance to improve my coding skill. Although the free responses are boring and somewhat tedious.",
                    "108": "Great opportunity to learn the comprehensive machine learning field. It needs normal Python skills for sure (e.g. function in function). Very productive courses for me, if you work punctually, you can easily get an A.",
                    "109": "I had a very fun time completing the assignments",
                    "110": "This has been by far my favorite CS course. Zach is an incredible lecturer who truly cares about his students. If you have any interest in machine learning, you have to take this class!",
                    "111": "I highly recommend this course as an essential foundation for comprehending machine learning.",
                    "112": "Really good course for those interested in ML. If you really don't care about ethics you might be annoyed, but the lectures were clear, the grading is generous, and the assignments are interesting.",
                    "113": "Amazing course. In my opinion, a better AI course than CS 348. Prof. Wood–Doughty is a great instructor and is able to explain clearly. Him and the pm staff were all active throughout the course in helping the students through office hours and piazza. The grading of the course, numerous extra credit points, and late days all helped in removing the stress from your grade and you were actually able to focus on learning.",
                    "114": "I think this course is pretty challenging to me, especially for the Native Bayes part. Overall, you can learn a lot from it.",
                    "115": "I learned so much content every lecture and each assignment was a little tough but very doable.",
                    "116": "The course is a lot of work. you need to know about numpy functions and how to do them to get through the hw assignments",
                    "117": "The course was useful to learn a breadth of knowledge regarding ML. However, there was little exploration in class on the Math side of the topics we were learning, which limited the fundamental understanding we were able to retain from the concepts we covered. I feel that exploring the math would be the more useful in retaining the concepts and also understanding them to a better degree. The assignments are also such that they implement most of the things for you, and you only have to write a couple helper functions to complete the assignment. If someone asked me to implement a simple KNN from scratch I probably wouldn't be able to do it even though it is considered one of the easiest models we have learnt. The instruction is pretty good with Zach as he is patient and committed to helping students understand what is being taught, but I just feel like what is being taught is not helpful in understanding ML better. EE versions of this course go into a lot more mathematical depth and actually explore how to implement things from scratch.",
                    "118": "While having the ethical problem discussion is very important and helpful, the machine learning algorithm and method were well taught,  and the teaching style really helped students to understand how things work, I enjoyed the way this course construct and I did learn new stuff from it.",
                    "119": "It is a great course. The project work load is not small but the content is interesting. The project is effective for you to learn machine learning algorithms. The grading is generous and the course offer lectures recording . Nothing to complain, a very good course to take",
                    "120": "I thoroughly enjoyed the course. Going through coding fundamental ML algorithms was exactly why I took the class, and the class offered extensive opportunity to do so.",
                    "121": "This course is great, take it with Prof. Wood–Doughty!!! He is really really good and his piazza response time is INSANE, he is the GOAT and will be taking classes with him in the future –– he's also just a genius. That being said, the homeworks for this class are all really chill up until HW4 (naive_bayes) ––  I probably spent 40 hours on naive_bayes and maybe max 10 on the others. While of course it's not always fun to hand–code a ML that you can just import these days, I think it was extremely useful to do so and also the whole...point of the...class. People complained about that a lot, but the whole point of the course is to learn ML lol so of course we will be coding ML from scratch. I'm excited to apply what we learned to my internship nd I really loved the the professor let us train data on real datasets, really useful. I think this is a great course!",
                    "122": "very much work. in last 2 week have 2 hw of 5 overall hw",
                    "123": "Really do your best to pay attention and ask questions about the content when you have something you're not sure about. The class is not as difficult as others seem to make it, but it does require a lot of time to complete each assignment. Although you can still get an A without getting 100 on all assignments, make sure to try your best to complete each assignment fully and use late days when needed.",
                    "124": "I like how flexible the course is with your grade. There is a good trade–off between the amount of work you put in, and the grade you will get. It is not like you will be fruitless in this class if you put in a lot of work like some other classes.",
                    "125": "Nice coding homework with the autograder and record is clear and helpful.",
                    "126": "This class was a lot of work. It consists of 5 homework assignments, each of which you have 2 weeks to complete. The class has 121 possible points but you only need 93 to get an A which is nice and the autograder allows you to see your scores within the hour. If you are interested in machine learning I would take this class, just be prepared to put in a good amount of time on the assignments.",
                    "127": "nice course, but really really intellectually challenging course",
                    "128": "Zach really cares about this topic, and it reflects in his assignments––part coding and part FRQs. The FRQs are really interesting and ask about application of concepts and also hypothetical scenarios, which are really interesting and underrated in the field of ML. He was really understanding and was willing to put in the extra effort during office hours to make sure his students understand the material and how to do the homeworks.",
                    "129": "Course is good. Worth taking it. Definitely one of the better AI/ML classes to take for an introduction",
                    "130": "Overall great class to ease into ML, but some of the higher level math concepts behind the things we were learning were very confusing and not fully explained",
                    "131": "This class helps me study machine learning more systematically",
                    "132": "Great class! Zach is a great lecturer and really cares about his students. Easy A, no exams, <br>Iots of extra credit.",
                    "133": "While I learned a lot in this course I found that there was a two–sided challenge. The lectures covered topics at a high enough level such that a lot of the mathematical basis for some of the ML topics (particularly later in the course) was skimmed over and not rigorously explained, but simultaneously the lectures were at a low enough level that it was not clear how/when to apply the models we learned about. This was an odd and somewhat disappointing balance that took away somewhat from a course with exceptional potential for in depth learning/understanding.<br><br>Overall, I would still highly recommend this course as an important and engaging introduction to ML topics. It must also be said that Prof. Doughty is extremely knowledgeable and is very open to a variety of questions throughout lecture. This class is definitely worth taking and is more manageable if you are smart enough to start the assigments early which I never seemed to.",
                    "134": "The class was well structured, giving students time and resources to learn about different machine learning models.",
                    "135": "I like the format of the class, you have to get 92.5 points out of 121 to get an A. Half is coding, half is free response that makes you to think ethically about AI. Definitely challenging, but very feasible to get an A.",
                    "136": "I loved how Zach incorporated a focus on real world applications of ML, and the fairness/ethical side of the algorithms. This is a topic I feel like is often woefully under covered in most CS courses, but is actually the most important and interesting part of CS for me. The tool can never be divorced from the task it is used for, and I feel like Zach designs this course in very meticulous and smart way, it's very clear that he puts his heart into his teaching :)",
                    "137": "Very good class, but it is more work than average. Two weeks per assignment is very manageable though, I usually started a week before each assignment was due and was fine for the most part. Office hours are frequent and very helpful. Just start early, do a bit each day, and ask questions when you need help. Zach is a very good lecturer. The grading system is super forgiving, you only need like 92 total points to get an A and there's 121 possible points. A lot of people already have the requisite amount of points before the final assignment, so you can just not do it and get an A. I won't say this class is an \"easy A\" because it is a decent amount of work and the work can be a bit tricky but if you do all of the work it is an easy A. All of the resources are available for you to get an A and then some.",
                    "138": "Good course, Prof. Wood–Doughty is super nice and clearly passionate about the topic. The homework were not horrible, some of them the instructions were slightly confusing. Overall the course is good and if you put in the work you will get a good great.",
                    "139": "deeply think about the essence of a principle with active and open atmosphere built by Zach",
                    "140": "I feel much more confident in delving into ML. I feel that I'm equipped to try my hand at ML projects outside of class thanks to the valuable context provided by this class.",
                    "141": "Professor Wood–Doughty is a great professor and really encourages students to learn the material; the course is structured so that there are five homeworks (coding and free response) and zero exams with several opportunities for extra credit. While I personally found the lectures to be a bit dry, I believe it is an inevitability due to their comprehensiveness. I found it unnecessary to do any reviewing myself of the prerequisite subjects given the refreshers and recaps within the lectures. I appreciate how student feedback (which gives extra credit) is constantly and iteratively integrated into the class. Take this class if you have any interest at all in machine learning!",
                    "142": "I really liked this course! Professor Zach Wood–Doughty explains things very clearly and really breaks down the concepts very well.",
                    "143": "Good intro course to ml. Zach frames ML problems very well. There are no exams, and the grade only consists of homework. Does not focus much on deep learning neural networks, but instead does a survey of supervised learning, unsupervised learning, and reinforcement learning. Everyone should def take",
                    "144": "Definitely take Machine Learning with ZWD. He presents the material very well, and I have learned a lot from his class. Adding on, his grading polices make it very easy to get an A in the class!",
                    "145": "I wish I had learned more about when to apply each algorithm. Otherwise, it was really interesting to learn how to use each one.",
                    "146": "This is a good class. The professor is a great lecturer and has very good grading policies. The homework assignments take time but there's tons of office hours.",
                    "147": "I think this a great course. Zach is an amazing professor, his lectures are really interesting and he is very committed to ensuring that the course is structured in a way that best benefits students. The course grading is very generous, it is entirely based on homework (with some bonus points for filling out surveys, participation, etc) and doing well in this course is very doable if you devote the necessary time to the homework. I really liked how the homework was organized, the coding portion was split into a lot of small tasks you could do one at a time which made it a lot more straightforward. I typically didn't spend more then 5–8 hours on coding, and you're given two weeks to do the assignments. The free response questions could take awhile since a lot of them require very thought out response, but overall I didn't feel like the course was at all overwhelming. Overall really great class, and a great introduction into different concepts in ML.",
                    "148": "zach is awesome",
                    "149": "It is a good and fair course.",
                    "150": "This was a really interesting class overall but definitely moves fast at times. The material is conceptually challenging so it is easy to get lost in lectures, yet you it is still doable to do well on the assignments. The coding is fairly manageable but also not meant to be left until the last minute. Utilize office hours. Also, don't save the FRQs until the last minute. grading is at times pretty harsh and they can take a lot of time",
                    "151": "I think coding is very hard for students like whose major does't need to code much.",
                    "152": "Lots of info and math.",
                    "153": "The course was taught well and grading was reasonable and reflective of your ability to apply the concepts."
                },
                "school_demographics": {
                    "Weinberg": 62,
                    "McCormick": 130,
                    "Medill": 1,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 35,
                    "Juniors": 81,
                    "Seniors": 39
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.97,
                    "student_count": 144
                },
                "student_opinions": {
                    "0": "This class was way too easy and focused too much on ethics at the expense of rigor in the area of ML. Don't take it if you expect to learn useful things for your research.",
                    "1": "Zach needs to stop catering to the CS majors who want to just graduate, and make this class actually challenging. Start by giving us exams, and forcing us to understand the nitty gritty details of the math, instead of just waving hands for the CS majors who don't know anything. Without math, machine learning is... machine. There is no learning without math.",
                    "2": "The course was very interesting and manageable. I enjoyed the lectures and doing the homework assignments.",
                    "3": "Zach is a great lecturer (prob one of the best CS professors here). The lectures and PPTs are all pretty well designed and comprehensive. Unfortunately the course content &amp; homework have too much focus on ethics and as a result a lot of us didn't really get a solid grasp on the more important concepts.",
                    "4": "Awesome class",
                    "5": "Class is pretty low work and low time–commitment. Not difficult to receive an A. interesting if you haven't learned any ML before, but can be a bit repetitive. I was not a fan of the large emphasis placed on ethics, which reduced the time spent on actually explaining and discussing models.",
                    "6": "Grading system is very nice, only issue is that a lot of the time they throw around terms and concepts quickly in class so it takes a while to go back through and properly understand why and how things happen.",
                    "7": "As my first AI–related course, this course taught me a lot of approaches that are widely applied nowadays. The difficulty and workload of this course is very appropriate. A good course.",
                    "8": "Overall I learned a lot from this course. It was my first formal CS course, so at first I struggled with the format of the assignments, but got used to it soon. I felt sometimes that the format of the assignments was more like a puzzle to solve, and less a test of our ML knowledge (the FRQs helped supplement this more and ensure that we understood the theoretical concepts). After having taken the course, I understand the basic foundations of the ML topics covered, but I feel would still have some struggle if I needed to implement an algorithm for my research in the future. Overall, I'm glad I took this course and am much more confident to use ML techniques in my research than I would have been without having taken the course.",
                    "9": "Great class! Enjoyed it thoroughly, it was progressively more difficult but the professor explained well the concepts.",
                    "10": "Great course to take with Zach. He really cares about the course and you can see it in the homework assignments, the organization of the class, and the overall support we have for the class. The homework assignments are really good (both the coding and FRQ parts) at making sure you understand all the material taught in lecture. Class grading is also very fair and not very hard to get an A.",
                    "11": "This is a pretty standard Northwestern CS course. The lectures are kind of boring, but contain a lot of information that is helpful for homeworks. The homeworks are not terribly hard, and they give you a lot of time and resources to complete them.",
                    "12": "Overall, this course is a pretty good introduction to ML. We go over 5 main aspects of ML, with a homework on each one. For the homeworks, the coding portions aren't that time consuming, but the FRQs are a little bit frustrating to do sometimes. There is also 20 points of extra credit available, so there isn't much grade pressure and no exams.",
                    "13": "It was interesting stuff but only for certain topics. At many times, it was boring. I did not enjoy the ethical discussion FRQs, even though I see them as important – I only care for the technical part of this class...",
                    "14": "Generous grading based pretty much on 5 projects (coding + frq). If you start early and ask for help, really not bad. It's a bit easy to fall behind though, since lectures are recorded and pretty early in the morning, so I would recommend actually going if you know you might do that.",
                    "15": "Biggest takeaway: ML is just statistics on steroids. If you are into stats and math, you'll enjoy the content of this course. I found out from taking this course that, as a stats and math disliker, ML is not for me!<br><br>This classes focuses on the theory and math behind ML models. You will be building various types of models from scratch using numpy. That requires you to have a really good understanding of linear algebra and matrix operations. Its hard!<br><br>Lectures are mid. Lot of time spent explaining rather simple concepts in the beginning of the course, and not nearly enough time spent explaining the harder more advanced concepts at the end of the course. The quality of explanations also diminished as they started showing you more and more beefy math equations, instead of explaining the logic/intuition.<br><br>Grading is very reasonable –– if you get enough points to meet the A threshold, you'll get an A. This means that if you do really well at the beginning of the quarter, you may not even need to do some of the last assignments. Grading for coding assignments is straightforward –– if you pass the test cases they provide you, you'll get full credit. Free response questions are the real challenge –– there's a lot of them, they require a lot of thinking, and sometimes it can be very hard to figure out what they are looking for because the instructions &amp; questions are not very detailed.",
                    "16": "This class was great. There are 5 HWs with coding + free response portions. Zach is a great professor and the TAs are very active on Piazza. Lots of options for bonus points and you'll learn a lot about ML.",
                    "17": "As a person who is not an expert at coding but has been a CS major for 3 years, I can say this class is moderately difficult. The content can feel dense at times, and the assignments insurmountable, but they are graded based on test cases (and some free response questions, which are graded fairly leniently) which means that if you're passing the test cases, you're good to go. Attend office hours early and frequently (at least for homework help) and you'll have no problem getting an A in this class, even if you're not *good* at coding. There is no final exam. Grades are done on a point based system, with ~120 points available and ~90 needed to get an A. So plenty of opportunities to get points. You can get an A just by acing the homeworks if you're able to. Course staff are helpful so don't be afraid to post on Piazza when you're stuck.",
                    "18": "I think the general course structure is good, hitting most of the fundamental machine–learning algorithms. I have three specific comments about Zach's 349:<br>1. We do have ethics discussions that happen outside of lecture time. It is just once in the quarter, so it's not a big commitment. However, I am not sure what the end goal of these discussions is. All I took away from my discussion section was that \"ethics and privacy are important\" but it did not give me a new understanding of the issue of ethics and privacy in machine learning.<br>2. I enjoyed the FRQs which were not solely about coding. It asks you to connect what you have written in code with the real world.<br>3. I think the lecture slides could be more organized since there were many moving parts and sections that at times I did not know where we were in the lecture.",
                    "19": "This is a good course– definitely recommend taking if you are interested in machine learning or if you have never learned about ML and are pursuing a CS minor/major. This is such an important topic that is being used in all industries, it would be a shame to miss this class. The lectures themselves were pretty good but I wouldn't say the best, sometimes it felt that concepts could be explained at a much easier level. The homeworks are long but doable if you get started in advance. Only annoying part is that you focus solely on implementation and not application. You implement algorithms that Python libraries already do for you, so I wish the focus wouldn't be on figuring out how those programs work but rather on applying them to real world models. All in all, take this class!",
                    "20": "Overall good class. The free response questions on the labs are kind of annoying but I get why they are there.",
                    "21": "I learned about the ML models and how to implement them in Python. Coding portions of the class were was pretty straightforward and simple. I think I spent a lot more of the time answering FRQs for HW. Lectures were good though.",
                    "22": "This was a very solid course, very organized and assignments are very clear. Lectures aren't 100% necessary for successful completion of the assignments (most people didn't go but I suspect the early time had a lot to do with this) but they certainly help. Take this class for some fun and useful coding assignments.",
                    "23": "This is a great course. The class is well organized and the instructor values student feedback. There are no exams so in my opinion you learn exactly how much you put in – if you try you’ll get a good grade. I think it also provides a very good overview on <br> core machine learning algorithms, and it is decently easy to follow even as someone who is not majoring in computer science. Would recommend.",
                    "24": "The professor does a great job keeping the assignments accessible but still challenging/ hard.",
                    "25": "I enjoyed this course a ton, especially Prof. Wood–Doughty's lectures. The incorporation of ethics and applications in medicine were a nice touch as well.",
                    "26": "Very well organized. Zach is a great professor.",
                    "27": "This machine learning course was transformative, enhancing my understanding of algorithms and data analysis. The hands–on projects were particularly valuable, solidifying theoretical concepts through practical application. The focus on real–world problems and cutting–edge techniques was especially impactful. Love the ethics parts especially which was incorporated in each assignment.",
                    "28": "I've learned a lot knowledge about machine learning through this course.",
                    "29": "Wood–Doughty is an incredibly good lecturer, but he doesn't dive too deep in the content, which can make it hard to do the homeworks. However, if you use your resources properly (office hours!), then they won't be too much work. There are only five homeworks, each with a coding portion, which is impacted by the shallow covering of the content, and a free response portion, which is usually not too hard, just time consuming. In addition, there's a lot of extra credit – do it when you can, and it will give you some cushion for times when you need it.",
                    "30": "I wanted to get hands–on experience implementing machine learning models– this course definitely accomplished that to agree, but the modularity of the assignments (filling out individual functions) definitely made it a little easier although it felt a little hand–holdy.",
                    "31": "This class is pretty hard at times but if you can take the time to debug and understand you will get by just fine. Lots of extra credit is offered which is nice. The worst part of this class by far is the frqs but they really aren't that challenging just time consuming.",
                    "32": "Focused a lot on technical projects which I like",
                    "33": "I think this is a good class, and with no exams and grade pressure, it allows you to not learn under stress. My only criticism is that the FRQs should never be worth more than the coding imo, given that the code is much more intellectually challenging and should therefore be more rewarding.",
                    "34": "I would recommend any graduate student to take this course as early as possible and especially if Professor Zach's taking it. For undergrads I recommend take in sophomore year. This will set the foundation needed if your interest align with AI or ML, be it research or industry",
                    "35": "A lot of learning, you can definitely choose to go deep into the math and theories if you're interested. Instructor has a lot of knowledge and material on hand for deep dives. If not, you can also learn just enough to complete the projects, which is still A LOT! I really like the class. No exams, just project grades with some late days as well.",
                    "36": "Solid CS class if you need to fulfill requirements. If you go to class the homework will be straight forward and that's pretty much all you have to do for class (no exams or group projects) other than some surveys and a discussion section.",
                    "37": "The projects are a lot of work but there are only 5 of them. No exams is nice. Do the most of the work and you'll get an A. Lectures are sometimes vague and not the most helpful for the projects, but office hours are great. Know python pretty well before you take. Overall good class.",
                    "38": "Prof. Wood–Doughty is a great lecturer and the class is structured so that it is easy to score a high grade. There are no exams and only 5 homework assignments. Each assignment does not take too long to complete,  and office hours are helpful.",
                    "39": "The coding assignments are difficult and there's a lot more writing in the class than you might expect with free response questions based on your coding. Despite this, I still enjoyed the class because the questions challenge you to think harder about why you're making the choices you are to implement your model. Additionally, this class has a strong ethics component which I think was important.",
                    "40": "I feel that the course does not emphasize how much of a statistical and mathematical basis is required to truly understand the concepts. <br>For someone who has only learned the basics of Statistics and Linear Algebra, a lot of the concepts just become things to memorize rather than understand.",
                    "41": "Give me more experiences of machine learning models and how they works",
                    "42": "The concepts in machine learning were clearly explained. Although some homework were particularly difficult, there were a lot of helps during office hours.",
                    "43": "The courses were well taught but I feel like some of the projects (decision tree and naive bayes) did not have to be projects and the focus on implementations for them made it not too enjoyable. Other than that, the projects were good.",
                    "44": "This course was great. I already had some experience with ML in a data science environment so it was really interesting to see/understand how everything worked \"under the hood\" so to speak. The combination of lectures, articles, and the ethical discussion made for a really well–rounded and holistic understanding of not only how ML works, but how it is applied in society and its ethical implications.",
                    "45": "This course was helpful for learning some of the fundamentals of machine learning, which gives a lot more context to some of the other projects I'm interested in. The course also had a significant focus on the ethical applications of machine learning which gave important cautions against some of the ways that this technology could be misused.",
                    "46": "a good intro course to ML. chill grading. recorded lectures. a good class to take in senior spring",
                    "47": "The hws were quite time–consuming and could be challenging sometimes, but they were worth completing. I liked the fact that there were many opportunities for extra credits so you don’t freak out if you don’t get very high marks for the hws.",
                    "48": "This course was pretty good, assignments weren't too bad and the grading system is great and pretty lenient",
                    "49": "This class was challenging but interesting. Definitely take this class when you are underloading or taking easier classes. The homework assignments take hours to complete for multiple reasons. The concepts discussed in lecture are really high level and can be confusing conceptually.  The lectures approach the main concepts in terms of the mathematics, but the in the homework assignments you are implementing the concepts in terms of code, so that gap makes the homeworks a lot more intensive.  Additionally, if you are unfamiliar with numpy and manipulating matrices in code, it will take several homework assignments before you have a good grasp. I think this class would be a little easier if the lecture slides were more visually organized and provided a little more background on how the mathematics of each lecture topic translates to the coding (instead of only explaining the math derivations... the naive bayes pdf was a better example of presenting the math and the coding implementation in a cohesive way). Though it was really difficult and frustrating sometimes, what I learned was useful and informative.",
                    "50": "I would definitely recommend anyone to take it, Professor Zach and Professor Alex do a great job in explaining the content from bottom up. The equations can be a bit challenging to wrap around initially,but once you have a grasp of  the fundamentals of topics such as probability and linear algebra you'll get a hang of it.",
                    "51": "The projects can be pretty difficult, but the instruction + office hours are a GREAT resource and really helped me lock in material.",
                    "52": "Love this course, really helped me to understand ML",
                    "53": "Course was great, coding assignments were appropriately challenging but also kinda fun. Every topic is really cool and I enjoyed the class.",
                    "54": "very easy class but the free response questions are a bit of a pain.",
                    "55": "The course has a flexible schedule so you can learn at your own pace. However, you get out what you put in so I think it is important to spend decent amount of time on the homework assignment.",
                    "56": "Course was fine, pretty easy generally with some humps here and there. Wood–doughty is a good lecturer but the course itself is mostly about implementations of models rather than applications.",
                    "57": "This course is super cool. Like if a video game were a class then this would be it.  The hardest part of the class is wrapping your brain around the concepts, which I guess is the difficulty in any class. But in this case, after you understand it, the implementation is a really direct 1–to–1 application of the concepts.",
                    "58": "Zach is a great professor and an amazing lecturer! I found his lectures super engaging, even though I watched almost all of them through the recordings rather than going to the 9:30 am lecture. Peng was also a good lecturer, but I definitely preferred Zach as he gave more intuitive explanations at times.<br><br>The homeworks weren't horrible, but you should start them early unlike me, and don't underestimate how long the FRQs will take––they can be quite time consuming. I also liked that I didn't have to stress too much about getting an A because of the point system.<br><br>Overall, this class is super interesting, and I liked that it was more theoretical than practical because that suits my particular interests.",
                    "59": "I liked this class much more than I thought, especially since the emphasis is on learning and not a grade (the grade system and assignments are structured very well). I appreciate <br>I also liked the ethical questions that we did in assignments, though they did take up a bit of time sometimes. Just make sure you have enough time to do the assignments and you'll get  good grade (there's more than enough help if you get stuck).",
                    "60": "It was great overall, a huge time commitment though.",
                    "61": "This course was all projects and no exams which was really nice as a CS course. Zach is very engaging, the TA a bit less so (he taught for the second half of the course) but overall a well taught class. As long as you start the coding projects early and go to office hours, this class is very manageable. I was constantly working on a homework, but if you work about one hour a day then you can get it all done. The grading system is very manageable: there are 118 points possible and however many you get are your grade. This made it a bit more stress free. There are also late days available. Basically do not procrastinate and you'll get an A in this course.",
                    "62": "This is a good class. You learn a lot but it is still pretty easy to get a good grade",
                    "63": "The PMs were very helpful with working through the homework assignments with me.",
                    "64": "Good class if you want something that only has the homework assignments and that's most of the assignment load. Important and ostensibly good–to–know stuff taught too",
                    "65": "This is a well structured and fair course. It introduces you to many topics in machine learning but does not dig too deeply into any of them. Very easy A.",
                    "66": "Class is graded on five homework assignments totaling 100 points, plus 21 extra credit points for doing things like filling out surveys and posting on the class piazza. HWs were definitely a challenge—they consist of a coding section and a frq section. It'll take some time to complete them but with all the extra credit opportunities you can still get an A after losing lots of points. I didn't, but, you know, you could if you have a good understanding of the concepts.",
                    "67": "Pretty alright class, I got kind of screwed by doing everything the day of. I didn't go to lectures because I actually learned most of the algorithms in other classes and it ended up working better for me so I'm really glad the class had the resources for remote learning.",
                    "68": "As someone with very little ML experience, I thought this course did a much better job than CS348 at providing an overview of the field. I feel like I have a very solid grasp of the main ML models in use today, as well as a decent understanding of the math behind them, despite it frequently getting very complicated. Zach is an amazing teacher and has a great sense for where concepts get confusing and he needs to slow down to explain. Also, grading is very fair and stress–free: most of the points come from the 5 homework assignments (each with auto–graded coding portions and manually–graded FRQs), and there are lots of easy opportunities for extra credit. In my four years here, I would definitely say this was one of my most enjoyable and beneficial CS classes in terms of the amount I learned!",
                    "69": "Challenging but good course; all assignments, no tests, and professor/TAs/PMs are very helpful.",
                    "70": "FRQs are great and encourage me to really understand the concepts.",
                    "71": "n/a",
                    "72": "I was really interested in all the topics we learned and thought they were pretty useful for someone who had no ML experience.",
                    "73": "This is kind of a difficult class if you've never had any exposure to ML before. Honestly, the 9 A.M. schedule really doesn't help either and by week 4–5, there were only about 6–7 people in lecture so that was even more discouraging. Otherwise, Zach and Peng were both great lecturers and are very responsive on Piazza. The homeworks were set up very well, which definitely made them easier to do. The homeworks and their accompanying free response questions definitely took a chunk of time though, and for some homeworks, the free response was actually worth more than the code itself. <br><br>The grading was broken down into:<br>5 HW + FRQ <br>5 short course surveys<br>A required ethics course<br>Piazza participation (asking and answering questions) <br><br>As long as you watch the lectures, the homeworks won't be too hard but they might still take 2–3 hours, depending on the homework.",
                    "74": "I really enjoyed this class overall. Professor Wood–Doughty and Professor Kang are explains the topics well and we covered a lot of fundamental machine learning concepts. The homeworks vary from pretty simple to really challenging, and can take up to 20 hours to complete, but I think I learned a lot with the homeworks.",
                    "75": "Wood–Doughty is a great professor with excellent course policies",
                    "76": "This class is definitely very challenging, BUT I think it has the best grading scheme I've ever had at Northwestern. There are 121 possible points, and you only need 93 of them for an A (or 80 for a B–, etc). Also, there are only 5 homework assignments, no exams or other assessments. This makes the class very doable, even if it is difficult. If you have a busy few weeks, you can just skip one of the 5 assignments and still get an A. Highly recommend if you're interested in ML and up for a bit of a challenge.",
                    "77": "this class is great. the content is interesting and the prof does a very good job explaining them in class. it's easy to get an A and you'll learn a lot",
                    "78": "This class was very worth it and you get what you put into it. Great grading system helps you learn and understand topics.",
                    "79": "Awesome course, learned a lot. Only 5 projects, but they are each time consuming. Grading is simple and getting an A shouldn't be hard.",
                    "80": "Pretty boring course tbh. Skip this and just do Andrew Ng's Coursera, follow it up with UMich's deep learning course or Stanford's CS231n. I regret spending so much time trying to understand Naive Bayes, which nobody uses anymore. And I have gotten zero PyTorch practice out of this class so far.",
                    "81": "Great class if you are interested in ML. The formulas and concepts get a bit dicey when you are asked to apply class material to the homeworks but it is very much manageable.",
                    "82": "I loved the labs and Professor Wood–Doughty's a great lecturer both in terms of content and in presentation.",
                    "83": "I didn't go to lecture after week 3 and I still managed to get full points on the coding portion of all of the homeworks. It took a lot of time to parse through the slides to understand things after the fact, but the homeworks were definitely doable. Prior knowledge of numpy and matrix operations are very useful, but definitely not necessary.",
                    "84": "It's just 5 homeworks. Do them all and you get an A – easy. I liked mostly every aspect of this class, except I felt that the lectures were a little bit droning on the same subject at times. There was also no explicit connection made during lecture to the homeworks, which I felt led to some confusion when trying to start. I would have very much appreciated a connection to the homework when going over naive bayes algorithm or whatever it was. Something like \"This is the algorithm you'll be implementing in this function in your homework.\" There was just a bit of disconnect.",
                    "85": "I really enjoyed ML, and felt the contents covered in the course were of great interest to me. The content is challenging yet doable and the rigorous assignments, if done properly will, help deepen your understanding of the ML models. Something I disliked was the ethics portion of the class, especially when it came to FRQs on the HWs. However, I understand it is a necessary part of the course and too onerous. Overall, ML is a great class to take whether you're just trying to learn more about AI models, or if it serves as a base for other deep–learning courses. <br><br>Homeworks are demanding but there is a tremendous amount of support surrounding them: Office Hours almost daily, piazza questions are answered almost immediately (I once posted on a Sat at 9:30 and got a response within 15 min). The layout of 5 homeworks and no exams relieved the performance pressure of doing well on assessments, and allowed me to focus solely on the learning. It is one of the best structured courses I have taken.<br><br>Zach is an incredible professor, who is not only passionate about his work but always willing to help students. <br><br>Overall, I highly recommend this course.",
                    "86": "The code is not easy but also not too hard to implement. However, understanding the concepts is very difficult (and not fully necessary to being able to implement the code). Getting an A is pretty easy.  I put 4–7 hours for the time spent, but because the projects are due every other week, it's more like 0 hours and 10 hours alternating every week.",
                    "87": "If you go to class/watch the recordings and go to office hours, this class is pretty chill. There are 5 homework assignments and that's it for the grading. There is a lot of extra credit, so it's not that hard to get an A in the class as well. The amount that you learn from this class pretty much depends on how long you're willing to spend on each of the HWs.",
                    "88": "Extremely well structured course with good problems and implementation of the algorithms",
                    "89": "If you want to do AI, take it. If not, don't take it.",
                    "90": "This is a great, low–stakes course to take as a CS elective if you are interested.<br><br>Your grade is made up of 5 homework assignments (consisting of code and FRQs), with 2 weeks to complete each. There are also several bonus points available in the class, which makes achieving an optimal grade fair and easy if you complete the hws.<br><br>The homeworks are implementations of some common ML models, with starter code provided. The homeworks are very interesting and rewarding to complete, and will greatly enhance your understanding of ML.<br><br>IMO lectures aren't mandatory, there's enough resources online to learn yourself, and slides and recordings are always posted.<br><br>I wish this class gave simpler examples in lectures, they often go straight into algorithms and more complex details. For me watching a short youtube video on the model we were studying was necessary for me to understand and piece together everything that I learned.<br><br>Also halfway through the quarter we got a different lecturer, not sure what happened there. but ye v nice class p chill",
                    "91": "This class was way too easy and focused too much on ethics at the expense of rigor in the area of ML. Don't take it if you expect to learn useful things for your research.",
                    "92": "Zach needs to stop catering to the CS majors who want to just graduate, and make this class actually challenging. Start by giving us exams, and forcing us to understand the nitty gritty details of the math, instead of just waving hands for the CS majors who don't know anything. Without math, machine learning is... machine. There is no learning without math.",
                    "93": "Zach is a great lecturer (prob one of the best CS professors here). The lectures and PPTs are all pretty well designed and comprehensive. Unfortunately the course content &amp; homework have too much focus on ethics and as a result a lot of us didn't really get a solid grasp on the more important concepts.",
                    "94": "I think the general course structure is good, hitting most of the fundamental machine–learning algorithms. I have three specific comments about Zach's 349:<br>1. We do have ethics discussions that happen outside of lecture time. It is just once in the quarter, so it's not a big commitment. However, I am not sure what the end goal of these discussions is. All I took away from my discussion section was that \"ethics and privacy are important\" but it did not give me a new understanding of the issue of ethics and privacy in machine learning.<br>2. I enjoyed the FRQs which were not solely about coding. It asks you to connect what you have written in code with the real world.<br>3. I think the lecture slides could be more organized since there were many moving parts and sections that at times I did not know where we were in the lecture.",
                    "95": "The course was very interesting and manageable. I enjoyed the lectures and doing the homework assignments.",
                    "96": "Awesome class",
                    "97": "Class is pretty low work and low time–commitment. Not difficult to receive an A. interesting if you haven't learned any ML before, but can be a bit repetitive. I was not a fan of the large emphasis placed on ethics, which reduced the time spent on actually explaining and discussing models.",
                    "98": "Grading system is very nice, only issue is that a lot of the time they throw around terms and concepts quickly in class so it takes a while to go back through and properly understand why and how things happen.",
                    "99": "As my first AI–related course, this course taught me a lot of approaches that are widely applied nowadays. The difficulty and workload of this course is very appropriate. A good course.",
                    "100": "Overall I learned a lot from this course. It was my first formal CS course, so at first I struggled with the format of the assignments, but got used to it soon. I felt sometimes that the format of the assignments was more like a puzzle to solve, and less a test of our ML knowledge (the FRQs helped supplement this more and ensure that we understood the theoretical concepts). After having taken the course, I understand the basic foundations of the ML topics covered, but I feel would still have some struggle if I needed to implement an algorithm for my research in the future. Overall, I'm glad I took this course and am much more confident to use ML techniques in my research than I would have been without having taken the course.",
                    "101": "Great class! Enjoyed it thoroughly, it was progressively more difficult but the professor explained well the concepts.",
                    "102": "Great course to take with Zach. He really cares about the course and you can see it in the homework assignments, the organization of the class, and the overall support we have for the class. The homework assignments are really good (both the coding and FRQ parts) at making sure you understand all the material taught in lecture. Class grading is also very fair and not very hard to get an A.",
                    "103": "Overall, this course is a pretty good introduction to ML. We go over 5 main aspects of ML, with a homework on each one. For the homeworks, the coding portions aren't that time consuming, but the FRQs are a little bit frustrating to do sometimes. There is also 20 points of extra credit available, so there isn't much grade pressure and no exams.",
                    "104": "It was interesting stuff but only for certain topics. At many times, it was boring. I did not enjoy the ethical discussion FRQs, even though I see them as important – I only care for the technical part of this class...",
                    "105": "This is a pretty standard Northwestern CS course. The lectures are kind of boring, but contain a lot of information that is helpful for homeworks. The homeworks are not terribly hard, and they give you a lot of time and resources to complete them.",
                    "106": "Generous grading based pretty much on 5 projects (coding + frq). If you start early and ask for help, really not bad. It's a bit easy to fall behind though, since lectures are recorded and pretty early in the morning, so I would recommend actually going if you know you might do that.",
                    "107": "Biggest takeaway: ML is just statistics on steroids. If you are into stats and math, you'll enjoy the content of this course. I found out from taking this course that, as a stats and math disliker, ML is not for me!<br><br>This classes focuses on the theory and math behind ML models. You will be building various types of models from scratch using numpy. That requires you to have a really good understanding of linear algebra and matrix operations. Its hard!<br><br>Lectures are mid. Lot of time spent explaining rather simple concepts in the beginning of the course, and not nearly enough time spent explaining the harder more advanced concepts at the end of the course. The quality of explanations also diminished as they started showing you more and more beefy math equations, instead of explaining the logic/intuition.<br><br>Grading is very reasonable –– if you get enough points to meet the A threshold, you'll get an A. This means that if you do really well at the beginning of the quarter, you may not even need to do some of the last assignments. Grading for coding assignments is straightforward –– if you pass the test cases they provide you, you'll get full credit. Free response questions are the real challenge –– there's a lot of them, they require a lot of thinking, and sometimes it can be very hard to figure out what they are looking for because the instructions &amp; questions are not very detailed.",
                    "108": "As a person who is not an expert at coding but has been a CS major for 3 years, I can say this class is moderately difficult. The content can feel dense at times, and the assignments insurmountable, but they are graded based on test cases (and some free response questions, which are graded fairly leniently) which means that if you're passing the test cases, you're good to go. Attend office hours early and frequently (at least for homework help) and you'll have no problem getting an A in this class, even if you're not *good* at coding. There is no final exam. Grades are done on a point based system, with ~120 points available and ~90 needed to get an A. So plenty of opportunities to get points. You can get an A just by acing the homeworks if you're able to. Course staff are helpful so don't be afraid to post on Piazza when you're stuck.",
                    "109": "This class was great. There are 5 HWs with coding + free response portions. Zach is a great professor and the TAs are very active on Piazza. Lots of options for bonus points and you'll learn a lot about ML.",
                    "110": "Overall good class. The free response questions on the labs are kind of annoying but I get why they are there.",
                    "111": "I learned about the ML models and how to implement them in Python. Coding portions of the class were was pretty straightforward and simple. I think I spent a lot more of the time answering FRQs for HW. Lectures were good though.",
                    "112": "This was a very solid course, very organized and assignments are very clear. Lectures aren't 100% necessary for successful completion of the assignments (most people didn't go but I suspect the early time had a lot to do with this) but they certainly help. Take this class for some fun and useful coding assignments.",
                    "113": "This is a great course. The class is well organized and the instructor values student feedback. There are no exams so in my opinion you learn exactly how much you put in – if you try you’ll get a good grade. I think it also provides a very good overview on <br> core machine learning algorithms, and it is decently easy to follow even as someone who is not majoring in computer science. Would recommend.",
                    "114": "The professor does a great job keeping the assignments accessible but still challenging/ hard.",
                    "115": "I enjoyed this course a ton, especially Prof. Wood–Doughty's lectures. The incorporation of ethics and applications in medicine were a nice touch as well.",
                    "116": "Very well organized. Zach is a great professor.",
                    "117": "This machine learning course was transformative, enhancing my understanding of algorithms and data analysis. The hands–on projects were particularly valuable, solidifying theoretical concepts through practical application. The focus on real–world problems and cutting–edge techniques was especially impactful. Love the ethics parts especially which was incorporated in each assignment.",
                    "118": "Wood–Doughty is an incredibly good lecturer, but he doesn't dive too deep in the content, which can make it hard to do the homeworks. However, if you use your resources properly (office hours!), then they won't be too much work. There are only five homeworks, each with a coding portion, which is impacted by the shallow covering of the content, and a free response portion, which is usually not too hard, just time consuming. In addition, there's a lot of extra credit – do it when you can, and it will give you some cushion for times when you need it.",
                    "119": "I've learned a lot knowledge about machine learning through this course.",
                    "120": "I wanted to get hands–on experience implementing machine learning models– this course definitely accomplished that to agree, but the modularity of the assignments (filling out individual functions) definitely made it a little easier although it felt a little hand–holdy.",
                    "121": "This class is pretty hard at times but if you can take the time to debug and understand you will get by just fine. Lots of extra credit is offered which is nice. The worst part of this class by far is the frqs but they really aren't that challenging just time consuming.",
                    "122": "This is a good course– definitely recommend taking if you are interested in machine learning or if you have never learned about ML and are pursuing a CS minor/major. This is such an important topic that is being used in all industries, it would be a shame to miss this class. The lectures themselves were pretty good but I wouldn't say the best, sometimes it felt that concepts could be explained at a much easier level. The homeworks are long but doable if you get started in advance. Only annoying part is that you focus solely on implementation and not application. You implement algorithms that Python libraries already do for you, so I wish the focus wouldn't be on figuring out how those programs work but rather on applying them to real world models. All in all, take this class!",
                    "123": "Focused a lot on technical projects which I like",
                    "124": "I think this is a good class, and with no exams and grade pressure, it allows you to not learn under stress. My only criticism is that the FRQs should never be worth more than the coding imo, given that the code is much more intellectually challenging and should therefore be more rewarding.",
                    "125": "I would recommend any graduate student to take this course as early as possible and especially if Professor Zach's taking it. For undergrads I recommend take in sophomore year. This will set the foundation needed if your interest align with AI or ML, be it research or industry",
                    "126": "A lot of learning, you can definitely choose to go deep into the math and theories if you're interested. Instructor has a lot of knowledge and material on hand for deep dives. If not, you can also learn just enough to complete the projects, which is still A LOT! I really like the class. No exams, just project grades with some late days as well.",
                    "127": "Solid CS class if you need to fulfill requirements. If you go to class the homework will be straight forward and that's pretty much all you have to do for class (no exams or group projects) other than some surveys and a discussion section.",
                    "128": "The projects are a lot of work but there are only 5 of them. No exams is nice. Do the most of the work and you'll get an A. Lectures are sometimes vague and not the most helpful for the projects, but office hours are great. Know python pretty well before you take. Overall good class.",
                    "129": "Prof. Wood–Doughty is a great lecturer and the class is structured so that it is easy to score a high grade. There are no exams and only 5 homework assignments. Each assignment does not take too long to complete,  and office hours are helpful.",
                    "130": "The coding assignments are difficult and there's a lot more writing in the class than you might expect with free response questions based on your coding. Despite this, I still enjoyed the class because the questions challenge you to think harder about why you're making the choices you are to implement your model. Additionally, this class has a strong ethics component which I think was important.",
                    "131": "I feel that the course does not emphasize how much of a statistical and mathematical basis is required to truly understand the concepts. <br>For someone who has only learned the basics of Statistics and Linear Algebra, a lot of the concepts just become things to memorize rather than understand.",
                    "132": "Give me more experiences of machine learning models and how they works",
                    "133": "The concepts in machine learning were clearly explained. Although some homework were particularly difficult, there were a lot of helps during office hours.",
                    "134": "The courses were well taught but I feel like some of the projects (decision tree and naive bayes) did not have to be projects and the focus on implementations for them made it not too enjoyable. Other than that, the projects were good.",
                    "135": "This course was helpful for learning some of the fundamentals of machine learning, which gives a lot more context to some of the other projects I'm interested in. The course also had a significant focus on the ethical applications of machine learning which gave important cautions against some of the ways that this technology could be misused.",
                    "136": "This course was pretty good, assignments weren't too bad and the grading system is great and pretty lenient",
                    "137": "This course was great. I already had some experience with ML in a data science environment so it was really interesting to see/understand how everything worked \"under the hood\" so to speak. The combination of lectures, articles, and the ethical discussion made for a really well–rounded and holistic understanding of not only how ML works, but how it is applied in society and its ethical implications.",
                    "138": "a good intro course to ML. chill grading. recorded lectures. a good class to take in senior spring",
                    "139": "The hws were quite time–consuming and could be challenging sometimes, but they were worth completing. I liked the fact that there were many opportunities for extra credits so you don’t freak out if you don’t get very high marks for the hws.",
                    "140": "This class was challenging but interesting. Definitely take this class when you are underloading or taking easier classes. The homework assignments take hours to complete for multiple reasons. The concepts discussed in lecture are really high level and can be confusing conceptually.  The lectures approach the main concepts in terms of the mathematics, but the in the homework assignments you are implementing the concepts in terms of code, so that gap makes the homeworks a lot more intensive.  Additionally, if you are unfamiliar with numpy and manipulating matrices in code, it will take several homework assignments before you have a good grasp. I think this class would be a little easier if the lecture slides were more visually organized and provided a little more background on how the mathematics of each lecture topic translates to the coding (instead of only explaining the math derivations... the naive bayes pdf was a better example of presenting the math and the coding implementation in a cohesive way). Though it was really difficult and frustrating sometimes, what I learned was useful and informative.",
                    "141": "I would definitely recommend anyone to take it, Professor Zach and Professor Alex do a great job in explaining the content from bottom up. The equations can be a bit challenging to wrap around initially,but once you have a grasp of  the fundamentals of topics such as probability and linear algebra you'll get a hang of it.",
                    "142": "The projects can be pretty difficult, but the instruction + office hours are a GREAT resource and really helped me lock in material.",
                    "143": "Love this course, really helped me to understand ML",
                    "144": "Course was great, coding assignments were appropriately challenging but also kinda fun. Every topic is really cool and I enjoyed the class.",
                    "145": "very easy class but the free response questions are a bit of a pain.",
                    "146": "The course has a flexible schedule so you can learn at your own pace. However, you get out what you put in so I think it is important to spend decent amount of time on the homework assignment.",
                    "147": "Course was fine, pretty easy generally with some humps here and there. Wood–doughty is a good lecturer but the course itself is mostly about implementations of models rather than applications.",
                    "148": "This course is super cool. Like if a video game were a class then this would be it.  The hardest part of the class is wrapping your brain around the concepts, which I guess is the difficulty in any class. But in this case, after you understand it, the implementation is a really direct 1–to–1 application of the concepts.",
                    "149": "Zach is a great professor and an amazing lecturer! I found his lectures super engaging, even though I watched almost all of them through the recordings rather than going to the 9:30 am lecture. Peng was also a good lecturer, but I definitely preferred Zach as he gave more intuitive explanations at times.<br><br>The homeworks weren't horrible, but you should start them early unlike me, and don't underestimate how long the FRQs will take––they can be quite time consuming. I also liked that I didn't have to stress too much about getting an A because of the point system.<br><br>Overall, this class is super interesting, and I liked that it was more theoretical than practical because that suits my particular interests.",
                    "150": "I liked this class much more than I thought, especially since the emphasis is on learning and not a grade (the grade system and assignments are structured very well). I appreciate <br>I also liked the ethical questions that we did in assignments, though they did take up a bit of time sometimes. Just make sure you have enough time to do the assignments and you'll get  good grade (there's more than enough help if you get stuck).",
                    "151": "It was great overall, a huge time commitment though.",
                    "152": "This course was all projects and no exams which was really nice as a CS course. Zach is very engaging, the TA a bit less so (he taught for the second half of the course) but overall a well taught class. As long as you start the coding projects early and go to office hours, this class is very manageable. I was constantly working on a homework, but if you work about one hour a day then you can get it all done. The grading system is very manageable: there are 118 points possible and however many you get are your grade. This made it a bit more stress free. There are also late days available. Basically do not procrastinate and you'll get an A in this course.",
                    "153": "This is a good class. You learn a lot but it is still pretty easy to get a good grade",
                    "154": "The PMs were very helpful with working through the homework assignments with me.",
                    "155": "Good class if you want something that only has the homework assignments and that's most of the assignment load. Important and ostensibly good–to–know stuff taught too",
                    "156": "This is a well structured and fair course. It introduces you to many topics in machine learning but does not dig too deeply into any of them. Very easy A.",
                    "157": "Class is graded on five homework assignments totaling 100 points, plus 21 extra credit points for doing things like filling out surveys and posting on the class piazza. HWs were definitely a challenge—they consist of a coding section and a frq section. It'll take some time to complete them but with all the extra credit opportunities you can still get an A after losing lots of points. I didn't, but, you know, you could if you have a good understanding of the concepts.",
                    "158": "Pretty alright class, I got kind of screwed by doing everything the day of. I didn't go to lectures because I actually learned most of the algorithms in other classes and it ended up working better for me so I'm really glad the class had the resources for remote learning.",
                    "159": "As someone with very little ML experience, I thought this course did a much better job than CS348 at providing an overview of the field. I feel like I have a very solid grasp of the main ML models in use today, as well as a decent understanding of the math behind them, despite it frequently getting very complicated. Zach is an amazing teacher and has a great sense for where concepts get confusing and he needs to slow down to explain. Also, grading is very fair and stress–free: most of the points come from the 5 homework assignments (each with auto–graded coding portions and manually–graded FRQs), and there are lots of easy opportunities for extra credit. In my four years here, I would definitely say this was one of my most enjoyable and beneficial CS classes in terms of the amount I learned!",
                    "160": "Challenging but good course; all assignments, no tests, and professor/TAs/PMs are very helpful.",
                    "161": "FRQs are great and encourage me to really understand the concepts.",
                    "162": "n/a",
                    "163": "I was really interested in all the topics we learned and thought they were pretty useful for someone who had no ML experience.",
                    "164": "This is kind of a difficult class if you've never had any exposure to ML before. Honestly, the 9 A.M. schedule really doesn't help either and by week 4–5, there were only about 6–7 people in lecture so that was even more discouraging. Otherwise, Zach and Peng were both great lecturers and are very responsive on Piazza. The homeworks were set up very well, which definitely made them easier to do. The homeworks and their accompanying free response questions definitely took a chunk of time though, and for some homeworks, the free response was actually worth more than the code itself. <br><br>The grading was broken down into:<br>5 HW + FRQ <br>5 short course surveys<br>A required ethics course<br>Piazza participation (asking and answering questions) <br><br>As long as you watch the lectures, the homeworks won't be too hard but they might still take 2–3 hours, depending on the homework.",
                    "165": "I really enjoyed this class overall. Professor Wood–Doughty and Professor Kang are explains the topics well and we covered a lot of fundamental machine learning concepts. The homeworks vary from pretty simple to really challenging, and can take up to 20 hours to complete, but I think I learned a lot with the homeworks.",
                    "166": "Wood–Doughty is a great professor with excellent course policies",
                    "167": "This class is definitely very challenging, BUT I think it has the best grading scheme I've ever had at Northwestern. There are 121 possible points, and you only need 93 of them for an A (or 80 for a B–, etc). Also, there are only 5 homework assignments, no exams or other assessments. This makes the class very doable, even if it is difficult. If you have a busy few weeks, you can just skip one of the 5 assignments and still get an A. Highly recommend if you're interested in ML and up for a bit of a challenge.",
                    "168": "this class is great. the content is interesting and the prof does a very good job explaining them in class. it's easy to get an A and you'll learn a lot",
                    "169": "This class was very worth it and you get what you put into it. Great grading system helps you learn and understand topics.",
                    "170": "Awesome course, learned a lot. Only 5 projects, but they are each time consuming. Grading is simple and getting an A shouldn't be hard.",
                    "171": "Pretty boring course tbh. Skip this and just do Andrew Ng's Coursera, follow it up with UMich's deep learning course or Stanford's CS231n. I regret spending so much time trying to understand Naive Bayes, which nobody uses anymore. And I have gotten zero PyTorch practice out of this class so far.",
                    "172": "Great class if you are interested in ML. The formulas and concepts get a bit dicey when you are asked to apply class material to the homeworks but it is very much manageable.",
                    "173": "I loved the labs and Professor Wood–Doughty's a great lecturer both in terms of content and in presentation.",
                    "174": "I didn't go to lecture after week 3 and I still managed to get full points on the coding portion of all of the homeworks. It took a lot of time to parse through the slides to understand things after the fact, but the homeworks were definitely doable. Prior knowledge of numpy and matrix operations are very useful, but definitely not necessary.",
                    "175": "If you want to do AI, take it. If not, don't take it.",
                    "176": "It's just 5 homeworks. Do them all and you get an A – easy. I liked mostly every aspect of this class, except I felt that the lectures were a little bit droning on the same subject at times. There was also no explicit connection made during lecture to the homeworks, which I felt led to some confusion when trying to start. I would have very much appreciated a connection to the homework when going over naive bayes algorithm or whatever it was. Something like \"This is the algorithm you'll be implementing in this function in your homework.\" There was just a bit of disconnect.",
                    "177": "I really enjoyed ML, and felt the contents covered in the course were of great interest to me. The content is challenging yet doable and the rigorous assignments, if done properly will, help deepen your understanding of the ML models. Something I disliked was the ethics portion of the class, especially when it came to FRQs on the HWs. However, I understand it is a necessary part of the course and too onerous. Overall, ML is a great class to take whether you're just trying to learn more about AI models, or if it serves as a base for other deep–learning courses. <br><br>Homeworks are demanding but there is a tremendous amount of support surrounding them: Office Hours almost daily, piazza questions are answered almost immediately (I once posted on a Sat at 9:30 and got a response within 15 min). The layout of 5 homeworks and no exams relieved the performance pressure of doing well on assessments, and allowed me to focus solely on the learning. It is one of the best structured courses I have taken.<br><br>Zach is an incredible professor, who is not only passionate about his work but always willing to help students. <br><br>Overall, I highly recommend this course.",
                    "178": "The code is not easy but also not too hard to implement. However, understanding the concepts is very difficult (and not fully necessary to being able to implement the code). Getting an A is pretty easy.  I put 4–7 hours for the time spent, but because the projects are due every other week, it's more like 0 hours and 10 hours alternating every week.",
                    "179": "If you go to class/watch the recordings and go to office hours, this class is pretty chill. There are 5 homework assignments and that's it for the grading. There is a lot of extra credit, so it's not that hard to get an A in the class as well. The amount that you learn from this class pretty much depends on how long you're willing to spend on each of the HWs.",
                    "180": "Extremely well structured course with good problems and implementation of the algorithms",
                    "181": "This is a great, low–stakes course to take as a CS elective if you are interested.<br><br>Your grade is made up of 5 homework assignments (consisting of code and FRQs), with 2 weeks to complete each. There are also several bonus points available in the class, which makes achieving an optimal grade fair and easy if you complete the hws.<br><br>The homeworks are implementations of some common ML models, with starter code provided. The homeworks are very interesting and rewarding to complete, and will greatly enhance your understanding of ML.<br><br>IMO lectures aren't mandatory, there's enough resources online to learn yourself, and slides and recordings are always posted.<br><br>I wish this class gave simpler examples in lectures, they often go straight into algorithms and more complex details. For me watching a short youtube video on the model we were studying was necessary for me to understand and piece together everything that I learned.<br><br>Also halfway through the quarter we got a different lecturer, not sure what happened there. but ye v nice class p chill"
                },
                "school_demographics": {
                    "Weinberg": 46,
                    "McCormick": 72,
                    "Medill": 0,
                    "Comm": 2,
                    "SESP": 0,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 24,
                    "Sophomores": 33,
                    "Juniors": 30,
                    "Seniors": 24
                }
            }
        },
        "COMP_SCI 351-1": {
            "2024 Winter": {
                "course_rating": {
                    "average": 4.35,
                    "student_count": 43
                },
                "student_opinions": {
                    "0": "Starter code desperately needs to be updated. They are usually way too dense and have superfluous detail that, even though meant to clear things up, makes things confusing, especially when there are discrepancies between the commented instructions vs. the Canvas assignment instruction. I appreciated how the activities helped build to the projects, but I feel like we should have done more code walkthroughs. Sure, the lectures explain the what the code is doing, but going back to the code, especially how cobbled together it is, makes it so intimidating to figure out what’s going on. Lastly, Prof. Tumblin needs to have his own OH at least twice a week. The office hour offerings are skewed towards the front half of the week, leaving you without help unless you have time to stay after class. Just having office hours in the hall sucks, like please reserve a classroom? Its awesome how a cool topic graphics is made boring and unnecessarily difficult by this class, with outdated textbook and no way to learn on your own, the lectures are so technical it’s hard to know what is going on at times. For an intro class, this was pretty inaccessible to people who haven’t used the WebGL framework. Also sucks that NU has no more classes in computer graphics; we probably have the most archaic CS department in the US.",
                    "1": "I do not recommend this class to anyone except those extremely interested in the very, very basics of computer graphics. It is my understanding that Prof. Tumblin is not going to be teaching this class after this year however. <br><br>Every good thing about this class has an equally bad thing that evens everything out. The lectures are hard to follow as Prof. Tumblin isn't the best at getting through lecture clearly and without numerous breaks/interruptions/ramblings, but honestly you don't even need to go to lecture to do the homeworks perfectly fine (this all explains the poor in–class attendance). The starter code is really helpful for getting assignments done, but it's clear this code either hasn't been updated for 10+ years or is written using 10+ year old practices, which makes reading the code very difficult, despite the numerous comments (seriously I have never seen so many comments in code before, and this makes them more harmful than useful). Students will ask questions on Piazza, and if you're lucky you will get a thoughtful, lengthy response, likely from Tumblin himself. If you're not, he will simply tell you to \"look at your notes\" or \"look at the starter code,\" even if you explain in your post that you've already done these things. However, as I kind of already said previously, you luckily can just skip class and look at starter code to get the three homeworks done. The four activities are not that difficult either really.",
                    "2": "Interesting course. The stuff we're doing is kinda weird in that we're given massive starting code files and the projects are in many ways just 'frankensteining' different starter codes we've been given in order to make something new. It's a good class to take if you're not very familiar with HTML/JS since we work with it in a pretty simple capacity (very learner friendly). Setup of the course is most weeks you have nothing then about a week before one of the 3 projects you'll probably spend like 15–20 Hours working.",
                    "3": "Good course overall, material was interesting. A lot of the projects were based on starter code, so it might be difficult to motivate yourself to fully understand the material. Also Professor Tumblin talks a bit slowly so sometimes it was hard for me to focus in class, but the lectures are recorded so you can watch it back at twice the speed.",
                    "4": "This is such a great course, sad it got compressed from a 2–quarter sequence down to 1, but still super glad I got the chance to take it at all",
                    "5": "Did not have fun.",
                    "6": "I needed an easy, not–very–time–consuming 5th class that also scratched the coding itch, as my other 4 were not CS, and this class was perfect. Didn't have to worry about it much during most of the quarter, just kept up with lectures and then when projects came around they were extremely satisfying and rewarding with the ample starter code. I learned my lesson quickly to start the projects at least a week before Demo Day (almost 2 weeks before they were due) and was able to keep on top of everything without that much stress.<br><br>Prof. Tumblin is a wonderful lecturer, though his style does take some getting used to (he errs on the side of too–much–information rather than conciseness, and you learn to pick through the many comments in his code for what you personally need), but I preferred it as he explained concepts very well. I had very little interest in Computer Graphics before this class and took it only because I heard it was easy, and he did a great job making it compelling. This was definitely the class that I enjoyed the most this quarter. Class organization was done very well. It doesn't seem like Prof. Tumblin is planning on teaching this class again due to his retirement, but if he somehow does I'd super highly recommend it!",
                    "7": "Really neat course and content, my only gripe is having to work with the all the old, legacy JS code.",
                    "8": "I will never take graphics in movies and games for granted ever again.",
                    "9": "This was one of my favorite CS classes at Northwestern! I loved learning about computer graphics and working on various projects that involved building 3D objects, animating different movements, lighting, and shading. Professor Tumblin is an excellent professor and is an expert in the field of computer graphics. My main complaint about this class is that Professor Tumblin will just explain topics pretty broadly in class so you are left on your own when trying to implement them into code when working on your projects. Overall, it isn't too bad. Project C is incredibly difficult so I would highly highly recommend starting on it early. I really hope Northwestern finds a way to continue offering this course in the future because it is a really great introduction to the field of computer graphics and I feel so grateful that I was able to take this class!",
                    "10": "Project quantity and scale was manageable, though challenging as with most 300–level courses. Organization/ \"Flow\" of concepts covered felt intuitive and easy enough to follow. Lecture slides were often visually chaotic and somewhat difficult to extract information from. Demo Days were a fun way to show off code progress and get some questions answered before final submissions. Instructor responses such as on Piazza, though I understand the value of seeking out answers on your own, sometimes felt indirect or terse, as though they avoided answering sometimes simple questions directly in favor of steering students towards textbook sections or external resources to chase down an answer individually. Starter code structure was generally easy enough to understand, but much of the implementation specifics and general programming advice pushed by the instructor felt outdated, inefficient, or generally misaligned with commonly accepted best–practice workflows.",
                    "11": "Really enjoyed this course with Tumblin. This course has 3 major projects that build on top of each other. There are also mini activities sprinkled throughout the quarter. Really recommend starting projects early and getting help from peer mentors. Tumblin also stays after class to help as long as needed for students which has been useful.",
                    "12": "3 Large projects, make sure you start them early",
                    "13": "This is an excellent course and I can't recommend it enough! Professor Tumblin is a professor who knows how to teach, and I learned a lot from his lectures, office hours, and the many resources he gave the class. This course is a lot of hard work, but the assignments are completely doable and very rewarding. If you have any interest at all in graphics, take this course.",
                    "14": "This class was primarily focused on 3 projects each 30% of your grade. They are very time consuming. Starter code is given but its very disorganized and you have to find it among various textbook and files given to you.  The teacher seemed very condescending when students asked for help on the projects either on piazza or in person. Overall unless you are very interested in graphics, maybe dont take this class",
                    "15": "Professor Tumblin is the only professor I have ever had who has punished a student for going above and beyond. He is also an extremely harsh grader. Despite my implementation of all the required features of a project and the addition of more technically advanced features that interested me, I received a C on a project that accounted for 30% of my grade. Inexplicably, 10 points were deducted without justification; for instance, one requirement was an orthographic camera, and I had one that covered 50% of the screen space in the demonstration. His feedback on my project was neither inspiring for my computer graphics efforts nor appreciative of the extra effort I had put into his class. Far from being inspired by this class and the professor, I am ending it with a relatively poor grade for a class into which I invested significant effort—going so far as to implement a game engine from scratch out of excitement for the material—and a diminished ambition to fully commit to a class, due to Tumblin's harsh grading and his initial implication that I was cheating on an assignment. As a student passionate about computer graphics and computer science as a whole, I feel I should be leaving the class with the opposite sentiment. Although I recognize that my experience may not reflect that of other students, given my solid background and understanding of computer graphics before entering this class, this does not lessen my disappointment with the professor's decisions and grading.",
                    "16": "Very interesting course and material. That being said each of the projects was a ton of work, especially project C. I would recommend taking it because it's cool stuff and Prof Tumblin is really nice and an expert at graphics. But don't expect it to be a light workload.",
                    "17": "This course is mainly 3 projects so there's not a lot of homework overall but when they projects come around they are extremely time consuming.",
                    "18": "Although I didn’t usually attend lecture, this was a great class as an introduction to graphics development. I loved that creativity and computer science were both needed to achieve success. The professor is super committed to everyones learning. There were three big projects that made up 90% of the grade. Each took around 10 hours to code except for the last one which took about 20.",
                    "19": "This will most likely be the last quarter this class is offered (at least under Prof. Tumblin) but I will leave my thoughts anyways: <br>This course overall was a bit mixed for me. I think the lectures could have been more organized and there could be a bit more guidance with completing projects. Starter code is appreciated, but sometimes there is just far too much code and it feels a little overwhelming. First two projects were pretty approachable, third project was much more difficult and I think a lot of people struggled. Prof. Tumblin was great to have, clearly very experienced in this field, and very willing to help students (he would often stay late to help students and once stayed an extra 2 hours to help me with an assignment). However, I would hope that any future iterations of this course would do some significant refactoring of the materials just to remove some things that were maybe a little unnecessary and clearly just built up over the years.",
                    "20": "As someone who has very little interest in computer graphics, this class was torturous especially towards the end. Your grade is essentially made out of 3 projects, each worth 30% each. The weeks when projects are not too are pretty chill and have very limited homework. However, the projects take a decent amount of time to complete and can be quite difficult (especially Project C). A lot of starter code and additional readings are given but this overload of information almost made the projects harder. Lectures can also be very dry and theoretical. Prof Tumblin is nice enough, but it was hard to get help from him at times. Whenever I asked questions, he would just tell me to look at the starter code examples without giving any actual guidance or help.",
                    "21": "Not a huge fan of this course. While not super difficult, it was very disorganized. Slides are not very easy to understand (filled with too much text/info). Prof. Tumblin comes across as well–meaning, but it felt like he was consistently frustrated with the class, probably because of low attendance. All of the lectures were recorded so it was easier to go back and watch. I think he should have offered some incentives to attend, because I don't think I got much useful information on the projects. A lot of them centered around theoretical ideas that were never really applied in the code (or were done in the starter code). If you're really interested in computer graphics this would probably be good, but otherwise, not sure I would recommend."
                },
                "school_demographics": {
                    "Weinberg": 22,
                    "McCormick": 15,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 2,
                    "Juniors": 21,
                    "Seniors": 14
                }
            }
        },
        "COMP_SCI 354-0": {
            "2024 Winter": {
                "course_rating": {
                    "average": 4.4,
                    "student_count": 52
                },
                "student_opinions": {
                    "0": "It was helpful to learn about system security knowledge.",
                    "1": "This is a good class, mostly led by the TAs. If you really put in the work for the homeworks you will be fine in the class. Lots of assembly and low level stuff but pretty fun. Final is a CTF tournament, so everything is by applicable skills.",
                    "2": "Take as a fifth. You won't need to show up to lecture because there is no lecture. Every class is lab time and projects/labs are all self–guided and completable by reading the description. Material is pretty outdated, but a good introduction to security if you are brand new to the topic. Overall, a pretty fun and very chill class. Just wish the lectures were more than just work time.",
                    "3": "I did not learn a lot since the course was not taught well in my opinion. The topics were very interesting but they were hardly taught well and the homeworks could be made to work without fully understanding the concepts which was unsatisfying from a a learning perspective.",
                    "4": "I know a lot of people don't necessarily have the best things to say about this class but I think this was probably my favorite class that I've taken at NU so far. It covers a lot of different topics in systems security that are all very unique and interesting and the final being a CTF was a lot of fun.",
                    "5": "If you are interested in cybersecurity, this class is really interesting and you learn a lot. However, it feels kind of self–taught through labs as the lectures aren't super engaging.",
                    "6": "The class was fine. However, I feel like there was little resources to find help in finishing labs and homework.",
                    "7": "This course provided a structured and wide view of main subjects in modern computer security research. For new learners, it would be a good course to have a comprehensive understanding of computer security.",
                    "8": "Overall solid course, not too difficult and I got through the assignments pretty fast. If you like security I'd say this is a worth while course without too much pressure. I would however make sure you prepare for the CTF because that's essentially 15% of your grade and if you bomb it, it doesn't matter how good you did on the assignments.",
                    "9": "This class is embarrassingly easy. Your grade consists of a weekly lab, 4 projects, and a capture the flag competition at the end of the quarter. Labs require you to follow directions in a writeup. Projects are a bit more difficult but can be completed with knowledge from 213 + information from the labs + some thinking or assistance from office hours. The CTF competition is curved and you can get a good score if you understand the concepts from the labs/projects.  From personal experience, labs/projects are easy enough and have explicit enough directions that you can 100% not go to lecture and get an A. From the few lectures I went to, I saw that Professor Chen gave pretty disorganized lectures with slides that legitimately haven't been updated since Bush was president. Judging from Piazza, people mainly seem to struggle if they leave assignments until the last minute or aren't good at exploring/trying things on their own. If that doesn't sound like you then you'll probably have an easy time in this course.",
                    "10": "Basically, you just do labs which range from copy and pasting things into terminal to figuring out some stuff using only knowledge from previous labs where you copy and pasted stuff into terminal. If CTFs are interesting to you, and you want a chill course, be willing to ask TAs for help and you can cruise through this with no work most weeks since there’s time in class for labs. Just note that the teacher is useless, so if you get stuck don’t be afraid to get help from TAs in class/go to OH.",
                    "11": "This is probably the worst course I've taken at Northwestern – the professor doesn't really teach anything at all, so evaluation is almost entirely based on previous knowledge. I was really disappointed.",
                    "12": "its a good class if you are good at autodidactic stuff",
                    "13": "Pretty self directed in learning. Time commitment is up to you. I didn't feel like I learned that much, then was surprised on the exam when I knew how to do all these things. I would say I learned a lot.",
                    "14": "The main body of this course are online projects and labs, which make up almost all of the class grade and most of the learning in my experience. The lectures introduce tools and topics, but you really explore using them in the assignments, and many of the classes end up being work–sessions, which makes this feel like a group self–study sometimes. Enjoyable and approachable if you were competent in classes like 213.",
                    "15": "This class is very hands–on, with some lectures near the beginning of the quarter but then pivoting to almost exclusively labs and projects. The labs and projects are almost trivial to get past just by following instructions, which will take you most of the way, but if you want an A then you should invest in understanding and becoming familiar with some techniques and tools so that you can apply them to the CTF at the end (which is a practical final exam that has you complete a bunch of security–related challenges to earn points). You won't actually learn that much academically about security, but you will gain practical skills hacking into really vulnerable systems.",
                    "16": "Professor barely lectured, most of the class time was for working on labs. The labs and projects are fun to do, but it didn't feel like a class because we didn't have serious lectures or homeworks that tested theoretical learning.",
                    "17": "A very good introduction to cyber security. Usually spent like 3–4 hours on each homework. The class wasn't very helpful because professor didn't explain new things",
                    "18": "The lectures are exactly like how other CTECs describe them; they are basically useless because the professor doesn’t teach much. Most of the class time is just work–on–your–own time. The professor only teaches the first two weeks, so he added a cryptography homework assignment in the beginning of the quarter to get people to pay attention to those lectures. The labs and projects are fine if you go to office hours, but there is a Capture the Flag competition that is 15% of the grade.  It is almost like a final, but it wasn’t even created by the professor. It was kind of hard, and the grade on Canvas has an average of 6.5/15. The professor and TA says the grade will be curved, but you just have to wait until the grades are posted officially on Caesar.",
                    "19": "The ctf at the end was a little bit easy compared to real life ctfs, but apart from that it teaches you a lot of the basics for security. Material is a little bit outdated BUT you have to learn shell scripting so I liked it",
                    "20": "I only learn things from labs. The lecture is bad.",
                    "21": "The professor does not teach much. You are expected to learn yourself and use trial and error for the labs and projects.",
                    "22": "Interesting course. Lots of later exercises have you play the part of the attacker. Workload was not bad at all this year, and you can write scripts in Python to solve some of the crypto stuff, but C might be beneficial as well.",
                    "23": "Its definitely one of the classes of all time. Assignments weren't too hard, lecture wasn't too interesting. Capture the flag at the end kinda tanked grades but aside from that the workload was fine (actually pretty good for a cs class). If you like systems/security its a good class to take, but it won't make you like systems/security.",
                    "24": "This class is pretty unique, most lectures you spend working on the labs and projects so its a very hands on class. This makes the workload very manageable, and the work was pretty fun. Would recommend this course, make sure you stay ahead and follow the lab manuals, the TAs were great too they gave very good advice.",
                    "25": "labs and projects make you think/work for it, especially some of the later ones. instructions often very vague, emphasis on figuring it out for yourself",
                    "26": "If you're skeptical of or hate systems like I do, take this class. I averaged out the CTEC time requirements for every Systems class last quarter, and this class took the least amount of time. If you have good PM/TAs (which there's bound to be at least one good one), you'll make it through. Getting a score of 70+ in the class is achievable. Keep your head down, go to Office Hours, you'll get through it. Here's the grade breakdown (this is points of your grade) in Winter 2024:<br><br>Netcat Lab – 1 | Password Cracking Lab – 5 | Reverse Engineering Lab – 6 | Shellcode &amp; Buffer Overflow Lab – 10 | Nessus and Nmap Lab – 7 | Web Attack Lab – 8<br>Project 1 (Programming Languages) – 9 | Homework on crypto – 8 | Project 2 (Reversing) – 12 | Project 3 (Shellcode) – 8 | Project 4 (Web Attacks) – 11<br>Class and CTF participation – 15<br><br>The CTF is a capture the flag that my prof ran at the end of the class. A 3–hour period where you exercise your knowledge you gained in the class throughout the quarter. You had to be there as a class requirement. Best of luck!",
                    "27": "This course was a great introduction to basic security techniques and the content was really engaging as a result. The nature of the course is learning the surface of a bunch of different topics such as nmap or XSS. The labs were really interesting and the homework/projects weren't terrible. The CTF at the end was pretty difficult but I think that was mostly a timing issue. Overall, the course was really interesting and I would recommend taking it.",
                    "28": "The past CTECs are true, this is a very lab heavy class with little to no lecture. I had to relearn all of assembly for this class because it's been awhile since 213, but it was an interesting experience. You learn stuff like sql injection, cross–site scripting, buffer overflow, etc. I recommend completing assignments in class and during PMs' office hours. There was a CTF competition at the end of the quarter which counts for 15% of our grade.",
                    "29": "This course was really fun, it's almost 100% hacking challenges, which was awesome, but a lot of the techniques we learned were pretty out of date. I came into this class feeling totally unprepared for it, but by the end I felt I was definitely as strong in the subject as most of my classmates. That being said, it requires a lot of self–motivation, and independent research. The lectures are rare and provide very minimal instruction regarding the actual techniques, so most learning is trial and error. Chen is clearly brilliant, and all of the PMs were constantly incredibly helpful, but the general consensus seemed to be that success in the class hinged pretty hard on relying on the PMs for assistance and education. I was lucky enough to be able to go to office hours for like 2 hours every single week, which was nice, but if my schedule hadn't aligned that way, this class may have been much much more difficult for me."
                },
                "school_demographics": {
                    "Weinberg": 18,
                    "McCormick": 29,
                    "Medill": 1,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 8,
                    "Juniors": 16,
                    "Seniors": 20
                }
            }
        },
        "COMP_SCI 355-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 4.73,
                    "student_count": 11
                },
                "student_opinions": {
                    "0": "Let's be honest, you've read the previous CTECS for this course. If you choose to take this class and complain about the workload, that's on you. Expect to do a TON of (busy) work. Material is interesting though, although antiquated sometimes (Strictly Windows).",
                    "1": "This course is a lot. The assignments themselves are not too difficult on their own but have vague rubric requirements and take a ton of time to get done. Many assignments have a ton of overlap between forensic tools used, and analysis fatigue is definitely something you should take into consideration before taking this class. Office hours are often not too useful and many classes go over the limit. Jibran Ilyas is a great lecturer and offers very insightful information as to how digital forensics works. However, despite being lenient, he often overworks students without much concern for time for other classes. Also, as a sidenote, this class is quite a burden in the beginning if you don't have access to a Windows device, especially if you run stuff on M1/M2/M3 Macbooks.",
                    "2": "Really great course, if you enjoy computer security or are thinking into entering cybersecurity this is an amazing course to take. The assignments are very practical and almost put you through mock \"assignments\" that you would have on the real job which is a very valuable experience. It isn't too hard either but it is a lot of work so it's best to not underestimate the class and start assignments early. The lectures are also pretty good too and give you a lot of important information related to the career field and job. Jibran Ilyas is also just a great instructor and made the lectures very informative and also fun. He also gave very valuable insight into the cybersecurity industry.",
                    "3": "This is a great course if you are at least somewhat interested in cybersecurity at all beforehand. Lectures with Jibran are always engaging and interesting, and the assignments didn't take too long and allowed hands–on experience with the actual tools in a realistic scenario.",
                    "4": "This class is awesome if you really want to become a forensic analyst. Otherwise, nothing we learned is really applicable to any other area of computer science, and the stuff in the class wasn't even really technical concepts, just how to use a bunch of different tools. The assignments all take an ungodly number of hours to do thoroughly and the instructors don't really seem to understand that we take other classes besides this one. Like they just straight up changed deadlines or wouldn't go over the stuff we needed to know for an assignment until the week it was due when the thing took like 20 hours.",
                    "5": "This course is very interesting. The knowledge it taught is not covered in any other course and the instructor is very passionate at teaching",
                    "6": "This class is taught by Jibran, an industry profession who works on this kind of stuff everyday. Jibran has a passion for teaching/mentoring and for DFIR which made the class very fun and interesting. If you are lucky he will tell stories from industry during the class which is another unique and fun way to learn.",
                    "7": "Very well taught course",
                    "8": "I liked the modules and labs that forced you to build timelines on real viruses.",
                    "9": "The entire class is taught by Jibran Ilyas, not the professor, and it's a very practical course where you learn by doing investigations. It's also the most career–maxing class in the school. Projects are not difficult but can take up a lot of time if you want the reports to be nice. Many tiny points taken off on the final project for things that you did not find in your investigation or did not include in the report."
                },
                "school_demographics": {
                    "Weinberg": 3,
                    "McCormick": 6,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 2,
                    "Juniors": 4,
                    "Seniors": 3
                }
            }
        },
        "COMP_SCI 371-0": {
            "2024 Winter": {
                "course_rating": {
                    "average": 3.26,
                    "student_count": 47
                },
                "student_opinions": {},
                "school_demographics": {
                    "Weinberg": 5,
                    "McCormick": 33,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 3,
                    "Juniors": 7,
                    "Seniors": 7
                }
            }
        },
        "COMP_SCI 372-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 5.08,
                    "student_count": 12
                },
                "student_opinions": {
                    "0": "Pretty good class.",
                    "1": "Agent–based modeling introduces a very different way of thinking about complex systems. I found this new paradigm super interesting. The class is not too much work, giving it a very good \"learning–to–work ratio.\" Lectures can be slow sometimes, however.<br><br>Assignments:<br>* 6 weekly modeling homeworks and reading reflections (for the earlier parts of the class). These show you the ropes of NetLogo and agent–based modeling.<br>* Final project: build a novel model. Includes a project proposal, 3 weekly progress reports, a short slides presentation, a final model and accompanying paper, and a poster presentation during finals week.",
                    "2": "very useful course for probably every field. you get a great project to list on your resume too",
                    "3": "I wouldn't really recommend this course unless you have to take it. It's not necessarily bad or hard, but at times it just felt tedious and unreasonably long for things that are only graded on completion. Prof. Wilensky is very knowledgable and has deep roots in the subject, but his lectures aren't engaging and at times felt very repetitive.",
                    "4": "This was an interesting class that wasn't a huge time commitment. The final project was pretty cool because you can choose your own topic that you want to model with agent–based modeling. The lectures were kinda slow however and they didn't teach me a ton. It is a cool topic though and makes you think in a different way.",
                    "5": "Excellent from every standpoint! Lucky to be there!",
                    "6": "Good class, the TAs were amazing and the professor is nice. He isn't a great lecturer (he tends to grumble and is hard to pay attention to), but the material is interesting and the homeworks are fun. It can be a bit time consuming at times, and the 10 page final project report was brutal, but the work itself isn't conceptually brutal like 336 for example. Its an especially good class if you have an area of interest that can be good for modeling (look at some examples to see what that entails)."
                },
                "school_demographics": {
                    "Weinberg": 3,
                    "McCormick": 5,
                    "Medill": 1,
                    "Comm": 0,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 3,
                    "Juniors": 2,
                    "Seniors": 4
                }
            }
        },
        "COMP_SCI 376-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 5.03,
                    "student_count": 132
                },
                "student_opinions": {
                    "0": "You learn about how game engines work and then you make some little games in like a week. Pretty good class.",
                    "1": "This course was fun! We only really started making games from scratch midway through the quarter. Also the concept were more linear algebra but I definitely think I learned the fundamental behind how games worked.",
                    "2": "Great class! Professor Ian is one of the best professors at Northwestern.",
                    "3": "The hands–on learning experience was fantastic in putting concept into practice.",
                    "4": "The course is great for people who want to learn about the internals of game engine, like rendering and event system.",
                    "5": "This is a weird class. The actual parts in Unity, which are the homeworks/projects, are pretty cool. It's fun learning how Unity works and how to make a game from scratch. That being said, the lectures and exams aren't about how a GAME works, it's about how a game ENGINE works. This is substantially different content that is way more difficult and less important in actually making games. Also, the class works as a flipped classroom, which is annoying. Overall it's a fine class, but not great.",
                    "6": "Assignments aren't too bad, easy enought to grind in a week. but tests were annoying and much harder",
                    "7": "I have very mixed feelings about this class. The class is primarily about how a game engine like Unity works under the hood. Because of this, the class covers a lot of math and physics. All of the lectures are prerecorded, and they are just him lecturing off a powerpoint, which made learning the math very hard.  I also personally  felt that the professor's definition of a lot of the math concepts were very vague. <br><br>The exams are very hit or miss as well. They cover a lot of material that you need to memorize in order to do well. If you are able to memorize everything, the exams are pretty easy.  Overall, not a super hard class to get a B+/A– in.",
                    "8": "The quizzes have nothing to do with the assignments. The quizzes are mostly math/physics/debugger stuff",
                    "9": "Probably the most fun CS course I've taken. Learned a lot about Unity, C#, and graphics. Weekly projects were super fun and creative but not that difficult at all. Only thing that really sucked was having the final at 7pm on the last day of finals week.",
                    "10": "The assignments are super easy, but you literally need to memorize nearly every single detail of every single slide in each of the slide decks if you want to do well on the quizzes.",
                    "11": "Wow, this course really needs to be split into two courses. The disconnect between the homeworks and the quizzes is so massive, it's like be told to bake as your homework and your quizzes are on the chemistry of your food.",
                    "12": "Prof. Ian is really great and the class is a fun chill place to learn to make games.",
                    "13": "One of the greatest courses I've taken at NU. Sure there's a lot of math and physics, but i love video games so it was really cool and very fun to build them and now understand the mechanics of madden every time I play it.",
                    "14": "This course was great, it had a relaxed environment and did not require a large amount of time commitment. Professor Horswill is very patient and I enjoyed attending all of his lectures. The class will teach you about game engines and game mechanics, so there is a small amount of math and physics you will encounter, but for the most part you learn how Unity works. There were weekly assignments that did not take too long, and everything was peer graded. There were two exams and a final, and exams were taken during class, just make sure that you are familiar with each topic covered. They are not super specific, but cover a wide range of material. You get to create your own games for some assignments, and it is very rewarding to see your creations work with the material applied in class.<br><br>In summary, I highly recommend the class. Professor Ian is great, there is not a huge time commitment, and you have fun writing your own games and playing through other students' games.",
                    "15": "Pretty good class. The class goes and teaches a lot of the core concepts of game design from a coding perspective rather than a artistic/design perspective. I believe the second course 377, teaches the artistic/design perspective, and this class does a great job setting you up so you can implement the ideas that you have in 377. Overall, very happy  with getting to learn component–based architecture and how to code games on my own. Do be careful of forgetting to do the lecture quizzes, I know that I and a lot of other people had  hard time remembering to do the lecture quizzes and consistently missed the deadline.",
                    "16": "I feel that the flipped classroom structure didn't work for me. Lectures just felt somewhat useless and if you were behind on the Panoptos, none of it made sense. For a class that meets 3 times a week, I feel like that much required extra time is a lot. The class also focused a lot less on Game Design or project architecture and more on specifically physics and smaller problems, in my opinion.",
                    "17": "I LOVED this course.   I am biased as I'm interested in game development, but I found this course to be a very good introduction into the Unity editor and a good starting place on the more technical understandings of game engines and editors.<br><br>In class: <br>The class was a flipped model. Lectures were posted on Canvas beforehand and then elaborated on in class. A lot of them were focused on the things under the hood of Unity,  such as graphics processing and the math behind object physics. There is also a small section focused on the design principles of games, which I think really helped round this class out as a true \"Design and Development\" class.<br>Homework Assignments: <br>The homework assignments aren't bad. Start them with ample time in case you run into problems, but they are also fairly straightforward assignments. They're also what get you experience with the Unity Editor. The first few projects are typical \"complete the code\" assignments, but towards the later half of the quarter you'll build your own small games. GET STARTED ON THOSE ONES EARLY. It takes time to get this stuff done, but there's no expectation for them to be works of art. There were no extensions in this course when I took it, so keep that in mind. <br>Quizzes: <br>There were 3 quizzes that, in all honesty, weren't that bad if you properly studied. They're fair questions that don't seek out to trick you or test on niche topics that you . Literally study a few days before and you'll be fine.<br>The Professor: <br>Ian is just a great professor all around. He likes what he's doing, he teaches well, and has fun with it. It's a fun class.",
                    "18": "Great class! Ian's super nice and a clear lecturer. The course content its a little all over the place, but it's pretty interesting. Assignments and exams are straightforward.",
                    "19": "I really liked this course but I did not like the daily microquizzes",
                    "20": "This is a cool class. There is a lot of unexpected, interesting content in the lectures and the assignments are pretty fun. The class could be structured better because the in–person lectures felt like a wast of time.",
                    "21": "The projects in this class are so much fun. You make games! Be creative!<br>Even if you already know how to make games, you'll learn in this class.",
                    "22": "It let me know the principles behind games, which is helpful, since it deepen my understanding of life on some degree",
                    "23": "This is an amazing course. We learn about all the concepts that make up video games in class, and then actually see them implemented in the assignments. Quizzes are fair. Flipped format might be a little disorienting for some. Ian is goated.",
                    "24": "Fun projects class although it doesn't satisfy the projects requirement",
                    "25": "N/A",
                    "26": "The class is primarily short quizzes (1–3 questions) after class and making games every week or so as assignments. I liked it, but if you have a lot of other heavy load classes it can be pretty hard. <br>Ian is amazing. Long live the Mermaid King!",
                    "27": "Don't recommend... This class is not like what you imagine – learning about making games. It turns out to be a linear algebra and physics class. The games are also not fun at all. Quizzes are hard and easy to get a low grade. Hard A I would say. Do not recommend!!!",
                    "28": "This course was more difficult than I anticipated, but still an interesting class. I had no background in Unity coming into this class and found it very difficult to adjust, but you can still make simple games even as a beginner. There are three in–person quizzes throughout the quarter which make up 40% of your grade, and these definitely require a lot of studying to do well on them.",
                    "29": "learning fundamentals of unity;<br>game development basics;<br>physics behind games",
                    "30": "Ian is a based professor<br>class is also fun! Shame that it's unity but hey its still good",
                    "31": "It is a decent course. It is decently hard to get an A in the class, but an A– is very doable. The exercises are very manageable and the class is pretty fun. He's a good teacher but talks slowly, so you definitely want to watch the pre–recorded lectures.  The quizzes are not freebies and you will need to study to be able to do decently, but if you look over the slides + troupe exercises the quizzes shouldn't be too bad.",
                    "32": "Love Ian. This course is honestly really fun and not super stressful. Exams are a little bit tough but that is the only time you have to really apply knowledge from the lectures.",
                    "33": "Ian is the best! There are three in–person quizzes, weekly homework, and a final project. Codings are making games which is very fun to work on. The instructions for homework are sufficient so it's a perfect starting point to start to make games. You will also have chances to design your own game as well. The quizzes are not hard but there are only a few questions which means each counts LOTS of points. If you miss one question you might lose 20% points in one quiz which sucks.",
                    "34": "Ian is a very interesting guy.  I agree with earlier years CTECs in which he tries to do a flipped classroom, but ends up essentially teaching the same things in the online videos and during the in–person lectures.  So honestly, you can pick one or the other to do.  The assignments are peer graded, and aren't that bad, probably 2–3 hours per assignment.  The quizzes are weird, but doable, but you can honestly do pretty bad since it's so few questions (like 5 per quiz).  I learned a lot about the behind the scenes game design stuff though, so that was cool, but like you're not going to come out of this being adept in making a game.  I assume thats what 377 is for.",
                    "35": "Ok, there was a lot of physics/math in the lectures, but don't let that scare you. You only need a very surface level understanding of what's going on at the physics/math level to do well in the class. The projects were straightforward, with the lowest grade being dropped. The quizzes were a good bit more difficult, but I did reasonably well despite \"cramming\" by watching all of the lectures in the days prior.",
                    "36": "lowkey hard class, tests were only 5 questions so if you get two wrong its 60%. ccontent was interesting",
                    "37": "A good option for a fun class where you learn to make games if you are willing to sit through basic physics lectures. Be warned the grading system may be a little weird where you have to do peer grading and micro quizzes and stuff, and the assessments are only 5 questions each, so you need to stay on your feet in terms of assignments and material for a good grade. Not an easy A, but the material is relatively easy, and making games is time–consuming, but fun overall. Ian is super chill and will explain everything he taught all over if you ask him anything, so if you are lost, feel free to just ask questions.",
                    "38": "The course was great because it allowed you to explore how to make simple games, while lecturing over the more tedious parts such as rendering, so that one can understand the principles without needing to dive to deep into it.",
                    "39": "This course is just a bit messy. It's interesting, but having a flipped classroom makes it incredibly redundant. Lectures were the same as the demos. But it felt applicable to game design outside of education.",
                    "40": "Everything was fine and acceptable except for the fact students are required to peer review all the assignments of other students? Not only does this raise a major ethical concern, but much of the time incorrect grading deductions resulted from difficulty loading each other's submissions across different unity versions / machines, which perhaps explain why the TAs and professor don't want to do it themselves? From personal experience, loading another students' submission worked 50% of the time, and the other half was a nightmare to set up. Often leading to giving them the benefit of the doubt that it works (that is, on their end when they made it...) but of course no one can be sure this will go both ways,  that is whether one's work is reviewed by someone who will or will not give that benefit of the doubt ––&gt; not the case multiple times.",
                    "41": "Very comprehensive class, Ian is a great professor and cares about students. Grade is mostly composed of 3 quizzes and then weekly assignments",
                    "42": "I generally liked the class; I think having 3 quizzes is pretty overkill when we already have a final project, but it's whatever. They drop the lowest scores for assignments and micro quizzes which is really helpful.",
                    "43": "It's a good class generally. Weekly projects and 3 quizzes that makes up 40% of your grade.  The quizzes are a little annoying, but fine overall.",
                    "44": "The course breaks down what is actually a game in a very interesting way. It covers many questions that people will feel confused if they just start developing games by themselves, such as parallelism, object projection, component–based architecture, etc. Some might think the course focus too much on the theory, but I understand that those are gravely important for a proficient game developer.",
                    "45": "If you want to go into game design, or are interested in games at all, TAKE THIS COURSE! As of Fall2023 with Ian Horswill, here's the grading breakdown: Quizzes: 40% (three one–hour in–class quizzes),  Assignments: 40%, approximately weekly, Peer grading: 10%, Microquizzes: 10% (they'll drop your bottom 3 scores, so if you miss a couple classes, it’s no big deal). It's an amazing course. Ian goes into a lot of the nuances that are essential for game design. I didn't know a ton going in, but I leave it knowing how to navigate Unity, and with a better understanding of game design basics. Homeworks are maneagable, and there's ample Office Hour sessions if you're ever confused. You get an opportunity to design your own games towards the end of the quarter, and it feels really deserved. I loved this class so much, I don't know why you're still reading this CTEC, sign up for the class already.",
                    "46": "Easy class and low stress. Exams are a little goofy.",
                    "47": "This course gave me a pretty solid base of the technical aspects of game engines, but I also learned a lot about the actual process of developing a game using Unity. I feel confident that I can create simple games now, and if I want to create something complex, I have the basis to do so. The class is in flipped format, that is, you watch recorded lectures on Panopto and go to class to discuss, ask questions, and do troupe activities. Weekly assignments were games to finish developing or developing a game from scratch, quizzes were traditional exams on the content of the recorded lectures.",
                    "48": "It's a very fun class for getting into game development, Professor Horswill keeps the class fun while still being educational. He and the TAs are all extremely helpful when it came to office hours and all were enjoyable to talk to.",
                    "49": "Good class but the quiz difficulty and material varied greatly making it hard to prepare",
                    "50": "goes very in–depth into the mathematics behind game design, wouldn't recommend if you just want to learn about the raw coding behind games and aren't interested in the gritty details.",
                    "51": "Classes were, at some points, boring for me through sit through. However, majority of the content that was covered was very interesting.",
                    "52": "It's a great course. The quizzes can be a little painful because a lot of material is covered in class and might not necessarily get assessed. So be very targeted when you study for them– quality matters, not quantity. The assignments are good, and I enjoyed attending Ian's office hours. He's really helpful.",
                    "53": "A decent way to fill a CS elective even if you're not primarily focused on gamedev. There's a pretty big disconnect between theoretical lecture content and programming assignments, so don't just assume being able to do the assignments will set you up for the quizzes.",
                    "54": "NOT an easy A, exams are worth 40%. No curve, exam grading is not lenient. Peer grading can be unfair. Some assignments are fun.",
                    "55": "I enjoyed this class. It was really fun and interesting. A lot of the content of the class was fairly easy to grasp however so it wasn't always very challenging.",
                    "56": "Although Ian did test a lot of concepts that we never physically applied anywhere (I think that was the hardest part of this course), overall, I think I learned a lot about game dev and I would recommend this course to any of my friends.",
                    "57": "The most important aspect was game design",
                    "58": "I liked the fact that the course covered theory and practice separately, and did not quiz us on the practical aspects, using assignments instead. The progression was good too. I did not enjoy the flipped classroom format, since most of the time the video lectures were just longer versions of the in–class lectures. I also did not appreciate much the peer review system, especially for the free–form assignments / final project.",
                    "59": "Great class, super fun to learn and actually make you own games and such. Ian is a great instructor as usual and make lectures entertaining. The work was engaging and not overwhelming for the most of the assignments.",
                    "60": "The flipped classroom was a pain – eventually i just stopped watching the recorded lectures because the same information was repeated in class. honestly didn't really understand how the things we learnt in class connected to the homeworks and game design. it's a very low–level, from the ground–up way of looking at game design, if you're interested in that. if you just want to make simple games with unity, i learnt more about that from youtube than i did in this class. the assignments got more interesting once we were given more freedom to design and create our own games. homeworks after the first one are peer–graded.",
                    "61": "Have always been interested in taking this class and I honestly think it was worth it in the end. The homeworks were so fun to do, especially the freestyle assignments where you could create your own game in any genre! Learning Unity and C# was really cool and interesting. However, this class is not an easy A, there are 2 midterms and a final, in total worth 40% of your grade. The final this time around was pretty simple and not bad, but the first 2 midterms require you to actually pay attention in lecture. There is a lot of math involved in game dev, which can be difficult to understand. Luckily, you don't need to do math in any of the exams, but you will need to remember how certain equations work, and how physics work as well. The homeworks were honestly the best part of this class and made me love game dev, but the exams made me hate this class sometimes lol. I would still recommend it since Ian is an amazing professor, and the PMs are awesome too.",
                    "62": "This class is MID.  The projects are kind of fun but you have to do them entirely by yourself. Like you just have to google how to do everything he doesn't teach you at all. All you learn is useless facts about random aspects of gaming that feel incredibly irrelevant. The quizzes are annoying how they are set up (very short but covering a lot). Overall a boring let down of a class.",
                    "63": "Working with unity and game stuff",
                    "64": "Great course, can be a little challenging/confusing at times but overall def worth it",
                    "65": "Really did not like this course, I enjoyed making games and Unity, but being tested on random physics was not ideal",
                    "66": "Pretty good class. There's surprisingly quite a bit of content in this course. The class is structured as flipped–classroom which is nice because you can choose not to go to lecture. Your grade is hw assignments, peer grading, mini quizzes, and quizzes. You have about 1 hw per week and its usually making a game in unity. For some assignments you are just expected to fill out one/two files and for some you're expected to create your own mini game from scratch. You have a lot of free reign though so they usually can be as simple/complex as you'd like. There are also mini–quizzes after each lecture on Canvas. There are also 3 regular quizzes. These are kind of tricky since you have to remember a lot of material. It'd be way nicer if they were open note.",
                    "67": "I really liked this class since it taught me how to think more like an actual game dev and it taught me a lot of useful Unity skills.",
                    "68": "The course does an excellent job of easing you into Unity and game development. It's the perfect intro course for anyone pursuing Game Devlopment and Ian is an incredible professor who understands what people care about in the class and makes it entertaining.",
                    "69": "If you've taken CS 351–1 then a lot of the course material that is taught in lectures and is on the quizzes should be familiar to you. The quizzes were pretty short and relatively easy, though this also meant small mistakes could occasionally cost you quite a few points. Otherwise, this course was a good, low–stakes opportunity to mess around with Unity and learn some of its basics.",
                    "70": "This course wasn't amazing, but I would still recommend it. The lectures felt slightly disjointed from the actual homework assignments. They were harder and more technical, which was reflected on the quizzes, while the assignments were relatively easy. That being said, I think Ian is a great professor and he did a great job of making this class interesting and engaging. It's not a heavy commitment, and the assignments are actually pretty fun since you get to make games.",
                    "71": "The course was great for anyone that's interested in game design, and is quite engaging nonetheless for anyone that isn't as interested. While the assignments weren't too bad, the tests were quite difficult because of how narrow the scope of the test was given its short duration. There were a plethora of topics that were covered in between each test, so there was a lot of studying and concepts to absorb and only a few of them would show up on the test.",
                    "72": "I really loved this course and would recommend it to anyone. It feels like he wants you to learn independent of testing and the class is not stressful as a result. Quizzes and assignments are easy (although you can get caught on the quizzes because they are short).",
                    "73": "Enjoyed the class until it got to the exams. It feels like there is so much to memorize just for there to be only 5 questions. The microquizzes are slightly annoying and missing too many can bring down your grade a decent amount.",
                    "74": "This is a fantastic course. You get to make epic games using Unity and learn about how unity works at the same time. Also you can put as much effort as you want into the course: just enough to satisfy the bare minimum or an absurd amount like I did to make your games actually really good. Cannot recommend this course enough.",
                    "75": "Teaching style might be unusual as lectures are prerecorded and needed to be watched before class and class is more \"discussion\".",
                    "76": "I enjoyed it a lot!",
                    "77": "Amazing intro to game dev",
                    "78": "This class is pretty fun aside from the exams. Definitely need to study for them, as they have a big pull on your grade.",
                    "79": "banger course, really intense math and math–y conceptual nonsense sometimes but you don't have to actually do any computations and it's all relevant/interesting. ian is the goat",
                    "80": "This course was very split between assignments and exams. Assignments were all in Unity, not all that difficult, and except for some \"Freestyles\" basically just filling in functions to make games work. Lecture was definitely not needed to do the assignments. The exams, on the other hand, are very theoretical including linear algebra, physics, and floating point topics among others. You can not go to lecture and then just look through all the slides the day before each exam instead and probably be fine, but the average was fairly low for exams. Also, would not be surprised if this was the last quarter taught with Unity."
                },
                "school_demographics": {
                    "Weinberg": 59,
                    "McCormick": 58,
                    "Medill": 0,
                    "Comm": 4,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 25,
                    "Juniors": 48,
                    "Seniors": 43
                }
            }
        },
        "COMP_SCI 377-0": {
            "2024 Winter": {
                "course_rating": {
                    "average": 5.74,
                    "student_count": 47
                },
                "student_opinions": {
                    "0": "This is such a fun course that can be as little or as much work as you want. Some people made absolutely insane games and it was super fun to play them at the end. Our game wasn't as detailed but we still got a very good score on it and it was very fun to make.",
                    "1": "This is the best CS course I have ever taken; it is less of a class, but more of a community of dedicated game developers coming together to make some awesome games. I love the format of this class, where we spend the classes playtesting and critiquing each others games. I wish I could take this class every quarter. Robert Zubek makes this class even better, and I was really sad to say goodbye to this class.",
                    "2": "I loved this course. I spent 20 hours a week working on this not because I had to but because it was super fun. Your just making your own game. If you really wanted to you could get by with only 2 hours a week per person in your group. If you get someone that's happy doing all the work or just get a good group that evenly distributes work its a fun and easy class.",
                    "3": "After a couple weeks of lecture, basically completely independent. It is whatever you make of it – very much you get out what you put in. Good class if there’s a game you’ve been wanting to make, pretty little technical instruction.",
                    "4": "A quarter long project. You will build a game with your teammates and receive diverse amount of feedback every week. It will practice your skill from design, planning, towards programming, game engine, together with team management. In the end, you should have a game that is worthy demo.",
                    "5": "This is a really good class for anyone learning computer science. Taking it as a senior, I felt very comfortable working with code coming into the class, so it was a mostly stress–free time for me to make a game with my group. This is one of the only computer science courses I know of that has students make a \"real thing\" that can be shown off to others, which is a huge plus.",
                    "6": "Loved the playtesting system and how the teams can independently define their workflow",
                    "7": "I learned a lot and it was a really good way of introducing the game development field. I really enjoyed the class and it was a lot of fun with not too much work.",
                    "8": "This was a great course!! If you need an elective or project course for the CS major or if you’re at all interested in making games, I learned so much from this course and made a game I am proud of/can show on a portfolio. Getting hands–on Unity experience was invaluable and it really took the training wheels off of 376. Zubek was great, and you could tell he was really passionate about games and the class itself.",
                    "9": "Great course for project requirement. First few weeks have some quick assignments where you learn pretty interesting things about how video games work and keep you interested. It's fun to analyse the games you play. The last 6 weeks are purely spent on your project, with class time used as play–testing. Overall, as long as you stay on track, it is a pretty low work class. It isn't hard to make a substantial game, and most of the grading comes from your peers. Great class and I would recommend. Low work for a CS project class.",
                    "10": "Good class, one project the whole quarter is a little weird but ended up being really nice",
                    "11": "Coming off of CS376, I really loved this course! Professor Zubek is very helpful with his comments during play testing. The class experience could vary with your group. Making a game over the course of the quarter was enjoyable. If you're taking heavy CS courses, I recommend this as a lighter option. Zubek also provided an optional lecture regarding hiring and job practices relating to the game industry, which was very appreciated!",
                    "12": "Get a group and start your game early. Inevitably, you and your group gets very busy towards the end of the quarter and you won't be able to spend as much time on it then.  That aside, the class is very fun and the final demo day is always a blast!",
                    "13": "Very chill. Good practice for doing group projects and working with users on a product you make. Especially helpful if you want to go into game development. Not too challenging though. It's as hard as you want to make it",
                    "14": "Amazing course, one of the classes I've most been looking forward to since I began the CS major!<br><br>This class is awesome and great to take with a group of friends, just remember that you're making a game from scratch, so it's a good amount of work! My recommendations would be to keep it simple, you can make a fun game with a very simple concept, remember you only have 1 quarter to work on it so don't make it too hard on yourself!<br><br>This class is pretty easy to get an A on, as long as you actually finish your game. Zubek's final review on your game is only worth 25% of your grade, the other 75% are a mix of simple and quick reports and scoring your teammates and other groups. The class has a few weeks of actual lecture about game design and some cool stuff, with most of the quarter classtime being reserved for playtesting other groups and their games! It can be a lot of fun, just keep in mind this class is one you actually need to go to, since you need to be physically present to test people's games and take notes on when people test yours.<br><br>I highly recommend this class, it's a great project breadth for the major and a lot of fun! Zubek is a great prof with so much experience, the PMs/TA are all very helpful as well! I'll leave the grading below since I know some people find it useful, hope you all get to take this class!<br><br>Group project outcomes: 40%<br>◦ Final project grade (from prof): 25%<br>◦ Playtest scores (from your classmates): 15%<br>Participation: 40%<br>◦ Homeworks, project proposals: 15%<br>◦ Sending in weekly reports and assessments: 20%<br>◦ Doing playtests and sending in your scores: 5%<br>Teammate assessment of your work: 20%",
                    "15": "This is such a fun class!! I highly highly recommend it. It isn't an incredibly \"easy–A\" but it isn't mentally challenging, it just requires working on your project outside of class. The content is super interesting, unity is really nice to use, and play–testing your game while making it is really fun. It was a great class and I'm so happy I got a chance to take it before graduating!",
                    "16": "Super fun class!! Completely self paced and pick your own adventure, but the teaching staff are there to support you along the way. Make sure you are with a team you like and work well with!",
                    "17": "The class only picks up once you start making your game. Given the amount of time and the size of our small teams, the quality of the games tends not to be the highest for teams that are just starting. Some of the teams who join the class join with a game already in development, but don't worry if you don't have the game already planned or in development: the point of the class is really to experience game development at a small scale, so you'll have the entire quarter to work on the game with check–ins/playtests every week.",
                    "18": "Take this class if you are able! Great project course and most of the work is self–directed.",
                    "19": "3 weeks of game design theory, then 6 weeks of making a game! It was pretty fun playing each teams' games at the end of class. Though this class is a lot of work that never really ends because you can always do more work on the project. Be sure to pick good teammates.",
                    "20": "TLDR: If you've ever wanted to remotely take this class TAKE THIS CLASS. As a Junior, this was the best class I've taken at Northwestern, hands down. The ability to be creative, the freedom to make whatever you want to, the sheer support that you get from your classmates and the TAs/Prof is incredible. I learned so much more about Unity, and this motivated me to want to become a game developer as a career. I'm so grateful for having taken this class. It's an experience that I will never forget. 3 weeks of reading/responses. 6–7 weeks of game development. You have to make a report each week about how much you and your group collectively did. Class is a place for people to playtest and give feedback on your game. Submit the assignments on time, submit a game you and your team is proud of, you will get an A.",
                    "21": "Super fun class. Kinda you get what you put in, and the professor is a good resource. The games are also super cool.",
                    "22": "I loved how team focused this course was as it helped you get a sense of what real game design might be like in the future.",
                    "23": "Amazing class. I loved how the class was formatted. Prof Zubek was very chill and the project was actually fun and helpful.",
                    "24": "Incredibly fun class. I wouldn't necessarily say I learned a ton in a conventional knowledge way, but you get great experience actually making a game. Demo day especially is so much fun, which is when you get to play everyone's different game. Also pretty light and easy. Highly recommend.",
                    "25": "I think this class is highly dependent on your group and the scale of the project you want to make. If you have a solid group, you should have no problem completing the game on time and getting a good grade. We only had lectures for the first few weeks, and once we started developing our games, the lecture slots were used for playtests, which are pretty chill.  The class is not very difficult as long as you get everything done. Definitely recommend.",
                    "26": "I HIGHLY recommend this course for fulfilling CS major requirements (especially because you'll take 376 before it, which also fulfills several potential options). Even as a simple elective, it's actually a really fun class and overall, a really good environment. It's not hyper competitive, just about delivering on the game you're interested in creating. It also leaves you with a product that can go directly in a portfolio or resume, which is an awesome bonus.<br><br>Just make sure you have a good group. You'll be working with them a lot and really need to be able to communicate with them effectively about expectations.",
                    "27": "this class is super cool! its fun to take with friends, but easy to find a group if you don't have friends taking it. you definitely get out what you put in, so its an easy projects course if you want it to be.",
                    "28": "Good class overall. It's a fun opportunity to spend some time making a game and there is a lot of freedom in terms of what type of game you want to make. The time spent for this class just depends on how much time you want to spend making the game.",
                    "29": "The course is very self–paced. Be passionate or at the very least don’t be a procrastinator.",
                    "30": "This class is really fun! I recommend taking it with 2–3 friends because this class is fully group work in Unity. For the first half of the quarter, assignments were textbook questions that focused more about conceptual topics for game dev. The second half of the quarter was all about playing other group's games. Final grades are partially based on evaluations from peers who have play tested your game. There was definitely a range to how seriously people made their games. Personally, I wasn't willing to spend money on any graphics or animations, but I think that the teams that did made a better product overall. It's very clear how much passion that Robert and all the TA's enjoy gaming.",
                    "31": "Just development and game design concepts! That's all you really need – Zubek's enthusiasm for the class is a bonus",
                    "32": "This course is an incredible course to take for the Project Requirement. The first half of the course is Rob going over proper game development and explaining some pitfalls that you can encounter during your own game. The second half of the quarter is just working on the game and in most cases, this is not too difficult to manage. I advise establishing your roles with your group early on to avoid conflicting on responsibilities.<br><br>I strongly advise you be careful with who you choose in your group. You want to avoid people who are too ambitious and unwilling to scale down the project. Similarly, you want to avoid team members who are non–responsive or make last minute changes to the project without informing the team. These type of partners only bring unnecessary stress to the group and have a \"go with the flow\" mentality without sticking to any ideas. Truthfully, having someone like this in my group lead to an overall miserable experience because this person acted childish and would have an ego trip simply because you would ask to scale the project down due to time constraints. Beyond that, look out for people who blatantly ignore playtesters and refuse to make changes because they have a \"vision\". Changes in a game project are par for the course. Lastly, ignore people who are trying to write a complex story in your game.  Most likely, everyone on your team will be too focused on completing the gameplay, UI, sounds, etc. before they can get to writing down some unnecessarily complex narrative.",
                    "33": "Class is very chill for those that are looking for an easy Projects course. Make sure to have a solid plan when creating your game and that it's doable for the amount of time that you're given. You have lectures for the first four to five weeks of the quarter, but you are encouraged to start thinking about your idea and how the team is going to finish it.",
                    "34": "The class environment is laid back and supportive, and is very much do–it–at–your–own–pace, which means the team's product can suffer during midterms or finals.",
                    "35": "Fun class but know what youre getting into as a big project class!! Having a good group is important as you will be working with them for the entire duration of the class, so find people who you can agree on ideas with and work together effectively. Do not over scope and make sure you have some basic ideas on gamefeel design<br><br>it was a pretty big time commitment and I was very burnt out by the end. pace yourself and have groupmates that can work with you smoothly",
                    "36": "My group was AMAZING, and developing the game was an incredible experience. I'm so proud of what we created.<br>The more time you spend, the cooler your game gets.<br>It's a learn–by–doing class. My groupmates were awesome, so I turned to them when I got stuck, but the TA's are cool and having TA's on hand would have really helped me during issues I had during previous game dev projects.<br>Tip: Make friends during CS376, then do CS377 immediately after."
                },
                "school_demographics": {
                    "Weinberg": 28,
                    "McCormick": 16,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 11,
                    "Juniors": 19,
                    "Seniors": 14
                }
            }
        },
        "COMP_SCI 388-0": {
            "2024 Winter": {
                "course_rating": {
                    "average": 6.0,
                    "student_count": 9
                },
                "student_opinions": {
                    "0": "This was a very interesting course. I felt like I learned a lot of industry wisdom and also made some new friends.",
                    "1": "This has definitely been one of my favorite CS classes. The class is entirely discussion based and was a really fun way to engage in CS topics outside of regular programming classes. Though this class doesn't have any programming, it has taught me the most about software engineering and covers a huge range of topics that I hadn't actually thought about before. We don't really get a way to learn about the software engineering field outside of programming directly during our time in undergrad so this class was  insanely important for helping me contextualize what I've encountered in the workplace. Highly recommend you take this class if you have software engineering experience, or are thinking about pursuing it.",
                    "2": "This course is great because the readings give you a deep understanding of various aspects of software engineering that most people have some exposure to but do not think about in great detail. The discussions are really engaging and insightful, especially since you can hear from different perspectives and share your own thoughts. I would definitely recommend taking this course if you have some experience with software engineering and plan to pursue it as a full–time career.",
                    "3": "TAKE THIS CLASS<br>Vincent is one of the best professors at Northwestern and fosters a great learning/community environment in this class.<br>Twice a week, you need to read 2–3 articles about topics in CS, write a summary and a small reflection and then discuss about it in class with your peers.<br>The discussions are lead by one student every week, but Vincent makes it that there is a great class environment that even if you're shy in you ll be comfortable participating.<br>Don't worry about your grade in this class, Vincent just wants you to add to the class in your own way and show learning.<br>Even though it is not a technical class, I feel like a better software engineer and learned so much about topics you would only maybe get exposed to in an internship setting.<br><br>TAKE IT PLEASE",
                    "4": "Vincent is thoughtful in encouraging different thoughts in the seminar. I believe this course provides students with the right questions to ask themselves and others in the realm of software engineering. <br>I recommend this course!",
                    "5": "Great class! You learn so much from talking to Vincent and your classmates about very important and relevant topics in software engineering.",
                    "6": "I am grateful that I got to take this class during my time here as a CS major.  Vincent has curated a great selection of themes and topics about software engineering and the tech industry and it was enlightening to hear other NU CS students' thoughts on some big topics such as ethics and interviewing. I also appreciated having a space dedicated to talking about our experiences in software engineering and being able to pick the brains of around 17 other students who have had such a wide array of diverse software experiences. As someone who has had limited professional experience as a developer, a lot of the discussions we had ended up being very valuable for me, not only to learn about some of these topics but to finally give context to some of the things I had done in my previous work experiences. If you are interested in going into industry or even just thinking more critically about software engineering outside of programming, take this class! You won't regret it."
                },
                "school_demographics": {
                    "Weinberg": 6,
                    "McCormick": 2,
                    "Medill": 0,
                    "Comm": 1,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 3,
                    "Seniors": 6
                }
            }
        },
        "COMP_SCI 392-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.94,
                    "student_count": 31
                },
                "student_opinions": {
                    "0": "This class teaches front end (react, JavaScript, firebase) and is unique in that way compared to most CS courses. As someone who had never worked with these technologies, I learned a lot and am now comfortable developing my own website. I thought it was perfect to take this course alongside CS 310. While they are completely independent, the knowledge gained from both teaches full–stack development with processing and database access in the backend, which can then be used to build an interactive website/app. <br><br>I also liked how Professor Riesbeck had us work in teams. I found my team to be very good at contributing and all groups seemed to consistently ot together great apps in the class.",
                    "1": "Great class for building your portfolio! You will learn react and complete three webapp projects with a group of 6–7 people. Fast paced but rewarding.",
                    "2": "Great class, unless you are assigned some lazy teammates and end up having to do all the work yourself.",
                    "3": "The class consumes a bunch of your free time, 2–3x meetings a week with group outside of class, plus tutorials that take a few hours each week, but is rewarding and will make you a better app developer and team player/communicator.",
                    "4": "3 team projects, each three weeks. I have to be constantly learning and thinking to progress in the course, and the overall benefits is absolutely worthy.",
                    "5": "This class really depends on your team, but it is a decent amount of work. You're expected to put in 5–10 hours/week outside of class to build a web app in 3 weeks (you build 3 of them over the quarter). The class isn't difficult, and you do learn a lot about React, but it does take up a lot of time.",
                    "6": "Personally a bit disappointed. A useful topic, but very repetitive. I feel like I stopped getting anything out of the projects after the first.",
                    "7": "Very good class to practice coding in a group setting and producing prototypes really quickly in two week sprints. Also, this class is pretty chill as long as you have good group and simply present in front of class on the prototype at the end of every two week sprint.",
                    "8": "The class is useful if you know a lot about the material beforehand. If you don't know a lot about Agile programming, Javascript, or how to use React, it's very difficult to get started and it can feel alienating to be surrounded by people who know what they're doing (especially if you're a younger underclassman, since there's a lot of grad students in the class).",
                    "9": "Very good class for working in groups on web dev projects.",
                    "10": "This course is really valuable in helping you learn React and basic web application development. There are 3 projects you complete with groups, and most of your grade is dependent on how well you work with your team. The class can be slightly time–consuming if you do not have React experience, but the structure of the class allows you to learn it as you work on projects. The in–class sessions consist of learning new technologies and talking about good team practices when working on software projects.",
                    "11": "The amount I learned was great, but the course structure was frustrating. You always had mini assignments due every two days, for like a month period, and if you missed one you were deducted points. This to me made no sense, as if it is a month long assignment and I am packed for two days, I should be able to take just two off, but you are penalized for that. Would highly recommend changing this, it made me not enjoy a large part of class. Also sometimes when you went to class you could 100% just done that assignment from home.",
                    "12": "The course is great in case of learning how to work as a team.",
                    "13": "This class is not how the past CTECs said. You can no longer choose your group so you are randomly paired with 5 other people to work on 3 projects for 10 weeks. The experience is all dependent on this random group and you rely a lot on other teammates getting their work done and doing it well. Which usually does not happen. Also class is mandatory but you learn absolutely nothing. The professor just talks about how to work in a team and how swarming is the best way to do software development. You also get assigned solo busy work during the quarter that instead of having a due date, you have to make progress every 2 days and track progress in a spreadsheet which is became very annoying. I would not recommend this class.",
                    "14": "This is an amazing, effective, extremely well–organized course that takes a LOT of time commitment and work: be prepared to spend many hours a week on this and to pull your weight in your project group, otherwise this course will not work well for you at all. Super effective in getting me where I wanted—you learn everything you need to know to be able to \"build your own app\". I really appreciated how we not only covered software development, but also TEAM development, the class was well set–up to give experience and not too much pressure on the self–driven student. Dr. Riesbeck is an incredible professor who is continually optimizing this course over each iteration, so I'm sure future iterations will be even better.<br><br>Note that in the middle of the quarter it gets hard to keep track of all the tutorials and snapshots and team reviews and readings and swarms going on, you really gotta pay attention in class in order to stay on top of it. Dr. Riesbeck could help with this too, the Canvas assignments were hard to navigate on top of snapshots and team swarms.",
                    "15": "It's almost the same as cs394 (I took it two years ago) but you build three of the example apps instead of just your first one",
                    "16": "This class is very useful teaching you various technologies and frameworks such as React, end–to–end testing, unit testing, CICD. I also really enjoyed the team work aspect of the class. <br>However, the workload is high with various small tasks that are just busy work. You are almost always working on 2 or more assignments at a given time.",
                    "17": "This class needed PMs for the individual work. Didn't learn much because no one on my team swarmed.",
                    "18": "I learned a lot but I found the in class work to be unnecessary. We should have spent that time working in our groups. We would spend 90% of class doing nothing.",
                    "19": "Absolutely loved this course, and would highly recommend it to anyone that wants project experience. <br>However, I personally strongly disliked the grading system for individual assignments (Prof Riesbeck takes snapshots of our progress every 2 days and takes 10% off of the remaining assignments if we make no progress within 1 snapshot). I thought this wasn’t very flexible to our schedules as students, and the lack of leniency really made the class difficult sometimes. <br>The individual work was definitely pertinent to the class, and I’m glad he had us do it, I just didn’t enjoy the constant strict deadlines.<br><br>Other than that, I had a blast with the main part of the class, group projects. I had a great group, so that definitely helped, but it did seem to me like most of the people in my section were be pretty devoted to their group work. I learned so much about computer science group work, and the projects we did were actually pretty cool! They also helped me learn technical skills, so if you’re looking for some easy resume building this class is perfect. Overall, for forcing me to work on cs projects in groups, this class was invaluable.<br><br>As for Professor Riesbeck’s teaching and the class content, I thought most of the skills we learned about rapid prototyping and agile development were useful. It took me a bit to open up to some of the concepts, but in the end I found myself very happy with the skills I learned in class. Prof Riesbeck’s teaching style is very interactive, and he does a great job answering all of our questions about the content.<br><br>Overall, 10/10 class! I haven’t taken 394 – agile development, but I think I would prefer this course just because we had the freedom to work on our own projects that we thought were interesting."
                },
                "school_demographics": {
                    "Weinberg": 11,
                    "McCormick": 15,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 1
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 4,
                    "Seniors": 15
                }
            }
        },
        "COMP_SCI 394-0": {
            "2024 Winter": {
                "course_rating": {
                    "average": 5.23,
                    "student_count": 31
                },
                "student_opinions": {
                    "0": "Its hands–on learning, I enjoy these kinds of courses.",
                    "1": "Rare to see professor actually still being passionate about what they're teaching – riesbeck is one of them. <br>Actually a really good class to get team work experience and communication with clients",
                    "2": "I got super lucky and was placed with a really good team this quarter, which made the course a lot more enjoyable and satisfying. Who you get placed with as a team really makes or breaks your experience.",
                    "3": "This is not a hard class, but somewhat time intensive. You spend the first half working on a team project using React/Firebase, and the next half working with clients from the Masters of Product Development (MPD2) program. You are required to meet with your team anywhere from 2–4 hours a week, and 1–2 hours during the client project. Prof. Riesbeck is great to work with and the class is extremely organized on Canvas. I would suggest making the class do the Quick React + Firebase tutorial again, because the teams have members with varying levels of experience with full stack development. This was a challenge when swarming, because the baseline knowledge of React was often up in the air. Other than that, I would take this class if you're interested in learning more about how actual software engineers might work in the industry. Prepare to present often, meet often, and code often.",
                    "4": "I think overall the course teaches the basics in web development, with a focus on frontend.  It's group work and only 2 projects. Through teamwork is not very active in this class, but the teacher is nice. 100% recommend if u have experience in fullstack.",
                    "5": "This class has you working on an app almost immediately. You create 2 apps over the 10 weeks: first is an idea you come up with, and second a client idea. Hope that you have a good group, because you might get stuck with people who do not do much work, and have to carry a lot more weight than you should. This could happen if someone is a lot more knowledgeable/experienced with SWE.",
                    "6": "If you have no experience with web development, I would really just recommend taking 392 in the Fall instead. This course assumes you know how to use React from day one.  6/8 of my teammates barely knew any web development so it was just me and this other dude putting in hours to get the work done."
                },
                "school_demographics": {
                    "Weinberg": 11,
                    "McCormick": 7,
                    "Medill": 0,
                    "Comm": 2,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 0,
                    "Juniors": 2,
                    "Seniors": 15
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.30904761904762,
                    "student_count": 42
                },
                "student_opinions": {
                    "0": "TAKE THIS CLASS. It's a great class that will force you to get good at React and work in teams. Todd is an amazing and approachable professor who is always there to help you succeed. If you take, please be prepared to be a good team member and contribute. This class could be 4 hours a week if everyone participates evenly, but if you have to carry, be prepared to do 8–12 hours a week on it. Very fast pace but very rewarding.",
                    "1": "Warren is pretty nice and has a lot of interesting industry knowledge. I think the class structure needs a bit of an overhaul; turnaround on some of the projects seemed a little unreasonable and you are mostly left to fend for yourself on the projects. Only big issue with Warren's class is the grading scheme or the grading. Multiple times throughout the quarter there were gigantic discrepancies between what we were told the way  assignments would be graded and how the assignments actually got graded, resulting in MUCH lower grades than you would expect for this class. There were several assignments that I fully completed and submitted that were inputted as 0s. I think this class would easily be the most inconsistently graded class I have taken with the computer science department here. That's not a knock at all on Warren or the class –– the content is really valuable, and you work on two pretty cool projects that you should be proud of –– but something that, without getting fixed, I wouldn't recommend this class",
                    "2": "Very group specific. If your group ends up not being too great, you can end up putting in 20+ hours per week. The class is very poorly structured, with some important communications not being communicated until the last minute, or not at all. Course grading is not explained until the last week of class, and the time frame for completing two projects is very little. Grades are not determined by contribution, however! As long as you do surveys you should receive an A, regardless of whether you contribute to the codebase or not.",
                    "3": "The best class I've taken at NU! Super hands–on and interesting. The course pushed me to try tech stack and libraries that I've not used before and gain a lot more project experience. It might be a bit tough coming into this course without prior React/frontend experience but you learn a lot from the projects and your teammates. Professor Warren is great and tried to teach us everything he could about software development. I think one caveat is that the grading is a bit confusing and a decent part of the grade comes from filling out review forms.",
                    "4": "I wish the groups were smaller so that there was more to do per person.",
                    "5": "Highly recommend this course – Due to working super closely with a team, I felt motivated to explore knowledge outside the course, so that I could be a better software developer and team member.",
                    "6": "Prof Todd comes into this class with a lot of experience working in industry so just listening to him talk taught me a lot. As agile normally goes, your experience largely depends on your group and the client you get for the second half of the course. My group was highly motivated in the first half but largerly fell off since our client project didnt have the same technical demand as the first projecr that we made as a single group. A lot of this class came down to how motivated you were to build a 'real' project. There were quite a few assignments that could come off as 'busy work' but generally, if you went to class often, you could have learned a thing or two.",
                    "7": "I thought this was a very useful course for me especially since as a freshman I do not have as much experience in software development. Many of the students in the course already have a lot of experience, but working in teams allowed me to push myself and also learn how to do frontend and backend development.",
                    "8": "Honestly, how easy, stressful, or interesting this course is really depends on the group you end up with. If you get a good group that works well together, it's a lot more fun and manageable. But if your group isn't great, it can definitely be tougher and more stressful. The course expects you to code with your group every week, so just be ready to spend time outside of class with your team.",
                    "9": "I would be cautious about taking this class – it can be a much heavier workload than maybe expected and if you're in the position to get into the class in the first place you will not learn anything that you would not have learned in previous internships beyond potentially some things in react (which are only self taught– you're expected to have a pretty strong grasp on react for the class in the first place). I don't think I learned anything that I couldn't have reasonably learned w/in an internship or personal project environment – the workload and expectations of the class are such that people tend to \"specialize\" early and don't branch out (IE – people with ML experience working on ML). It's disappointing b/c I loved my group but I didn't feel like I actually learned much at all about react or agile methodologies– instead felt rather stressed. The class itself is also fairly disorganized– a large part of your participation/overall grade is filling out google sheets that sometimes can be troublesome to find. While Todd is super nice and I'm grateful to have met the people in my group, I wouldn't recommend this class overall.",
                    "10": "Great course. The course is very group dependent, but if you get the right group, then you truly do learn off of each other. This course is a lot about coding practices in industry, and group members apply what is learned in lecture and their own experience into the project they are in. Professor Warren also does a great job of teaching the important industry practices he had to utilize in his experience throughout the course, and it is truly insightful if you are applying/ working in industry.",
                    "11": "This course is fun. Rather than writing code, getting along with teammates and the arrangement within a team seems more challenging and important.",
                    "12": "Building team projects with a lot of freedom in terms of what to implement was great, but in class activities/lectures didn't always feel that helpful – lots and lots of miscellaneous reading and spreadsheets which didn't always feel beneficial",
                    "13": "Overall cool class, kind of team dependent though, teams are completely random (mine was good but definitely possible to get unlucky or carried)",
                    "14": "This is a cool course. You have a team project where you make a web app from your own idea and a client project where you write an app for someone else. You are randomly assigned to a team which can come with issues like team members not participating or different levels of commitment from teammates. That is part of the challenge and learning I guess. The lectures weren't super engaging as you mostly do readings about the Agile process and the Professor answers questions. The class is definitely what you make out of it because it is graded based on team and self–reviews. Expect to have 2 meetings a week outside of class. Prof Riesbeck is a good teacher and is passionate about the class.",
                    "15": "I don't know how this class felt disorganized even though its a well established class and Riesbeck has taught it for forever. I think maybe it's because you just have no idea what you're in for every class. There's no real rhythm or cadence to the class, you just show up and do whatever the day's activity is. Agile is an interesting concept to learn, but in practice it's kind of a pain because of the amount of time you have to dedicate to meeting outside of class (2–3 hours a week the first half + extra 80 minutes per week the second half). You don't get to choose your groups.",
                    "16": "This class is very much like you will get out as much as you will put in. The professor is very helpful and wants everyone to learn and succeed. The class is also graded very much on an \"honor code\" scale, you have to deliver to your class and your clients and will reflect on yourselves every 2 weeks – determines your grade. However if your group members don't put the work in, can be frustrating at times.",
                    "17": "Went into the course under the assumption agile was a waste of time, came out of it thinking it was kind of based. It's not the scrum garbage companies try to force, it's agile as a mindset which really is distinct",
                    "18": "This class was kind of disappointing, but only because of its structure. It felt like all we did in lecture was read articles and fill out forms. SO MANY SPREADSHEETS!!!!! I just feel like it was an ineffective use of our time. I think it would be better to have discussion posts about the readings before lecture that Professor Riesbeck can go over briefly and we could use the rest of the time working on our projects or doing in class assignments BESIDES (!!!) reading a piece of text then filling out the same spreadsheet over and over again. Riesbeck gave a lot of helpful feedback overall and he really cares about the students learning which I really appreciated. However, class time can be used much more effectively.",
                    "19": "good info, but a lot of unnecessary stuff",
                    "20": "The course was nice. Mostly team group work and basically no coding in class.  All the coding was outside of class.",
                    "21": "This class was a lot of filling out forms and spreadsheets during class time. The two projects we did were really cool though, and I learned a lot about React and agile development overall. Just make sure your team meets once early in the week and once later in the week for around 2–3 hours each time to ensure good progress.",
                    "22": "The learning by doing",
                    "23": "This course is very interesting.  First 5 weeks there was a team project and the last 5 are a team project for a client.  There is not really any quiz,tests, or assignments really.  The whole aim is to just learn about what Agile is, and how to implement it when working in a team.  Through this I learned a lot about working in teams and how app development (fullstack) really works.  This really helped me a lot in my journey especially since I had come in with 0 really app development experience.  Highly recommend.  Professor Riesbeck is also really nice and really enjoys teaching I feel.",
                    "24": "You learn a lot by doing but the lecture content is completely unrelated to coding. You discuss teamwork, development process etc. which feels more like product development. The goal of the class is probably learning about these things so if that's what you're looking for, than it's perfect for you. But if you're taking this class to improve your software skills than, might not be the right class for you.",
                    "25": "sometimes during class it can be a bit dull depending on the topic, but other times if the subject is really interesting the class is really fun. Other than that working on group projects is a 50 50. If your group has people that actually put effort in then its all smooth sailing, but other times your group might have a person that stops communicating and just begins to leech off the rest of the group's work .",
                    "26": "This course will land you a couple free projects, and that's about it. It doesn't do anything particularly impressive. Riesbeck is a fine lecturer, but the agile method seems to not really correspond really well with the quarter system. Many project groups in the class whose members I talked with often said their team members stopped working for one reason or another, regardless of metrics or whatever advice Riesbeck gave regarding teamwork. Many groups often just got carried by a couple hardworking members, and I think it's largely due people not being motivated due to quick–paced classes. However, if you want an easy class, this is probably a no brainer.",
                    "27": "This course is very dependent on the group you are paired with.",
                    "28": "Very good project course if you have a good group.<br><br>Your group is random. You build a project in the first 5 weeks, and then you build a client project in the second 5 weeks.<br><br>If you have a motivated group you will learn a lot. The project doesn't need to be super complex, and you will get to learn more about React (if you don't already know) and Firebase. You can choose to use other frameworks if you want (my group used TailwindCSS because it's goated).<br><br>There are a lot of small spreadsheet assignments that can be tedious to fill out sometimes.",
                    "29": "Not the best class. Team dependent really."
                },
                "school_demographics": {
                    "Weinberg": 20,
                    "McCormick": 18,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 12,
                    "Juniors": 20,
                    "Seniors": 2
                }
            }
        },
        "COMP_SCI 396-0": {
            "2023 Fall": {
                "course_rating": {
                    "average": 4.958541666666667,
                    "student_count": 48
                },
                "student_opinions": {
                    "0": "Overall it was pretty good, and it would be better if there are more materials  provided, such as PPT and notes.",
                    "1": "Big fan of this class, but if you are someone that didn't like CS 336 or other earlier algorithms classes, then you probably won't like it. The class set up sounds pretty unforgiving with each HW question being all or nothing credit with not much assistance available. But there were some bonus assignments too that made keeping a high grade in the class not that hard. I really enjoyed the quick pace of the lectures and the hw problems were honestly pretty fun despite being pretty challenging. Most algorithms classes I've taken remove almost all of the coding focus which often leaves me feeling like I couldn't really put the stuff learned into practice, but this class luckily makes applying the algorithms you learn a top priority and I feel much more confident in my general coding abilities having taken this class.",
                    "2": "The lecture's aren't necessarily the best, but you will get very good at algorithm problems. Some of them are very hard and time consuming, but the material is interesting",
                    "3": "Competitive programming is HARD. Treat it like a math problem instead of an engineering problem. It challenges my problem solving and algorithm knowledge to an edge, and when you realize how it actually works out, everything worth the effort.",
                    "4": "Have to say that this is a very difficult course, if you don't have enough algorithm competition experience (leetcode, acm, codeforce...). <br>The professor is knowledgeable, but the level of teaching is in great need of improvement. The algorithm taught by the teacher is too theoretical, so you may be still at a loss when writing the algorithm homework. I have participated in codeforces before, but it still takes at least three hours to complete one problem, and even more because you have to change the algorithm if the time limit and space limit exceed the requirements.",
                    "5": "Contents are useful, homework takes longer than expected to complete.",
                    "6": "This course was extremely difficult for me, but equally as rewarding. I think many students were expecting the workload to be comparable to other NU CS classes, and were surprised by how much more it is, but I think the workload was appropriate for what we're learning: it might be helpful to make sure students know from the start this is going to be a much more labor–intensive course than the average CS course here.<br><br>Students mainly complained about hidden tests (each hw problem had ~200 tests that you can't see, and you can't find out what test you've failed—only that you failed a test) and all–or–nothing grading (pass all the tests, get 100%, otherwise 0%). While it took some time and tears to get used to, I ended up appreciating it: I've never learned as much about problem solving and debugging as I have in this class, over any other class at NU, and these were the exact reasons why. Note that if you take this course and are working on homework, writing an algorithm is only a small fraction of the time you'll spend. You'll need at least double the time to test edge cases, build a random test generator, build a brute force solver, have long discussions on Piazza, sleep on it, and keep debugging. <br><br>The instructor was extremely responsive on Piazza, which was crucial for me to succeed in this course with all the above.",
                    "7": "Dmitrii is a super nice guy. He's knowledgeable about the topics and is able to explain things clearly. However, I did wish there was better structure with the course. We ended up not really talking about a bunch of topics that we wanted to. The class is 100% coding assignments, think leetcode medium–hard(closer to hard maybe?), which you have ~10 days to complete. Most of the time is spent debugging and you do not know the test cases. Great class though, would 100% recommend",
                    "8": "Very bad structured and planned class. probably BCS first time teaching. Hard problems. HWs are all or nothing really makes  no sense. For how hard it is, curving isn't great either. Lectures aren't very easy to follow or understand.",
                    "9": "This class incurred significant mental pressure. Even though the instructor justified the all–or–nothing design of homework grading, imagine putting in 20 hours for your homework, and you probably will get 0. When doing your homework, you may put in an infinite amount of time and still get nothing, or maybe one more hour and get full marks.<br>Also, prohibiting helping classmates made the learning inefficient. In my other classes, discussions with classmates benefited me a lot. One suggestion I get is doubling the homework amount and allowing students to work in groups.",
                    "10": "Hard. I struggled through the semester, the biggest problem is the frustration you get when submitting 30–40 times and still don't know where the bug is.",
                    "11": "This course was hard, and initially taught fairly poorly. The only graded thing is semi–weekly assignments, which can take up more than a whole day to do. I think about half the course dropped after the first few homeworks. The prof was new, and seemed to figure things out more toward the end of the quarter, making homeworks smaller and lectures slower, actually answering (some) questions on Piazza, and giving bonus point opportunities. I did learn a lot about algorithms and the homeworks coincide well with the lectures, but I would avoid this course if you're looking for something easy and only take it if you're very interested in algorithms. If you do take this course, it isn't difficult to figure out what you need to do to get an A, but it will probably take a lot of time.",
                    "12": "The course is great for students who would like to learn about advanced algorithms. It is challenging but very interesting as well.",
                    "13": "I disliked the (lack of) presentation and curriculum preparedness",
                    "14": "Really good class. You learn a lot about security by solving CTF–style challenges.",
                    "15": "Overall a good class. Learned about stack, heap, and kernel exploits, focusing on stack and heap. Not too difficult of a class, minimal homework. Would recommend.",
                    "16": "Super interesting course –– each Thursday is spent working on a lab/exploit, and the homework each week is just to finish that lab. Learned a lot about stack/heap allocation and how the kernel actually functions. The TA/Prof are great and both are super accessible/work to help you.",
                    "17": "This course mainly teaches you techniques  how to attack (like stack overflow) and defense, topics cover stack,heap and linux kernel.",
                    "18": "Really great course about the practical foundations of security! 20% of grade is in class activities, 20% quizzes, 60% homework assignments, this is likely to change though since it's the first time this course was taught. Overall really great, this class might have a steep learning curve though if you don't know web development and Javascript basics.",
                    "19": "This is a chill, enjoyable class focusing on the more pragmatic aspects of computer security. Would recommend having some javascript experience beforehand, as it's heavily used for the homeworks, but Prof Sruti is super kind and helpful, and makes sure people don't fall behind.",
                    "20": "Foundations of security is key if you're interested in learning more about cybersecurity/security. I thoroughly enjoyed it as it proved to be intellectually stimulating.  The class is also super interactive and that aspect of it makes the concepts more comprehendible. Sruti was a good professor! Definitely recommend this class!",
                    "21": "Security course emphasizes defense over exploits, which is refreshing! Lecture is very organized. Attendance essentially mandatory with a class activity each class or one of a few quizzes. Forces you to keep up. Start assignments early or you will feel overwhelmed. With time, assignments are all things that are nearly all fully covered.",
                    "22": "Prof. Sruti's 396 is a good introduction to security in CS in the practical. You'll be exposed to a variety of security vulnerabilities in software applications and methods for patching said vulnerabilities. In addition, you'll gain a fundamental understanding of why today's security \"best practices\" are the modern standard. The homework assignments provide reinforcement of the concepts by getting you to implement them in actual web applications. Note that a significant portion of the course uses web applications as a basis for discussing security, so a basic understanding the web and how web applications (front–end and back–end) are built is beneficial albeit not required.",
                    "23": "Intriguing class that delves into why security in the web world is the way it is. Albeit some bugs during demos, this class provided a solid foundation of understanding security and I found myself enjoying our group discussions about the role that security plays in our personal lives. Diving into different frameworks and considering the tradeoffs for different ways of mitigating threats to your system is something you can look forward to when taking this class.",
                    "24": "This class includes some webdev knowledge, but nothing you won’t be able to understand with a little self study. It is rather a good class to get some experience in that area as the prof does not expect you to be web dev experts. Definitely take this class if you’re interested in security but aren’t sure where to start! Homework’s were very doable and kinda fun!",
                    "25": "If you are looking to learn niche, advanced, or groundbreaking security concepts, this class is not it. That being said, as a beginner to security or CS in general, you will find this class very approachable and educational. Sruti is a great professor and really wants her students to learn. The class does not require much effort either, so there's that.",
                    "26": "Great course to learn about web security. Important topics were introduced such as XSS attack, SQL injection, CSP, symmetric keys, password salting. The assignments were well designed to allow you to apply what you learn in class in a real project using a popular framework NextJS. I hated implementing authentication before taking this course because it seems complicated but after breaking the topic down it is not too bad and I was able to use this skill to complete a full stack project in another class. This class could be scary at first for those who has never worked with React/NextJS since the homework uses it. However, the assignments are built in a way for you to mainly write Javascript and your direct tasks are not too reliant on doing React. What I found most difficult was the 3 in class quiz spread throughout the quarter. I felt that the content itself was fair and not difficult but not enough time was given. Sruti is a great professor who can explain complex topics and create discussions that are very helpful in learning.",
                    "27": "I would highly recommend this course. Very interesting material that is presented well. Prof. Bhagavatula is a great professor and very accommodating of any tech issues. Just a few quizzes (some were more difficult than expected, but not worth a lot) and homeworks (class material prepared us for them, some were even fun).",
                    "28": "This was such a great course – 10/10 recommend to anyone who is interested in security. You'll learn a lot of tangible ways to implement security in your applications and how to approach these problems without being security experts. Lectures are engaging and Prof. Sruti is truly dedicated to helping students learn and get the most out of the class.",
                    "29": "Robby smart. You not smart enough (unless you're v interested in this niche field). <br>Either listen to Robby or take notes in class. Can't do both. If you do both you won't learn anything. If you do one or the other, you'll have missing gaps in your knowledge. Have 4 ears and 4 eyes and 4 hands and maybe you'll get everything in class.",
                    "30": "Overall, I really enjoyed this class, but I'm not sure I would recommend it unless you really like proofs/theory. It was fairly easy at first and then got a lot more challenging once we started learning Agda, where I felt like there was a steep learning curve. Robby is a great professor and really helpful/supportive on assignments."
                },
                "school_demographics": {
                    "Weinberg": 6,
                    "McCormick": 28,
                    "Medill": 0,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 1,
                    "Juniors": 4,
                    "Seniors": 21
                }
            },
            "2024 Spring": {
                "course_rating": {
                    "average": 4.63763888888889,
                    "student_count": 288
                },
                "student_opinions": {
                    "0": "Nice class. Games were interesting, but ultimately, I’m not sure how much I’ll use/play them in the future.",
                    "1": "Learning about the generative methods behind Imaginarium and similar programs was very interesting. The troupe meetings were pretty fun, albeit a bit more time consuming that I would like.",
                    "2": "if you like ian, take this class. If you don't like ian, do not take this class",
                    "3": "This class is great! Its essentially learning through RP games (i.e. like D&amp;D), so if you don't like rp I wouldn't take this class. If you do, perfect! Because Ians amazing and the class is fun. The time commitment can be a lot, but you can also work out a minimal time commitment with your group. The time commitment is about 4–5 hours outside of class for meeting to play the game assignments. Easy class, very easy.",
                    "4": "The course has a decent amount of work to be done. TTRPGs are role playing games that are more narration based, so if that is something that interests you, then this course would be perfect. There is also coding assignments that do teach you important algorithms/ concepts.",
                    "5": "Pretty much what you would expect, play role playing games once or twice a week. More fun if you sign up with a group of friends (6 per group). Not very time consuming but you know you need to meet every week so it's not difficult but you will have to put aside some time.",
                    "6": "Only take this class if you have a group of people you would be comfortable forming a role–playing group with. I had a few friends in the class and ended up with a good group, but I imagine this class could be miserable if you end up in a group you don't click with. The course was 90% synchronous group work, which made scheduling and logistics frustrating at times. The computer science component of the course was very doable, and there was pretty limited extra expectations for the CS students. If you have a group, this is a very fun and creative way to get an A in a CS elective.",
                    "7": "Class focuses on roleplaying and requires playing weekly games that can take anywhere from 2–4 hours. The coding projects just felt like busy work added in order for the class to even be considered a CS class; they also didn't seem to be very practical. Only, take this if you are looking for an easy A to boost your GPA.",
                    "8": "Very fun an interesting course. Group is super important, if you have a good group it'll be a good time. Otherwise it would be difficult to get through the course.",
                    "9": "make sure you get a cool group<br><br>grading:<br>Individual assessments (50%)<br>Group assignments with your troupe (50%)",
                    "10": "In theory this should not be a difficult class if you are willing to a) self–learn some C# and b) meet up one or more times a week to play board games with a group. However, unless you really love learning new board games all the time and roleplaying, I would warn you about taking this class. It gets pretty dull after a while.  Also we don't cover any programming concepts during class for the two coding assignments, so it was kind of jarring having to suddenly do some coding in C# in the middle of the quarter. He does give like 2 weeks to do them though, so it's fair. Overall, an in–theory easy class that isn't for everybody.",
                    "11": "This class is really interactive, and was a fun way to incorporate theatre/role playing with comp sci. The coding assignments themselves weren’t bad, though they were pretty non traditional  hw assignments.",
                    "12": "This class was fun. You play games every week with your troupe and each session takes about 2–3 hours. The coding assignments were not too difficult as well. Overall, fun class.",
                    "13": "This class is about ttrpgs. It is incredibly fun, but it is not too much of a cs class.",
                    "14": "We got to play a lot of table top roleplaying games with our group, but some of the games have very long instructions and can be confusing to someone who never played. There's no hard work but some busy work.",
                    "15": "Overall, a very fun class, but as the quarter progresses, you realize that lectures and readings become less and less relevant to what you're actually doing. A whole week of lectures can be used just explaining a game system you'll only play with one time, and readings were interesting, but never necessary to understand any of the concepts we talked about. <br>The main focus of this class is the games you play. They're a great time and a good opportunity to make friends, but also very demanding of your time.",
                    "16": "The documentation for the language used in imaginary is very frustration at times.",
                    "17": "Watching the recorded lectures vs the ones in person was a pretty large disconnect, especially with the hacking assignments but playing the roleplaying games was fun.",
                    "18": "Very chill class. I learned a lot about TTRPGs and role playing, not so much CS though. Take this class if you enjoy games like Dungeons &amp; Dragons, or have any interest in those games. The C# assignments were pretty useless in facilitating learning though.",
                    "19": "Troupe chronicling take the most time",
                    "20": "I definitely think that this class is best taken with a group of friends. If you're looking to take this course as an easy class, beware that this course has a fairly big time commitment outside of class compared to what you might expect. My group and I met twice a week for 1–3 hours each session. On top of that, you're responsible for weekly group reports (which are fairly straightforward, always asking the same questions), individual coding assignments, and occasional readings/asynchronous lectures. However, if you think you'd enjoy table top roleplaying and learning about how AI can be used to help with story generation, I'd definitely recommend taking this class. Coding assignments relating to AI systems that Ian has made (called Imaginarium and Step) were fairly straightforward and the hope was that you would have fun with it. There were also 2 C# assignments, which definitely took relatively longer, so I recommend starting those as soon as possible so that you can go to office hours once you run into bugs or confusion. Otherwise, I do think your experience with the class will largely depend on your group. My group and I had a lot of fun because we were all on board with making each game as goofy and chaotic as possible, so I recommend coming in with an idea of who you'll be working with, ensuring that your play styles are compatible.",
                    "21": "Pretty chill class, mostly roleplaying, however, I expected more AI (which is the main reason why I signed up).",
                    "22": "idek how this class counts as a CS credit tbh. Requires a decent chunk of outside of class meeting time every week with your group. Reverse classroom style and you just play mini RP games during class. Lots of readings/videos the first few weeks but it gets lighter later in the quarter. 2 CS assignments this quarter based on implementing parts of programs that the professor has written.",
                    "23": "This class is pretty fun it u want to take it seriously",
                    "24": "This course was a complete waste of time. There were way to many assignments about nothing. The only fun part of this class was that I had a fun troupe to play the roleplaying games with. Otherwise, this course is just bad. It's not a CS course. There were two CS assignments and I didn't feel like they really taught me anything. Yet I still ended up spending a lot of time doing assignments because there is just so much non CS related busy work. This class overstayed its welcome. I stayed until Thursday of finals week to do our final presentation (which is a bs, no stakes, basically means nothing final btw) when I could've gone home earlier. Easy A though.",
                    "25": "Cool class. Try to be in a group that likes RPG though. those are the best.",
                    "26": "Not really what I expected it to be but it was pretty fun, just need to block out time for meetings",
                    "27": "Pretty great course if you want an easy A and simply play some fun role playing games. I've never played role playing games in my life but this class was actually pretty fun, it was a breath of fresh air compared to all of the other grindy and painful CS courses. Take this course if you just want to have some fun and get a bit of time to relax in your schedule.",
                    "28": "If you like TTRPGs, take this class. If you have friends who are trying to bring you into this class bc they like ttrpgs, have them do a quick one with you to make sure you like them. I don't like TTRPGs. The class was fine. The homeworks became more and more like pulling teeth towards the end. It's a great class and Ian's my spirit animal, but be sure that you like this class. 50% group project (3–5 hours of a group project per week) and 50% personal stuff (2 C# homeworks, 2 AI homework assignments). If you want to learn C#, take a different class. Take Ians 376, bc it's incredible and amazing. It wasn't a lot of work overall, but it was a bit boring.",
                    "29": "This course depends a lot on how engaged your troupe is.",
                    "30": "This class was so much fun! Ian is a great instructor, and the assignments aren't too difficult if you attend class and watch the additional lectures. It is a big time commitment outside of class, but overall, super enjoyable.",
                    "31": "Please only take this course if you happen to have a relatively free quarter and are looking for fun classes to fill your schedule. It's not particularly a difficult class but rather time–consuming and you may have to block out chunks of time during your week to play the weekly games. I do have to clarify that it is loosely computer–science–y but when you get to do the computer science stuff it's the very nitty gritty parts like SATSolvers and language parsers. As a freshman with 0 experience with these concepts as well as the C# language, I found this to be quite exciting and rewarding actually – Ian does a very great job guiding you through most of the assignments and so do the TAs.",
                    "32": "One of the most entertaining classes; take this class with a group of friends to mess around and have a chill time",
                    "33": "Course was fun!! Go in with a troupe in mind or group of friends, cause you'll be spending a decent amount of time with them every week. Lectures were boring and not always super related to the game at hand, but we did a lot of activities in them that were fun in their own right. All in all,  a fun elective if you don't mind RPGs and are in a good group!!",
                    "34": "fun class. surprisingly troubling coding assignments. was a little annoying to meet outside of class so often and have to understand 40+ page rulebooks for games",
                    "35": "just play games every week and write a chronicle and report per game not very hard; coding assignments every once in a while kinda hard for those new to programming but manageable",
                    "36": "This class was really fun and unique, especially for a CS class. We played RP games with our troupe (groups of around 6) assigned in class for around 4 hours per week, which is a bit of a time commitment but it's very fun and manageable. For the CS majors, there are 2–3 coding assignments in C# which were doable and 2–3 Imaginarium assignments (for non–CS students too). Overall, it was a really interesting format for a class, and I totally recommend taking it.",
                    "37": "Ian is a great professor his classes are great. This class is a Computer Science class, as CS student you will need to do a few assignments that range in difficulty and if you haven't ever used unity or C# can be pretty hard because they are a little bit out of focus relative to the rest of the class. With that said, the focus in this class is generating stories and game design by focusing on table top rpgs. This is a great class to take with friends (groups are 6 people), but if you get a really bad group you will most likely not enjoy the course. Playing games is really the focus. If you are looking for a CS elective, it's a great class but if playing role playing games where you use dice and have a dungeon master does not sound fun, maybe take a different class.",
                    "38": "Note: I would highly suggest only taking this course if you're actually interested in tabletop roleplaying games. <br><br>If you are: this is a really fun course! I highly enjoyed it, and it was fun to get an opportunity to try out new systems while also learning more about coding topics related to integration with random generation and the space they could have in tabletop gaming.<br>I would also suggest making sure that your teammates are also interested in tabletop games. Otherwise, it's very easy to run into a situation where you're very excited for this class, but your teammates are not nearly as interested",
                    "39": "This course is more work that I expected, and even though it was a lot of busywork, it still caused its fair share of stress. Make sure you find troupe members that have similar expectations for the intensity of the games you play (a good balance between CS and theatre majors is key).",
                    "40": "Prof. Ian is so whimsical",
                    "41": "I enjoyed having a group to work with.",
                    "42": "This is a class mainly about narrative games and game design. Much of the time spent on this class is outside during group meetings where we play tabletop RPGs. Each game session usually went for four or five hours. It's not easy to do in one sitting and becomes tiring, especially if you do not particularly like the game. I recommend taking breaks during your group meeting in between rounds of a game. The few programming assignments in this class were difficult, mainly because I did not have C# experience beforehand, but the instructions provided for each assignment were clear enough. It was a fun class, but I would only recommend it if you can get a bunch of friends to join with you. It also feels difficult if you have no experience in game design. For the game design projects, it was clear which groups had members with lots of game design experience or already took COMP_SCI 376 (game design and dev),  which is not a pre–req for the class, but definitely gave those who did a slight advantage.",
                    "43": "A for–fun course you can take if you enjoy some TTRPGs. It seems like a good portion of students taking this course are just here for the easy credit though. If you're not taking it with friends, don't expect others in your group to be enthusiatic in your weekly games.",
                    "44": "I was so excited to take this course, thinking that it would be really insightful into the mechanics and narrative capacities of tabletop roleplaying games. However, upon seeing that it was a large lecture course, the course began to lose its appeal. We barely interacted with the professor, and he didn't even have his own office hours, and it seemed that students were playtesting a game for the professor's friends that wasn't very good to begin with.",
                    "45": "I think the course was very fun and I highly recommend it if you have a group of friends that all need to knock out an elective requirement. The C# assignments were not very well explained and they ended up being very difficult. If you go to office hours you should be fine though. Other than that this course was a whole lot of fun.",
                    "46": "The professor was very nice and willing to help out his students.",
                    "47": "The class is pretty good overall. If you like to play tabletop role play games you'll enjoy the class. If you don't, the games are definitely going to be tedious as you have to come up with some on your own and play them for several hours each week. The coding assignments range in difficult from incredibly easy (less than 30 minutes) to several hours if you aren't already familiar with the concepts on some of the C# homework.",
                    "48": "play games",
                    "49": "I think this course helped me learn more about AI and tabletop games. However, I did not feel like I truly understood what I was doing in the coding assignments fully. I managed to finish both of them but even now I can only understand about half of what I even did. It's a good course if you really like playing tabletop games. It is not a good course for learning code, and it is really really difficult to complete the coding assignments not because they are terribly long but because it's hard to understand what you are being asked to do.",
                    "50": "This course was super fun and Professor Horswill is easily the best professor in the CS department, so you can't go wrong taking a class with him. He made this class super fun and I enjoyed it a lot. Definitely take this class if you are looking for a chill fun class, although there is definitely some hours you will have to put into this class to complete the assignments. None of them are hard and you should easily get an A on them, but they definitely can take some time to complete.",
                    "51": "Easy but time consuming course, make sure to prepare for the coding assignments, they are not as easy as you think",
                    "52": "This class is fun, BUT TIME CONSUMING! Make sure to just make time for this class if you really want to reap the benefits and enjoy to the fullest! Ian is also a very understanding professor, but you cannot turn in assignments late or you get a 0 (no redemtion). If you get permission from your school, you can get an extention, so it is kind of a process, but if you want the A and know you cannot turn something in late, then you just gotta do what you need to do. Overall tho, great class. AND SHOW UP FOR CLASS! It is fun, and Ian doesn't deserve an empty auditorium.",
                    "53": "The class gives a great insight on how AI might be used in various industries. The guest lectures are informative and the guests come from esteemed backgrounds. It is a great class to get connected to people working in the industry and gaining real world knowledge.",
                    "54": "great ai course",
                    "55": "Overall the course is a little boring and painful (2:40min consecutive lectures per week), but you are able to learn SOTA AI applications in science. However, the course is too LLM focused...",
                    "56": "Easy but boring class",
                    "57": "I loved this course and would highly recommend it! Some of the information is somewhat repetitive to any other media course. But classes are super engaging with interesting course materials.",
                    "58": "It was great. Connor is awesome. If you have the opportunity to take this class, definitely take it. The work is easy, but still important. And connor teaches you the importance of communication and how to communicate technical ideas to different audiences. Highly recommend.",
                    "59": "Take this class! It's one of the best classes I've taken at NU!",
                    "60": "A really great course that focuses on communicating in practice. Lots of group discussions / work, expect to be talking and discussing during nearly every class, so attendance is important. Workload consists mainly of writing discussion posts and completing the final project, which is super open–ended – not a lot, but very focused and it aligns really well with the class' purpose. Really fun course overall!",
                    "61": "Connor is great, and this class is definitely useful –– I'm not sure I learned a lot necessarily, but it gave some formalization to presentation (and other) communication principles. Generally a really chill class, assignments were super doable, and it was interesting to hear what everyone is interested in.",
                    "62": "Loved this class. Prof. Bain is amazing and very understanding – lots of freedom in this class to really hone in communication in the technical world.",
                    "63": "I really liked this class! Bain is a really good professor and I enjoyed coming to class a lot. The in–class group exercises where we practice communicating a specific technical topic to various audiences were very engaging. I also liked that the final project is very structured and you start working on it early so the end of the quarter doesn't feel stressful. Definitely the ideal senior spring class.",
                    "64": "I really enjoyed this course since it let us work on a project related to something we’re passionate about within CS. It is not a programming course at all; the main assignment is a large final project.",
                    "65": "This class was quite easy while also being incredibly engaging. It can be thought of as two parts. The first half of the quarter is learning about proper techniques and modes of communicating CS to various audiences. The second half of the quarter involves presenting your own topic in a project and making it. For this part, I recommend choosing a topic that you are genuinely interested in and have confidence in your form of modality. There is a lot of leeway in how you present your topic so pick a form that is comfortable for you and you should be able to succeed well in this class. Connor himself is also a great instructor who knows how to talk to students and is actively trying to make sure you succeed with your idea.",
                    "66": "Interesting material and very cool to learn about computer science from a different perspective than is typical. Very interdisciplinary, concepts from both hardware and software. Discussions, guest lectures, and readings were interesting, and brought up neat questions about system design. Significant chunk of the grade is a research group project, and this is very self–directed, so be ready to take initiative. It might be challenging if you've never done research before. Professor Arora is very passionate about the course material and has a lot of insights on the research process.",
                    "67": "OK course, take it if you're interested in sustainability, otherwise don't.",
                    "68": "The research was overall very interesting and I enjoyed the project aspect of the course. However, I felt like the course could have been organized better at times, but that may just be what comes with a new course.",
                    "69": "This is a great class to take if you are interested in Sustainability in computing !!",
                    "70": "We read papers every week and submitted a discussion post about them with our questions and thought provoking moments. The main deliverable of the class is a paper as well (in a group), and it's mostly self paced. Read a lot of papers and got used to academic writing.",
                    "71": "The class was quite refreshing and stood out from most other classes in CS. It was interesting to be in a smaller sized class which also allowed us to know each other. The readings were also not too heavy and were digestible. I think the discussion posts did help with understanding the readings. I liked how we covered a wide range of topics including space debris which is something other CS classes wouldn't really mention at all. I appreciated the abundance of project time during class and the guest lectures (I particularly remember the lecture on power grids). Lastly, I liked how we covered different aspects like hardware, network, and software.",
                    "72": "I think this course was very helpful is opening up people's perspectives. It helps people understand what sustainability means when it comes to technology and as a human. I believe that's something very valuable for anyone to learn.",
                    "73": "This course is very nice, very not stressful!",
                    "74": "Wow. This class was very different from every CS course I have taken. Professor Melo actually cares about you, and the space created in this class was very healing. Professor Melo is very knowledgeable about tech ethics and touches on a lot of complex, interesting theories. The content of this class has forever changed my perspective of technology, and I will continue on with my future endeavors with a more critical lens. Professor Melo is also very cheerful, and she brings her all to class every day. She is truly a wonderful professor, probably the most approachable and compassionate in the entire CS department. Take this class with Prof Melo!! You will not regret it. Most importantly, you get out of this class what you put in. The more you come to class present, open, and reflective, the more you develop your holistic thinking of tech ethics.",
                    "75": "Natalie is truly a horrible professor and makes this class miserable. She has no professionalism, expects students to tend to her needs, and makes this class a horrible environment. Her personal beliefs seep into everything she says and you are not allowed to disagree with her. Do not take this class.",
                    "76": "Natalie is really sweet, but seemed like she didn't want to be teaching this class. The content was important if you've never spoken about it before, but it was very elementary and never really went beyond the surface. I didn't like that the class was online, and I think I would have benefited from an in–person learning environment. Everyone always had their cameras off, and it felt so disconnected. The class was pretty easy, though. I have no idea what I gained from it.",
                    "77": "This is a very low commitment CS elective that does not take up much time. Work is as follows: 3–5 sentence paragraph for completion grade after every class,  3 longer form (2–3 paragraph) writings to help formulate midterm paper, 3–4 page midterm paper, readings before every class (which are never discussed), and a group final project. The lectures are on Zoom as well. Speaking to the actual course content, the readings are quite interesting, and it where nearly all the learning came from for me. However, readings are never discussed in class and lectures don't really add any value to the subject. Quite unfortunate in that the class has strong roots but not great execution. Nonetheless, still low–commitment.",
                    "78": "This course is great! This is definitely not your traditional CS course with programming or theory, rather it explores the intersection of tech, ethics, and society (the course's namesake). I don't really know how to describe this class concisely, but it really changes the way you view a lot of technology. For example, one of the first few articles you read is about how technology is imbued with politics not by itself, but by its designers, which really challenges the idea a lot of us have regarding technology being unbiased and almost \"perfect\" in terms of executing judgement. This course involves a moderate amount of reading, alongside weekly journal entries, and a paper midterm and creative final project. Overall, it was quite an unconventional CS course but was nonetheless interesting to take and learn from!",
                    "79": "I liked this course and am super interested in AI Ethics – the readings were really solid, and I learned a lot about data sovereignty and indigenous land. Overall easy class and super interesting!",
                    "80": "Great and easy CS seminar to take! Highly recommend it!!!",
                    "81": "This should be a required class for every CS major. I highly highly recommend this class, you learn about so many different topics related to ethics, equity, and tech, and talk about so many relevant issues. Natalie is an amazing professor who brings so much positivity and makes class interesting. This is a non–technical class, so it's a good break from CS classes as it is mostly discussion and reflection–based with a paper and a project. You really get what you put into this class, I recommend it so highly and think every CS major should take it––you will learn so much and it will empower you as a CS major to think about tech in a different way.",
                    "82": "The class was interesting and I learned a lot about the particular ideology surrounding computing and ethics in academia today. This is an issue with most seminar–style classes I've taken, but it seemed our instructor took it for granted that her ideology was on the \"right side of history\" and borne out by the empirical facts. To her, her beliefs are the most correct orientation we've arrived upon so far as a society, and disagreement is seen as necessitating kind, caring correction (not unlike erring on a math problem). In my opinion, the result of this was a pseudo–discussion at best in which we said what we thought was correct–– what we thought she believed. I am sure this was not our instructor's intention and that her commitment to free dialogue was sincere. Still, when you understand your own views as correct in an empirical sense, the only result could be that your students (subconsciously or consciously) keep their thoughts to themselves and try to produce the empirically correct values, modes of thinking, answers, etc. that are currently in vogue in academia. I thought this was a really fascinating historical phenomenon to have the opportunity to see unfold in front of my eyes. As we discussed in this class, bias is at its most acute when it is unconscious.",
                    "83": "I wish I could continue working on the project of this course in future (during summer and after it). I didn't have enough time on the course during Spring quarter for assignments or even some topics covered by lectures. So, I would like to continue learning on the course and related topics in the future. Jinshuo also encouraged me to learn on the project I chose, which impressed me a lot.",
                    "84": "This course is very heavy into the intro math of DP. Worth taking if you are interested in the math side of computer science.",
                    "85": "Overall good and interesting course, however lectures sometimes felt unorganized/unprepared",
                    "86": "Overall I think taking this course was a good decision. I'm not particularly good at theory, (212 and 336 were some of my most difficult classes), and so I went into this class a bit nervous. In retrospect though all you really need for this class is a basic understanding of proof–based math, and a willingness to google some of the notation if you're unfamiliar. There's a decent amount of analysis terms which come up throughout but none that take that long to familiarize yourself with (and that just became another topic I learned in this class). In summary, if you have no real interest in the subject or math–focused CS in general, don't take this class just because past years CTEC's have said there isn't too much work. 99% of this class is going to lecture, and if you don't enjoy that, it's going to  be rough. But if you are interested, whether or not you'd consider yourself \"good at math\", I'd highly recommend.",
                    "87": "I wouldn't really take this class if you're interested in Differential Privacy. It's incredibly hard to follow, usually lecture just feels like professor Dong is sharing a stream of consciousness to himself and we are the witnesses. There is basically no work; the syllabus had 4 problem sets and a midterm + a final project. We ended up having no midterm, one problem set assigned in week 6 and the final project. Very light class in workload. The grading seems reasonable, he really just wants proof that we learned something, although many people feel as though that was difficult. On the positive side, he is incredibly reasonable and understanding. He realizes the class is small and doesn't want it to feel competitive in any way.",
                    "88": "I wasn't really interested in learning about differential privacy and the class was not demanding at all, so you got out of it what you put in. I didn't really put much into it so I didn't really get anything out of it. There was one very short assignment in the middle of the quarter and one very open–ended final project. However, Jinshou is very nice and interested in the topic, so if you are too then you will learn.",
                    "89": "This was a weird course. Jinshuo is an amazing instructor and you can tell that this class is really his brain child. However, this class consists of him going through proof after proof without much practical application. For this reason, I didn't learn what DP meant until like week 7. This was fine, as I felt like through the final project I got what was intended from the class, but before then everything was kind of hazy. Take if you want a chill math based CS class that allows you to get out of it what you put into it.",
                    "90": "I found it interesting, and the in–class activities usually help us make sure we understand the class material. The assignments sometimes feel like I am doing them just to do them. A bit too long and especially with the practicals we are not given direct instructions or how it will be graded.",
                    "91": "Good basic security class, would recommend to anyone who wants to develop their own app at some point. Pretty practical info and not a huge amount of work.",
                    "92": "This course was ok. It definitely is a little challenging if you don't have any web dev experience or if it's been a while since you used C. The first assignment is done in C and the next two are in NextJS, so it's hard to focus on the actual security concepts without spending a ton of time trying to learn the web framework stuff. Overall, the assignments aren't too bad but can take a while.",
                    "93": "Super interesting course! Teaches a lot while not having too much busy work, but class definitely does get busy around the times of the practical homeworks being due (start those early for sure). Sruti is a super engaging, understanding professor, and it's really clear that she cares a lot about what she's teaching.",
                    "94": "This class was a good introduction to computer security! It covers a wide range of topics that all feel very applicable to someone who is interested in software engineering but not necessarily security. There are 3 written homework assignments, 3 practical (coding) assignments, and a final exam (20% of grade). The assignments are not too time consuming, but it is important to start them early as the deadlines between them can pile up. Sruti was a great professor! She is passionate about the subject and puts a lot of effort into making sure everyone has the tools they need to learn the material.",
                    "95": "The professor is nice, but most of the time I don't know what is the key point of the subject. I feel like we spent most of the time discussing some minor details and obvious things that we didn't get much time discussing what's more important in class. (Which is why the professor needs to send out extra videos for us to watch)",
                    "96": "This class is pretty fun! If you are even slightly interested in security, this is a good class to have as an introduction and you will clearly learn the foundations of security. The practical homework can be pretty tough though.",
                    "97": "Course goes into depth about security and different aspects that contribute to it, but the homeworks lack a strict rubric which leads to losing points frustratingly and the slides are often confusing when trying to review due to unclear definitions and parts being forklifted to supplementary videos. Many homeworks are strictly in React.js and Docker, whereas the slides and demos focus on HTML and CSS mainly.",
                    "98": "Great class, you learn a lot of cool and helpful things about security without it being overwhelming or too difficult. The workload was not bad, but it helped me stay on top of the material we were learning.",
                    "99": "I think this course was a lot. I wanna preface that I really like Sruti as a super nice person. She really does care for her students; she responds so quickly on piazza, so homework questions are generally answered very quickly. I also want to clarify that this CTECT Is coming from a graduating senior with little to no interest in Cyber security. <br><br>But here are some issues I found with the class: <br><br>1. There are in class assignments that are open for 5 minutes. you get to drop 3 of them, but what you find out when they start getting graded, is that they are graded on accuracy.  I've definitely zoned out in class, put something that I thought would work out, and no! I don't get a point even though I was there the entire time. Makes me question why I showed up in the first place.  <br>2. None of the live in class demos have ever worked out. So, this has definitely affected how well I've been able to do the homework. <br>3. I think that there were a lot of unclear and vague descriptions of things in lecture and on the assignments. I think Sruti would say \"oh, I'll get back to that\", and she would never get back to it. I wish that the course had provided overall clarity on what we were asked to do for assignments as well. For most CS classes, I feel that I've been able to test my code to gauge how many test cases I would be failing/get a grasp on what I'm supposed to do. For this class, she just goes over things in class and then you code! But there's no gauge for If you're really doing the right thing until you get your grade back. <br>4. The coding homework assignments will be in React.js, but she only goes over an HTML/JS version in class for lecture. So, if you don't know react.js, there will be a learning curve.",
                    "100": "Highly recommend this course! Any course with Prof. Sruti is great in my opinion. It provided a clear, high–level overview of a lot of important security concepts, and it's great for beginners who don't really have much experience in the subject. There were 3 written homework assignments, 3 practical (coding) homework assignments, and one exam. The practicals could be a little tedious, but overall the workload is very manageable as long as you stay on top of it.",
                    "101": "Pretty chill class",
                    "102": "Overall, a good introduction course to security. Prof. B takes effort to clarify topics and provide background information that otherwise might be missing. Each class has a graded in–class exercise that measures engagement (but also does function as an attendance check) with a few skip days allowed. The assignments can be unclear at times, especially the practical assignments which seems reflected in the large number of Piazza posts concerning them. If you are interested in security then this could be a good course, but, for the majority of CS students looking at possible electives, it probably is not worthwhile.",
                    "103": "Loved this class.  The content is awesome and applicable to everything. Prof Sruti is super nice and a great teacher, even having extra office hours and letting anyone schedule additional one on one time. Highly recommend classes with Prof Sruti. <br><br>The class was slightly different from its first iteration. There were 3 written homeworks, 3 code projects, a final, and in class activities. The class is an great gateway into the world of security and its focus is mostly on the defense which is cool. You learn how to implement security by design, basic attacks, with a focus on websites. Highly recommend!",
                    "104": "Good introduction to security and a pretty manageable workload. Sruti is a great professor, and I loved going to class. I would recommend knowing basic web dev before taking it. It helps to know a little react, SQL, and backend.  CS310 is probably enough. Start practical assignments early bc of potential setup issues.",
                    "105": "This course use NextJs to  implement defense  like against SQL injection, XSS, Authentication.",
                    "106": "Unfortunately, this was the worst course I've taken at Northwestern. My biggest issue with the course is that the material was covered at such a high level/so abstractly that I learned virtually nothing. I recommend a prospective student ask someone who's taken the class for slides from any day of class and they can see for themselves if they agree with my assessment.  I would have appreciated concrete examples attached to each concept, preferably with code where possible. When class input is requested, I find it useful when the professor summarizes the correct answers or at least provides the correct answers on the slides; instead, the professor would find a way to agree with almost all student input without providing clarifying commentary. Almost every lecture involved a demo that just wouldn't work, with the professor saying we'd get back to that material later. <br><br>The homeworks, especially the practicals, involved a lot of \"gotchas\", where deliberately (and exaggeratedly) bad software design is used and we had to fix it. For example, in the web app  homework the application uses dangerouslySetHtml everywhere for no reason, all the SQL queries blindly append user input (leading to redundantly applying the same fix across numerous files), and React string escaping isn't used at all. The instructions were also unclear/incomplete. For example, our first assignment was string manipulation in C. The only component of this homework's grade was \"Complete the starter code such that it achieves all the correct specified functionality and is “secure” according to the criteria described above. Your code must compile and run without any compiler or runtime warnings or errors\". That is all; the handout details specified functionality, but nowhere does it define exactly what is meant by secure, only that we should \"avoid the common memory–related vulnerabilities we saw in class\". But then we'd get points off for not having a \"secure\" application for reasons outside the common memory–related vulnerabilities in class. Like friend got 20% off for not flushing the buffer between string inputs (which in itself is no security issue, and we never discussed).",
                    "107": "This might be the most practical CS course I've taken for software engineering. We get to work on real applications and patch them to improve their security. We work with real technologies like Next.js. When I leave Northwestern to start my job in a couple months, I know I'm going to be applying what I learned in this course.",
                    "108": "This class is a good introduction to security basics, but its format creates unnecessary stress. As someone not really interested in systems or the low–level security classes, this was a good high–level overview of the topic. However, I actually wish we go more in–depth on some topics because I feel like some parts of the class were actually too abstract / high–level. I also don't have a ton of javascript / web development experience but it wasn't hard to get up to speed. As for the not so great parts of this class, grading is pretty harsh  in my opinion, so even though I feel like I understand course content I have gotten some low grades on homeworks, which make up most of the grade. Additionally, attendance is required, which is rare for a CS class. This class is not necessarily an easy A if that's what you're looking for. I am probably going to get a B.",
                    "109": "This class covers the fundamentals of security. It assumes you have basic knowledge of Full–stack software engineering, especially for JS, HTML, and other frameworks. There are 3 written assignments and 3 practical assignments. Written 2 and Practical 2 are the most difficult ones, but the professor is willing to give extra OH to help.",
                    "110": "Very fun class; there were only three assignments. Professor Tse is a great lecturer and is always willing to help. Helps you learn full stack even if you have 0 experience. 9/10 would recommend.",
                    "111": "Solid material but vague rubric.",
                    "112": "This course is amazing to understand the full tech stack of software engineering. There are no gotcha concepts or aspects about this class, it is a completely constructive course that helps you learn. Lydia is extremely organized and patient to help you learn. Highly recommended!",
                    "113": "Very useful class, Prof. Tse is great. Projects are very reasonable, it's possible but a lot of effort is required to take this class if you do not have any full stack experience, you will get a lot of of it!",
                    "114": "It is a fast paced course. You need to pay attention because lecture recordings aren't guaranteed (I hated this). your grade in this course depends on 2 mini projects and a final project.  the mini projects are pretty straightforward, took me about 12 hours each. For the final project, you don't want a bad team. I've heard nightmares about 1 student working on a project for 5 and being miserable. You need at least 3/5 people who know what they are doing. If you've got that, we got our project working in like 24–30 hours. The grading seems lenient. Also, if you get stuck ask others don't waste 2–3 hours debugging issues others have already faced.",
                    "115": "We need more courses like this!",
                    "116": "This class was very little work but it was honestly a joke. The professors could not have been more unprepared to teach a college–level class if they tried. The entire class was students presentations on the readings (we all had to do) and subsequent discussions where everyone chimed in with meaningless ideas for participation points. AI is such an important topic right now, and this class had so much potential. The professors are clearly really knowledgeable too about their subject matter, but the class was so unstructured, and often just them ranting about weird ideas unrelated to the topic. I wish there was a structure and organization to this class and that the professors actually put in work to provide a meaningful academic experience to students. I think, to summarize, the problem was that the professors for this class were, sadly, lazy. They put no effort into making and crafting a well–thought out class, and, as a result, students suffered. They exported the work to students to do presentations or to speakers and had no direction for the class overall. This was a missed oppoturnity that could have been solved if the professors actually made a syllabus, thought about the structure of the class and built a normal college–level academic class.",
                    "117": "I think the aspects of the course that were most interesting were the....",
                    "118": "The discussions in class are an important part as they enabled us to think in different aspects. Another important part of the class was that it was a cross section class with journalism students. It widened the scope beyond just CS topics.",
                    "119": "This course was a mixed bag. We had a few interesting guest speakers during the quarter, but the majority of class time was spent discussing that week's readings. Every assignment is done with a partner (randomly assigned), which got really tiresome when my partner relied on ChatGPT for all of his work. We also didn't receive a single grade on an assignment until after turning in our final essay. Professor Gilbert and Professor Birnbaum are very knowledgeable and enthusiastic about the content, but the course needs a bit of restructuring in the future.",
                    "120": "Interesting content; class should probably be 90 minutes 2x a week. Seemed a bit long at 3 hrs.",
                    "121": "This class was okay, but it didn't quite meet my expectations. Some material was definitely interesting, but the weekly presentations by students on the readings assigned for that week could be boring and a bit useless (since we were supposed to have done the readings ahead of that)",
                    "122": "Didn't love this course. It was very unorganized and the professors didn't do any teaching.",
                    "123": "I think this course is very well structures and the work was all very relevant. The aspect that was the most important was the ability to experiement with what we wanted, the group project was relatively open ended which allowed my teammates and I to creatively play around with what we were interest in",
                    "124": "This course was a mixed bag. We had a few interesting guest speakers during the quarter, but the majority of class time was spent discussing that week's readings. Every assignment is done with a partner (randomly assigned), which got really tiresome when my partner relied on ChatGPT for all of his work. We also didn't receive a single grade on an assignment until after turning in our final essay. Professor Gilbert and Professor Birnbaum are very knowledgeable and enthusiastic about the content, but the course needs a bit of restructuring in the future.",
                    "125": "Interesting content; class should probably be 90 minutes 2x a week. Seemed a bit long at 3 hrs.",
                    "126": "This class was okay, but it didn't quite meet my expectations. Some material was definitely interesting, but the weekly presentations by students on the readings assigned for that week could be boring and a bit useless (since we were supposed to have done the readings ahead of that)",
                    "127": "Didn't love this course. It was very unorganized and the professors didn't do any teaching.",
                    "128": "I think this course is very well structures and the work was all very relevant. The aspect that was the most important was the ability to experiement with what we wanted, the group project was relatively open ended which allowed my teammates and I to creatively play around with what we were interest in",
                    "129": "This class was very little work but it was honestly a joke. The professors could not have been more unprepared to teach a college–level class if they tried. The entire class was students presentations on the readings (we all had to do) and subsequent discussions where everyone chimed in with meaningless ideas for participation points. AI is such an important topic right now, and this class had so much potential. The professors are clearly really knowledgeable too about their subject matter, but the class was so unstructured, and often just them ranting about weird ideas unrelated to the topic. I wish there was a structure and organization to this class and that the professors actually put in work to provide a meaningful academic experience to students. I think, to summarize, the problem was that the professors for this class were, sadly, lazy. They put no effort into making and crafting a well–thought out class, and, as a result, students suffered. They exported the work to students to do presentations or to speakers and had no direction for the class overall. This was a missed oppoturnity that could have been solved if the professors actually made a syllabus, thought about the structure of the class and built a normal college–level academic class.",
                    "130": "I think the aspects of the course that were most interesting were the....",
                    "131": "The discussions in class are an important part as they enabled us to think in different aspects. Another important part of the class was that it was a cross section class with journalism students. It widened the scope beyond just CS topics.",
                    "132": "Zach is so great!! Very statistically heavy class for CS but still quite interesting.",
                    "133": "Professor Zach is awesome. This class is conceptually challenging but it was taught well and the class does not up too much time.",
                    "134": "This course is fairly stats heavy. 1 small quiz, 3 hws and a final project. Good course and informative. some lectures are very tricky and conceptually difficult to understand. Overall great course!",
                    "135": "This class (like other CTECs will surely say) is much more stats heavy than 349– keep that in mind if you wanted to take a 349 esque class. That being said I feel like I learned a lot in a way that was pretty relaxed– big final project but you're scaffolded so it's pretty manageable.",
                    "136": "Still flexible, open learning atmosphere helped by Zach's hard work. Reasonable academic pressure will guide me to explore more.",
                    "137": "Zach is one of the most helpful professors I have had and offers many opportunities to get questions/problems addressed.<br>Sometimes he seems to assume that everyone thinks as quickly as he does, so I was a little lost with some of the explanations :D<br>There are three manageable homework assignments and a final project (teamwork) broken up into smaller subgoals (idea brainstorms, proposal, update, final report) where you analyze a dataset of your choice and get the chance to apply the estimators you learned in class.<br>How much time you spend on this can be vastly different and depends on your dataset, team etc.<br>Overall it's a very nice course, how much you get out of it ultimately depends on your level of interest in causal inference (the quality of instruction is excellent).<br>(If you are wondering why there are so many short CTECs, they give a bonus point if 90% of the class does them)",
                    "138": "The course was very openended in the project which I found really fun and interesting.",
                    "139": "Amazing class! The content is more stats–focused than I thought it would be, but it's very interesting. Zach is a wonderful professor, and I feel like I genuinely learned a lot.",
                    "140": "I was pleasantly surprised to really enjoy the course. There was a steady amount of coursework, but it was never overwhelming. The office hours were convenient and flexible. Professor solicited feedback often and wanted to make sure the course was valuable.",
                    "141": "I was completely new to this subject.",
                    "142": "The course was intellectually stimulating but also approachable to people with no background in causal inference",
                    "143": "Great course if you want to truly understand causality and causal relationships",
                    "144": "This course was very well done, with an appropriate amount of work and good coverage of the subject matter.",
                    "145": "This is a very difficult but very interesting course. Thankfully, I think only a basic understanding is required to pass the class. Wood–Doughty is an excellent professor and has excellent course policies.",
                    "146": "The course presented a challenging yet structured learning experience. While many found the topics intuitive and straightforward, I personally encountered difficulties in grasping and retaining some of the concepts. Several aspects of the course were not immediately intuitive. I recommend allocating at least two hours per week specifically for understanding these topics (youtube videos that help visualize this), in addition to the time spent on homework (these take longer than expected too) and project work. Despite these challenges, the course is well–organized, with a  flow that helps develop a deep and comprehensive understanding of the subject.",
                    "147": "This class was a reasonable workload and the group final project was a very positive experience for me. At times the class could be too theoretical and proof–heavy for my liking. However, the final project brought the concepts together in a real–world setting.",
                    "148": "Great class! Learned about this new field",
                    "149": "I have always loved taking Prof. Zach's classes. I think he creates an atmosphere where you want to learn because it's stress free with little exams, so you are focused more on learning rather than just \"trying to get an A\" –– I always tell people that Zach's classes are where I learn the most because I can just learn instead of stressing about a letter. I recommend this class to anyone, the material is hard, but it helped me to think in new ways.",
                    "150": "Since this class is currently a special topic course, the class size is smaller and you get a chance to interact with your classmates and the professor.",
                    "151": "Great course! Prof. Alexander is great, the TA and OH were also really helpful. Some of the assignments were really hard, so going to OH really helped me go through them. I feel like I've learned a lot in the lectures and the homework really helped me fixate that knowledge.",
                    "152": "This class is definitely difficult and requires lots of time every week. The weekly homework assignments at the beginning of the quarter are egregiously difficult to the point that I think I spent close to 20 hours on each of the first 3. Lots of the content covered in the first few homeworks isn't discussed directly in lecture and requires lots of time searching through StackOverflow to get your answer. Even after spending close to 20 hours on these homework assignments, the grading can sometimes feel unfair. The TA grades assignments super harshly, sometimes taking off random points for unexplained reasons. The content overall is super interesting, and for that reason, I think it was worth putting in the time to take this class.  Professor Alexander is a great lecturer and her research is super interesting. In the end, your decision to take this class should come down to whether you are willing to put in the time.",
                    "153": "This is a fantastic class, and Emma is one of the most passionate, personable lecturers I've ever had. I will preface it by saying that it is DEFINITELY a vision class. I'm not very interested in vision (I mostly took the class because I thought the bio–inspired angle was cool), and there were some moments where it felt a bit pointless since I knew i wouldn't be doing any of this again. However, the class teaches you enough Python by exposure and is taught in such an interesting way that even if you don't care about the topics at all, you'll probably still have a good experience. The independent final project and presentation were a great way to wrap up the class (no exam!).<br><br>Note that Emma was very upfront about how the course is still young and she is constantly adapting it, so the class you take will probably be notably different than the one I took. Hopefully the homeworks take you less time but sorry if there's an exam lol",
                    "154": "The assignments were very hard, and the material in the assignments are covered at a very surface level in class. Also, there simply does not feel like there is enough support for students in the class.  This is not a good combination. I knew many people who struggled with the class (me included) and it overall did not feel like it was worth the time.",
                    "155": "The lectures are gerat, HWs are well designed, and Prof. Alexander putting a lot of work in helping students.",
                    "156": "I like the balance between theory based lecture and practical focused homework.",
                    "157": "Very interesting content that covered a range of topics. Not a typical CS class!",
                    "158": "Hard but very intellectually fulfilling course. Start your assignments early because they can take up to 15 hrs. GO to office hours. Professor Alexander is truly one of the best professors. Highly recommend this course.",
                    "159": "Findler's seminars are great for those interested in Programming Languages and PL research. You get out of the course what you put in, and everyone in PL is very nice and welcoming to those who are looking to get into the field. Great professor, great students, great class."
                },
                "school_demographics": {
                    "Weinberg": 100,
                    "McCormick": 124,
                    "Medill": 9,
                    "Comm": 11,
                    "SESP": 4,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 9,
                    "Sophomores": 52,
                    "Juniors": 97,
                    "Seniors": 58
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 4.996851851851852,
                    "student_count": 324
                },
                "student_opinions": {
                    "0": "Sam is a great lecturer and often checked in with the class to ask what direction we wanted the lectures to go in or what we wanted to focus on.",
                    "1": "sam is actually so funny and you can tell he's really passionate about the course. lectures weren't like essential to completing the homeworks, but i definitely enjoyed attending and learning more about artificial life and theories. felt like hearing your friend catching you up on their recent passion project more than a lecture honestly, just overall chill vibes and space for discussion. really really enjoyed sam's approach to the class! grading was pretty straightforward: based on one final project that's built up over the course of the quarter in weekly assignments. because everything was on slack, we got to see everyone's simulations which was really cool––but that also meant people got really bad with turning things on time (ngl i turned a couple of assignments late too lol) but sam was chill about it. it was definitely more of a self–guided class (tbh i don't think we ever looked at how to run things in mujoco in class actually) but i think that made it more fun. i think the initial homeworks where we were just starting off with mujoco were the hardest just becuse i wasn't familiar with the software, but if you look at the documentation + youtube videos available you'll figure the basics out pretty quickly. overall good vibes, good class!!",
                    "2": "Highly focused on aspects of the material / subject that are interesting and important to me",
                    "3": "I highly recommend this class to anyone! You may think you know the ethical implications surrounding tech, but it goes so much deeper than you would expect. This class really reshaped my perception of the tech landscape, innovation, the environment, so many topics. Natalie and the TAs are very inviting, thoughtful, and knowledgeable people. Together, they build a very comfortable learning space, with appropriate expectations and learning goals. Plus, the material in this course is really interesting, the readings were very diverse and came in all different forms (papers, documentaries, websites, etc).",
                    "4": "This course was great! Natalie did such a great job making sure the class  was a welcoming and comforting space to learn about different aspects of ethics in computing. I think this is such an important class for CS majors to take because it pushes you to consider the impacts of technology and the role of developers in that. The material in this course is pretty engaging as well! Not like your typical humanities course where you are assigned a bunch of boring dense readings. The readings in this class were actually interesting, and sometimes we got to watch movies/videos which was really nice. The midterm and the final project were a great way to synthesize everything we learned in class. They were not to difficult or time consuming either so that was a plus. Overall, this class was chill but at the same time I feel like I learned a lot.",
                    "5": "I learned a lot during this course about relevant topics in a fun and interesting way.",
                    "6": "I sincerely hope that this course becomes a mandatory course for all CS majors. Maybe even all engineers to be honest. My literal only problem with this class was the \"pod\" format, I wish we got to talk to other people in the class when having group discussions. <br><br>The readings are very insightful, and this is not the generic \"AI ethics\" course that is available everywhere– I do not mean that that is not important, but I feel like this course addresses such problems without even addressing them because it addresses the root causes.",
                    "7": "highly recommend this class, light workload and interesting subject matter. readings never felt like a drag, and none of the assignments feel overwhelming. if you're a cs student who has never taken a sesp class, take this one –– it'll really show you how different the teaching style is lol",
                    "8": "i read some CTECs from before that said this class could lean overly PC and while I did think at some moments that that was true, this course was really effective at challenging the way i thought about things i had learned in previous classes within the cs and other departments. natalie is very understanding of their students and such a kind soul",
                    "9": "I appreciated that every week, there were new readings and discussions we got to participate in that provided a baseline for more exploration into different fields, like CRT, solutionism, theory connection, and more. There is a plethora of resources to use and explore, and the activities do a great job of tying more theoretical readings into tech applications that students may be more familiar with. It is also a light work course, with a few minutes of work every class and assignments that build on each other and do a great job of spreading bigger work like papers across weeks. Natalie was a great moderator for the discussions we had and was eager to hear our thoughts on the week's topic.",
                    "10": "This course is an absolute GEM at Northwestern, and I think every computer science student should be required to take it. Natalie is awesome – she brings this unique and engaging style that really makes the material come to life. The course itself is super relevant, making you see the real–world impact of what you're learning.",
                    "11": "This class is interesting....",
                    "12": "Good class that sparks good discussion about the current state of society. A lot of interesting conversations are being held and overall the course staff really cared about we students wellbeing.",
                    "13": "This is such a unique and important course. I highly recommended it to anyone studying CS or planning to work in tech because it opens your eyes to all the ways in which this industry is problematic. It's important to be aware so you don't become complicit.",
                    "14": "Forces you to rethink and re–evaluate your stance on ethical issues in CS, which I really appreciated. It helped me grow and, I think, become a better computer scientist.",
                    "15": "Do note that this feels very heavily like a SESP class, and while that was great for the concept of a workload, it can catch you off guard if you're expecting a CS 396. I don't think coding assignments are necessary (actually it was really nice to have a CS course that doesn't care about the code, but instead intent), but I won't lie and say I wasn't a little sad to not have a lot challenging or thinking about our potential roles as computer science students or future developers in the projects we take on.",
                    "16": "I LOVED this course. Professor Melo is one of the best instructors you can ever have. She prioritized the class's mental and emotional healths over anything. She never pressured participation and truly made sure we learned about technological ethics in today's society. Her kindness, enthusiasm, and willingness to speak on topics most professors wouldn't, has proven as an inspiration for me to truly consider about the ethical impacts of utilizing technology today.",
                    "17": "Natalie is fantastic! I learned so much about ethics in this course I strongly recommend all CS majors take this!",
                    "18": "Great course, easy A, fairly interesting content, amazing professor, open and fairly easy going atmosphere. Just generally a good course to take for your CS major and is a breath of fresh air compared to some of the other stressful and grind heavy courses in this major.",
                    "19": "liberal indoctrination, but what else would you expect from NU?",
                    "20": "Simultaneously the stupidest and easiest CS class that you can take at Northwestern. My interest in tech ethics was actually quite high before entering this class. I firmly believe that ethics education for engineering students is actually very important. Unfortunately, this class missed the mark entirely. Most of this class focused on content that was not important, not interesting, and often not related to technology at all. There were some interesting bites about racial bias in AI and the environmental issues of tech supply chains. But these points were brushed by quickly. But the class was very little work so there's that.",
                    "21": "The best part of the course was the prof and TA. V was incredibly understanding and supportive. The online format was... interesting. Obviously COVID classes were all on Zoom like this, but it felt like Zoom wasn't utilized as much as it could have been which just made the class kind of boring and repetitive. There weren't really formal lectures, just kind of slides summarizing readings and small group discussions in break out rooms. One main part of the course was taking what readings said to create a tech–based land acknowledgement. This is obviously super important, but it felt like we spent too much class time working on it. Towards the end of the quarter, we would spend probably 20–30 minutes on it each class which just felt like a waste of time. <br>I'm kind of hating on this class, but it was interesting and important stuff. The readings were really great, but again they were repetitive. I think part of it for me was that I went in with such high expectations that weren't met. <br>This class was super easy, the only work was readings and a midterm and final that were pretty straightforward. If you're going to take it, just don't go in with high expectations of learning a lot and exploring how you can help ethical issues in technology fields. You'll learn about issues, just not what to do about them besides how to write a land acknowledgement that covers those issues.",
                    "22": "Pretty interesting, not too difficult. Grade is attendance &amp; participation, midterm essay, and final project.",
                    "23": "I have mixed feelings about this course. While I learned a lot, and gained an appreciation for the societal ramifications of technology, it didn't feel like an ethics class like  ethics classes in philosophy or logic that I've taken. Rather, it was a survey of how big tech negatively impacts the world. While I do think that everyone should learn this information, I think that it could have benefited from some debates or chances to critically examine some of the ideas brought up in the class, considering how tech has positive and negative tradeoffs in the style of other ethics classes I've taken. <br><br>Overall though, I think the information in the class should be shared with everyone in CS and engineering, as it presents a side of big tech that most people don't otherwise see",
                    "24": "Easy class (and it's over Zoom) but very useful if you do it right. Makes you think about the impact of your work as a computer scientist. However, I was hoping this class would be more focused on AI.",
                    "25": "This was a super interesting class to take and made me thing about the biases and ethical considerations of technology that I previously haven't. It was super thought provoking and I'd definitely recommend taking",
                    "26": "This class was a great introduction to tech ethics! It was very interesting learning about a lot of different ethical topics and discussing how each of them relate to technology. I wish this class focused a little less on land acknowledgements and more on how technology is actually affecting various parts of the world AND what specifically we can do about it as both engineers and consumers. I would recommend this class as it makes you think about topics you wouldn't otherwise think about in CS classes, however, know that most of this class is acknowledging and not as much learning about ways to be more ethical as someone working in technology. I am happy that this CS class is growing (because tech ethics is a very important topic) but would love to see it improve by discussing more ethical topics that actually relate to technology directly. Additionally, It was very hard to engage in this class because it was on Zoom. In the future, I think it would be best to offer this class in person so that students can get the most out of it.",
                    "27": "Going into this class I was very excited about learning more about the ethics of technology, being students who are going into the workforce and could be a designer of technology. The way that this class was advertised and the topics that were said we would cover really did not represent what the class actually was which was very frustrating. I feel like we got at some specific ideas about the ethics of technology, but do not feel like I came out of this class with a way to change this and did not cover many important topics and minorities that are very relevant to this topic. I thought the midterm was graded very harshly, but enjoyed doing the final project.",
                    "28": "I recommend every CS major take this course, this was an incredibly valuable course and I learned a lot from it. Taking it online was also really nice",
                    "29": "Very cool distribution",
                    "30": "I found the land acknowledgment to be a bit over the top and performative. I really really didn't like the fact that in one of our first classes, the professor told us that considering both sides of an argument is a bad thing if one side is \"immoral\" (who defines what is immoral? The professor?). I wholeheartedly disagree with this on a fundamental level, and I think it goes against the university's general stance on intellectual discussion. The class didn't involve any deep discussions anyway, it was just people agreeing with each other (likely due to the professor saying this). The actual readings and topics we learned about were great, and I think if it didn't include the land acknowledgment and the authoritarian stance on discussions, it would be a great class that I'd highly recommend. I cannot recommend this class unless it is with a different professor and taught differently, though. And it absolutely should not be made a major requirement until these issues are fixed.",
                    "31": "Solid course to reflect on ethical considerations for various aspects of technology as a whole. Somewhat on the aggressive side in pushing for systemic change, which can often lead to just feeling upset rather than feeling like there's a way for us as individuals to do better. Definitely worthwhile however, and always good to know ethical concerns. Grading is fair and projects are interesting, can be pretty vague in project descriptions though.",
                    "32": "This was a really easy class. If you want a practically zero work CS elective, take this. Unfortunately, I cannot say I enjoyed the content. It's the classic \"everything is racist\" class which leaves you feeling doubtful and miserable about the state of the world. Sure, I might be more aware of the disastrous state of technology, but I do not feel inspired to change the world. But becauseof the lack of work, I will accept it.",
                    "33": "Loved taking this course! The final paper is kind of long but the experience of teaching the fifth graders and getting to know the other volunteers was great.",
                    "34": "I loved this course, and I really enjoyed teaching my class.",
                    "35": "It was great that we had the option to get credit for teaching in the Evanston elementary schools. I really enjoyed teaching my classes every week and Mike was really great as a coordinator.",
                    "36": "This is a great class,  I really enjoyed the weekly discussions.",
                    "37": "I love this course!! Super cool way to feel like you're actually making a difference in the work you do and you learn a lot about CS education in general.",
                    "38": "just had a few weekly reflection journals and readings, then final project at the end",
                    "39": "Loved this course!",
                    "40": "If you're in the volunteering program already, just take this course as it isn't much extra work and well worth it to get the credit.",
                    "41": "Honestly, such an amazing class. Both professors are great at what they do, and are super understanding. I got to learn so much about education, much more than I anticipated.",
                    "42": "Loved this course!",
                    "43": "If you're in the volunteering program already, just take this course as it isn't much extra work and well worth it to get the credit.",
                    "44": "Honestly, such an amazing class. Both professors are great at what they do, and are super understanding. I got to learn so much about education, much more than I anticipated.",
                    "45": "Loved taking this course! The final paper is kind of long but the experience of teaching the fifth graders and getting to know the other volunteers was great.",
                    "46": "I loved this course, and I really enjoyed teaching my class.",
                    "47": "It was great that we had the option to get credit for teaching in the Evanston elementary schools. I really enjoyed teaching my classes every week and Mike was really great as a coordinator.",
                    "48": "This is a great class,  I really enjoyed the weekly discussions.",
                    "49": "I love this course!! Super cool way to feel like you're actually making a difference in the work you do and you learn a lot about CS education in general.",
                    "50": "just had a few weekly reflection journals and readings, then final project at the end",
                    "51": "I think the professor is very nice. She carries a big dog to class every time. But I don't think this course interest me. The course let people read paper about advanced technologies in Data Management System and ur job is to present one on class and do a 5 page long paper. I think I learned many advanced tech but I just know them, not able to use them in the real world. I am more happy if this class has a specific focus, something like a real project where u could learn a skill, but this class is 496 and it's seminar (I don't know what is seminar after I take one...)",
                    "52": "easy A",
                    "53": "Past CTECs of this course made me think it was related to data science and have programming assignments, which was not the case. It's not necessarily a bad thing, but I was expecting something a little different. The class effectively only consists of listening to other students summarizing papers about data management (mostly databases). Unless this is your research interest, I'm not sure how much useful information you will get out of the class. If nothing else, you will become better at reading academic papers and finding the important parts.<br><br>First, graded on participation. One point per class if you answered or asked a question. Attendance is not graded, but you should attend at the very least until you get the required 10 points. Secondly, two paper reviews a week for the paper being presented that class. These were graded on completion and mostly seemed to be to make sure you at least have the idea of what the paper is about. And for one week, you present in a group for a class. Lastly, there's a ~5 page final research paper, not new research, but find some papers related to a data management issue and write about the state of its research. Can't comment on how this is graded since it's due on finals week.",
                    "54": "This class is a lot of reading. Multiple research papers each week",
                    "55": "The course can be really intense if you want to understand every single research paper that is taken up in the class. Each week needs two readings followed by a discussion in class.",
                    "56": "This was a good class. The curriculum will depend entirely on the papers chosen by your classmates. Discussions are low–key and friendly.",
                    "57": "It's a seminar led by students. Each group will present once during the quarter and cover one topic selected in the first week. Although the seminar is for data management systems, there are also other topics being discussed. There is one final research project (a paper), which is really nice as you can explore a topic you are interested in.",
                    "58": "The material of the class is really interesting, and the professor is great at explaining the topics.  There were only 2 homeworks and 1 final project so not much work.",
                    "59": "Homeworks are really hard and time consuming, start early",
                    "60": "I think this course is for people with good math. Sadly, I am not a math person. Though I could pass the course, I don't think I learned much from this class. But the teacher is nice and there are only 2 homework and 1 final paper.",
                    "61": "Fun course and a good introduction to quantum computing! This course was surprisingly low–pressure and I think it helped with how willing I am to learn about the topic as I had to care less about grades and doing the required work and more about the actual topics.",
                    "62": "This was a very interesting course, and you definitely get out of it what you put in.",
                    "63": "This course was not enjoyable. I came in extremely interested in quantum computing and quantum mechanics, having taken high–school level quantum mechanics, but was dissapointed by the low–level exploration of the topics. This was essentially a math course in complex linear algebra. The professor did a poor job tying back the mathematical concepts to higher level ideas which reduced enjoyment and did not spend any time apart from one disorganized lecture on any physics aspects of the topic. There were only 2 homeworks throughout the entire course but these were extremely stressful as no one was clear on how to apply the learning from lecture to actually do the problems. Overall, if you are interested in learning more about quantum computing at a high–level (ie. understanding the problems it addresses, the use cases, the current state of the subject) this class is NOT for you. This really should be listed as a math class and even then the abstract nature of the lectures made it less enjoyable than many other McCormick engineering or math classes at Northwestern.",
                    "64": "The professor talks very technically and really struggles to explain anything in layman terms. Most of the lectures were spent going through complicated math and proofs with a lot of mathematical notation. I understand that this is important but at the same time, I was able to find so many online reosurces who explained everything so much better. Even the mathematical complexities. Homeworks will be heavily curved and project is just reading a report and summarizing and recoridng a presentation of 5 min length. Not too bad but the course could be taught better in my opinion.",
                    "65": "Generally interesting course with a fascinating underlying subject material. Format of course resources in some cases made it feel harder to keep up and review after lecture (E.g. – lectures being completed exclusively via chalkboard without accompanying slides, especially when relying on student–transcribed scribe notes which were typically not posted until several weeks later, made it difficult to review and study the particular equations, symbols, and formulas taught).",
                    "66": "Good course that does a good job of going over the basis of quantum.",
                    "67": "The class had very few assignments and work and the material was relatively easy to follow. That said, a strong linear algebra background did help out a lot, and the class ended up being more of a math/physics class than a CS one.",
                    "68": "Cool class, math heavy, fair grading, good prof and TAs",
                    "69": "Fine course. Hard HWs but manageable",
                    "70": "great",
                    "71": "This class is very good and gave a really solid understanding of the fundamentals of quantum computing, ranging from qubits to advanced algorithms such as Grover search. There is not a lot of homework, but the homework is super relevant to the class content, which greatly reinforced my understanding of quantum computing. The professor does not force irrelevant work on you, which makes the learning experience very enjoyable!",
                    "72": "Loved it! Definitely very theoretical. Only take if you like math. But it was fun! A lot of group work, which was nice and made assignments less intimidating.",
                    "73": "This course was a great mathematical introduction to quantum computing. You learn a lot about new possibilities that are not achievable with classical computers and run through a few important algorithms. You won't see any physical explanations of qubits though, just what you can do mathematically once you have them. Overall really enjoyed this class and the workload was very manageable, definitely would recommend.",
                    "74": "I honestly took this course, believing I would swap/drop it, but I ended up loving it. The course material is really interesting and taught assuming only basic linear algebra and almost no quantum know how. You have to put in some time, but if you like the math part of CS you'll probably love this course. The homeworks were pretty straight forward and the professor is very lenient with his grading. However, they recommend using Latex for homeworks and scribing which I believe is just unnecessary.",
                    "75": "I found quantum teleportation to be really fascinating, and working with the gates was really fun.",
                    "76": "No coding :(",
                    "77": "This class has fairly hard content that you need to keep up with. The course after the first few lectures going over big picture stuff dives right into the basics of quantum computing, which I found to be pretty difficult. <br><br>There were two homework assignments, with groups up to 3 being allowed. I would highly suggest finding a group, as the content is a bit confusing and it helps to toss ideas around. I would also suggest going to every lecture/watching it, and making sure to attend office hours if you fall behind.",
                    "78": "Really great course! The content is interesting and Aravind is a fantastic lecturer –– he's clearly very knowledgable and really good at breaking down complex concepts in an intuitive way. The workload is pretty light, although I felt the grading was a bit harsh (but maybe that will change in future iterations of the course). Overall though, I feel like I learned a lot!",
                    "79": "Quite a lot of self learning. Definitely expect this to take a good chunk of time if you don't have prior experience in React, Django or Springboot, GraphQL, and Websockets. You're going to have to spend a lot of time looking up guides and tutorials and try piecing them together to fit the HW. Fairly open–ended/vague instructions for the HW and Team Project as well. By the end you will have learnt a lot though.",
                    "80": "Definitely worth taking. Wish this class was offered when I was a 3rd or 2nd year!",
                    "81": "FIRE COURSE. Lydia is the GOAT. I learned so much from this class through the assignments. She really focuses on learning the material and being able to implement rather than getting a specific score on your assignments.",
                    "82": "I was really interested in this class and learning more about the subject. Much of the in class concepts taught were high level, so the homework required a lot of learning on your own. The homeworks could also have more details about the requirements because it wasn't that clear was the expectation was until after the assignments were graded. Despite this, I learned a lot about full–stack development and am way more confident in building web applications because of this course. I thought the projects were very relevant to important concepts in the field. I'm glad this was an added class.",
                    "83": "Engaging course and good overview of fullstack engineering.<br>Start on the miniprojects early because setting up the projects especially you haven't done a end–to–end development cycle",
                    "84": "I liked the mini–projects because we get practical experience, but a bit more direction could have been helpful.",
                    "85": "Great course and Prof. Lydia is a great professor. I learned a LOT of new frameworks that I hadn't known before. This class is a great introduction to building apps/websites end–to–end. HIGHLY recommend this class if you plan on going into software engineering!",
                    "86": "good class. Professor Tse is really great at teaching. her slides and material were really really informative. can be very time consuming though. i ended up spending more time for this class than my other 'harder' classes but highly recommend.",
                    "87": "Yes. Introduced me to many topics that I wanted to learn in a meaningful and applicable way.",
                    "88": "Very useful",
                    "89": "Good course to learn about front and backend frameworks. mini projects can be a time suck but overall you learn alot",
                    "90": "This course was underwhelming for several reasons. Firstly, it is trying to be too much at once. Because we cover so many topics, we don't learn much about each. I don't feel particularly competent with any of the frameworks we used beyond what I'd get from an online course. I think this would be much better as a two part sequence. Additionally, the final project not being open ended was a huge disappointment to me, as I was hoping to use full stack skills to make something I found interesting, instead of the same thing as every other group. Specifications were usually unclear, which made it difficult to understand what we should be doing, and grading out of 3 made feedback relatively ambiguous as well. Spreading feedback to questions across doc comments and piazza also made it difficult to find answers to logistical questions.",
                    "91": "Overall, the class was taught well considering it's Lydia's first time teaching Full Stack course. She goes over various different frameworks from front–end (React.JS) to back–end (GraphQL, Java Springboot, Python Django). The class has 3 mini–project assignments that's done individually and final project with a group. I think that the class was not that difficult considering I came into class already possessing full stack web app development knowledge. However, I do think this class will be difficult for people that is new to full stack development. Overall, one of the most useful classes I took here, considering various frameworks are utilized in today's tech industry.",
                    "92": "I loved this course! If you want to learn more about how language plays into machine learning, this course is right up your alley. The assignments are usually very straightforward and go along nicely with the lectures/readings.",
                    "93": "Really great course –– one of the best I've taken at Northwestern. Professor Voigt's pacing of the assignments is great, and it's an environment where the main priority is learning and not grades (but unlike other classes I've taken with this philosophy the learning actually happens). It's also a super relevant subject, and I like how Voigt is able to connect things we're learning with relevant issues in the world. I think it's easier for CS students to succeed in this course than Linguistics students (it gets math heavy real quick), but that seems like that's how the Computational Linguistics world mostly works now.",
                    "94": "I was intrigued by the amount of math that goes into building the different algorithms being used today for computational research",
                    "95": "good class",
                    "96": "If you are a CS student, this class is pretty easy. You implement pretty simple algorithms in Python, pretty cool stuff. You get lots of freedom for the final project, my partner and I built a discord bot. If you don't have experience coding, I wouldn't recommend this class. It will be rough. It assumes you have baseline knowledge of coding and Python.",
                    "97": "Very good and interesting class, but take it only if you don't have other really hard classes. You won't allocate time for this class and learn if your other classes take up all your time.<br><br>A lot of self–directed learning, there are 5 programming assignments and 1 final project. You can do a lot of extensions on the programming assignments if you want to. You learn by doing those. Final project is very open–ended and you can do anything you want in the field of computational linguistics/NLP.<br><br>Lectures are recorded.",
                    "98": "Rob is excellent. His lecture is really engaging and covers topics both in cs and linguistics. There are 5/6 HW assignments with extensions. The workload is not really too much and you can work for an area of interest for the final project as well.",
                    "99": "Liked the linguistics aspects, I think it's hard to put it as a high level CS when the only prerequisite is 110 for ling majors",
                    "100": "An easy class for CS students, especially for those who have learned ML and NLP. Professor Rob is great. The evaluation–based special grading policy makes workloads very flexible. But the overall grade is not published until the end of the quarter.",
                    "101": "This class was pretty unique. I found it really interesting, and learned a lot, but a great amount of self motivation is needed to learn and remain engaged. The class is self–graded, and you could likely skate by by just completing the homework. I appreciated that lectures were recorded, as it allowed me to rewatch then as needed.",
                    "102": "I thought that this class served as a very great introduction to computational linguistics. It is very flexible and employs a \"choose your own adventure\" style of assignments which allow students to get out of them what they put into them. Prof. Voight and the TAs are responsive and none of the material is too convoluted. Right level of conceptual challenge.",
                    "103": "This course was great. The readings and lectures were really interesting and complemented each other well. I liked that the 6 assignments had a structured and unstructured component, with an autograder that needed to pass and optional extensions. This allowed me to focus on areas of interest.",
                    "104": "This course is extremely easy and I wouldn't recommend taking it. The lectures teach little that's relevant to the grading. The assignments are about 1 hour of trying to figure out what the assignment wants from you, 10 minutes of coding once you figure it out, and 2 hours of figuring out how you slightly misunderstood the assignment. Every assignment has the professor basically give you pseudocode and a half filled in template to make something, then you have to implement the exact algorithm they put in the exact way they wanted, but its never explained that well. Nothing requires any real thinking or creativity. You will also have to do a self evaluation that determines most of your grade where you have to explain why you deserve an A or whatever you think you should get.<br>If you're a CS major, only take this if you want a course that's 40% trivial, 40%, and 20% self evaluation, take this, if you're a lingusitics major this might be a fine way to learn some basic coding.",
                    "105": "I loved this course! Very flexible grading system that accommodates for students' different backgrounds with the material, but with many opportunities to challenge yourself.",
                    "106": "Straightforward class if you've taken a couple of coding classes. I wouldn't recommend taking it if you've only taken CS 110. Great class though! Professor is super kind and wants to make sure you're doing well. Don't over–use the free extensions privilege",
                    "107": "Really interesting class, but far more of a computer science class than a linguistics class. As a linguistics major with a few courses in python/experience coding, it was rewarding but also fairly difficult. Highly recommend, but be prepared to put in extra work if you're not a cs major.",
                    "108": "Interesting class to take, topic is fun and freedom in final project allows we to explore new areas I am interested in.",
                    "109": "This course was great! It was really flexible and taught me a lot about how NLP works today. The beginning few classes had information that we didn't really use after like regexes and whatnot, but throughout I thought the class was a great experience",
                    "110": "A fun class and a solid intro to both linguistics and the computational side. Definitely helps to have python experience",
                    "111": "I really appreciated how this class requires students to understand concepts in order to complete assignments, but also does not pressure students in terms of grades. It allows students to pace themselves as needed, which I thought was very helpful in ensuring that everyone can benefit from the class despite differences in backgrounds.",
                    "112": "Voigt creates an excellent learning environment and is actually good at teaching. Would recommend",
                    "113": "One of those classes where you learn a lot and aren't super stressed about it! The content is interesting and applying it in the assignments was a great way for me to learn.",
                    "114": "I went into the class very excited about computational linguistics and natural language processing, despite having minimal coding experience (only taken CS110). I did find the content really interesting, but it seemed like the material was sometimes oversimplified due to Rob's intention of teaching as many topics in computational linguistics as possible. I wish the course had had a higher pre–req—I really do not recommend taking this class if CS110/111 is the only coding experience you have. The fact that the class is self–evaluation–based also gives little motivation for students to spend substantial amounts of time and effort in the class. Nonetheless, I loved Rob's teaching style; he is a very passionate professor who wants his students to succeed. Additionally, his argument for the self–evaluation method shows that he is very passionate about the field.",
                    "115": "Good course if you're interested in NLP. Assignments are weekly/biweekly, each taking somewhere between 3–10 hours depending on your proficiency in Python. It's made me a better Python programmer and better at using a text editor. Also learned about how computer scientists and linguists approach studying natural language, which imo is more insightful than just staring at a bunch of math equations in a typical ML class.",
                    "116": "Fantastic course, really highly recommend whether you already have experience with NLP (like CS 348) or new to the subject. The format of the class is that the base assignments are pretty straightforward and quick to finish, and then there is a big list of potential extensions to make a more complex model or explore a new dataset (or anything else you come up with). And then you are graded based on a self evaluation relative to your previous coding experience. I think this is a great way to make sure everyone can get an A if they try, but also more experienced people aren't bored and can do cool projects.<br><br>Rob is also just a fantastic lecturer, has a good perspective on linguistics and machine learning, and I had great interactions with him when asking for advice",
                    "117": "This class is perhaps the apex of \"you get what you put into it.\" If you're not a fan of ungrading avoid this course, because that's what it is at the core. If you're into compling/NLP <br>or end up getting into it there are *so* many resources and opportunities for you here, otherwise you can very much skate by with the assignments/final especially if you have programming experience. Prof. Voigt is super cool and really knowledgeable!",
                    "118": "Class emphasizes hands–on learning of computational methods in linguistic analysis and natural language processing. Weekly assignments. Self–evaluations. Final project.",
                    "119": "Pretty chill. Rob is a nice guy. Self–assessment–based grading, so as long as you do all the work you're good. The assignments have soft deadlines, so you don't have to always turn them in on time, though I'm not sure if submitting an assignment super late will impact your grade. Can also do \"extensions\" on assignments if you want more of a challenge. It's basically like extra credit since you can talk about it in the final self–assessment to increase your chances of getting an A. The final task is either a final project or another assignment that Rob creates, your choice. I liked this because I was lazy and didn't want to come up with a final project, so I just did the final assignment.",
                    "120": "Really hard if you've only taken CS 110.  Like you can probably do it, but you'll have to go to OH all the time",
                    "121": "I would highly recommend this class for CS credit! I learnt a lot about natural language processing and computational linguistics! The lectures were always interesting and the projects were very doable!",
                    "122": "I thought that this course was interesting. It was not very intellectually challenging however, it did teach me a lot about working in groups.",
                    "123": "I appreciated the numerous guest lectures in this course, which offered valuable insights from professionals and significantly enhanced my learning experience.",
                    "124": "I have mixed feelings about this course. We had guest speakers every week that were very cool and successful in their fields. It was really interesting to learn from them. However, a lot of your experience in this course will be dependent on your group since this is essentially a quarter long group project. As someone taking this course for CS credit, I had to develop the entirety of our prototype. This was a little frustrating because I was the only one in my group with technical skills to do this, so I felt like I was putting in a significant more amount of work than my team mates. There is also very little technical guidance given. As such, I think it would be beneficial to have some software dev experience prior to course, particularly in using LLMs, as the profs pretty much expect you to know how to do this. Jeremy and Larry were pretty good professors. They tried their best to offer feedback periodically throughout the quarter which was nice.",
                    "125": "The CS majors have to do 75% of the group's work. Not an ideal distribution of work but Jeremy and Larry are cool and nice profs.",
                    "126": "This is a really useful class for CS, because the projects give you practical development experience and I learned a lot of new skills in the process. The two downsides are that you have to do all the learning on your own, and even though it's in groups of 4 it's more like groups of 2, because there's usually only two CS students in each group and the journalism students and entrepreneurship students don't really have anything to do.",
                    "127": "This course helped me try my hand at AI and a media product and understand the intersection of the two. The Business Model allowed me to look at more than just building a media product – it also helped me understand how to build a business around it. Working with my teammates gave a me a little bit of information about the technical side of things.",
                    "128": "The guest speakers in the course were phenomenal. I loved being able to not only gain insights from them, but also have them give feedback to our projects during different checkpoints in the class. This was very valuable for me to understand how to create a great journalism and technology product.",
                    "129": "I appreciated the invaluable exposure I received in the class, especially in learning about the intricacies of building a product from the ground up within the business realm. The guest speakers were instrumental in expanding my perspective, shedding light on aspects I hadn't even realized were crucial or relevant. Their insights not only broadened my understanding but also provided practical wisdom that I can directly apply in future endeavors. Overall, it was an enriching experience that significantly contributed to my growth and preparedness in the entrepreneurial journey.",
                    "130": "I really enjoyed the plethora of speakers that were brought in which made understanding the real–world implications of our work better. As someone interested in entrepreneurship and pitching products, I especially liked the second half of the course which focused on BMCs and product pitching.",
                    "131": "This class is okay, you won't really learn much about AI or journalism, but if you really want to work on a new project then it's a good opportunity to do so. Not much work outside of class, low expectations, very chill 3 hr class once per week. Teachers are both really nice.",
                    "132": "I thought that this course was interesting. It was not very intellectually challenging however, it did teach me a lot about working in groups.",
                    "133": "I appreciated the numerous guest lectures in this course, which offered valuable insights from professionals and significantly enhanced my learning experience.",
                    "134": "I have mixed feelings about this course. We had guest speakers every week that were very cool and successful in their fields. It was really interesting to learn from them. However, a lot of your experience in this course will be dependent on your group since this is essentially a quarter long group project. As someone taking this course for CS credit, I had to develop the entirety of our prototype. This was a little frustrating because I was the only one in my group with technical skills to do this, so I felt like I was putting in a significant more amount of work than my team mates. There is also very little technical guidance given. As such, I think it would be beneficial to have some software dev experience prior to course, particularly in using LLMs, as the profs pretty much expect you to know how to do this. Jeremy and Larry were pretty good professors. They tried their best to offer feedback periodically throughout the quarter which was nice.",
                    "135": "The CS majors have to do 75% of the group's work. Not an ideal distribution of work but Jeremy and Larry are cool and nice profs.",
                    "136": "This is a really useful class for CS, because the projects give you practical development experience and I learned a lot of new skills in the process. The two downsides are that you have to do all the learning on your own, and even though it's in groups of 4 it's more like groups of 2, because there's usually only two CS students in each group and the journalism students and entrepreneurship students don't really have anything to do.",
                    "137": "This course helped me try my hand at AI and a media product and understand the intersection of the two. The Business Model allowed me to look at more than just building a media product – it also helped me understand how to build a business around it. Working with my teammates gave a me a little bit of information about the technical side of things.",
                    "138": "The guest speakers in the course were phenomenal. I loved being able to not only gain insights from them, but also have them give feedback to our projects during different checkpoints in the class. This was very valuable for me to understand how to create a great journalism and technology product.",
                    "139": "I appreciated the invaluable exposure I received in the class, especially in learning about the intricacies of building a product from the ground up within the business realm. The guest speakers were instrumental in expanding my perspective, shedding light on aspects I hadn't even realized were crucial or relevant. Their insights not only broadened my understanding but also provided practical wisdom that I can directly apply in future endeavors. Overall, it was an enriching experience that significantly contributed to my growth and preparedness in the entrepreneurial journey.",
                    "140": "I really enjoyed the plethora of speakers that were brought in which made understanding the real–world implications of our work better. As someone interested in entrepreneurship and pitching products, I especially liked the second half of the course which focused on BMCs and product pitching.",
                    "141": "This class is okay, you won't really learn much about AI or journalism, but if you really want to work on a new project then it's a good opportunity to do so. Not much work outside of class, low expectations, very chill 3 hr class once per week. Teachers are both really nice.",
                    "142": "This class is very much one where you choose how much you want to get out of it. If you pay attention to the lectures you can learn a lot of cool topics from different areas of programming languages history. Same goes for whatever topic you choose to make your own lecture about.",
                    "143": "I really think this course should rename to \"Computer Ethics\". I get into this course because it labels \"Software\" and I assume it will teach things like how to  debug or audit ur application. But instead, this class is a combination of discussions and Computer Ethics cases. Though this class don't have programming and u don't need to invest many time, I still think some people take this course because they really want to learn skills from it and apply to the real world.  Again, I will take it if it's a requirement in CS, but I already took something similar before...",
                    "144": "This course was really fun and engaging, and it teaches you a lot about software failures, their causes, and how to prevent these failures from occurring. The class consists of weekly discussions about a software failure followed by an in–class activity related to preventing that software failure that you complete in groups. There is a final presentation at the end with your team where you have the choice to present a software failure case study or a technology that could prevent these failures. I would recommend taking this class, especially if you are interested in software engineering as a full–time career.",
                    "145": "The structure of the class:<br>– You get assigned to a group of 5–7 on the first day. Homework isn't time consuming, you just need to read a case study and write a short reflection every week.<br>– On Tuesdays, your team discusses the case study reading.<br>– On Thursdays, your team goes through an exercise (investigating dependancies, a piece of software, etc.)<br>– One final presentation at the end with your group. <br><br>Some good things:<br>–  The case studies are something every CS student should read and discuss before graduating. A lot of the themes and topics are relevant to engineers who are about to enter the workforce.<br>– Everyone is pretty much guaranteed a good grade. You don't get graded on assignments because the focus is more on learning. Just make sure you actually engage with the class.<br>– This is the first time this course was offered and although it had some issues, it was pretty solid (and I'm sure it'll only get better.)<br><br>Also, be ready for cold–calling.",
                    "146": "This was a great class! Most of the software failures we looked at were interesting and the discussions and activities we did about them were engaging. Workload was very manageable.",
                    "147": "This class is an important class to take before entering the Tech Industry. Vincent picked an expansive list of topics to discuss relating to tech failures in the industry. Being able to openly talk about these issues, discuss ways to fix them, and use tools to detect these problems before they occur were all really helpful. This class leans on reading assignments but they were mainly short articles and not difficult to comprehend at all. This class is mainly a great space to discuss issues in the tech industry.",
                    "148": "This class is not difficult at all, and the amount you get from it is reasonable as well. Learning the priorities between business considerations and engineering safety makes you consider deeper what engineers should do. A lot of people, especially engineers, get caught up in the money and forget the responsibilities we hold as engineers. This class is a helpful reminder and is cool!",
                    "149": "This was by far one of my favorite computer science courses I took at NU! The case studies were very interesting and I genuinely enjoyed discussions. This was especially compounded by Vincent's strong passion for the topic, which was clear in each and every class meeting. The activities also covered useful software practices (ex. dependency analysis and fuzz testing). Although some of the readings could be a bit difficult, the weekly writing assignment we had to do to prepare for discussions was very manageable.<br><br>Overall, I believe that this is a course that all aspiring software engineers should take!",
                    "150": "I think this is a really good course and does everything you would want in terms of teaching ethics and responsibility in software engineering. I definitely would recommend this course, it's a pretty light workload just reading case studies of software failures in the past and how to improve on it. This course should be used more to promote ethics as opposed to the other courses we have since it teaches about what not to do and why we shouldn't do it.",
                    "151": "easy and interesting topics",
                    "152": "Learned a ton about how to be more responsible as a software engineer. Vincent picks interesting topics to discuss in class and activities to run through for students to get a sense of the implications of each incident discussed.",
                    "153": "If you don't like readings freeform guidelines, definitely don't take this class. That being said, I really enjoyed it: Vincent is a great prof with a lot of interesting things to say, so take it if you are willing to engage and want a chill way to get CS credit.",
                    "154": "Great Course! Very engaging and fun to attend. Vincent was great in facilitating discussions.",
                    "155": "Great class! You learn about horrible catastrophes in software engineering that make you think about the consequences of the code that you write and how to avoid them in the future.",
                    "156": "Learn a lot about understanding and preventing software failures. Weekly there are readings and summary assignments, lots of group and class discussion, a big final project on a topic of your own choosing, and peer–assessments",
                    "157": "This class was really great and interesting! We read about a different failures (i.e., healthcare.gov, Equifax data breach, etc.) in the software industry every week, and had discussions/activities relating to the topic of the week. At the end, each team presented on a topic of their choice for 20 minutes. Super chill and interesting class, you'll learn a lot about just how wrong things can go in software. Highly recommend.",
                    "158": "Great class. You leave having learned alot about responsibility in software in engineering through evaluation of software failures in the past!"
                },
                "school_demographics": {
                    "Weinberg": 137,
                    "McCormick": 132,
                    "Medill": 10,
                    "Comm": 6,
                    "SESP": 3,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 4,
                    "Sophomores": 25,
                    "Juniors": 91,
                    "Seniors": 134
                }
            }
        },
        "COMP_SCI 397-0": {
            "2024 Spring": {
                "course_rating": {
                    "average": 5.171300813008131,
                    "student_count": 123
                },
                "student_opinions": {
                    "0": "In this course you dive deeper into existing compiler research (similar in content to 323). You explore a breadth of topics before choosing a topic to create a project on. Then you give a presentation of more papers on the topic you chose as well as a final project centered on the topic. Overall everything is very low stakes.",
                    "1": ".",
                    "2": "I really value collective discussions, which we always had throughout the course",
                    "3": "Learned a lot. Enjoyed doing the project. Readings were interesting.<br><br>Take this class if you like compilers. Its a good class, and Simone is an awesome professor.",
                    "4": "This class was a mixed bag for me–– I really enjoyed the topic of my project, the conversations it brought up and the tools it gave me. However, I did not enjoy how little instruction we were given. For the first four weeks of the quarter, it felt like my group had no direction and we could not see an end goal in sight. At a certain point my group all felt pretty frustrated, and we began to take more initiative and get organized. In the end, my group produced something I think we are all very proud of, but it was definitely not the easiest to get there. If you enjoy group work, devising your own assignments, and problem–solving, I think this is a great class. However, if you appreciate having more structure, this class may be hard.",
                    "5": "This course has provided me with exactly and even more exposure and experience I was looking for. I have truly benefited immensely from this quarter's course.",
                    "6": "Quite honestly this course was really underwhelming. I expected to do some real–life work that I could carry with me and that I was proud of, and instead it kind of just felt like redundant research with no direction. I'm sure not every Knight Lab class is like this, but with the amount of money the Knight Lab gets, I was surprised and disappointed with this quarter's classes — it felt like fake proposals and projects that I would have made in high school, rather than actual starts of projects that would be valuable for our industry.",
                    "7": "I was very interested in taking a class w/ the Knight Lab before my time at Medill was up and I was so happy I did! This class is unlike any other I have taken because it is a 10 week long project and I enjoyed working with my team so much! I wish it was a little more organized but that is the trade–off for taking a Knight Lab class because you are building upon other prior projects and/or starting one yourself.",
                    "8": "I had high expectations going into this class, but it was not exactly what I expected. A light workload, but didn't feel like I learned or gained anything out of it. It was often very confusing because there was no clear goal for us.",
                    "9": "This class, at its core, is great at teaching you the art of collaboration and working with people from different backgrounds and skills. I learned a lot from my peers in this process. Additionally, it was really cool to see my efforts come to fruition at the end. With that said, your experience in this class is entirely dependent on which project you choose, so if I were to do it over again, I would more carefully select my project. Some are more theory–based and journalism–heavy, while others are more focused on technology. As someone who values theory–based conversations about how technology might be applied in newsrooms more than the technical conversations, I found my tech–heavy project to be frustrating at times. My group was tasked with creating a product for newsrooms using AI and I often felt like I was reversing that \"progress\" by questioning the implications of the project I was on.  It felt like we were brushing off these crucial questions of how and why this would be used in newsrooms for the sake of completing our goals before the end of the quarter, which is something I am not proud of.  After engaging in a few class periods of discussion, one of my group members said we had been \"wasting time\" and that we hadn't been making \"any progress.\" I think intellectual progress is one of the most important parts of this class and I hope it is encouraged more evenly in the future because I felt dismissed for \"wasting time\" and the end result was a product that I am, truthfully, not happy about.",
                    "10": "Loved this course. The structure is that every class meeting, two students get selected to do a \"debate\" on the reading of that class, which is fun to watch and participate in especially if you're not one of the two primary debators. There's also an ongoing research project throughout the entire quarter so don't forget about that: the professor expects results. Prof is otherwise super chill.",
                    "11": "Reading 15–page papers and creating 30–minute presentations on them may be too much work between Tuesday and Thursday.",
                    "12": "It's always good to learn what's happening in different aspect of field, even the ones that are not my primary interest.",
                    "13": "This course is mainly focused on reading papers. Every class you will read and write a review for 1 paper. Then during class time someone will present the paper as if it is there's, someone else will critique it, and the class will debate over the paper. The papers span a wide range of networking topics, and you definitely will not have the prerequisite knowledge to understand them all in depth but thats ok. There's also a course long project throughout the quarter. The project topics are provided by PhD students and your experience depends on your project topic/PhD student advisor. From what it seems the PhD students are not very involved and other students have not really worked on their projects.",
                    "14": "This was a very relaxed class and the Professor is very nice.",
                    "15": "honestly, I know nothing about sports coming in – professor Worsley is clearly very passionate about the topic, and that really shines through.",
                    "16": "It was a very nice course – you will learn a lot and also in a very non–stressful environment!",
                    "17": "This class was definitely very different than your average CS class. Coding experience is not really required to take this class and like the title of the class says, it goes into the sports world very heavily. Lecture is usually a combination of discussion and an in class activity relating to the microbit (microcontroller) or different topics in the sports world today. The class has one big final project that you can choose to do on whatever you'd like. There is really not much homework, and overall this class was definitely a nice change of pace and an easy class too.",
                    "18": "Very chill class, where you learn about recent technology and news in sports. I really enjoyed the course, I got to work with different wearables to see how they work.  We also got too program wearables and see it function in real time. The project lets you go in whatever direction you want, so you get as much out of it as you want.",
                    "19": "this class is so easy for a CS class. definitely would recommend, even if you are not into sports it is entertaining and the final project is cool.",
                    "20": "Pretty good class for those interested in both sports and technology. I felt like I was able to learn a lot!",
                    "21": "Good class and a pretty easy CS and DS elective. Just a bunch of assignments and a final project.",
                    "22": "N/A",
                    "23": "I enjoyed this class a lot. You get in what you put out. There's small assignments that are all completion–based, so the class is pretty chill. There's also a final project that you work on for about 4 weeks. Prof is really nice and interactive and there's also guest speakers which is cool.",
                    "24": "This is a really great class and unlike any other class at Northwestern. The unique teaching style makes the class really fun and engaging.",
                    "25": "the teacher is great. in class participation assignments but attendance isn’t taken. pretty easy if you have any knowledge of coding",
                    "26": "Not too bad of a course, very interesting content and is very unlike other CS courses – it's hands–on and more on the human factors side than computational side.",
                    "27": "good",
                    "28": "there were some super interesting talks we'd have, usually short in–class assignments. It's a manageable class, you just need to keep track of the assignments",
                    "29": "Good class, has some interesting and some not so interesting speakers come in",
                    "30": "Really easy and fun CS course but I found it to be very poorly organized and all over the place. Class attendance was usually required for the in class activities, which didn't seem to follow a clear structure or path, just because it was the only thing to be graded on. The final project is really cool if you pick something you're interested in but until work for that begins, coursework is very limited. Overall, good, easy project course but I don't feel like I got much out of it intellectually.",
                    "31": "This was a great class. The content was very interesting and the professor engaged us in different types of material each week. I learned some really interesting stuff about sports participation, health, fitness, and education. The workload was also very light.",
                    "32": "Very chill and fun. I really enjoyed all the activities. Attendance required",
                    "33": "Good class, lots of busy work but very manageable, make sure to go to class since there are in–class activities, final project can be easy if you make it easy",
                    "34": "Good chill class, fun to learn about sports from a tech lens. Really nice professor.",
                    "35": "This class is super weird. Professor Worsley is really kind, and a super nice guy. The class itself, though, is poorly run. The content is interesting enough, but there's no organization anywhere. Assignments are often assigned days before they're due, but then don't really have set due dates. I never really feel like I know what's going on. It's an easy class if you need the credit, but be prepared for a confusing time.",
                    "36": "This class was a great introduction to many different topics such as wearable sports technology and issues in sports such as race and gender. I expected to learn a little bit more about sports analytics, but unfortunately that topics was not really covered in class (though I worked on a cool sports analytics final project). This class is very chill with Marcelo and very interesting as you get to hear from many cool people in the sports industry and watch sports movies. Would definitely recommend taking this class, regardless of whether you would like to work in sports.",
                    "37": "Very chill class and is a breath of fresh air from all the other CS courses offered. Marcelo's a great guy and really reasonable, would definitely recommend this class to other CS Majors.",
                    "38": "Easiest CS class but also the most fun. Makes you think about CS in a new way. Super chill prof. Class sessions sometimes happened in SPAC, which was really cool. Take this class for sure.",
                    "39": "good mickey mouse class, a lot of in class mickey mouse group work. the guest speakers were pretty interesting. the whole quarter you basically work towards doing a final project which you then present at the end. overall very chill prof and ta’s and i overloaded with this class and you probably could too.",
                    "40": "This class was a lot of fun and super laid back. There are a lot of really cool guest speakers so definitely pay attention when they come in to talk. I liked that we weren't always in the classroom and did a lot more moving around and playing with gadgets. Professor Worsely, Mike, &amp; Hermino are a great teaching team and very knowledgeable. They are all very willing and excited to collaborate with students.",
                    "41": "This course helped me understand how to do research on a deeper level. It is very interactive and involves discussion, which sometimes helps me learn from others.",
                    "42": "Nabil is super nice and is a great professor.",
                    "43": "Great class. Professor and TA were both really nice. Some unexpected glitches with the hardware / project codes can often happen but overall TA and professor were really responsive.",
                    "44": "There are paper reviews every week (one research paper and short reflection), 4 projects, 3–4 writing assignments for the actual final research proposal, and a 6–minute final presentation. The workload was okay but the lectures were not productive at all. The professor tried to interact with the class by asking questions during lecture, but they weren't very engaging. This was partially due to the large classroom despite small class size and the microphone (it was very hard to hear). I wish the classroom was smaller (it was in LR3 with 10–15 students attending class). The organization was very messy as deadlines were always extended, assignments were late to be posted, lots of logistical issues, and projects were unnecessarily time–consuming. Discussions about the papers were not interesting.<br><br>The projects were interesting but honestly a lot of technical issues. It wasn't super hard or unmanageable but sort of stressful. The piazza was helpful as there were a lot of questions. The expectations for the writing assignments could have been clearer in my opinion. Just a lot of logistical things. As a result, the grading was very lenient. The professor is very knowledgeable in the field, so asking questions during an appointment time was helpful for the research proposal. This is a good class if you are interested in this, but there are some problems in the course that could be fixed with some feedback that would make it much more interesting/engaging.",
                    "45": "Working with the microcontrollers we’re important for me because I did not get any of that education in computer science classes.",
                    "46": "Class Project: The course is very well designed, and I particularly loved the class project. A large project is broken down into four smaller tasks. By the end, we are able to build a human activity recognition application and run it on a microcontroller, which gives me a great sense of fulfillment.<br><br>Final Project: The final project involves designing a scientific paper on a Mobile Health (mHealth) experiment. This part is robust and introduces a way of thinking in the mHealth field, allowing us to delve deeply into a specific direction in mHealth that interests us.<br><br>Paper Reading: We are required to read six papers. These papers teach us how to write a scientific paper and provide advanced methods for designing medical experiments.<br><br>So overall, I not only got hands–on experience and project which can adds onto my portfolio, but also be able to design mHealth experiments which has real–life value.",
                    "47": "I learned a lot with how wireless protocols work in many different applications, and was able to apply this knowledge to plan a large–scale IoT deployment project.",
                    "48": "Branden is an excellent professor who clearly cares about students learning, and is also very knowledgeable. The slides are a bit dense––there's a fair bit of content––but there's no tests, just HWs and labs, so it's okay. Branden is just a great professor who actually knows how to teach.",
                    "49": "Overall this is a great class to take with Professor Ghena if you are interested in IoT. He has great lectures and though the labs may be tedious at times, they do demonstrate how the technologies work hands–on.",
                    "50": "I want to learn what are the wireless communication technologies are out there on the market. This course does it very well, Although focus on the IOT aspect, it still covers many many of the useful topics.  Everything learned here are practical, each topic are things one could actually go buy and prototype within reason–able price.",
                    "51": "Branden is a super nice professor and this class is super interesting if you like networking and IOT.",
                    "52": "Best CS class I've taken at Northwestern. This course covers such relevant topics like how Bluetooth, Find My iPhone, Tile Trackers, Satellite Communication, Cellular, NFC, among other great topics that we use in our everyday lives. On top of that Branden is an amazing professor, so every lecture is very engaging. Homeworks are very chill and labs can take a bit of time (but are completed in groups of 3 and not nearly as bad as other systems related classes). The final project is a design proposal for an large scale IoT deployment of your choosing where you discuss various wireless protocols learned in class and choose what fits best. One final note that sticks out to me about this class is how interdisciplinary it is– we touched on some fundamentals of EE, CE, and computer networks, and despite only taking CS 340 prior to this class, all of the information was digestble.",
                    "53": "The labs are... very time consuming",
                    "54": "I'm on that 5G high speed they puttin' towers up everywhere",
                    "55": "This course focus on the fundamentals of communication protocols and is very detailed. Although some of the info is boring at times, as they are fundamental technical stuff, you will get a great insight to iot deployment by the end of it. Recommend!",
                    "56": "Branden is the CS goat, and it shows. This class is amazing. Just take it.",
                    "57": "This class touches on a bunch of different ways to communicate wirelessly. Its pretty interesting since you learn about things you have used in your life like wifi and cellular. Sometimes it gets a bit boring since it can be kind of repetitive. There are a few labs and homeworks where you practice using different wireless protocols but overall its very chill.",
                    "58": "This course was pretty cool. Personally, I was not super interested in learning about wireless communication before the class, but I'm glad I took it, as it was a really enjoyable and interesting course. For me, the content didn't seem super useful outside of school/research, and we did go very in–depth into protocols like bluetooth that I didn't really care about that much... but Professor Ghena's teaching is incredible, he's super knowledgeable about the content, and he was always super pumped to teach, so the class was pretty enjoyable. He was also super helpful in office hours. The homeworks and labs were pretty reasonable too – although some of the labs can take around 5–6 hours. The content goes in the order: BLE for like 2 weeks, then 802.15.4 + Thread + Zigbee + Matter for 2 weeks, WiFi for a week, cellular for a week, LPWAN and LoRa stuff for a week, then some random protocols like backscatter and satellite for the last 2 weeks."
                },
                "school_demographics": {
                    "Weinberg": 33,
                    "McCormick": 69,
                    "Medill": 6,
                    "Comm": 2,
                    "SESP": 1,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 2,
                    "Sophomores": 21,
                    "Juniors": 55,
                    "Seniors": 22
                }
            },
            "2024 Winter": {
                "course_rating": {
                    "average": 5.515428571428571,
                    "student_count": 35
                },
                "student_opinions": {
                    "0": "This was an absolutely incredible course. I came out of it so much more interested in CS education than I was going into it. Readings were interesting and lectures actually applied those readings instead of just repeating them. Class activities were engaging and helpful to learning. Paula and Mike are very knowledgeable in what they're teaching and encourage creativity. They're also super flexible on class work and due dates. The final project was challenging and somewhat daunting, but smaller project throughout the quarter were good milestones to help. It is pretty easy to fall behind, just get started on projects early, but if you did fall behind, the profs and TA were all super supportive and willing to help give more time or suggestions to get on top of things. <br>If you need any other motivation to take the course, the profs brought ice cream on the last day which gives you an idea of the atmosphere in the class. I cannot recommend it enough, take this course!",
                    "1": "This course was really interesting and engaging, and it pushes you to think about how computer science and computing ideas can shape one's education. The class involves readings, writing assignments, and creating your own design for a learning experience. The assignments were not particularly challenging, but they encourage you to think deeply about the topics you learn about. I would recommend taking this course.",
                    "2": "I loved how the course was organized, as we were able to not only learn concepts but also engage in activities that made us think of how to approach learning design.",
                    "3": "Great course! Learned a lot about the educational aspect of CS. The profs go over some great concepts and the project feels meaningful",
                    "4": "Mike and Paula are the best! I enjoyed this class a lot! If you are able to stay up for a late course, I highly recommend this one!",
                    "5": "This was a very interesting class and made me learn a lot about education policy and how CS can help others in this sphere.",
                    "6": "Very very interesting class overall – helped me recontextualize what I was doing in CS/how my learning has changed since starting CS which I think is something I'll probably take with me long after I graduate. Very balanced structure overall w/ weekly assignments and no big exams/always room to improve on past performances etc. I'm happy I took it overall. The class can be like a bit disorganized but b/c there aren't any high–stakes exams or assignments really there doesn't feel like there's as much pressure to fill every moment of lecture. Also lots of group discussions and work !",
                    "7": "Amazing course. Definitely one of my favorites in Northwestern. Highly recommend. Professors do an amazing job teaching.",
                    "8": "This is was for the D65 volunteering. The class itself is pointless.",
                    "9": "This class is pretty good if you're looking for a non–coding CS class. You learn a lot about how to teach CS in a more equitable way, and do a final project where you design a learning environment. However there are a TON of readings each week (~80 pages) and a weekly journal every week which can get very repetitive.  The professors do grade your final project pretty harshly, so I don't think it's very easy to get an A.",
                    "10": "It was interesting to see how computer science concepts could be applied in education. I liked the focus on the wonderful, the big, or the powerful idea.",
                    "11": "Professors Horn and Hooper are both great and very passionate about the subject. The course isn't difficult—just weekly readings and learning journals, as well as a project you work on throughout the course. Pretty interesting course if you are interested in CS, education, or both.",
                    "12": "The readings are well–chosen and really helpful. Mike and Paula tried to keep us on track. I just wish that maybe there'd been more ideation meetings in the earlier weeks",
                    "13": "If you're interested in learning sciences, the learn to code movement, or even Silicon Valley, take this class. This class does into depth about pedagogical practices used in STEM, cultural learning, ontologies, and more. You will spend the later half of the class creating your own learning design, conducting research, and sharing your designs in a final presentation. The class is graded pretty easily, but it will really push you to think critically about current STEM movements, so take that opportunity as a chance to grow in your thinking as a computer science student!!",
                    "14": "Definitely really cool to take a class like this as a CS major. Causes you to think in different ways. Would be really beneficial if lots of CS professors here took this course",
                    "15": "It was interesting to see how computer science concepts could be applied in education. I liked the focus on the wonderful, the big, or the powerful idea.",
                    "16": "Professors Horn and Hooper are both great and very passionate about the subject. The course isn't difficult—just weekly readings and learning journals, as well as a project you work on throughout the course. Pretty interesting course if you are interested in CS, education, or both.",
                    "17": "The readings are well–chosen and really helpful. Mike and Paula tried to keep us on track. I just wish that maybe there'd been more ideation meetings in the earlier weeks",
                    "18": "If you're interested in learning sciences, the learn to code movement, or even Silicon Valley, take this class. This class does into depth about pedagogical practices used in STEM, cultural learning, ontologies, and more. You will spend the later half of the class creating your own learning design, conducting research, and sharing your designs in a final presentation. The class is graded pretty easily, but it will really push you to think critically about current STEM movements, so take that opportunity as a chance to grow in your thinking as a computer science student!!",
                    "19": "Definitely really cool to take a class like this as a CS major. Causes you to think in different ways. Would be really beneficial if lots of CS professors here took this course",
                    "20": "This was an absolutely incredible course. I came out of it so much more interested in CS education than I was going into it. Readings were interesting and lectures actually applied those readings instead of just repeating them. Class activities were engaging and helpful to learning. Paula and Mike are very knowledgeable in what they're teaching and encourage creativity. They're also super flexible on class work and due dates. The final project was challenging and somewhat daunting, but smaller project throughout the quarter were good milestones to help. It is pretty easy to fall behind, just get started on projects early, but if you did fall behind, the profs and TA were all super supportive and willing to help give more time or suggestions to get on top of things. <br>If you need any other motivation to take the course, the profs brought ice cream on the last day which gives you an idea of the atmosphere in the class. I cannot recommend it enough, take this course!",
                    "21": "This course was really interesting and engaging, and it pushes you to think about how computer science and computing ideas can shape one's education. The class involves readings, writing assignments, and creating your own design for a learning experience. The assignments were not particularly challenging, but they encourage you to think deeply about the topics you learn about. I would recommend taking this course.",
                    "22": "I loved how the course was organized, as we were able to not only learn concepts but also engage in activities that made us think of how to approach learning design.",
                    "23": "Great course! Learned a lot about the educational aspect of CS. The profs go over some great concepts and the project feels meaningful",
                    "24": "Mike and Paula are the best! I enjoyed this class a lot! If you are able to stay up for a late course, I highly recommend this one!",
                    "25": "This was a very interesting class and made me learn a lot about education policy and how CS can help others in this sphere.",
                    "26": "Very very interesting class overall – helped me recontextualize what I was doing in CS/how my learning has changed since starting CS which I think is something I'll probably take with me long after I graduate. Very balanced structure overall w/ weekly assignments and no big exams/always room to improve on past performances etc. I'm happy I took it overall. The class can be like a bit disorganized but b/c there aren't any high–stakes exams or assignments really there doesn't feel like there's as much pressure to fill every moment of lecture. Also lots of group discussions and work !",
                    "27": "Amazing course. Definitely one of my favorites in Northwestern. Highly recommend. Professors do an amazing job teaching.",
                    "28": "This is was for the D65 volunteering. The class itself is pointless.",
                    "29": "This class is pretty good if you're looking for a non–coding CS class. You learn a lot about how to teach CS in a more equitable way, and do a final project where you design a learning environment. However there are a TON of readings each week (~80 pages) and a weekly journal every week which can get very repetitive.  The professors do grade your final project pretty harshly, so I don't think it's very easy to get an A.",
                    "30": "This course was unique from any other I've taken because it was really open ended and was basically up to us to direct and collaborate toward any final project we wanted. It was challenging because it was a bit confusing for a while what our final project would shape up to be, but ultimately I learned a lot about different team collaboration strategies and also about some key social media ideas that might take us into the future.",
                    "31": "Knight Lab is the best class I've taken at NU. The professors are extremely chill, and straightforward. They were easy to talk to and guided our project from the beginning to the end. This is definitely a good class if you're looking to do a minimum amount of homework and have a minimum amount of added stress.  I was in the niche social media group and we spent majority of our time talking through our project. The entire class is based on goals hat you set for your team, so it is very much by your own parameters.",
                    "32": "This was an awesome class. I learned so much about topics of interest in a fast–moving technology space. The entire class is hands on, so you're almost always working on progressing toward a final deliverable for your project. This class might vary in enjoyability depending on your assigned group mates",
                    "33": "This course was probably the highlight of my quarter. You get to know your group mates and faculty advisor so well, and it's very flexible to each group exploring their own interests."
                },
                "school_demographics": {
                    "Weinberg": 15,
                    "McCormick": 12,
                    "Medill": 3,
                    "Comm": 2,
                    "SESP": 2,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 1,
                    "Sophomores": 4,
                    "Juniors": 13,
                    "Seniors": 14
                }
            },
            "2023 Fall": {
                "course_rating": {
                    "average": 5.0,
                    "student_count": 13
                },
                "student_opinions": {
                    "0": "Great course",
                    "1": "great class. studio structure is great for practical skills. projects are always interesting and everyone is always doing something meaningful that you can learn from.",
                    "2": "It could be challenging at times but largely an interesting experience",
                    "3": "Zach and Joe are 10/10. I think some people come in and expect to be told what to do, but in the non–traditional class setting you have a lot of autonomy and can definitely make the most of it. I had a great experience in Knight Lab!",
                    "4": "The bottom line: this class was incredibly valuable, but its unstructured nature sometimes limited it from reaching its full potential. <br>I loved the project–based nature of the class. Basically, our project involved designing an art exhibit centered on journalist Jim Foley, and finding ways to incorporate AR into the exhibit. Getting to work in art curation, which I had never done before, was a really cool opportunity. Learning about Jim's life and being able to interview key people in his life was so valuable and thought–provoking, as was getting to design a narrative for the exhibit. I will say, despite a main part of the project being to design an AR experience, a large part of our work on that side was sort of just to find media to incorporate in the AR experience rather than having a creative hand in the AR experience itself, which was disappointing. <br>That being said, Craig was an incredible TA ––– his leadership throughout the quarter is what made the experience so valuable for me. He kept us focused, helped us develop our ideas, and was a grounding presence amid the constantly shifting expectations that come with coordinating such a large project with stakeholders both inside and outside Northwestern. <br>Overall, my review of being a part of the Knight Lab as a whole is to do it; it's worth it, but do be prepared for an extreme lack of structure.",
                    "5": "I was expecting to learn more technical, behind–the–scenes work for my project but it was a little disheartening how little I got to work with that,",
                    "6": "didn't have a great project, but would have been good otherwise",
                    "7": "I've been in Knight Lab for two consecutive quarters, and I loved my experience there! Highly recommend joining",
                    "8": "The class content itself is great; the projects at the Knight Lab are awesome. My problem with this class is that for my group specifically, I felt like I wasn't learning about anything new — I didn't really get the chance to explore AI as I had hoped, and it instead felt like I was there only to put the skills I already had to use. Also, Zach can be super inflexible at times, which is frustrating. It did occasionally feel like a battle of “my way or the highway.” I don't regret taking this class though. My group's project was awesome enough to make up for the flaws of this class.  And I really enjoyed how self–paced (or rather, group–paced) it was. We each got to take a lot of initiative, and that was super cool."
                },
                "school_demographics": {
                    "Weinberg": 3,
                    "McCormick": 2,
                    "Medill": 8,
                    "Comm": 0,
                    "SESP": 0,
                    "Bienen": 0
                },
                "class_demographics": {
                    "Freshmen": 0,
                    "Sophomores": 3,
                    "Juniors": 3,
                    "Seniors": 2
                }
            }
        }
    }
}